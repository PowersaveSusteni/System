{"version":3,"file":"kendo.scheduler.monthview.js","names":["__meta__","id","name","category","description","depends","hidden","$","kendo","window","ui","SchedulerView","NS","extend","encode","htmlEncode","getDate","date","MS_PER_DAY","INVERSE_COLOR_CLASS","DAY_TEMPLATE","template","toString","EVENT_WRAPPER_STRING","task","ns","uid","ariaLabel","resources","attr","color","tail","middle","icon","isException","isRecurring","showDelete","messages","destroy","head","resizable","EVENT_TEMPLATE","title","replace","MORE_BUTTON_TEMPLATE","iconClass","MonthGroupedView","Class","init","view","this","_view","_verticalRowCountForLevel","level","_rowCountForLevel","_horizontalGroupCountForLevel","_columnCountForLevel","_getCalendarRowsLength","cellsPerRow","cellCount","_createRows","start","startIdx","horizontalGroupCount","verticalGroupIndex","isVerticallyGrouped","_isVerticallyGrouped","html","groupIdx","_createRow","_adjustStartDate","addDays","_getContent","content","startDate","_getTimeSlotByPosition","x","y","groupIndex","groups","daySlotByPosition","_nextSlotStartDate","nextDay","_createRowsLayout","rows","groupHeaderTemplate","_createVerticalColumnsLayout","columns","_createColumnsLayout","_verticalGroupCount","_horizontalGroupCount","_columnOffsetForResource","_positionMobileEvent","event","group","range","rangeCount","end","rangeIndex","endDate","occurrence","clone","Date","_createEventElement","_positionEvent","_addDaySlotCollections","groupCount","tableRows","rowMultiplier","rowIndex","collection","addDaySlotCollection","cells","children","cellMultiplier","cellIndex","cell","addDaySlot","_changePeriodGroupIndex","reverse","length","_createResizeHint","left","startSlot","offsetLeft","top","offsetTop","width","innerWidth","height","clientHeight","hint","fn","call","_appendResizeHint","_createMoveHint","endSlot","css","firstChildHeight","options","eventHeight","index","addClass","inverseColor","_appendMoveHint","MonthGroupedByDateView","dateIdx","verticalStart","_groupCount","isLastRow","NUMBER_OF_COLUMNS","cellIdx","_createDateLayout","resource","configuration","data","dataSource","dataIndex","value","getter","dataValueField","obj","text","dataTextField","dataColorField","field","className","slice","push","subColumns","startIndex","endIndex","i","currentSlot","_slots","dateRange","daySlotRanges","dateIndex","currentGroupIndex","_daySlotCollections","vertical","selectionGroupIndex","offsetWidth","offsetHeight","slotIdx","slot","isInDateRange","min","max","msValue","scheduler","MonthView","element","that","eventsPerDay","moreButtonHeight","adaptiveSlotHeight","_groupedView","_getGroupedView","isGroupedByDate","_isGroupedByDate","Error","_templates","_editable","_renderLayout","_groups","_updateDirection","selection","ranges","multiple","isSameSlot","isSameCollection","collectionIndex","backward","_changeDate","previous","collections","_getCollections","daySlotCollectionCount","_getNextHorizontalRange","method","horizontalRange","isVertical","_getNextVerticalRange","verticalRange","_changeViewPeriod","newStart","newEnd","pad","_isInRange","events","_continuousSlot","continuousSlot","_changeGroupContinuously","lastGroupIndex","_normalizeHorizontalSelection","_normalizeVerticalSelection","settings","Template","templateSettings","eventTemplate","dayTemplate","dateForTitle","format","selectedDateFormat","_firstDayOfMonth","_lastDayOfMonth","shortDateForTitle","selectedShortDateFormat","mobileDateForTitle","selectedMobileDateFormat","mobileYearForTitle","split","nextDate","previousDate","previousDay","_startDate","_endDate","firstDayOfMonth","lastDayOfMonth","calendarInfo","firstDay","firstVisibleDay","getFullYear","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","getDay","setTime","firstVisibleMonthDay","createLayout","_layout","_content","_initSlotHeight","_initTimesHeight","refreshLayout","_isVirtualized","_tryRenderContent","on","e","offset","currentTarget","_slotByPosition","preventDefault","trigger","_footer","editable","_isMobile","_touchEditable","_mouseEditable","closest","create","resourceInfo","_resourceBySlot","eventInfo","isAllDay","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","useClickAsTap","browser","edge","filter","tap","_scrolling","target","selectionByElement","columnLevel","columnLevels","rowLevel","rowLevels","verticalGroupCount","groupedView","groupedResources","verticalGroupIdx","_createCalendar","_cachedGroupIndex","find","_virtualContent","append","_calcSlotHeight","dateHeader","eventSpacing","firstCell","firstChild","Math","round","rowHeight","isMobile","table","_sortEventMeta","eventMeta","sort","first","second","order","_adjustSlotHeight","_canAdjustSlotHeight","forEach","week","_events","eventIndex","slots","firstSlot","weekOffsetTop","weekHeight","actualEventCount","slotIndex","meta","adjSlot","adjMeta","indexOf","dirty","slotHeight","firstChildTop","style","more","parentNode","times","isSetHeight","_isSchedulerHeightSet","contentDiv","weekStartDates","_slotIndices","calendarRowsLength","rowIdx","_weekStartDates","classes","isToday","getTime","names","array","idx","concat","shiftArray","days","namesShort","map","inner","resize","eventResources","_formatEventAriaLabel","applyStylesFromKendoAttributes","_isInDateSlot","slotStart","slotEnd","lastSlot","startTime","toUtcTime","endTime","_slotIndex","slotRange","tableEl","contentEl","collidingEvents","createRows","at","container","_isRtl","clientWidth","scrollWidth","appendChild","addEvent","_continuousEvents","eventCount","rightOffset","rowEvents","eventTop","j","eventLength","parseInt","appendTo","_inverseEventColor","_collectionIndex","_startSlotIndex","_startSlot","outerHeight","scrollTop","scrollLeft","ceil","_resizeHint","add","_updateResizeHint","_removeResizeHint","timezone","toLocalDate","last","_updateMoveHint","distance","duration","_removeMoveHint","_moveHint","getElementsByTagName","_addResourceView","MS_PER_HOUR","render","remove","_cachedEvents","Query","dir","toArray","bind","_renderGroups","_renderEvents","_ongoingEvents","slotRanges","rangeStart","rangeEnd","setDate","parentValue","item","itemParentValue","dataParentValueField","itemIdx","_resourceValue","tmp","operator","groupEqFilter","removeClass","off","ongoingEvents","cssClass","enabled","updateInterval","jQuery","kendo$1"],"sources":["kendo.scheduler.monthview.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.scheduler.view.js';\nimport './kendo.icons.js';\n\nconst __meta__ = {\n    id: \"scheduler.monthview\",\n    name: \"Scheduler Month View\",\n    category: \"web\",\n    description: \"The Scheduler Month View\",\n    depends: [ \"scheduler.view\", \"icons\" ],\n    hidden: true\n};\n\n(function($) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        SchedulerView = ui.SchedulerView,\n        NS = \".kendoMonthView\",\n        extend = $.extend,\n        encode = kendo.htmlEncode,\n        getDate = kendo.date.getDate,\n        MS_PER_DAY = kendo.date.MS_PER_DAY,\n        NUMBER_OF_ROWS = 6,\n        NUMBER_OF_COLUMNS = 7,\n        INVERSE_COLOR_CLASS = \"k-event-inverse\",\n        DAY_TEMPLATE = kendo.template(({ date }) => `<span class=\"k-link k-nav-day\">${encode(kendo.toString(date, \"dd\"))}</span>`),\n        EVENT_WRAPPER_STRING = (task) =>\n            `<div role=\"button\" data-${task.ns}uid=\"${task.uid}\" aria-label=\"${encode(task.ariaLabel)}\" ` +\n            (task.resources[0] ? `${kendo.attr(\"style-background-color\")}=\"${task.resources[0].color}\" ${kendo.attr(\"style-border-color\")}=\"${task.resources[0].color}\" class=\"k-event\">` : 'class=\"k-event\">') +\n                '<span class=\"k-event-actions\">' +\n                    `${task.tail || task.middle ? kendo.ui.icon(\"caret-alt-left\") : ''}` +\n                    `${task.isException() ? kendo.ui.icon(\"arrows-no-repeat\") :\n                        (task.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '')}` +\n                '</span>' +\n                `${kendo.template(task.template)(task)}` +\n                '<span class=\"k-event-actions\">' +\n                    `${task.showDelete ? `<a href=\"#\" class=\"k-link k-event-delete\" title=\"${task.messages.destroy}\" aria-label=\"${task.messages.destroy}\">${kendo.ui.icon(\"x\")}</a>` : ''}` +\n                    `${task.head || task.middle ? kendo.ui.icon(\"caret-alt-right\") : ''}` +\n                '</span>' +\n                (task.resizable && !task.tail && !task.middle ? '<span class=\"k-resize-handle k-resize-w\"></span>' : '') +\n                (task.resizable && !task.head && !task.middle ? '<span class=\"k-resize-handle k-resize-e\"></span>' : '') +\n            '</div>',\n        EVENT_TEMPLATE = kendo.template(({ title }) => `<div title=\"${title.replace(/\"/g,\"&#34;\")}\">` +\n                    `<div class=\"k-event-template\">${encode(title)}</div>` +\n                '</div>');\n\n    var CELL_INNER_SPACING = 2;\n\n    var MORE_BUTTON_TEMPLATE = kendo.template(() =>\n        `<div role=\"button\" aria-label=\"Show all events in Day view.\" class=\"k-more-events k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\">${kendo.ui.icon({ icon: \"more-horizontal\", iconClass: \"k-button-icon\" })}</div>`\n    );\n\n    var MonthGroupedView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _verticalRowCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _horizontalGroupCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level);\n        },\n\n        _getCalendarRowsLength: function(cellsPerRow, cellCount) {\n            return cellCount / cellsPerRow;\n        },\n\n        _createRows: function(start, startIdx, horizontalGroupCount, verticalGroupIndex) {\n            var view = this._view;\n            var cellsPerRow = NUMBER_OF_COLUMNS;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n            var html = \"\";\n\n            for (var groupIdx = 0; groupIdx < horizontalGroupCount; groupIdx++) {\n                html += view._createRow(start, startIdx, cellsPerRow, isVerticallyGrouped ? verticalGroupIndex : groupIdx);\n            }\n\n            return html;\n        },\n\n        _adjustStartDate: function(start) {\n            return kendo.date.addDays(start, NUMBER_OF_COLUMNS);\n        },\n\n        _getContent: function(content, startDate, resources) {\n            return content({ date: startDate, resources: resources });\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.daySlotByPosition(x, y);\n        },\n\n        _nextSlotStartDate: function(startDate) {\n            return kendo.date.nextDay(startDate);\n        },\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createRowsLayout(resources, rows, groupHeaderTemplate);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n\n            return columns;\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate);\n        },\n\n        _verticalGroupCount: function(level) {\n            var view = this._view;\n\n            return view._rowCountForLevel(level);\n        },\n\n        _horizontalGroupCount: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level) / view._columnOffsetForResource(level);\n        },\n\n        _positionMobileEvent: function(event, group, range, rangeCount, start, end, rangeIndex) {\n            var view = this._view;\n\n            if (rangeCount > 1) {\n                if (rangeIndex === 0) {\n                    end = range.end.endDate();\n                } else if (rangeIndex == rangeCount - 1) {\n                    start = range.start.startDate();\n                } else {\n                    start = range.start.startDate();\n                    end = range.end.endDate();\n                }\n            }\n\n            var occurrence = event.clone({ start: new Date(start), end: new Date(end), head: range.head, tail: range.tail });\n\n            view._positionMobileEvent(range, view._createEventElement(occurrence), group);\n        },\n\n        _positionEvent: function(event, group, range, rangeCount, start, end, rangeIndex) {\n            var view = this._view;\n\n            if (rangeCount > 1) {\n                if (rangeIndex === 0) {\n                    end = range.end.endDate();\n                } else if (rangeIndex == rangeCount - 1) {\n                    start = range.start.startDate();\n                } else {\n                    start = range.start.startDate();\n                    end = range.end.endDate();\n                }\n            }\n\n            var occurrence = event.clone({ start: start, end: end, head: range.head, tail: range.tail });\n\n            view._positionEvent(range, view._createEventElement(occurrence), group);\n        },\n\n        _addDaySlotCollections: function(groupCount, tableRows, startDate) {\n            var view = this._view;\n            var columnCount = NUMBER_OF_COLUMNS;\n            var rowCount = NUMBER_OF_ROWS;\n\n            for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                var cellCount = 0;\n                var rowMultiplier = 0;\n\n                if (view._isVerticallyGrouped()) {\n                    rowMultiplier = groupIndex;\n                }\n\n                for (var rowIndex = rowMultiplier * rowCount; rowIndex < (rowMultiplier + 1) * rowCount; rowIndex++) {\n                    var group = view.groups[groupIndex];\n                    var collection = group.addDaySlotCollection(kendo.date.addDays(startDate, cellCount), kendo.date.addDays(startDate, cellCount + columnCount));\n\n                    var tableRow = tableRows[rowIndex];\n                    var cells = tableRow.children;\n                    var cellMultiplier = 0;\n\n                    if (!view._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    for (var cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                        var cell = cells[cellIndex];\n\n                        view.addDaySlot(collection, cell, startDate, cellCount);\n                        cellCount++;\n                    }\n                }\n            }\n        },\n\n        _changePeriodGroupIndex: function(reverse) {\n            var view = this._view;\n\n            return reverse ? view.groups.length - 1 : 0;\n        },\n\n        _createResizeHint: function(range) {\n            var view = this._view;\n            var left = range.startSlot().offsetLeft;\n            var top = range.start.offsetTop;\n            var width = range.innerWidth();\n            var height = range.start.clientHeight - 2;\n            var hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n            view._appendResizeHint(hint);\n        },\n\n        _createMoveHint: function(range, event) {\n            var view = this._view;\n            var startSlot = range.startSlot();\n            var endSlot = range.endSlot();\n            var hint = view._createEventElement(event.clone({ head: range.head, tail: range.tail }));\n\n            hint.css({\n                left: startSlot.offsetLeft + 2,\n                top: startSlot.offsetTop + startSlot.firstChildHeight,\n                height: (view.options.eventHeight === \"auto\") ? 25 : view.options.eventHeight,\n                width: range.innerWidth() - (startSlot.index !== endSlot.index ? 3 : 2)\n            });\n\n            hint.addClass(\"k-event-drag-hint\");\n\n            if (event.inverseColor) {\n                hint.addClass(INVERSE_COLOR_CLASS);\n            }\n\n            view._appendMoveHint(hint);\n        }\n    });\n\n    var MonthGroupedByDateView = kendo.Class.extend({\n        init: function(view) {\n            this._view = view;\n        },\n\n        _verticalRowCountForLevel: function() {\n            return 1;\n        },\n\n        _horizontalGroupCountForLevel: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level + 1) / NUMBER_OF_COLUMNS;\n        },\n\n        _createRows: function(start, startIdx, horizontalGroupCount) {\n            var view = this._view;\n            var cellsPerRow = NUMBER_OF_COLUMNS;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n            var html = \"\";\n            var dateIdx = 0;\n\n            if (isVerticallyGrouped) {\n                var verticalStart = new Date(start);\n                var groupCount = view._groupCount();\n                for (dateIdx; dateIdx < NUMBER_OF_ROWS; dateIdx++) {\n                    html += view._createRow(verticalStart, startIdx, groupCount, dateIdx);\n\n                    verticalStart = kendo.date.addDays(verticalStart, cellsPerRow);\n                }\n                start = kendo.date.nextDay(start);\n            } else {\n                for (dateIdx; dateIdx < cellsPerRow; dateIdx++) {\n                    html += view._createRow(start, startIdx, horizontalGroupCount, dateIdx);\n                    start = kendo.date.nextDay(start);\n                }\n                start = kendo.date.addDays(start, cellsPerRow);\n            }\n\n            return html;\n        },\n\n        _adjustStartDate: function(start, isLastRow) {\n            var view = this._view;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n\n            if (isVerticallyGrouped) {\n                if (isLastRow) {\n                    return kendo.date.addDays(start, NUMBER_OF_COLUMNS * (NUMBER_OF_ROWS - 1) + 1);\n                } else {\n                    return kendo.date.nextDay(start);\n                }\n            }\n\n            return kendo.date.addDays(start, NUMBER_OF_COLUMNS);\n        },\n\n        _getContent: function(content, startDate, resources, cellIdx) {\n            if (cellIdx === 0) {\n                return content({ date: startDate, resources: resources });\n            }\n            return \"\";\n        },\n\n        _getTimeSlotByPosition: function(x, y, groupIndex) {\n            var group = this._view.groups[groupIndex];\n\n            return group.daySlotByPosition(x, y, true);\n        },\n\n        _nextSlotStartDate: function(startDate) {\n            return startDate;\n        },\n\n        _getCalendarRowsLength: function() {\n            var view = this._view;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n\n            return isVerticallyGrouped ? NUMBER_OF_COLUMNS : NUMBER_OF_ROWS;\n        },\n\n        _createRowsLayout: function(resources, rows, groupHeaderTemplate, columns) {\n            var view = this._view;\n\n            return view._createDateLayout(columns, null, false);\n        },\n\n        _createVerticalColumnsLayout: function(resources, rows, groupHeaderTemplate) {\n            var view = this._view;\n            var resource = resources[0];\n            var configuration = [];\n            var data = resource.dataSource.view();\n\n            for (var dataIndex = 0; dataIndex < data.length * NUMBER_OF_ROWS; dataIndex++) {\n                var value = kendo.getter(resource.dataValueField)(data[dataIndex % data.length]);\n                var obj = {\n                    text: groupHeaderTemplate({\n                        text: kendo.htmlEncode(kendo.getter(resource.dataTextField)(data[dataIndex % data.length])),\n                        color: kendo.getter(resource.dataColorField)(data[dataIndex % data.length]),\n                        field: resource.field,\n                        title: resource.title,\n                        name: resource.name,\n                        value: value\n                    }),\n                    className: \"k-slot-cell\",\n                    value: value\n                };\n\n                obj.columns = view._createColumnsLayout(resources.slice(1), null, groupHeaderTemplate, null, null, value);\n\n                configuration.push(obj);\n            }\n\n            return configuration;\n        },\n\n        _createColumnsLayout: function(resources, columns, groupHeaderTemplate, subColumns) {\n            var view = this._view;\n\n            return view._createColumnsLayout(resources, columns, groupHeaderTemplate, subColumns, true);\n        },\n\n        _verticalGroupCount: function(level) {\n            var view = this._view;\n\n            return view._columnCountForLevel(level) / NUMBER_OF_ROWS;\n        },\n\n        _horizontalGroupCount: function(level) {\n            var view = this._view;\n            return view._columnCountForLevel(level) / NUMBER_OF_COLUMNS;\n        },\n\n        _positionMobileEvent: function(event, group, range, rangeCount, start, end) {\n            var view = this._view;\n            var startIndex = range.start.index;\n            var endIndex = range.end.index;\n\n            for (var i = range.start.index; i <= range.end.index; i++) {\n                var currentSlot = range.collection._slots[i];\n                var dateRange = group.daySlotRanges(currentSlot.start, currentSlot.start, true)[0];\n\n                var occurrence = event.clone({\n                    start: i === startIndex ? start : currentSlot.startDate(),\n                    end: i === endIndex ? end : currentSlot.endDate(),\n                    head: i !== endIndex || range.head,\n                    tail: i !== startIndex || range.tail });\n\n                view._positionMobileEvent(dateRange, view._createEventElement(occurrence), group);\n            }\n        },\n\n        _positionEvent: function(event, group, range, rangeCount, start, end) {\n            var view = this._view;\n            var startIndex = range.start.index;\n            var endIndex = range.end.index;\n\n            for (var i = range.start.index; i <= range.end.index; i++) {\n                var currentSlot = range.collection._slots[i];\n                var dateRange = group.daySlotRanges(currentSlot.start, currentSlot.start, true)[0];\n\n                var occurrence = event.clone({\n                    start: i === startIndex ? start : currentSlot.startDate(),\n                    end: i === endIndex ? end : currentSlot.endDate(),\n                    head: i !== endIndex || range.head,\n                    tail: i !== startIndex || range.tail });\n\n                view._positionEvent(dateRange, view._createEventElement(occurrence), group);\n            }\n        },\n\n        _addDaySlotCollections: function(groupCount, tableRows, startDate) {\n            var view = this._view;\n            var columnCount = NUMBER_OF_COLUMNS;\n            var rowCount = NUMBER_OF_ROWS;\n            var isVerticallyGrouped = view._isVerticallyGrouped();\n\n            for (var dateIndex = 0; dateIndex < columnCount; dateIndex++) {\n                for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n                    var groupIndex = 0;\n                    var currentTableIndex = isVerticallyGrouped ? dateIndex : rowIndex;\n                    var tableRow = tableRows[currentTableIndex];\n                    var cells = tableRow.children;\n                    var cellMultiplier = 0;\n\n                    if (!view._isVerticallyGrouped()) {\n                        cellMultiplier = dateIndex;\n                    }\n\n                    for (var cellIndex = cellMultiplier * groupCount; cellIndex < (cellMultiplier + 1) * groupCount; cellIndex++) {\n                        var cellCount = (rowIndex * columnCount) + dateIndex;\n                        var currentCellIndex = isVerticallyGrouped ? cellIndex + (rowIndex * groupCount) : cellIndex;\n                        var cell = cells[currentCellIndex];\n                        var currentGroupIndex = isVerticallyGrouped ? cellIndex : groupIndex;\n                        var group = view.groups[currentGroupIndex];\n                        var collection;\n                        if (dateIndex === 0) {\n                            collection = group.addDaySlotCollection(kendo.date.addDays(startDate, cellCount), kendo.date.addDays(startDate, cellCount + columnCount));\n                        } else {\n                            collection = group._daySlotCollections[rowIndex];\n                        }\n\n                        view.addDaySlot(collection, cell, startDate, cellCount);\n                        groupIndex++;\n                    }\n                }\n            }\n        },\n\n        _changePeriodGroupIndex: function(reverse, vertical, selectionGroupIndex) {\n            var view = this._view;\n\n            if (vertical && view._isVerticallyGrouped()) {\n                return reverse ? view.groups.length - 1 : 0;\n            }\n\n            return selectionGroupIndex;\n        },\n\n        _createResizeHint: function(range) {\n            var view = this._view;\n            var left, top, width, height, hint;\n\n            if (view._isVerticallyGrouped()) {\n            left = range.startSlot().offsetLeft;\n            top = range.start.offsetTop;\n            width = range.startSlot().offsetWidth;\n            height = range.endSlot().offsetTop + range.startSlot().offsetHeight - range.startSlot().offsetTop - 2;\n            hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n            view._appendResizeHint(hint);\n            } else {\n                for (var slotIdx = range.startSlot().index; slotIdx <= range.endSlot().index; slotIdx++) {\n                    var slot = range.collection._slots[slotIdx];\n                    left = slot.offsetLeft;\n                    top = slot.offsetTop;\n                    width = slot.offsetWidth;\n                    height = slot.offsetHeight - 2;\n                    hint = SchedulerView.fn._createResizeHint.call(view, left, top, width, height);\n\n                    view._appendResizeHint(hint);\n                }\n            }\n        },\n\n        _createMoveHint: function(range, event) {\n            var view = this._view;\n            var startSlot = range.startSlot();\n            var endSlot = range.endSlot();\n\n            for (var slotIdx = startSlot.index; slotIdx <= endSlot.index; slotIdx++) {\n                var slot = range.collection._slots[slotIdx];\n                var hint = view._createEventElement(event.clone({ head: range.head, tail: range.tail }));\n\n                hint.css({\n                    left: slot.offsetLeft,\n                    top: slot.offsetTop + slot.firstChildHeight,\n                    height: (view.options.eventHeight === \"auto\") ? 25 : view.options.eventHeight,\n                    width: slot.offsetWidth - 2\n                });\n\n                hint.addClass(\"k-event-drag-hint\");\n\n                if (event.inverseColor) {\n                    hint.addClass(INVERSE_COLOR_CLASS);\n                }\n\n                view._appendMoveHint(hint);\n            }\n        }\n    });\n\n    kendo.ui.scheduler.MonthGroupedView = MonthGroupedView;\n    kendo.ui.scheduler.MonthGroupedByDateView = MonthGroupedByDateView;\n\n    ui.MonthView = SchedulerView.extend({\n        init: function(element, options) {\n            var that = this;\n\n            // Do not allow less than one event\n            if (options.eventsPerDay === 0) {\n                options.eventsPerDay = 1;\n            }\n\n            // Do not allow 0 height events\n            if (options.eventHeight === 0) {\n                options.eventHeight = 1;\n            }\n\n            // Do not allow 0 height more-button\n            if (options.moreButtonHeight === 0) {\n                options.moreButtonHeight = 1;\n            }\n\n            // Do not allow string values other than auto\n            if (typeof options.eventHeight === \"string\" && options.eventHeight !== \"auto\") {\n                options.eventHeight = 25;\n            }\n\n            // Set adaptiveSlotHeight to true if eventHeight is auto\n            if (options.eventHeight === \"auto\") {\n                options.adaptiveSlotHeight = true;\n            }\n\n            SchedulerView.fn.init.call(that, element, options);\n            that._groupedView = that._getGroupedView();\n\n            // Exception handling for invalid combinations\n            var isGroupedByDate = this._isGroupedByDate();\n            var adaptiveSlotHeight = this.options.adaptiveSlotHeight;\n            var eventHeight = this.options.eventHeight;\n\n            if (isGroupedByDate === true && adaptiveSlotHeight === true) {\n                throw new Error(\"Incompatible options: adaptive slot height and date grouping!\");\n            }\n\n            if (isGroupedByDate === true && eventHeight === \"auto\") {\n                throw new Error(\"Incompatible options: auto event height and date grouping!\");\n            }\n\n            that.title = that.options.title;\n\n            that._templates();\n\n            that._editable();\n\n            that._renderLayout(that.options.date);\n\n            that._groups();\n        },\n\n        name: \"month\",\n\n        _getGroupedView: function() {\n            if (this._isGroupedByDate()) {\n                return new kendo.ui.scheduler.MonthGroupedByDateView(this);\n            } else {\n                return new kendo.ui.scheduler.MonthGroupedView(this);\n            }\n        },\n\n        _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n            if (multiple) {\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var isSameSlot = startSlot.index === endSlot.index;\n                var isSameCollection = startSlot.collectionIndex === endSlot.collectionIndex;\n                var updateDirection;\n\n                if (vertical) {\n                    updateDirection = (isSameSlot && isSameCollection) || isSameCollection;\n                } else {\n                    updateDirection = isSameSlot && isSameCollection;\n                }\n\n                if (updateDirection) {\n                    selection.backward = reverse;\n                }\n            }\n        },\n\n        _changeDate: function(selection, slot, previous) {\n            var group = this.groups[selection.groupIndex];\n            var collections, index;\n\n            if (previous) {\n                collections = group._getCollections(group.daySlotCollectionCount());\n                index = slot.collectionIndex - 1;\n\n                if (index >= 0) {\n                    return collections[index]._slots[collections[index]._slots.length - 1];\n                }\n            } else {\n                collections = group._getCollections(group.daySlotCollectionCount());\n                index = slot.collectionIndex + 1;\n                var slotIndex = 0;\n\n                if (collections[index] && collections[index]._slots[slotIndex]) {\n                    return collections[index]._slots[slotIndex];\n                }\n            }\n        },\n\n        _getNextHorizontalRange: function(group, method, horizontalRange) {\n            var isVertical = this._isVerticallyGrouped();\n\n            horizontalRange.startSlot = group[method](horizontalRange.startSlot, isVertical);\n            horizontalRange.endSlot = group[method](horizontalRange.endSlot, isVertical);\n\n            return horizontalRange;\n        },\n\n        _getNextVerticalRange: function(group, method, verticalRange, multiple) {\n            var isVertical = this._isVerticallyGrouped() && this._isGroupedByDate();\n\n            verticalRange.startSlot = group[method](verticalRange.startSlot, multiple, isVertical);\n            verticalRange.endSlot = group[method](verticalRange.endSlot, multiple, isVertical);\n\n            return verticalRange;\n        },\n\n        _changeViewPeriod: function(selection, reverse, vertical) {\n            var pad = vertical ? 7 : 1;\n            var newStart, newEnd;\n\n            if (reverse) {\n                pad *= -1;\n            }\n\n            newStart = kendo.date.addDays(selection.start, pad);\n            newEnd = kendo.date.addDays(selection.end, pad);\n\n            if (this._isInRange(newStart, newEnd)) {\n                return false;\n            }\n\n            selection.start = newStart;\n            selection.end = newEnd;\n\n            if (!vertical || (vertical && this._isVerticallyGrouped())) {\n                selection.groupIndex = this._groupedView._changePeriodGroupIndex(reverse, vertical, selection.groupIndex);\n            }\n\n            selection.events = [];\n\n            return true;\n        },\n\n        _continuousSlot: function(selection, ranges, reverse) {\n            var index = selection.backward ? 0 : ranges.length - 1;\n            var group = this.groups[selection.groupIndex];\n\n            return group.continuousSlot(ranges[index].start, reverse);\n        },\n\n        _changeGroupContinuously: function(selection, continuousSlot, multiple, reverse) {\n            if (!multiple) {\n                var groupIndex = selection.groupIndex;\n                var lastGroupIndex = this.groups.length - 1;\n                var vertical = this._isVerticallyGrouped();\n                var group = this.groups[groupIndex];\n\n                if (!continuousSlot && vertical) {\n\n                    continuousSlot = group[reverse ? \"lastSlot\" : \"firstSlot\"]();\n\n                    groupIndex += (reverse ? -1 : 1);\n\n                } else if (continuousSlot && !vertical) {\n                    groupIndex = reverse ? lastGroupIndex : 0;\n                }\n\n                if (groupIndex < 0 || groupIndex > lastGroupIndex) {\n                    groupIndex = reverse ? lastGroupIndex : 0;\n                    continuousSlot = null;\n                }\n\n                selection.groupIndex = groupIndex;\n            }\n\n            return continuousSlot;\n        },\n\n        _normalizeHorizontalSelection: function(selection, ranges, reverse) {\n            var slot;\n\n            if (reverse) {\n                slot = ranges[0].start;\n            } else {\n                slot = ranges[ranges.length - 1].end;\n            }\n\n            return slot;\n        },\n\n        _normalizeVerticalSelection: function(selection, ranges) {\n            var slot;\n\n            if (selection.backward) {\n                slot = ranges[0].start;\n            } else {\n                slot = ranges[ranges.length - 1].end;\n            }\n\n            return slot;\n        },\n\n        _templates: function() {\n            var options = this.options,\n                settings = extend({}, kendo.Template, options.templateSettings);\n\n            this.eventTemplate = kendo.template(EVENT_WRAPPER_STRING);\n            this.dayTemplate = kendo.template(options.dayTemplate, settings);\n            this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n        },\n\n        dateForTitle: function() {\n            return kendo.format(this.options.selectedDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n        },\n\n        shortDateForTitle: function() {\n            return kendo.format(this.options.selectedShortDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n        },\n\n        mobileDateForTitle: function() {\n            return kendo.format(this.options.selectedMobileDateFormat, this._firstDayOfMonth, this._lastDayOfMonth);\n        },\n\n        mobileYearForTitle: function() {\n            return this.dateForTitle().split(', ')[1];\n        },\n\n        nextDate: function() {\n            return kendo.date.nextDay(this._lastDayOfMonth);\n        },\n\n        previousDate: function() {\n            return kendo.date.previousDay(this._firstDayOfMonth);\n        },\n\n        startDate: function() {\n            return this._startDate;\n        },\n\n        endDate: function() {\n            return this._endDate;\n        },\n\n        _renderLayout: function(date) {\n            var that = this;\n\n            this._firstDayOfMonth = kendo.date.firstDayOfMonth(date);\n\n            this._lastDayOfMonth = kendo.date.lastDayOfMonth(date);\n\n            this._startDate = firstVisibleMonthDay(date, this.calendarInfo());\n\n            this.createLayout(this._layout());\n\n            this._content();\n\n            this._initSlotHeight();\n\n            this._initTimesHeight();\n\n            this.refreshLayout();\n\n            if (this._isVirtualized()) {\n                this._tryRenderContent();\n            }\n\n            this.content.on(\"click\" + NS, \".k-nav-day,.k-more-events\", function(e) {\n                var offset = $(e.currentTarget).offset();\n                var slot = that._slotByPosition(offset.left, offset.top);\n\n                e.preventDefault();\n                that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n            });\n\n            this._footer();\n        },\n\n        _editable: function() {\n            if (this.options.editable) {\n                if (this._isMobile()) {\n                    this._touchEditable();\n                } else {\n                    this._mouseEditable();\n                }\n\n            }\n        },\n\n        _mouseEditable: function() {\n            var that = this;\n            that.element.on(\"click\" + NS, \".k-scheduler-monthview .k-event a:has(.k-i-x),.k-scheduler-monthview .k-event a:has(.k-svg-i-x)\", function(e) {\n                that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                e.preventDefault();\n            });\n\n            if (that.options.editable.create !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-monthview .k-scheduler-content td\", function(e) {\n                    var offset = $(e.currentTarget).offset();\n                    var slot = that._slotByPosition(offset.left, offset.top);\n\n                    if (slot) {\n                        var resourceInfo = that._resourceBySlot(slot);\n                        that.trigger(\"add\", { eventInfo: extend({ isAllDay: true, start: slot.startDate(), end: slot.startDate() }, resourceInfo ) });\n                    }\n\n                    e.preventDefault();\n                });\n            }\n\n            if (that.options.editable.update !== false) {\n                that.element.on(\"dblclick\" + NS, \".k-scheduler-monthview .k-event\", function(e) {\n                    that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n            }\n        },\n\n        _touchEditable: function() {\n            var that = this;\n            var threshold = 0;\n\n            if (kendo.support.mobileOS.android) {\n                threshold = 5;\n            }\n\n            if (that.options.editable.create !== false) {\n                that._addUserEvents = new kendo.UserEvents(that.element, {\n                    threshold: threshold,\n                    useClickAsTap: !kendo.support.browser.edge,\n                    filter: \".k-scheduler-monthview .k-scheduler-content td\",\n                    tap: function(e) {\n                        if (that._scrolling) {\n                            return;\n                        }\n                        var offset = $(e.target).offset();\n                        var slot = that._slotByPosition(offset.left, offset.top);\n\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({ isAllDay: true, start: slot.startDate(), end: slot.startDate() }, resourceInfo ) });\n                        }\n\n                        e.preventDefault();\n                    }\n                });\n            }\n        },\n\n        selectionByElement: function(cell) {\n            var offset = $(cell).offset();\n            return this._slotByPosition(offset.left, offset.top);\n        },\n\n        _columnCountForLevel: function(level) {\n            var columnLevel = this.columnLevels[level];\n            return columnLevel ? columnLevel.length : 0;\n        },\n\n        _rowCountForLevel: function(level) {\n            var rowLevel = this.rowLevels[level];\n            return rowLevel ? rowLevel.length : 0;\n        },\n\n        _content: function() {\n            var html = '<tbody>';\n            var verticalGroupCount = 1;\n            var groupedView = this._groupedView;\n            var resources = this.groupedResources;\n\n            if (resources.length) {\n                if (this._isVerticallyGrouped()) {\n                    verticalGroupCount = groupedView._verticalRowCountForLevel(resources.length - 1);\n                }\n            }\n\n            for (var verticalGroupIdx = 0; verticalGroupIdx < verticalGroupCount; verticalGroupIdx++) {\n                html += this._createCalendar(verticalGroupIdx);\n                this._cachedGroupIndex = verticalGroupIdx;\n            }\n\n            html += \"</tbody>\";\n\n            this.content.find(\"table\").html(html);\n        },\n\n        _virtualContent: function() {\n            var that = this;\n            var html = '';\n\n            html += this._createCalendar(++this._cachedGroupIndex);\n\n            that.content.find(\"table tbody\").append(html);\n\n            that._initSlotHeight();\n        },\n\n        _calcSlotHeight: function(eventsPerDay) {\n            var options = this.options;\n            var eventHeight = options.eventHeight;\n            var eventSpacing = options.eventSpacing;\n            var moreButtonHeight = options.moreButtonHeight;\n            var firstCell = this.content.find(\"table tr td\")[0];\n            var dateHeader;\n\n            if (eventHeight === \"auto\" || !firstCell) {\n                return undefined;\n            }\n\n            dateHeader = firstCell.firstChild;\n\n            return Math.round(\n                // border of cell\n                ( firstCell.offsetHeight - firstCell.clientHeight ) +\n\n                // top padding\n                dateHeader.offsetTop +\n\n                // height of date header\n                dateHeader.offsetHeight +\n\n                // cell inner spacing\n                CELL_INNER_SPACING +\n\n                // all visible events and spacing\n                ( eventsPerDay * eventHeight ) + ( ( eventsPerDay - 1 ) * eventSpacing ) +\n\n                // leading space, more button\n                ( CELL_INNER_SPACING + moreButtonHeight ) +\n\n                // traling spacing\n                CELL_INNER_SPACING\n            );\n        },\n\n        _initSlotHeight: function() {\n            var options = this.options;\n            var eventsPerDay = options.eventsPerDay;\n            var eventHeight = options.eventHeight;\n            var isMobile = this._isMobile();\n            var table = this.content.find(\"table\");\n            var rowHeight;\n\n            if (isMobile) {\n                return;\n            }\n\n            if (typeof eventHeight === \"number\") {\n                rowHeight = this._calcSlotHeight(eventsPerDay);\n\n                table.find(\"tr\").height( rowHeight );\n\n                // table.addClass(\"k-scheduler-table-auto\");\n            }\n        },\n\n        _sortEventMeta: function(slot) {\n            slot.eventMeta.sort(function(first, second) {\n                return first.order - second.order;\n            });\n        },\n\n        _adjustSlotHeight: function(group) {\n            var that = this;\n            var options = this.options;\n            var eventHeight = options.eventHeight;\n            var eventSpacing = options.eventSpacing;\n            var moreButtonHeight = options.moreButtonHeight;\n\n            if (this._canAdjustSlotHeight !== true) {\n                return;\n            }\n\n            var weeks = group._daySlotCollections;\n\n            weeks.forEach(function(week) {\n                var events = week._events;\n                var eventIndex = 0;\n                var slots = week._slots;\n                var firstSlot = slots[0];\n                var weekOffsetTop = firstSlot.element.offsetTop;\n                var weekHeight = 0;\n\n                // Ensure event meta exists in each slot\n                slots.forEach(function(slot) {\n                    if (!slot.eventMeta) {\n                        slot.eventMeta = [];\n                        slot.actualEventCount = 0;\n                    } else {\n                        slot.actualEventCount = slot.eventMeta.length;\n                    }\n                });\n\n                // Ensure spanning event meta is present in all related slots\n                slots.forEach(function(slot, slotIndex) {\n\n                    for (let i = 0; i < slot.eventMeta.length; i++) {\n                        let meta = slot.eventMeta[i];\n                        // Skip events not starting in this slot\n                        if (meta.startIndex !== slotIndex) {\n                            return;\n                        }\n\n                        // Skip non-spanning events\n                        if (meta.startIndex === meta.endIndex) {\n                            return;\n                        }\n\n                        // Copy spanning event meta in all related slots\n                        slots.slice(slotIndex, meta.endIndex + 1).forEach(function(adjSlot) {\n\n                            var adjMeta = adjSlot.eventMeta;\n\n                            if (adjMeta.indexOf(meta) > -1) {\n                                return;\n                            }\n\n                            // adjMeta.push(meta);\n                            adjMeta[adjMeta.length] = slot.eventMeta[i];\n                            adjSlot.actualEventCount = adjMeta.length;\n                            adjSlot.dirty = true;\n                        });\n                    }\n\n                    // Set correct order\n                    if (slot.dirty === true) {\n                        that._sortEventMeta(slot);\n                        delete slot.dirty;\n                    }\n\n                });\n\n                if (eventHeight === \"auto\") {\n                    slots.forEach(function(slot, slotIndex) {\n                        let slotHeight = slot.firstChildTop + slot.firstChildHeight + CELL_INNER_SPACING;\n                        for (let i = 0; i < slot.eventMeta.length; i++) {\n                            let meta = slot.eventMeta[i];\n                            meta.top = Math.max(meta.top, weekOffsetTop + slotHeight);\n                            slotHeight = (meta.top - weekOffsetTop) + eventSpacing + meta.height;\n                        }\n                    });\n                }\n\n                // Position events\n                slots.forEach(function(slot, slotIndex) {\n                    var slotHeight = slot.firstChildTop + slot.firstChildHeight + CELL_INNER_SPACING;\n\n                    for (let i = 0; i < slot.eventMeta.length; i++) {\n                        let meta = slot.eventMeta[i];\n                        meta.top = Math.max(meta.top, weekOffsetTop + slotHeight);\n                        slotHeight = (meta.top - weekOffsetTop) + eventSpacing + meta.height;\n\n                        if (meta.startIndex === slotIndex) {\n                            events[eventIndex].element[0].style.top = meta.top + \"px\";\n                            eventIndex++;\n                        }\n                    }\n\n                    if (slot.eventMeta.length > 0) {\n                        slotHeight -= eventSpacing;\n                        slotHeight += CELL_INNER_SPACING;\n                    } else {\n                        slotHeight += (eventHeight === \"auto\" ? 25 : eventHeight);\n                    }\n\n                    if (slot.more) {\n                        slot.more[0].style.top = weekOffsetTop + slotHeight + \"px\";\n                        slotHeight += CELL_INNER_SPACING + moreButtonHeight;\n                    }\n\n                    weekHeight = Math.max(weekHeight, slotHeight + 1);\n\n                });\n\n                // Update slot size and meta\n                firstSlot.element.parentNode.style.height = weekHeight + \"px\";\n                slots.forEach(function(slot) {\n                    slot.offsetTop = weekOffsetTop;\n                    slot.offsetHeight = weekHeight;\n                    slot.clientHeight = weekHeight - 1;\n                });\n\n            });\n        },\n\n        _initTimesHeight: function() {\n            var that = this;\n            var times = that.times;\n            var isSetHeight = that._isSchedulerHeightSet();\n            var contentDiv = that.content[0];\n\n            if (times && !isSetHeight) {\n                times.height(contentDiv.clientHeight);\n            }\n        },\n\n        _createCalendar: function(verticalGroupIndex) {\n            var start = this.startDate();\n            var cellCount = NUMBER_OF_COLUMNS * NUMBER_OF_ROWS;\n            var cellsPerRow = NUMBER_OF_COLUMNS;\n            var weekStartDates = [start];\n            var html = '';\n            var horizontalGroupCount = 1;\n            var isVerticallyGrouped = this._isVerticallyGrouped();\n            var groupedView = this._groupedView;\n\n            var resources = this.groupedResources;\n\n            if (resources.length) {\n                if (!isVerticallyGrouped) {\n                    horizontalGroupCount = groupedView._horizontalGroupCountForLevel(resources.length - 1);\n                }\n            }\n\n            this._slotIndices = {};\n\n            var calendarRowsLength = groupedView._getCalendarRowsLength(cellsPerRow, cellCount);\n\n            for (var rowIdx = 0; rowIdx < calendarRowsLength; rowIdx++) {\n                html += \"<tr>\";\n\n                weekStartDates.push(start);\n\n                var startIdx = rowIdx * cellsPerRow;\n\n                html += groupedView._createRows(start, startIdx, horizontalGroupCount, verticalGroupIndex);\n                start = groupedView._adjustStartDate(start, rowIdx === calendarRowsLength - 1);\n\n                html += \"</tr>\";\n            }\n\n            this._weekStartDates = weekStartDates;\n            this._endDate = kendo.date.previousDay(start);\n\n            return html;\n        },\n\n        _createRow: function(startDate, startIdx, cellsPerRow, groupIndex) {\n            var that = this;\n            var min = that._firstDayOfMonth;\n            var max = that._lastDayOfMonth;\n            var content = that.dayTemplate;\n            var classes = \"\";\n            var html = \"\";\n            var groupedView = this._groupedView;\n\n            var resources = function() {\n                return that._resourceBySlot({ groupIndex: groupIndex });\n            };\n\n            for (var cellIdx = 0; cellIdx < cellsPerRow; cellIdx++) {\n                classes = \"\";\n\n                if (kendo.date.isToday(startDate)) {\n                    classes += \"k-today\";\n                }\n\n                if (!kendo.date.isInDateRange(startDate, min, max)) {\n                    classes += \" k-other-month\";\n                }\n\n                html += \"<td \";\n\n                if (classes !== \"\") {\n                    html += 'class=\"' + classes + '\"';\n                }\n\n                html += \">\";\n                html += groupedView._getContent(content, startDate, resources, cellIdx);\n                html += \"</td>\";\n\n                that._slotIndices[getDate(startDate).getTime()] = startIdx + cellIdx;\n\n                startDate = groupedView._nextSlotStartDate(startDate);\n            }\n\n            return html;\n        },\n\n        _layout: function() {\n            var calendarInfo = this.calendarInfo();\n\n            var weekDayNames = this._isMobile() ? calendarInfo.days.namesShort.map(function(name) {\n                return name[0];\n            }) : calendarInfo.days.names;\n\n            var names = shiftArray(weekDayNames, calendarInfo.firstDay);\n            var columns = $.map(names, function(value) { return { text: value }; });\n            var resources = this.groupedResources;\n            var rows;\n            var groupedView = this._groupedView;\n\n            if (resources.length) {\n                if (this._isVerticallyGrouped()) {\n                    var inner = []; //add hidden cells in order to sync the content rows\n                    for (var idx = 0; idx < 6; idx++) {\n                        inner.push({ text: \"<div>&nbsp;</div>\", className: \"k-hidden k-slot-cell\" });\n                    }\n                    rows = groupedView._createRowsLayout(resources, inner, this.groupHeaderTemplate, columns);\n                    columns = groupedView._createVerticalColumnsLayout(resources, inner, this.groupHeaderTemplate, columns);\n\n                } else {\n                    columns = groupedView._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                }\n            }\n\n            return {\n                columns: columns,\n                rows: rows\n            };\n        },\n\n        _createEventElement: function(event) {\n            var options = this.options;\n            var editable = options.editable;\n\n            var isMobile = this._isMobile();\n\n            event.showDelete = editable && editable.destroy !== false && !isMobile;\n            event.resizable = editable && editable.resize !== false && !isMobile;\n            event.ns = kendo.ns;\n            event.resources = this.eventResources(event);\n            event.inverseColor = false;\n            event.messages = options.messages || { destroy: \"Delete\" };\n\n            var element = $(this.eventTemplate($.extend({}, event, {\n                ariaLabel: this._formatEventAriaLabel(event.title, event.start, event.end, event.isAllDay),\n                template: this.options.eventTemplate\n            })));\n\n            kendo.applyStylesFromKendoAttributes(element, [\"background-color\", \"border-color\"]);\n\n            return element;\n        },\n\n        _isInDateSlot: function(event) {\n            if (!this.groups || this.groups.length === 0) {\n                return false;\n            }\n\n            var groups = this.groups[0];\n            var slotStart = groups.firstSlot().start;\n            var slotEnd = groups.lastSlot().end - 1;\n\n            var startTime = kendo.date.toUtcTime(event.start);\n            var endTime = kendo.date.toUtcTime(event.end);\n\n            return (isInDateRange(startTime, slotStart, slotEnd) ||\n                isInDateRange(endTime, slotStart, slotEnd) ||\n                isInDateRange(slotStart, startTime, endTime) ||\n                isInDateRange(slotEnd, startTime, endTime)) &&\n                (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n        },\n\n        _slotIndex: function(date) {\n            return this._slotIndices[getDate(date).getTime()];\n        },\n\n        _positionMobileEvent: function(slotRange, element, group) {\n            var startSlot = slotRange.start,\n                tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                contentEl = this.table.find(\".k-scheduler-content\")[0],\n                offsetLeft;\n\n            if (slotRange.start.offsetLeft > slotRange.end.offsetLeft) {\n               startSlot = slotRange.end;\n            }\n\n            var startIndex = slotRange.start.index;\n            var endIndex = startIndex;\n\n            var eventCount = 3;\n            var events = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n            events.push({ element: element, start: startIndex, end: endIndex });\n\n            var rows = SchedulerView.createRows(events);\n\n            var slot = slotRange.collection.at(startIndex);\n\n            var container = slot.container;\n\n            if (!container) {\n                if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                    // RTL mobile rendering with horizontal scroll\n                    offsetLeft = startSlot.offsetLeft - (tableEl.clientWidth - contentEl.clientWidth) + \"px\";\n                } else {\n                    offsetLeft = startSlot.offsetLeft + \"px\";\n                }\n\n                container = $('<div class=\"k-events-container\"></div>').css({\n                    top: startSlot.offsetTop + startSlot.firstChildTop + startSlot.firstChildHeight + \"px\",\n                    left: offsetLeft,\n                    width: startSlot.offsetWidth + \"px\"\n                });\n\n                slot.container = container;\n\n                this.content[0].appendChild(container[0]);\n            }\n\n            if (rows.length <= eventCount) {\n                slotRange.addEvent({ element: element, start: startIndex, end: endIndex, groupIndex: startSlot.groupIndex });\n\n                group._continuousEvents.push({\n                    element: element,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: slotRange.start,\n                    end: slotRange.end\n                });\n\n                container[0].appendChild(element[0]);\n            }\n        },\n\n        _positionEvent: function(slotRange, element, group) {\n            var eventHeight = this.options.eventHeight;\n            var eventSpacing = this.options.eventSpacing;\n            var startSlot = slotRange.start;\n\n            if (slotRange.start.offsetLeft > slotRange.end.offsetLeft) {\n                startSlot = slotRange.end;\n            }\n\n            var startIndex = slotRange.start.index;\n            var endIndex = slotRange.end.index;\n            var eventCount = startSlot.eventCount;\n            var events = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n            var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n            events.push({ element: element, start: startIndex, end: endIndex });\n\n            var rows = SchedulerView.createRows(events);\n\n            for (var idx = 0, length = Math.min(rows.length, eventCount); idx < length; idx++) {\n                var rowEvents = rows[idx].events;\n                var eventTop = (eventHeight === \"auto\")\n                    ? \"\"\n                    : (\n                        startSlot.offsetTop +\n                        startSlot.firstChildTop +\n                        startSlot.firstChildHeight +\n                        CELL_INNER_SPACING +\n                        idx * (eventHeight + eventSpacing) +\n                        \"px\"\n                    );\n\n                for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                    rowEvents[j].element[0].style.top = eventTop;\n                    rowEvents[j].element.attr(kendo.attr(\"order\"), idx);\n                }\n            }\n\n            if (rows.length > eventCount) {\n                for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n                    var collection = slotRange.collection;\n\n                    var slot = collection.at(slotIndex);\n\n                    if (slot.more) {\n                        continue;\n                    }\n\n                    slot.more = $(MORE_BUTTON_TEMPLATE()).css({\n                        width: slot.clientWidth - 2,\n                        left: slot.offsetLeft + 2,\n                        top: (eventHeight === \"auto\")\n                            ? \"\"\n                            : (\n                                slot.offsetTop +\n                                slot.firstChildTop +\n                                slot.firstChildHeight +\n                                CELL_INNER_SPACING +\n                                (eventCount * eventHeight) +\n                                ( (eventCount - 1) * eventSpacing) +\n                                CELL_INNER_SPACING\n                            )\n                    });\n\n                    this.content[0].appendChild(slot.more[0]);\n                }\n            } else {\n                slotRange.addEvent({ element: element, start: startIndex, end: endIndex, groupIndex: startSlot.groupIndex });\n\n                element[0].style.width = slotRange.innerWidth() - rightOffset + \"px\";\n                element[0].style.left = startSlot.offsetLeft + 2 + \"px\";\n                element[0].style.height = (eventHeight === \"auto\") ? \"\" : eventHeight + \"px\";\n\n                group._continuousEvents.push({\n                    element: element,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    start: slotRange.start,\n                    end: slotRange.end,\n                    order: parseInt(element.attr(kendo.attr(\"order\")), 10)\n                });\n\n                element.appendTo(this.content);\n\n                this._inverseEventColor(element);\n\n                // Add event meta to slot\n                var _collectionIndex = slotRange.start.collectionIndex;\n                var _startSlotIndex = slotRange.start.index;\n                var _startSlot = group._daySlotCollections[_collectionIndex]._slots[_startSlotIndex];\n\n                if (!_startSlot.eventMeta) {\n                    _startSlot.eventMeta = [];\n                }\n\n                _startSlot.eventMeta.push({\n                    height: (eventHeight === \"auto\") ? element.outerHeight() : eventHeight,\n                    top: 0,\n                    startIndex: _startSlotIndex,\n                    endIndex: slotRange.end.index,\n                    uid: element.attr(kendo.attr(\"uid\")),\n                    order: parseInt(element.attr(kendo.attr(\"order\")), 10)\n                });\n            }\n        },\n\n        _slotByPosition: function(x, y) {\n            var offset = this.content.offset();\n\n            x -= offset.left;\n            y -= offset.top;\n            y += this.content[0].scrollTop;\n            x += this.content[0].scrollLeft;\n\n            x = Math.ceil(x);\n            y = Math.ceil(y);\n\n            for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                var slot = this._groupedView._getTimeSlotByPosition(x, y, groupIndex);\n\n                if (slot) {\n                    return slot;\n                }\n            }\n\n            return null;\n        },\n\n        _appendResizeHint: function(hint) {\n            hint.appendTo(this.content);\n\n            this._resizeHint = this._resizeHint.add(hint);\n        },\n\n        _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n            this._removeResizeHint();\n\n            var group = this.groups[groupIndex];\n\n            var ranges = group.ranges(startTime, endTime, true, event.isAllDay);\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                this._groupedView._createResizeHint(ranges[rangeIndex]);\n            }\n\n            this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n            this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), \"M/dd\"));\n\n            this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), \"M/dd\"));\n        },\n\n        _updateMoveHint: function(event, groupIndex, distance) {\n            var start = kendo.date.toUtcTime(event.start) + distance;\n\n            var end = start + event.duration();\n\n            var group = this.groups[groupIndex];\n\n            var ranges = group.ranges(start, end, true, event.isAllDay);\n\n            this._removeMoveHint(event.uid);\n\n            for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                this._groupedView._createMoveHint(ranges[rangeIndex], event);\n            }\n        },\n\n        _appendMoveHint: function(hint) {\n            hint.appendTo(this.content);\n\n            this._moveHint = this._moveHint.add(hint);\n        },\n\n        _groups: function() {\n            var groupCount = this._groupCount();\n            var tableRows = this.content[0].getElementsByTagName(\"tr\");\n            var startDate = this.startDate();\n            this.groups = [];\n\n            for (var idx = 0; idx < groupCount; idx++) {\n                this._addResourceView(idx);\n            }\n\n            this._groupedView._addDaySlotCollections(groupCount, tableRows, startDate);\n        },\n\n\n        addDaySlot: function(collection, cell, startDate, cellCount) {\n            var start = kendo.date.addDays(startDate, cellCount);\n            var end = kendo.date.MS_PER_DAY;\n            var eventsPerDay = this.options.eventsPerDay;\n\n            if (startDate.getHours() !== start.getHours()) {\n                end += (startDate.getHours() - start.getHours()) * kendo.date.MS_PER_HOUR;\n            }\n\n            start = kendo.date.toUtcTime(start);\n            end += start;\n\n            collection.addDaySlot(cell, start, end, eventsPerDay);\n        },\n\n        render: function(events) {\n            this.content.children(\".k-event,.k-more-events,.k-events-container\").remove();\n\n            this._cachedEvents = events;\n\n            this._groups();\n\n            events = new kendo.data.Query(events)\n                .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                .toArray()\n                .filter(function(event) {\n                    return this._isInDateSlot(event);\n                }.bind(this));\n\n            var resources = this.groupedResources;\n            var isMobile = this._isMobile();\n            var isGroupedByDate = this._isGroupedByDate();\n            var adaptiveSlotHeight = this.options.adaptiveSlotHeight;\n\n            this._canAdjustSlotHeight = isMobile !== true && isGroupedByDate !== true && resources.length === 0 && adaptiveSlotHeight === true;\n\n            if (resources.length) {\n                this._renderGroups(events, resources, 0, 1);\n            } else {\n                this._renderEvents(events, 0);\n            }\n\n            this.refreshLayout();\n            this._ongoingEvents(events);\n\n            this.trigger(\"activate\");\n        },\n\n        _renderEvents: function(events, groupIndex) {\n            var group = this.groups[groupIndex];\n            var view = this._groupedView._view;\n            var isMobile = view._isMobile();\n\n            if (!group) {\n                return;\n            }\n\n            if (!group._continuousEvents) {\n                group._continuousEvents = [];\n            }\n\n            if (isMobile) {\n\n                events.forEach(function(event) {\n                    var ranges = group.slotRanges(event, true);\n                    var range = ranges[0];\n                    var start = range.start.start;\n                    var end = range.end.end;\n                    var rangeStart = new Date(range.start.start);\n                    var rangeEnd = ranges[ranges.length - 1].end.end;\n                    var newStart = new Date(rangeStart);\n                    var newEnd = new Date(end);\n\n                    while (rangeStart.getTime() <= rangeEnd &&\n                        event.end >= kendo.timezone.toLocalDate(rangeStart) &&\n                        event.start <= kendo.timezone.toLocalDate(rangeEnd)) {\n                        var dateRange = group.daySlotRanges(newStart.getTime(), newEnd.getTime(), true)[0];\n                        newEnd.setDate(newEnd.getDate() + 1);\n                        newStart.setDate(newStart.getDate() + 1);\n\n                        if (dateRange) {\n                            dateRange.head = null;\n                            dateRange.middle = null;\n                            dateRange.tail = null;\n                            this._groupedView._positionMobileEvent(event, group, dateRange, 1, start, end, 0);\n                        }\n\n                        rangeStart = kendo.date.addDays(rangeStart, 1);\n                    }\n\n                }.bind(this));\n\n            } else {\n\n                events.forEach(function(event) {\n                    var range;\n                    var start = event.start;\n                    var end = event.end;\n                    var ranges = group.slotRanges(event, true);\n                    var rangeCount = ranges.length;\n\n                    for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                        range = ranges[rangeIndex];\n\n                        this._groupedView._positionEvent(event, group, range, rangeCount, start, end, rangeIndex);\n                    }\n\n                }.bind(this));\n\n                if (this._canAdjustSlotHeight === true) {\n                    this._adjustSlotHeight(group);\n                }\n\n            }\n        },\n\n        _renderGroups: function(events, resources, offset, columnLevel, parentValue) {\n            var resource = resources[0];\n\n            if (resource) {\n                var view = resource.dataSource.view();\n\n                view = view.filter(function(item) {\n                    var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                    return itemParentValue === null || itemParentValue === undefined || itemParentValue === parentValue;\n                });\n\n                for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                    var value = this._resourceValue(resource, view[itemIdx]);\n\n                    var tmp = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                    if (resources.length > 1) {\n                        offset = this._renderGroups(tmp, resources.slice(1), offset++, columnLevel + 1, value);\n                    } else {\n                        this._renderEvents(tmp, offset++);\n                    }\n                }\n            }\n            return offset;\n        },\n\n        _groupCount: function() {\n            var resources = this.groupedResources;\n            var groupedView = this._groupedView;\n\n            if (resources.length) {\n                if (this._isVerticallyGrouped()) {\n                    return groupedView._verticalGroupCount(resources.length - 1);\n                } else {\n                    return groupedView._horizontalGroupCount(resources.length);\n                }\n            }\n            return 1;\n        },\n\n        _columnOffsetForResource: function(index) {\n            return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n        },\n\n        destroy: function() {\n            if (this.table) {\n                this.table.removeClass(\"k-scheduler-monthview\");\n            }\n\n            if (this.content) {\n                this.content.off(NS);\n            }\n\n            if (this.element) {\n                this.element.off(NS);\n            }\n\n            SchedulerView.fn.destroy.call(this);\n\n            if (this._isMobile() && this.options.editable) {\n                if (this.options.editable.create !== false) {\n                    this._addUserEvents.destroy();\n                }\n            }\n        },\n\n        events: [\"remove\", \"add\", \"edit\", \"navigate\"],\n\n        options: {\n            title: \"Month\",\n            name: \"month\",\n            eventHeight: 25,\n            moreButtonHeight: 13,\n            editable: true,\n            selectedDateFormat: \"{0:y}\",\n            selectedShortDateFormat: \"{0:y}\",\n            selectedMobileDateFormat: \"{0:MMMM}\",\n            groupHeaderTemplate: ({ text }) => text,\n            dayTemplate: DAY_TEMPLATE,\n            eventTemplate: EVENT_TEMPLATE,\n            eventsPerDay: 2,\n            adaptiveSlotHeight: false,\n            eventSpacing: 3,\n            ongoingEvents: {\n                cssClass: null,\n                enabled: true,\n                updateInterval: 60000\n            }\n        }\n    });\n\n\n    function shiftArray(array, idx) {\n        return array.slice(idx).concat(array.slice(0, idx));\n    }\n\n    function firstVisibleMonthDay(date, calendarInfo) {\n        var firstDay = calendarInfo.firstDay,\n            firstVisibleDay = new Date(date.getFullYear(), date.getMonth(), 0, date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n\n        while (firstVisibleDay.getDay() != firstDay) {\n            kendo.date.setTime(firstVisibleDay, -1 * MS_PER_DAY);\n        }\n\n        return firstVisibleDay;\n    }\n\n    function isInDateRange(value, min, max) {\n        var msMin = min,\n            msMax = max,\n            msValue;\n\n        msValue = value;\n\n        return msValue >= msMin && msValue <= msMax;\n    }\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}