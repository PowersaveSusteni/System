{"version":3,"file":"kendo.pivot.configurator.js","names":["ConfiguratorNavigation","PIVOT_CONFIGURATOR_ACTION","configuratorReducer","fetchDiscover","__meta__","id","name","category","depends","hidden","$","kendo","window","ui","encode","htmlEncode","Widget","ns","HOVER_EVENTS","SETTING_CONTAINER_TEMPLATE","addKPI","data","found","idx","length","type","splice","caption","defaultHierarchy","uniqueName","kpiNode","node","normalizeKPIs","settingTargetFromNode","target","closest","PivotConfiguratorV2","extend","init","element","options","fn","call","this","_ariaId","attr","guid","addClass","role","_dataSource","navigatable","_initPivotGridConfiguratorNavigation","_layout","refresh","height","notify","events","orientation","filterable","sortable","messages","title","cancelButtonText","applyButtonText","measures","columns","rows","setDataSource","dataSource","that","configuratorNavigation","tabIndex","start","firstCell","first","setAttribute","_refreshHandler","unbind","_errorHandler","_progressHandler","_error","bind","_requestStart","PivotDataSourceV2","create","horizontal","panel","append","headerTextId","SETTINGS_TEMPLATE","appendTo","formClass","ariaId","CONTENT_TEMPLATE","find","each","index","elm","html","renderChipList","_fields","cancelText","applyText","ACTIONS_TEMPLATE","_targets","on","_actions","e","preventDefault","currentTarget","_applyState","read","_cancelChanges","treeView","last","targetItemTemplate","menuenabled","chip","renderChip","TARGET_ITEM_TEMPLATE","fillMode","themeColor","rounded","removable","removeIcon","actions","icon","_createTarget","template","connectWith","empty","fieldMenu","setting","forEach","x","PivotSettingTargetV2","hint","clone","remove","item","wrapper","dataItem","getByUid","checked","container","kendoTreeView","checkboxes","checkChildren","result","hasChildren","aggregator","local","uid","dataTextField","autoBind","check","sender","action","toggleSelection","payload","state","columnAxes","_state","rowAxes","measureAxes","cubeSchema","restoreMeasure","items","_checkMembers","trigger","_redraw","_treeViewDataSource","off","_clickHandler","HierarchicalDataSource","schema","model","transport","fields","dsMeasures","catalog","cube","fetchOptions","url","members","concat","isEmptyObject","dimensions","success","connection","restrictions","catalogName","cubeName","command","then","newFields","get","_getKPIOptions","buildKPImeasures","_loadFieldsCommand","newData","hash","field","dimensionUniqueName","hierarchyUniqueName","_progress","toggle","progress","destroy","fetch","plugin","PivotConfigurator","outerHeight","measuresLabel","columnsLabel","rowsLabel","fieldsLabel","PivotDataSource","kpi","schemaDimensions","done","cubeBuilder","fail","error","schemaKPIs","schemaMeasures","schemaLevels","schemaHierarchies","form","dragAndDrop","dragstart","sourceNode","measure","drag","status","dropTarget","validate","setStatusClass","drop","push","add","sortIcon","getIcons","PivotSettingTarget","emptyTemplate","columnsContainer","rowsContainer","measuresContainer","_toggleHover","toggleClass","_resize","_cube","_catalog","kpiMeasure","value","goal","trend","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","jQuery","kendo$1"],"sources":["kendo.pivot.configurator.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.dom.js';\nimport './kendo.html.chip.js';\nimport './kendo.html.chiplist.js';\nimport './kendo.treeview.js';\nimport './kendo.treeview.draganddrop.js';\nimport './kendo.icons.js';\nimport { H as ConfiguratorNavigation, I as PIVOT_CONFIGURATOR_ACTION, u as configuratorReducer, h as fetchDiscover } from './kendo.pivotgrid-common.cmn.chunk.js';\n\nconst __meta__ = {\n    id: \"pivot.configurator\",\n    name: \"PivotConfigurator\",\n    category: \"web\",\n    depends: [\"dropdownlist\", \"treeview\", \"treeview.draganddrop\", \"pivot.fieldmenu\", \"html.chip\", \"html.chiplist\", \"icons\", \"pivotgrid-common.cmn.chunk\"],\n    hidden: true\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        Widget = ui.Widget,\n        ns = \".kendoPivotConfigurator\",\n        HOVER_EVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n        SETTINGS_TEMPLATE = ({ title, headerTextId }) => '<div class=\"k-pivotgrid-configurator-header\">' +\n                                            `<div class=\"k-pivotgrid-configurator-header-text\" id=\"${headerTextId}\">${encode(title)}</div>` +\n                                          '</div>',\n        CONTENT_TEMPLATE = ({ formClass, horizontal, ariaId }) => '<div class=\"k-pivotgrid-configurator-content\">' +\n            `<form class=\"${encode(formClass)}\">` +\n                `${horizontal ? '<div class=\"k-form-field-wrapper\">' : ''}` +\n                '<div class=\"k-form-field\">' +\n                    `<label class=\"k-label\" id=\"${ariaId}-configurator-fields\">Fields</label>` +\n                '</div>' +\n                '<div class=\"k-form-field\">' +\n                  '<div class=\"k-fields-list-wrapper\"></div>' +\n                '</div>' +\n                `${horizontal ? '</div><div class=\"k-form-field-wrapper\">' : ''}` +\n                '<div class=\"k-form-field\">' +\n                    `<label class=\"k-label\" id=\"${ariaId}-configurator-columns\">Columns</label>` +\n                '</div>' +\n                '<div class=\"k-chip-list k-column-fields\"></div>' +\n                '<div class=\"k-form-field\">' +\n                    `<label class=\"k-label\" id=\"${ariaId}-configurator-rows\">Rows</label>` +\n                '</div>' +\n                '<div class=\"k-chip-list k-row-fields\"></div>' +\n                `${horizontal ? '</div><div class=\"k-form-field-wrapper\">' : ''}` +\n                '<div class=\"k-form-field\">' +\n                    `<label class=\"k-label\" id=\"${ariaId}-configurator-values\">Values</label>` +\n                '</div>' +\n                '<div class=\"k-chip-list k-column-fields\"></div>' +\n                `${horizontal ? '</div>' : ''}` +\n            '</form>' +\n        '</div>',\n        TARGET_ITEM_TEMPLATE = ({ name }) => '<span>' +\n                `<span class=\"k-chip-label\">${encode(name)}</span>` +\n            '</span>',\n        ACTIONS_TEMPLATE = ({ cancelText, applyText }) =>\n                '<div class=\"k-pivotgrid-configurator-actions k-actions k-hstack k-justify-content-end\">' +\n                  '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" aria-disabled=\"false\">' +\n                    `<span class=\"k-button-text\">${encode(cancelText)}</span>` +\n                  '</button>' +\n                  '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary\" aria-disabled=\"false\">' +\n                    `<span class=\"k-button-text\">${encode(applyText)}</span>` +\n                  '</button>' +\n                '</div>',\n        SETTING_CONTAINER_TEMPLATE = ({ name }) => `<div class=\"k-pivotgrid-target k-pivotgrid-configurator-section\"><strong>${encode(name)}</strong><div class=\"k-pivotgrid-target-wrap\"></div>`;\n\n    function addKPI(data) {\n        var found;\n        var idx = 0;\n        var length = data.length;\n\n        for (; idx < length; idx++) {\n            if (data[idx].type == 2) {\n                found = true;\n                break;\n            }\n        }\n\n        if (found) {\n            data.splice(idx + 1, 0, {\n                caption: \"KPIs\",\n                defaultHierarchy: \"[KPIs]\",\n                name: \"KPIs\",\n                uniqueName: \"[KPIs]\"\n            });\n        }\n    }\n\n    function kpiNode(node) {\n        return {\n            name: node.uniqueName,\n            type: node.type\n        };\n    }\n\n    function normalizeKPIs(data) {\n        for (var idx = 0, length = data.length; idx < length; idx++) {\n            data[idx].uniqueName = data[idx].name;\n            data[idx].type = \"kpi\";\n        }\n\n        return data;\n    }\n\n    function settingTargetFromNode(node) {\n        var target = $(node).closest(\".k-pivot-setting\");\n\n        if (target.length) {\n            return target.data(\"kendoPivotSettingTarget\");\n        }\n        return null;\n    }\n\n    function getIcons(sortIcon, options) {\n        var sortable = options.sortable;\n        var result = '';\n\n        if (sortable) {\n            result += sortIcon ? `<span class=\"k-chip-action k-chip-more-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n        }\n\n        if (options.filterable || sortable) {\n            result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n        }\n\n        result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n\n        return result;\n    }\n\n    var PivotConfiguratorV2 = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this._ariaId = this.element.attr(\"id\") || kendo.guid();\n            this.element.addClass(\"k-pivotgrid-configurator\");\n            this.element.attr({\n                \"role\": \"dialog\",\n                \"aria-hidden\": true,\n                \"aria-labelledby\": `${this._ariaId}-configurator-header`\n            });\n\n            this._dataSource();\n\n            if (this.options.navigatable) {\n                this._initPivotGridConfiguratorNavigation();\n            }\n\n            this._layout();\n\n            this.refresh();\n\n            if (options.height) {\n                this.element.height(options.height);\n            }\n\n            kendo.notify(this);\n        },\n\n        events: [],\n\n        options: {\n            name: \"PivotConfiguratorV2\",\n            orientation: \"vertical\",\n            filterable: false,\n            sortable: false,\n            messages: {\n                title: \"Settings\",\n                cancelButtonText: \"Cancel\",\n                applyButtonText: \"Apply\",\n                measures: \"Select some fields to begin setup\",\n                columns: \"Select some fields to begin setup\",\n                rows: \"Select some fields to begin setup\"\n            }\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measures) {\n                this.measures.setDataSource(dataSource);\n            }\n\n            if (this.rows) {\n                this.rows.setDataSource(dataSource);\n            }\n\n            if (this.columns) {\n                this.columns.setDataSource(dataSource);\n            }\n\n            this.refresh();\n        },\n\n        _initPivotGridConfiguratorNavigation: function() {\n            var that = this;\n            that.configuratorNavigation = new ConfiguratorNavigation({ tabIndex: 0 });\n            that.configuratorNavigation.start(that.element[0]);\n\n            const firstCell = that.configuratorNavigation.first;\n\n            if (firstCell) {\n                firstCell.setAttribute('tabindex', '0');\n            }\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler)\n                               .unbind(\"error\", that._errorHandler)\n                               .unbind(\"progress\", that._progressHandler);\n            } else {\n                that._errorHandler = that._error.bind(that);\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(that.options.dataSource);\n            that.dataSource.bind(\"change\", that._refreshHandler)\n                           .bind(\"error\", that._errorHandler)\n                           .bind(\"progress\", that._progressHandler);\n        },\n\n        _layout: function() {\n\n            var that = this;\n            var options = that.options;\n            var messages = options.messages;\n            var horizontal = options.orientation == \"horizontal\";\n\n            var panel = $(\"<div class='k-pivotgrid-configurator-panel k-pivotgrid-configurator-push'></div>\");\n\n            panel.addClass(horizontal ? \"k-pivotgrid-configurator-horizontal\" : \"k-pivotgrid-configurator-vertical\");\n\n            that.element.append(panel);\n\n            that.panel = panel;\n\n            $(SETTINGS_TEMPLATE({ title: this.options.messages.title, headerTextId: `${that._ariaId}-configurator-header` })).appendTo(that.panel);\n\n            $(CONTENT_TEMPLATE({ formClass: horizontal ? \"k-form k-form-md k-form-horizontal\" : \"k-form k-form-md\", filterable: options.filterable, horizontal: horizontal, ariaId: that._ariaId }))\n                .appendTo(that.panel).find(\".k-chip-list\")\n                .each(function(index, elm) {\n                    kendo.html.renderChipList(elm, $.extend({}, options));\n                    $(elm).attr({\n                        \"role\": \"listbox\",\n                        \"aria-orientation\": \"horizontal\",\n                    });\n                });\n\n            that._fields();\n            $(ACTIONS_TEMPLATE({ cancelText: messages.cancelButtonText, applyText: messages.applyButtonText })).appendTo(that.panel);\n            that._targets();\n\n            that.element.on(\"click\" + ns, \".k-pivotgrid-configurator-actions > button\", that._actions.bind(that));\n        },\n\n        _actions: function(e) {\n            e.preventDefault();\n\n            var target = $(e.currentTarget).closest(\":not(path,svg)\");\n            if (target.index()) {\n                this.columns._applyState();\n                this.rows._applyState();\n                this.measures._applyState();\n                this.dataSource.read();\n            } else {\n                this.columns._cancelChanges();\n                this.rows._cancelChanges();\n                this.measures._cancelChanges();\n                this.treeView.dataSource.read();\n            }\n        },\n\n        _targets: function() {\n            var that = this;\n            var columns = that.panel.find(\".k-column-fields\").first();\n            var rows = that.panel.find(\".k-row-fields\");\n            var measures = that.panel.find(\".k-chip-list\").last();\n            var options = this.options;\n\n            var targetItemTemplate = ({ name, menuenabled }) => {\n                    var chip = kendo.html.renderChip(TARGET_ITEM_TEMPLATE({ name, menuenabled }), $.extend({}, options, {\n                        fillMode: \"solid\",\n                        themeColor: \"base\",\n                        rounded: \"md\",\n                        removable: true,\n                        removeIcon: \"x-circle\",\n                        actions: menuenabled ? [\n                            { icon: \"more-vertical\" }\n                        ] : null\n                    }));\n\n                    return chip;\n                };\n\n            this.columns = this._createTarget(columns, {\n                navigatable: options.navigatable,\n                filterable: options.filterable,\n                sortable: options.sortable,\n                template: targetItemTemplate,\n                connectWith: rows,\n                messages: {\n                    empty: options.messages.columns,\n                    fieldMenu: this.options.messages.fieldMenu\n                },\n                configuratorNavigation: that.configuratorNavigation\n            });\n            this.columns.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-columns`);\n\n            this.rows = this._createTarget(rows, {\n                navigatable: options.navigatable,\n                filterable: options.filterable,\n                sortable: options.sortable,\n                template: targetItemTemplate,\n                setting: \"rows\",\n                connectWith: columns,\n                messages: {\n                    empty: this.options.messages.rows,\n                    fieldMenu: this.options.messages.fieldMenu\n                },\n                configuratorNavigation: that.configuratorNavigation\n            });\n            this.rows.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-rows`);\n\n            this.measures = this._createTarget(measures, {\n                navigatable: options.navigatable,\n                filterable: false,\n                sortable: false,\n                setting: \"measures\",\n                template: targetItemTemplate,\n                messages: {\n                    empty: options.messages.measures,\n                    fieldMenu: this.options.messages.fieldMenu\n                },\n                configuratorNavigation: that.configuratorNavigation\n            });\n\n            this.measures.element.attr(\"aria-labelledby\", `${this._ariaId}-configurator-header ${this._ariaId}-configurator-values`);\n\n            [this.columns, this.rows, this.measures].forEach(x=> x.element.find(\".k-chip\").attr(\"role\", \"option\"));\n        },\n\n        _createTarget: function(element, options) {\n            var that = this;\n            return new kendo.ui.PivotSettingTargetV2(element, $.extend({\n                dataSource: this.dataSource,\n                hint: function(element) {\n                    return element.clone();\n                },\n                remove: function(e) {\n                    var item = that.treeView.wrapper\n                        .find(\"[data-name='\" + e.name + \"']\")\n                        .closest(\"li\");\n                    var id = item.attr(kendo.attr(\"uid\"));\n                    var dataItem = that.treeView.dataSource.getByUid(id);\n\n                    if (dataItem) {\n                        dataItem.checked = false;\n                        item.find(\"input\").attr(\"checked\", false);\n                    }\n                },\n                template: options.template\n            }, options));\n        },\n\n        _fields: function() {\n            var that = this;\n            var container = that.element.find(\".k-fields-list-wrapper\");\n\n            this.treeView = $(`<div aria-labelledby=\"${this._ariaId}-configurator-header ${this._ariaId}-configurator-fields\" />`).appendTo(container)\n                .kendoTreeView({\n                    checkboxes: {\n                        checkChildren: true,\n                        template: ({ item }) => {\n                            var result = '';\n\n                            if ((item.hasChildren || item.aggregator || item.local) && item.uniqueName !== \"[KPIs]\" && item.uniqueName !== \"[Measures]\" && item.uniqueName !== \"Measures\") {\n                                result += `<input type=\"checkbox\" data-name=\"${encode(item.uniqueName)}\" ${item.checked ? \"checked\" : \"\"} class=\"k-checkbox k-checkbox-md k-rounded-md\" id=\"${encode(item.uid)}\" tabindex=\"-1\">`;\n                            }\n\n                            return result;\n                        }\n                    },\n                    dataTextField: \"caption\",\n                    autoBind: false,\n                    check: function(e) {\n                      var dataItem = e.sender.dataItem(e.node);\n                      var action = {\n                        type: PIVOT_CONFIGURATOR_ACTION.toggleSelection,\n                        payload: dataItem\n                      };\n                      var state = {\n                        columnAxes: that.columns._state(),\n                        rowAxes: that.rows._state(),\n                        measureAxes: that.measures._state()\n                      };\n                      var result = configuratorReducer(state, action);\n\n                      if (that.dataSource.cubeSchema && result.measureAxes && result.measureAxes.length &&\n                        result.measureAxes.length > state.measureAxes.length) {\n                          that.dataSource.cubeSchema.restoreMeasure(result.measureAxes, dataItem);\n                      }\n\n                      if (dataItem.defaultHierarchy && dataItem.items && dataItem.items.length) {\n                          that._checkMembers([{ name: dataItem.defaultHierarchy }], dataItem.items);\n                          dataItem.items.trigger(\"change\");\n                      }\n\n                      if (result.columnAxes) {\n                          that.columns._state(result.columnAxes);\n                          that.columns._redraw();\n                      }\n                      if (result.rowAxes) {\n                          that.rows._state(result.rowAxes);\n                          that.rows._redraw();\n                      }\n                      if (result.measureAxes) {\n                          that.measures._state(result.measureAxes);\n                          that.measures._redraw();\n                      }\n                    },\n                    dataSource: this._treeViewDataSource()\n                 })\n                .data(\"kendoTreeView\");\n\n            this.treeView.wrapper.off(\"click\", this.treeView._clickHandler);\n        },\n\n        _treeViewDataSource: function() {\n            var that = this;\n\n            return kendo.data.HierarchicalDataSource.create({\n                schema: {\n                    model: {\n                        id: \"uniqueName\",\n                        hasChildren: function(item) {\n                            if (that.dataSource.cubeSchema && item.uniqueName !== \"Measures\") {\n                                item.local = true;\n                                return false;\n                            }\n                            return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                        }\n                    }\n                },\n                transport: {\n                    read: function(options) {\n                        var node;\n                        var transport = that.dataSource.transport;\n                        var catalog = transport.catalog();\n                        var cube = transport.cube();\n                        var fetchOptions = {\n                            url: transport.options.read\n                        };\n                        var columns = that.columns._state();\n                        var rows = that.rows._state();\n                        var measures = that.measures._state();\n                        var members = columns.concat(rows).concat(measures);\n                        var fields;\n                        var dsMeasures;\n                        var fetchOpts;\n\n                        if ($.isEmptyObject(options.data)) {\n                            if (that.dataSource.cubeSchema) {\n                                fields = that.dataSource.cubeSchema.dimensions();\n                                that._checkMembers(members, fields);\n                                options.success(fields);\n                            } else {\n                                fetchOpts = {\n                                    connection: {\n                                        catalog: catalog,\n                                        cube: cube\n                                    },\n                                    restrictions: {\n                                        catalogName: catalog,\n                                        cubeName: cube\n                                    },\n                                    command: 'schemaDimensions'\n                                };\n\n                                fetchDiscover(fetchOptions, fetchOpts)\n                                    .then(function(newFields) {\n                                        that._checkMembers(members, newFields);\n                                        addKPI(newFields);\n                                        options.success(newFields);\n                                     });\n                            }\n                        } else {\n                            //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                            node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                            if (that.dataSource.cubeSchema) {\n                                dsMeasures = that.dataSource.measures();\n                                that._checkMembers(members, dsMeasures);\n                                options.success(dsMeasures);\n                            } else {\n                                if (node.uniqueName === \"[KPIs]\") {\n                                    fetchDiscover(fetchOptions, that._getKPIOptions(catalog, cube))\n                                    .then(function(newFields) {\n                                        options.success(normalizeKPIs(newFields));\n                                    });\n                                } else if (node.type == \"kpi\") {\n                                    options.success(buildKPImeasures(node));\n                                } else {\n                                    fetchDiscover(fetchOptions ,that._loadFieldsCommand(node, catalog, cube))\n                                    .then(function(newFields) {\n                                        that._checkMembers(members, newFields);\n                                        options.success(newFields);\n                                    });\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        },\n\n        _checkMembers: function(members, newData) {\n            var hash = {};\n            var index = 0;\n\n            for (index = 0; index < members.length; index++) {\n                hash[members[index].name] = true;\n            }\n\n            for (index = 0; index < newData.length; index++) {\n                if (hash[newData[index].uniqueName]) {\n                    newData[index].checked = true;\n                }\n            }\n        },\n\n        _getKPIOptions: function(catalog, cube) {\n            return {\n                connection: {\n                    catalog: catalog,\n                    cube: cube\n                },\n                restrictions: {\n                    catalogName: catalog,\n                    cubeName: cube\n                },\n                command: 'schemaKPIs'\n            };\n        },\n\n        _loadFieldsCommand: function(field, catalog, cube) {\n            var command;\n            var dimensionUniqueName;\n            var hierarchyUniqueName;\n\n            if (field.type === 2) {\n                command = 'schemaMeasures';\n            } else if (field.dimensionUniqueName) {\n                command = 'schemaLevels';\n                hierarchyUniqueName = field.uniqueName;\n            } else {\n                command = 'schemaHierarchies';\n                dimensionUniqueName = field.uniqueName;\n            }\n\n            var options = {\n                connection: {\n                    catalog: catalog,\n                    cube: cube\n                },\n                restrictions: {\n                    catalogName: catalog,\n                    cubeName: cube,\n                    hierarchyUniqueName: hierarchyUniqueName,\n                    dimensionUniqueName: dimensionUniqueName\n                },\n                command: command\n            };\n\n            return options;\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.element, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(\"change\", this._refreshHandler);\n\n            this.element.off(ns);\n\n            this.rows.destroy();\n            this.columns.destroy();\n            this.measures.destroy();\n            this.treeView.destroy();\n\n            this.element = null;\n            this._refreshHandler = null;\n        },\n\n        refresh: function() {\n            if (this.treeView) {\n                this.treeView.dataSource.fetch();\n            }\n\n            this._progress(false);\n        }\n\n    });\n\n    ui.plugin(PivotConfiguratorV2);\n\n    var PivotConfigurator = Widget.extend({\n        init: function(element, options) {\n            Widget.fn.init.call(this, element, options);\n\n            this.element.addClass(\"k-pivotgrid-configurator-panel kendo-jquery\");\n\n            if (this.options.height) {\n                this.element.outerHeight(this.options.height);\n            }\n\n            this._dataSource();\n\n            this._layout();\n\n            this.refresh();\n\n            kendo.notify(this);\n        },\n\n        events: [],\n\n        options: {\n            name: \"PivotConfigurator\",\n            filterable: false,\n            sortable: false,\n            messages: {\n                measures: \"Drop Data Fields Here\",\n                columns: \"Drop Column Fields Here\",\n                rows: \"Drop Rows Fields Here\",\n                measuresLabel: \"Measures\",\n                columnsLabel: \"Columns\",\n                rowsLabel: \"Rows\",\n                fieldsLabel: \"Fields\"\n            }\n        },\n\n        _dataSource: function() {\n            var that = this;\n\n            if (that.dataSource && that._refreshHandler) {\n                that.dataSource.unbind(\"change\", that._refreshHandler)\n                               .unbind(\"error\", that._errorHandler)\n                               .unbind(\"progress\", that._progressHandler);\n            } else {\n                that._errorHandler = that._error.bind(that);\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSource.create(that.options.dataSource);\n            that.dataSource.bind(\"change\", that._refreshHandler)\n                           .bind(\"error\", that._errorHandler)\n                           .bind(\"progress\", that._progressHandler);\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measures) {\n                this.measures.setDataSource(dataSource);\n            }\n\n            if (this.rows) {\n                this.rows.setDataSource(dataSource);\n            }\n\n            if (this.columns) {\n                this.columns.setDataSource(dataSource);\n            }\n\n            this.refresh();\n        },\n\n        _treeViewDataSource: function() {\n            var that = this;\n\n            return kendo.data.HierarchicalDataSource.create({\n                schema: {\n                    model: {\n                        id: \"uniqueName\",\n                        hasChildren: function(item) {\n                            return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                        }\n                    }\n                },\n                transport: {\n                    read: function(options) {\n                        var promise;\n                        var node;\n                        var kpi;\n\n                        if ($.isEmptyObject(options.data)) {\n                            promise = that.dataSource.schemaDimensions();\n\n                            promise.done(function(data) {\n                                        if (!that.dataSource.cubeBuilder) {\n                                            addKPI(data);\n                                        }\n                                        options.success(data);\n                                    })\n                                    .fail(options.error);\n                        } else {\n                            //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                            node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                            if (node.uniqueName === \"[KPIs]\") {\n                                kpi = true;\n                                promise = that.dataSource.schemaKPIs();\n                                promise.done(function(data) {\n                                            options.success(normalizeKPIs(data));\n                                       })\n                                       .fail(options.error);\n                            } else if (node.type == \"kpi\") {\n                                kpi = true;\n                                options.success(buildKPImeasures(node));\n                            }\n\n                            if (!kpi) {\n                                if (node.type == 2) { //measure\n                                    promise = that.dataSource.schemaMeasures();\n                                } else if (node.dimensionUniqueName) { // hierarchy\n                                    promise = that.dataSource.schemaLevels(options.data.uniqueName);\n                                } else { // dimension\n                                    promise = that.dataSource.schemaHierarchies(options.data.uniqueName);\n                                }\n\n                                promise.done(options.success)\n                                        .fail(options.error);\n                            }\n                        }\n                    }\n                }\n            });\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.element, toggle);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _layout: function() {\n            $('<div class=\"k-pivotgrid-configurator\"><div class=\"k-pivotgrid-configurator-content\"></div></div>').appendTo(this.element);\n            this.form = this.element.find('.k-pivotgrid-configurator-content');\n\n            this._fields();\n            this._targets();\n        },\n\n        _fields: function() {\n            var container = $('<div class=\"k-pivotgrid-fields k-pivotgrid-configurator-section\"><strong>' + encode(this.options.messages.fieldsLabel) + '</strong><div class=\"k-fields-list-wrapper\"></div></div>').appendTo(this.form);\n\n            var template = ({ item }) => {\n                var result = '';\n\n                if (item.type == 2 || item.uniqueName == \"[KPIs]\") {\n                    result += kendo.ui.icon(item.type == 2 ? \"sum\" : \"caret-alt-expand\"/* \"kpi\" */);\n                } else if (item.type && item.type !== \"kpi\") {\n                    result += kendo.ui.icon(\"arrows-axes\");\n                }\n\n                result += `${encode(item.caption || item.name)}`;\n\n                return result;\n            };\n\n            this.treeView = $(\"<div/>\").appendTo(container.find('.k-fields-list-wrapper'))\n                .kendoTreeView({\n                    template: template,\n                    dataTextField: \"caption\",\n                    dragAndDrop: true,\n                    autoBind: false,\n                    dataSource: this._treeViewDataSource(),\n                    dragstart: function(e) {\n                        var dataItem = this.dataItem(e.sourceNode);\n\n                        if ((!dataItem.hasChildren && !dataItem.aggregator && !dataItem.measure) || (dataItem.type == 2) || dataItem.uniqueName === \"[KPIs]\") {\n                            e.preventDefault();\n                        }\n                    },\n                    drag: function(e) {\n                        var status = \"cancel\";\n                        var setting = settingTargetFromNode(e.dropTarget);\n\n                        if (setting && setting.validate(this.dataItem(e.sourceNode))) {\n                            status = \"plus\";\n                        }\n\n                        e.setStatusClass(status);\n                    },\n                    drop: function(e) {\n                        e.preventDefault();\n\n                        var setting = settingTargetFromNode(e.dropTarget);\n                        var node = this.dataItem(e.sourceNode);\n                        var idx, length, measures;\n                        var name;\n\n                        if (setting && setting.validate(node)) {\n                            name = node.defaultHierarchy || node.uniqueName;\n\n                            if (node.type === \"kpi\") {\n                                measures = buildKPImeasures(node);\n                                length = measures.length;\n                                name = [];\n\n                                for (idx = 0; idx < length; idx++) {\n                                    name.push(kpiNode(measures[idx]));\n                                }\n                            } else if (node.kpi) {\n                                name = [kpiNode(node)];\n                            }\n\n                            setting.add(name);\n                        }\n                    }\n                 })\n                .data(\"kendoTreeView\");\n        },\n\n        _createTarget: function(element, options) {\n            var template;\n\n            template = ({ name, sortIcon }) => ''\n                + `<div class=\"k-chip k-chip-md k-rounded-md k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${name}\">`\n                    + '<span class=\"k-chip-content\">'\n                        + `<span class=\"k-chip-label\">${name}</span>`\n                    + '</span>'\n                    + '<span class=\"k-chip-actions k-field-actions\">'\n                    + getIcons(sortIcon, options)\n                    + '</span>'\n                + '</div>';\n\n            return new kendo.ui.PivotSettingTarget(element, $.extend({\n                dataSource: this.dataSource,\n                template: template,\n                emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`\n            }, options));\n        },\n\n        _targets: function() {\n            var container = $('<div class=\"k-pivotgrid-targets\"/>').appendTo(this.form);\n\n            var columnsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.columnsLabel, icon: \"columns\" })).appendTo(container);\n            var columns = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(columnsContainer.find('.k-pivotgrid-target-wrap'));\n\n            var rowsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.rowsLabel, icon: \"rows\" })).appendTo(container);\n            var rows = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(rowsContainer.find('.k-pivotgrid-target-wrap'));\n\n            var measuresContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.measuresLabel, icon: \"sum\" })).appendTo(container);\n            var measures = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(measuresContainer.find('.k-pivotgrid-target-wrap'));\n\n            var options = this.options;\n\n            this.columns = this._createTarget(columns, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                connectWith: rows,\n                messages: {\n                    empty: options.messages.columns,\n                    fieldMenu: options.messages.fieldMenu\n                }\n            });\n\n            this.rows = this._createTarget(rows, {\n                filterable: options.filterable,\n                sortable: options.sortable,\n                setting: \"rows\",\n                connectWith: columns,\n                messages: {\n                    empty: this.options.messages.rows,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n\n            this.measures = this._createTarget(measures, {\n                setting: \"measures\",\n                messages: {\n                    empty: options.messages.measures\n                }\n            });\n\n            columns\n                .add(rows)\n                .add(measures)\n                .on(HOVER_EVENTS, \".k-item:not(.k-empty)\", this._toggleHover);\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).closest(\":not(path,svg)\").toggleClass(\"k-hover\", e.type === \"mouseenter\");\n        },\n\n        _resize: function() {\n            var element = this.element;\n            var height = this.options.height;\n\n            if (!height) {\n                return;\n            }\n\n            element.outerHeight(height);\n        },\n\n        refresh: function() {\n            var dataSource = this.dataSource;\n\n            if (dataSource.cubeBuilder || this._cube !== dataSource.cube() || this._catalog !== dataSource.catalog()) {\n                this.treeView.dataSource.fetch();\n            }\n\n            this._catalog = this.dataSource.catalog();\n            this._cube = this.dataSource.cube();\n\n            this._resize();\n\n            this._progress(false);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(\"change\", this._refreshHandler);\n\n            this.form.find(\".k-pivot-setting\").off(ns);\n\n            this.rows.destroy();\n            this.columns.destroy();\n            this.measures.destroy();\n            this.treeView.destroy();\n\n            this.element = null;\n            this._refreshHandler = null;\n        }\n    });\n\n    function kpiMeasure(name, measure, type) {\n        return {\n            hierarchyUniqueName: name,\n            uniqueName: measure,\n            caption: measure,\n            measure: measure,\n            name: measure,\n            type: type,\n            kpi: true\n        };\n    }\n\n    function buildKPImeasures(node) {\n        var name = node.name;\n        return [\n            kpiMeasure(name, node.value, \"value\"),\n            kpiMeasure(name, node.goal, \"goal\"),\n            kpiMeasure(name, node.status, \"status\"),\n            kpiMeasure(name, node.trend, \"trend\")\n        ];\n    }\n\n    kendo.cssProperties.registerPrefix(\"HTMLChip\", \"k-chip-\");\n\n    kendo.cssProperties.registerValues(\"HTMLChip\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['md', 'md']])\n    }]);\n\n    ui.plugin(PivotConfigurator);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}