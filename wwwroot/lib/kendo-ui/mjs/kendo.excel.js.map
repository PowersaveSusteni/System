{"version":3,"file":"kendo.excel.js","names":["ExcelExporter","TemplateService","$","kendo","extend","convertedExporter","ConvertClass","register","compile","template","Class","init","options","this","dataSource","data","DataSource","filter","undefined","constructor","page","allPages","pageSize","groupPaging","total","sort","group","aggregate","isExcelExportRequest","length","hierarchy","i","expanded","shouldRestoreExpandedState","_data","transport","_isServerGrouped","create","_hierarchy","level","itemLevel","item","view","depth","idx","_restoreExpandedState","workbook","Deferred","d","fetch","then","groups","aggregates","resolve","bind","promise","window","excel","jQuery","ExcelMixin","proto","events","push","saveAsExcel","proxyURL","filterable","fileName","collapsible","deferred","exporter","columns","book","trigger","ooxml","Workbook","skipCustomHeight","toDataURLAsync","dataURI","saveAs","forceProxy","__meta__","id","name","category","advanced","mixin","depends"],"sources":["kendo.excel.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.core.js';\nimport './kendo.data.js';\nimport { E as ExcelExporter, T as TemplateService } from './kendo.ooxml.cmn.chunk.js';\nimport './kendo.ooxml.js';\n\n(function($, kendo) {\n\n    var extend = $.extend;\n    let convertedExporter = kendo.ConvertClass(ExcelExporter);\n\n    TemplateService.register({\n        compile: kendo.template\n    });\n\n    kendo.ExcelExporter = kendo.Class.extend({\n        init: function(options) {\n            this.options = options;\n            var dataSource = options.dataSource;\n\n            if (dataSource instanceof kendo.data.DataSource) {\n\n                if (!dataSource.filter()) {\n                    dataSource.options.filter = undefined;\n                }\n\n                this.dataSource = new dataSource.constructor(extend(\n                    {},\n                    dataSource.options,\n                    {\n                        page: options.allPages ? 0 : dataSource.page(),\n                        filter: dataSource.filter(),\n                        pageSize: (options.allPages || options.groupPaging) ? dataSource.total() : dataSource.pageSize() || dataSource.total(),\n                        sort: dataSource.sort(),\n                        group: dataSource.group(),\n                        aggregate: dataSource.aggregate(),\n                        isExcelExportRequest: true\n                    }));\n\n                var data = dataSource.data();\n\n                if (data.length > 0) {\n                    if (options.hierarchy) {\n                        for (var i = 0; i < data.length; i++) {\n                            if (data[i].expanded === false || data[i].expanded === undefined) {\n                                data[i].expanded = true;\n                                data[i].shouldRestoreExpandedState = true;\n                            }\n                        }\n                    }\n                    // Avoid toJSON() for perf and avoid data() to prevent reparenting.\n                    this.dataSource._data = data;\n\n                    var transport = this.dataSource.transport;\n                    if (dataSource._isServerGrouped() && transport.options && transport.options.data) { // clear the transport data when using aspnet-mvc transport\n                        transport.options.data = null;\n                    }\n                }\n\n            } else {\n                this.dataSource = kendo.data.DataSource.create(dataSource);\n            }\n        },\n\n        _hierarchy: function() {\n            var hierarchy = this.options.hierarchy;\n            var dataSource = this.dataSource;\n\n            if (hierarchy && dataSource.level) {\n                hierarchy = {\n                    itemLevel: function(item) {\n                        return dataSource.level(item);\n                    }\n                };\n\n                var view = dataSource.view();\n                var depth = 0;\n                var level;\n\n                for (var idx = 0; idx < view.length; idx++) {\n                    level = dataSource.level(view[idx]);\n\n                    if (level > depth) {\n                        depth = level;\n                    }\n                }\n\n                hierarchy.depth = depth + 1;\n            } else {\n                hierarchy = false;\n            }\n\n            return {\n                hierarchy: hierarchy\n            };\n        },\n\n        _restoreExpandedState: function() {\n            var options = this.options,\n                dataSource = options.dataSource,\n                data = dataSource.data(),\n                hierarchy = options.hierarchy;\n\n            if (data.length > 0) {\n                if (hierarchy) {\n                    for (var i = 0; i < data.length; i++) {\n                        if (data[i].shouldRestoreExpandedState) {\n                            data[i].expanded = false;\n                            delete data[i].shouldRestoreExpandedState;\n                        }\n                    }\n                }\n            }\n        },\n\n        workbook: function() {\n            return $.Deferred((function(d) {\n                this.dataSource.fetch()\n                    .then((function() {\n\n                        var workbook = new convertedExporter(extend({}, this.options, this._hierarchy(), {\n                            data: this.dataSource.view(),\n                            groups: this.dataSource.group(),\n                            aggregates: this.dataSource.aggregates()\n                        })).workbook();\n\n                        d.resolve(workbook, this.dataSource.view());\n                    }).bind(this));\n            }).bind(this)).promise();\n        }\n    });\n\n    window.kendo.excel = window.kendo.excel || {};\n    window.kendo.excel.ExcelExporter = convertedExporter;\n    window.kendo.excel.TemplateService = TemplateService;\n\n})(kendo.jQuery, kendo);\n\n(function($, kendo) {\n\n\nkendo.ExcelMixin = {\n    extend: function(proto) {\n       proto.events.push(\"excelExport\");\n       proto.options.excel = $.extend(proto.options.excel, this.options);\n       proto.saveAsExcel = this.saveAsExcel;\n    },\n    options: {\n        proxyURL: \"\",\n        allPages: false,\n        filterable: false,\n        fileName: \"Export.xlsx\",\n        collapsible: false\n    },\n    saveAsExcel: function(deferred) {\n        var excel = this.options.excel || {};\n\n        var exporter = new kendo.ExcelExporter({\n            columns: this.columns,\n            dataSource: this.dataSource,\n            allPages: excel.allPages,\n            filterable: excel.filterable,\n            hierarchy: excel.hierarchy,\n            collapsible: excel.collapsible\n        });\n\n        exporter.workbook().then((function(book, data) {\n            if (!this.trigger(\"excelExport\", { workbook: book, data: data })) {\n                var workbook = new kendo.ooxml.Workbook(book);\n\n                if (!workbook.options) {\n                    workbook.options = {};\n                }\n                workbook.options.skipCustomHeight = true;\n\n                workbook.toDataURLAsync().then(function(dataURI) {\n                    kendo.saveAs({\n                        dataURI: dataURI,\n                        fileName: book.fileName || excel.fileName,\n                        proxyURL: excel.proxyURL,\n                        forceProxy: excel.forceProxy\n                    });\n\n                    if (exporter._restoreExpandedState) {\n                        exporter._restoreExpandedState();\n                    }\n\n                    if (deferred) {\n                        deferred.resolve();\n                    }\n                });\n            }\n        }).bind(this));\n    }\n};\n\n})(kendo.jQuery, kendo);\n\nconst __meta__ = {\n    id: \"excel\",\n    name: \"Excel export\",\n    category: \"framework\",\n    advanced: true,\n    mixin: true,\n    depends: [\"data\", \"ooxml\", \"ooxml.cmn.chunk\"]\n};\n\nexport { __meta__ };\n"]}