{"version":3,"file":"kendo.dataviz.stock.js","names":["NAVIGATOR_AXIS","NAVIGATOR_PANE","StockChart","InstanceObserver","defined","inArray","constants","Navigator","NavigatorHint","__meta__","id","name","category","description","depends","window","kendo","dataviz","Chart","ui","deepExtend","NAVIGATOR_AXIS$1","NAVIGATOR_PANE$1","CHANGE","StockChart$1","extend","options","dateField","axisDefaults","categoryAxis","type","baseUnit","justified","valueAxis","narrowRange","labels","format","navigator","select","seriesDefaults","markers","visible","tooltip","template","toString","line","width","hint","legend","persistSeriesVisibility","_createChart","themeOptions","this","_initNavigatorOptions","_instance","element","observer","showTooltip","hideTooltip","legendItemClick","render","init","drilldown","navigatorFilter","navigatorCreated","sender","rtl","_isRtl","navigatorOptions","support","isTouch","touch","isFirefox","browser","mozilla","autoBindElements","dataSource","partialRedraw","liveDrag","_initDataSource","userOptions","hasServerFiltering","serverFiltering","mainAxis","concat","hasSelect","from","to","filter","parseDate","dummyAxis","DateCategoryAxis","categories","buildFilter","range","min","fn","call","_onNavigatorCreated","e","_navigator","_initNavigatorDataSource","autoBind","dsOptions","_navigatorDataChangedHandler","_onNavigatorDataChanged","bind","_navigatorDataSource","data","DataSource","create","fetch","_bindNavigatorSeries","series","seriesIx","currentSeries","seriesLength","length","axis","_isBindable","axisIx","currentAxis","naviCategories","chart","instance","categoryAxes","axesLength","view","_sourceSeries","pane","_bindCategoryAxis","_model","redraw","setRange","_dataBound","redrawSlaves","_bindCategories","copyNavigatorCategories","_onDataChanged","setOptions","_removeNavigatorDataSource","destroyNavigator","_onNavigatorFilter","requiresHandlers","names","navigatorDataSource","unbind","destroy","field","operator","value","plugin","jQuery","kendo$1"],"sources":["kendo.dataviz.stock.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.core.js';\nimport './kendo.dataviz.chart.js';\nimport { N as NAVIGATOR_AXIS, x as NAVIGATOR_PANE, y as StockChart, I as InstanceObserver, e as defined, j as inArray, z as constants, E as Navigator, F as NavigatorHint } from './kendo.charts.cmn.chunk.js';\n\nconst __meta__ = {\n    id: \"dataviz.stockchart\",\n    name: \"StockChart\",\n    category: \"dataviz\",\n    description: \"StockChart widget and associated financial series.\",\n    depends: [\"dataviz.chart\", \"charts.cmn.chunk\"]\n};\n\n(function($) {\n    window.kendo.dataviz = window.kendo.dataviz || {};\n\n    var kendo = window.kendo;\n    var dataviz = kendo.dataviz;\n    var Chart = dataviz.ui.Chart;\n    var deepExtend = kendo.deepExtend;\n    var NAVIGATOR_AXIS$1 = NAVIGATOR_AXIS;\n    var NAVIGATOR_PANE$1 = NAVIGATOR_PANE;\n    var CHANGE = \"change\";\n\n    var StockChart$1 = Chart.extend({\n\n        options: {\n            name: \"StockChart\",\n            dateField: \"date\",\n            axisDefaults: {\n                categoryAxis: {\n                    type: \"date\",\n                    baseUnit: \"fit\",\n                    justified: true\n                },\n                valueAxis: {\n                    narrowRange: true,\n                    labels: {\n                        format: \"C\"\n                    }\n                }\n            },\n            navigator: {\n                select: {},\n                seriesDefaults: {\n                    markers: {\n                        visible: false\n                    },\n                    tooltip: {\n                        visible: true,\n                        template: ({ category }) => kendo.toString(category, 'd')\n                    },\n                    line: {\n                        width: 2\n                    }\n                },\n                hint: {},\n                visible: true\n            },\n            tooltip: {\n                visible: true\n            },\n            legend: {\n                visible: false\n            },\n            persistSeriesVisibility: true\n        },\n\n        _createChart: function(options, themeOptions) {\n            this._initNavigatorOptions(options);\n            this._instance = new StockChart(this.element[0], options, themeOptions, {\n                observer: new InstanceObserver(this, {\n                    showTooltip: '_showTooltip',\n                    hideTooltip: '_hideTooltip',\n                    legendItemClick: '_onLegendItemClick',\n                    render: '_onRender',\n                    init: '_onInit',\n                    drilldown: '_onDrilldown',\n                    navigatorFilter: '_onNavigatorFilter',\n                    navigatorCreated: '_onNavigatorCreated'\n                }),\n                sender: this,\n                rtl: this._isRtl()\n            });\n        },\n\n        _initNavigatorOptions: function(options) {\n            var navigatorOptions = options.navigator || {};\n            var support = kendo.support;\n            var isTouch = support.touch;\n            var isFirefox = support.browser.mozilla;\n\n            deepExtend(navigatorOptions, {\n                autoBindElements: !navigatorOptions.dataSource,\n                partialRedraw: navigatorOptions.dataSource,\n                liveDrag: !isTouch && !isFirefox\n            });\n        },\n\n        _initDataSource: function(userOptions) {\n            var options = userOptions || {},\n                dataSource = options.dataSource,\n                hasServerFiltering = dataSource && dataSource.serverFiltering,\n                mainAxis = [].concat(options.categoryAxis)[0],\n                naviOptions = options.navigator || {},\n                select = naviOptions.select,\n                hasSelect = select && select.from && select.to;\n\n            if (hasServerFiltering && hasSelect) {\n                var filter = [].concat(dataSource.filter || []);\n\n                var from = kendo.parseDate(select.from);\n                var to = kendo.parseDate(select.to);\n                var dummyAxis = new dataviz.DateCategoryAxis(deepExtend({\n                    baseUnit: \"fit\"\n                }, mainAxis, {\n                    categories: [from, to]\n                }), kendo);\n\n                dataSource.filter = buildFilter(dummyAxis.range().min, to).concat(filter);\n            }\n\n            Chart.fn._initDataSource.call(this, userOptions);\n        },\n\n        _onNavigatorCreated: function(e) {\n            this._instance = e.sender;\n            this.options = e.sender.options;\n            this._navigator = this.navigator = e.navigator;\n            this._initNavigatorDataSource();\n        },\n\n        _initNavigatorDataSource: function() {\n            var navigatorOptions = this.options.navigator;\n            var autoBind = navigatorOptions.autoBind;\n            var dsOptions = navigatorOptions.dataSource;\n\n            if (dsOptions) {\n                this._navigatorDataChangedHandler = this._navigatorDataChangedHandler || this._onNavigatorDataChanged.bind(this);\n                this._navigatorDataSource = kendo.data.DataSource\n                    .create(dsOptions)\n                    .bind(CHANGE, this._navigatorDataChangedHandler);\n\n                if (!defined(autoBind)) {\n                   autoBind = this.options.autoBind;\n                }\n\n                if (autoBind) {\n                    this._navigatorDataSource.fetch();\n                }\n            }\n        },\n\n        _bindNavigatorSeries: function(series, data) {\n            var seriesIx, currentSeries,\n                seriesLength = series.length;\n\n            for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                currentSeries = series[seriesIx];\n\n                if (currentSeries.axis == NAVIGATOR_AXIS$1 && this._isBindable(currentSeries)) {\n                    currentSeries.data = data;\n                }\n            }\n        },\n\n        _onNavigatorDataChanged: function() {\n            var chart = this,\n                instance = chart._instance,\n                categoryAxes = chart.options.categoryAxis,\n                axisIx,\n                axesLength = categoryAxes.length,\n                data = chart._navigatorDataSource.view(),\n                currentAxis,\n                naviCategories;\n\n            this._bindNavigatorSeries(chart.options.series, data);\n            if (chart._sourceSeries) {\n                this._bindNavigatorSeries(chart._sourceSeries, data);\n            }\n\n            for (axisIx = 0; axisIx < axesLength; axisIx++) {\n                currentAxis = categoryAxes[axisIx];\n\n                if (currentAxis.pane == NAVIGATOR_PANE$1) {\n                    if (currentAxis.name == NAVIGATOR_AXIS$1) {\n                        chart._bindCategoryAxis(currentAxis, data, axisIx);\n                        naviCategories = currentAxis.categories;\n                    } else {\n                        currentAxis.categories = naviCategories;\n                    }\n                }\n            }\n\n            if (instance._model) {\n                var navigator = this.navigator;\n                navigator.redraw();\n                navigator.setRange();\n\n                if (!chart.options.dataSource || (chart.options.dataSource && chart._dataBound)) {\n                    navigator.redrawSlaves();\n                }\n            }\n        },\n\n        _bindCategories: function() {\n            Chart.fn._bindCategories.call(this);\n            if (this._instance) {\n                this._instance.copyNavigatorCategories();\n            }\n        },\n\n        _onDataChanged: function() {\n            Chart.fn._onDataChanged.call(this);\n\n            this._dataBound = true;\n        },\n\n        setOptions: function(options) {\n            this._removeNavigatorDataSource();\n            this._initNavigatorOptions(options);\n            this._instance.destroyNavigator();\n            Chart.fn.setOptions.call(this, options);\n        },\n\n        _onNavigatorFilter: function(e) {\n            this.dataSource.filter(buildFilter(e.from, e.to));\n        },\n\n        requiresHandlers: function(names) {\n            if (inArray('navigatorFilter', names)) {\n                var dataSource = this.dataSource;\n                var hasServerFiltering = dataSource && dataSource.options.serverFiltering;\n                return hasServerFiltering && this.options.navigator.dataSource;\n            }\n\n            return Chart.fn.requiresHandlers.call(this, names);\n        },\n\n        _removeNavigatorDataSource: function() {\n            var navigatorDataSource = this._navigatorDataSource;\n            if (navigatorDataSource) {\n                navigatorDataSource.unbind(CHANGE, this._navigatorDataChangedHandler);\n                delete this._navigatorDataSource;\n            }\n        },\n\n        destroy: function() {\n            Chart.fn.destroy.call(this);\n            this._removeNavigatorDataSource();\n        }\n    });\n\n    kendo.deepExtend(kendo.dataviz, {\n        constants: constants,\n        Navigator: Navigator,\n        NavigatorHint: NavigatorHint,\n        StockChart: StockChart$1\n    });\n\n    dataviz.ui.plugin(StockChart$1);\n\n    function buildFilter(from, to) {\n        return [{\n            field: \"Date\", operator: \"gte\", value: from\n        }, {\n            field: \"Date\", operator: \"lt\", value: to\n        }];\n    }\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}