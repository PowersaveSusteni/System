{"version":3,"file":"kendo.dockmanager.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","Widget","ui","NS","extend","percentageUnitsRegex","DOCK_MANAGER_TOOLBAR","TOOLBAR_TEMPLATE","KSTATIC_PANE","KKPINNED_PANE","KKUNPINNED_PANE","KPANE_TABBED","SPLITTER","KSPLITBAR","HORIZONTAL","VERTICAL","KHIDDEN","KBUTTON","KPANE","KPANES_CONTAINER","KPANE_ACTIONS","KDOCK_INDICATOR","KDOCK_NAVIGATOR","KDOCK_PREVIEW","KSELECTED","KACTIVE","KTABSTRIP","SPLIT","TAB","HEIGHT","WIDTH","TOP","BOTTOM","LEFT","RIGHT","MIDDLE","CLICK","PIN","UNPIN","UNSHIFT","PANE","paneSelector","uid","attr","UID_ATTR","INDICATOR_ATTR","ACTION_ATTR","INDICATOR_TEMPLATE","NAVIGATOR_TEMPLATE","CLOSE","DOCK","INNER_DOCK","RESIZE","DRAG","DRAGSTART","DRAGEND","DockManager","init","element","options","that","this","fn","call","addClass","panesContainer","appendTo","_processPanes","rootPane","_refreshToolbar","_createPane","_bindEvents","_initNavigator","_initUnpinnedResizable","notify","events","type","orientation","panes","paneDefaults","visible","closeable","collapsed","size","actions","icon","shouldAdd","pane","unpinnable","unpinned","minimizable","maximizable","indicators","top","left","transform","previewTop","previewLeft","rotate","hoveredPaneHeight","draggedPaneHeight","hoveredPaneWidth","draggedPaneWidth","togglePane","_getPaneById","_togglePane","removePane","_removePane","getOptions","setOptions","currentOptions","deepExtend","destroy","empty","_unpinnedResizable","Resizable","unpinnedContainer","handle","resize","e","delta","x","containerWidth","width","on","_toolbarButtonClick","bind","_hideUnpinnedPanes","_pinPaneClick","_closePane","_displayDockPreview","_hideDockPreview","currentlyOpened","find","filter","unpinnedContainerVisible","is","_toolbar","removeClass","itemUid","currentTarget","preventDefault","_showUnpinnedPane","paneUid","toolbarWidth","outerWidth","_findPaneByUid","hasUnpinnedSize","unpinnedSize","css","button","isTabbed","parent","action","paneElement","closest","isUnpinned","parentPane","parentUid","eventData","remove","_refreshRootPane","toggleClass","trigger","paneIndex","indexOf","event","splice","_shouldHideParent","length","some","_refreshPane","parentElement","guid","_extendPane","forEach","childPane","j","subItem","scrollable","unpinnedPanes","_unpinnedPanes","unpinnedPannesContainer","append","insertBefore","prepend","i","html","renderButton","fillMode","_paneHeader","off","wrapper","refresh","rootPaneElement","_createSplitPane","splitterElement","splitterOptions","childPanesToInit","paneOptions","_createUnpinnedPane","push","splitter","Splitter","_updatePaneSize","leftPane","rightPane","ev","_createTabPane","tabStripElement","tabContainer","selectedPane","selected","tab","title","contentElement","_addActions","children","kendoTabStrip","animation","_createContentPane","content","template","data","isUnnpinned","actionsContainer","themeColor","string","charAt","toUpperCase","slice","result","concat","header","tabHeader","found","prop","value","params","navigatorDraggable","Draggable","autoScroll","hint","actionsHtml","_getActionButtons","hintTemplate","height","updateHint","coordinates","location","y","zIndex","dragstart","_dragStart","dragend","_dragEnd","drag","_drag","target","draggedPane","_displayGlobalIndicators","draggableEvent","hoveredIndicator","hide","_updateLayout","_showHiddenPanes","hoveredPane","currentPane","elementUnderCursor","navigator","currentPaneUid","prevPaneUid","dragTargetUid","position","dockable","innerDock","_showTab","_showPane","tabstrip","show","activateTab","splitbar","siblings","_hideDraggedPane","draggedElement","_hideTab","_hidePane","prevElement","prev","nextElement","next","isActive","buttons","container","each","_","clone","indicator","isGlobalIndicator","indicatorName","indicatorUid","indicatorData","previewElement","containerHeight","outerHeight","existingPreview","preview","draggedPaneParent","draggedPaneIndex","_tabDock","_splitDock","_adjustSiblingSizes","targetPane","isGlobalDock","targetPaneParent","targetPaneIndex","dimension","newParentPane","unshift","_getSiblings","parentSize","draggedPaneSize","newParentSize","noSizePanes","freeSpace","_calculateNewSize","noSizePane","newSize","paneSize","proportion","noUnitSize","unit","test","replace","p","plugin","jQuery","kendo$1"],"sources":["kendo.dockmanager.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.core.js';\nimport './kendo.splitter.js';\nimport './kendo.tabstrip.js';\nimport './kendo.window.js';\nimport './kendo.html.button.js';\nimport './kendo.resizable.js';\nimport './kendo.draganddrop.js';\n\nconst __meta__ = {\n    id: \"dockManager\",\n    name: \"DockManager\",\n    category: \"web\",\n    description: \"The DockManager widget represents a layout component that allows users to achieve custom layouts by docking panes.\",\n    depends: [\"core\", \"splitter\", \"tabstrip\", \"window\", \"html.button\"]\n};\n\n(function($, undefined$1) {\n    const kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        NS = \".kendoDockManager\",\n        ui = kendo.ui,\n        extend = $.extend,\n        percentageUnitsRegex = /^\\d+(\\.\\d+)?%$/i,\n        DOCK_MANAGER = \"k-dock-manager\",\n        DOCK_MANAGER_TOOLBAR = \"k-dock-manager-toolbar\",\n        TOOLBAR_TEMPLATE = `<div class=\"${DOCK_MANAGER_TOOLBAR} k-toolbar-left k-toolbar k-toolbar-md k-toolbar-solid\"></div>`,\n        TOOLBAR_BUTTON = \"k-toolbar-button\",\n        SEPARATOR = `<div class=\"k-separator k-separator-horizontal\"></div>`,\n        KSTATIC_PANE = \"k-pane-static\",\n        KKPINNED_PANE = \"k-pane-pinned\",\n        KKUNPINNED_PANE = \"k-pane-unpinned\",\n        KPANE_TABBED = \"k-pane-tabbed\",\n        SPLITTER = \"k-splitter\",\n        KSPLITBAR = \"k-splitbar\",\n        DOCK_SPLITTER = \"k-dock-manager-splitter\",\n        KUNPINNED_CONTAINER = \"k-dock-manager-unpinned-container\",\n        HORIZONTAL = \"horizontal\",\n        VERTICAL = \"vertical\",\n        KHIDDEN = \"k-hidden\",\n        KBUTTON = \"k-button\",\n        KPANE = \"k-pane\",\n        KPANE_FLEX = \"k-pane-flex\",\n        KPANES_CONTAINER = \"k-dock-manager-pane-container\",\n        KPANE_SCROLLABLE = \"k-pane-scrollable\",\n        KPANE_ACTIONS = \"k-pane-actions\",\n        KDOCK_INDICATOR = \"k-dock-indicator\",\n        KDOCK_NAVIGATOR = \"k-dock-navigator\",\n        KDOCK_PREVIEW = \"k-docking-preview\",\n        KSELECTED = \"k-selected\",\n        KACTIVE = \"k-active\",\n        KTABSTRIP = \"k-tabstrip\",\n        KSPLITBAR_DRAGGABLE = \"k-splitbar-draggable\",\n        SPLIT = \"split\",\n        TAB = \"tab\",\n        CONTENT = \"content\",\n        HEIGHT = \"height\",\n        WIDTH = \"width\",\n        TOP = \"top\",\n        BOTTOM = \"bottom\",\n        LEFT = \"left\",\n        RIGHT = \"right\",\n        MIDDLE = \"middle\",\n        CLICK = \"click\",\n        PIN = \"pin\",\n        UNPIN = \"unpin\",\n        UNSHIFT = \"unshift\",\n        PUSH = \"push\",\n        PANE = `<div class=\"${KPANE} ${KPANE_FLEX} ${KSTATIC_PANE}\"></div>`,\n        paneSelector = uid => `.${KPANE}[${kendo.attr(\"uid\")}=\"${uid}\"]`,\n        buttonTextTemplate = text => `<span class=\"k-button-text\">${text}</span>`,\n        contentPaneTemplate = data => `<div class=\"${KPANE_SCROLLABLE}\">\n                                            <div class=\"k-pane-header\">\n                                                <span class=\"k-pane-title\">${data.title}</span>\n                                                <div class=\"${KPANE_ACTIONS}\"></div>\n                                            </div>\n                                            <div class=\"k-pane-content\">${data.content}</div>\n                                        </div>`,\n        tabTemplate = title => `<li><span class=\"k-link\"><span class=\"k-link-text\">${title}</span></span></li>`,\n        unpinnedResizeSplitbar = `<div class=\"k-splitbar k-splitbar-horizontal ${KSPLITBAR_DRAGGABLE}-horizontal\">\n                                    <div class=\"k-resize-handle\"></div>\n                                </div>`,\n        UID_ATTR = kendo.attr(\"uid\"),\n        INDICATOR_ATTR = kendo.attr(\"indicator\"),\n        ACTION_ATTR = kendo.attr(\"action\"),\n        hintTemplate = pane => `<div class=\"k-tooltip k-tooltip-primary\">\n                                    <div class=\"k-tooltip-content\">${pane.title}</div>\n                                </div>`,\n        INDICATOR_TEMPLATE = `<div class=\"${KDOCK_INDICATOR}\">\n                        <span class=\"k-svg-icon k-icon-xl k-svg-i-position-top\">\n                        <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                            <path d=\"M480 448V32H32v448h448v-32zm-416 0V64h384v384H64zM96 96h320v96H96z\"></path>\n                        </svg>\n                        </span>\n                    </div>`,\n        NAVIGATOR_TEMPLATE = `<div class=\"${KDOCK_NAVIGATOR}\" style=\"position: relative;\">\n                                <div class=\"k-dock-indicator k-dock-indicator-top\" ${INDICATOR_ATTR}=\"top\">\n                                <span class=\"k-svg-icon k-icon-xl k-svg-i-position-top\">\n                                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path d=\"M480 448V32H32v448h448v-32zm-416 0V64h384v384H64zM96 96h320v96H96z\"></path>\n                                    </svg>\n                                </span>\n                                </div>\n                                <div class=\"k-dock-indicator k-dock-indicator-right\" ${INDICATOR_ATTR}=\"right\">\n                                <span class=\"k-svg-icon k-icon-xl k-svg-i-position-right\">\n                                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path d=\"M64 480h416V32H32v448h32zm0-416h384v384H64V64zm256 32h96v320h-96z\"></path>\n                                    </svg>\n                                </span>\n                                </div>\n                                <div class=\"k-dock-indicator k-dock-indicator-bottom\" ${INDICATOR_ATTR}=\"bottom\">\n                                <span class=\"k-svg-icon k-icon-xl k-svg-i-position-bottom\">\n                                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path d=\"M32 64v416h448V32H32v32zm416 0v384H64V64h384zM96 320h320v96H96z\"></path>\n                                    </svg>\n                                </span>\n                                </div>\n                                <div class=\"k-dock-indicator k-dock-indicator-left\" ${INDICATOR_ATTR}=\"left\">\n                                <span class=\"k-svg-icon k-icon-xl k-svg-i-position-left\">\n                                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path d=\"M448 32H32v448h448V32h-32zm0 416H64V64h384v384zM96 96h96v320H96z\"></path>\n                                    </svg>\n                                </span>\n                                </div>\n                                <div class=\"k-dock-indicator k-dock-indicator-middle\" ${INDICATOR_ATTR}=\"middle\">\n                                <span class=\"k-svg-icon k-icon-xl k-svg-i-window\">\n                                    <svg aria-hidden=\"true\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n                                        <path d=\"M96 96v320h320V96H96zm288 288H128V192h256v192z\"></path>\n                                    </svg>\n                                </span>\n                                </div>\n                            </div>`,\n        CLOSE = \"close\",\n        DOCK = \"dock\",\n        INNER_DOCK = \"innerDock\",\n        RESIZE = \"resize\",\n        DRAG = \"drag\",\n        DRAGSTART = \"dragStart\",\n        DRAGEND = \"dragEnd\",\n        CHANGE = \"change\";\n\n    function capitalizeFirstLetter(string) {\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    function isPercentageSize(size) {\n        return percentageUnitsRegex.test(size);\n    }\n\n    const DockManager = Widget.extend({\n        init: function(element, options) {\n            const that = this;\n\n            Widget.fn.init.call(that, element, options);\n            options = $.extend(true, {}, options);\n            that.element.addClass(DOCK_MANAGER);\n\n            that.panesContainer = $(`<div class=\"${KPANES_CONTAINER}\" />`).appendTo(that.element);\n            that._processPanes(that.options.rootPane);\n            that._refreshToolbar();\n            that._createPane(that.panesContainer, that.options.rootPane);\n            that._bindEvents();\n            that._initNavigator();\n            that._initUnpinnedResizable();\n\n            kendo.notify(that);\n        },\n\n        events: [\n            CLOSE,\n            PIN,\n            UNPIN,\n            DOCK,\n            INNER_DOCK,\n            RESIZE,\n            DRAG,\n            DRAGSTART,\n            DRAGEND\n        ],\n\n        options: {\n            name: 'DockManager',\n            rootPane: {\n                type: SPLIT,\n                orientation: HORIZONTAL,\n                panes: []\n            }\n        },\n\n        paneDefaults: {\n            visible: true,\n            closeable: true,\n            collapsed: false,\n            size: ''\n        },\n\n        actions: [\n            {\n                name: \"pin\",\n                icon: \"unpin\",\n                shouldAdd: pane => pane.unpinnable && pane.unpinnable.unpinned\n            },{\n                name: \"unpin\",\n                icon: \"pin\",\n                shouldAdd: pane => pane.unpinnable && !pane.unpinnable.unpinned\n            },{\n                name: \"minimize\",\n                icon: \"minimize\",\n                shouldAdd: pane => pane.minimizable\n            },{\n                name: \"maximize\",\n                icon: \"maximize\",\n                shouldAdd: pane => pane.maximizable\n            },{\n                name: \"close\",\n                icon: \"x\",\n                shouldAdd: pane => pane.closeable != false\n            },{\n                name: \"more\",\n                icon: \"more-vertical\",\n                shouldAdd: pane => false //not needed for v1 as currently only 2 actions are available\n            }\n        ],\n\n        indicators: [\n            {\n                name: TOP,\n                top: 0,\n                left: \"50%\",\n                transform: \"translate(-50%, 0)\",\n                previewTop: () => 0,\n                previewLeft: () => 0,\n                rotate: \"0deg\"\n            },{\n                name: BOTTOM,\n                top: \"100%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -100%)\",\n                previewTop: (hoveredPaneHeight, draggedPaneHeight) => hoveredPaneHeight - draggedPaneHeight,\n                previewLeft: () => 0,\n                rotate: \"180deg\"\n            },{\n                name: LEFT,\n                top: \"50%\",\n                left: 0,\n                transform: \"translate(0, -50%)\",\n                previewTop: () => 0,\n                previewLeft: () => 0,\n                rotate: \"270deg\"\n            },{\n                name: RIGHT,\n                top: \"50%\",\n                left: \"100%\",\n                transform: \"translate(-100%, -50%)\",\n                previewTop: () => 0,\n                previewLeft: (hoveredPaneWidth, draggedPaneWidth) => hoveredPaneWidth - draggedPaneWidth,\n                rotate: \"90deg\"\n            },{\n                name: MIDDLE,\n                previewTop: () => 0,\n                previewLeft: () => 0,\n            }\n        ],\n\n        togglePane: function(id) {\n            const that = this,\n            pane = that._getPaneById(that.options.rootPane, \"id\", id);\n\n            if (pane != undefined$1) {\n                that._togglePane(pane);\n            }\n        },\n\n        removePane: function(id) {\n            const that = this;\n            const pane = that._getPaneById(that.options.rootPane, \"id\", id);\n\n            if (pane != undefined$1) {\n                that._removePane(pane);\n            }\n        },\n\n        getOptions: function() {\n            const that = this;\n            return that.options;\n        },\n\n        setOptions: function(options) {\n            const that = this;\n            let currentOptions = that.getOptions();\n            kendo.deepExtend(currentOptions, options);\n\n            that.destroy();\n            that.element.empty();\n\n            that.init(that.element, currentOptions);\n\n        },\n\n        _initUnpinnedResizable: function() {\n            const that = this;\n\n            that._unpinnedResizable = new kendo.ui.Resizable(that.unpinnedContainer, {\n                orientation: HORIZONTAL,\n                handle: \".k-splitbar-horizontal.k-splitbar-draggable-horizontal\",\n                resize: function(e) {\n                    const delta = e.x.delta;\n                    const containerWidth = that.unpinnedContainer.width();\n\n                    that.unpinnedContainer.width(containerWidth + delta);\n                }\n            });\n        },\n\n        _bindEvents: function() {\n            const that = this;\n\n            that.element.on(CLICK + NS, `.k-dock-manager-toolbar .${KBUTTON}`, that._toolbarButtonClick.bind(that));\n            that.element.on(CLICK + NS, `.${KPANES_CONTAINER}`, that._hideUnpinnedPanes.bind(that));\n            that.element.on(CLICK + NS, `.${KBUTTON}[${ACTION_ATTR}=\"pin\"], .${KBUTTON}[${ACTION_ATTR}=\"unpin\"]`, that._pinPaneClick.bind(that));\n            that.element.on(CLICK + NS, `.${KBUTTON}[${ACTION_ATTR}=\"close\"]`, that._closePane.bind(that));\n            that.element.on(\"mouseenter\" + NS, `.${KDOCK_INDICATOR}`, that._displayDockPreview.bind(that));\n            that.element.on(\"mouseleave\" + NS, `.${KDOCK_INDICATOR}`, that._hideDockPreview.bind(that));\n        },\n\n        _hideUnpinnedPanes: function(e) {\n            const that = this;\n            const unpinnedPanes = that.unpinnedContainer.find(`.${KPANE}`);\n            const currentlyOpened = unpinnedPanes.filter(\":visible\");\n            const unpinnedContainerVisible = that.unpinnedContainer.is(\":visible\");\n\n            if (currentlyOpened && unpinnedContainerVisible) {\n                that._toolbar.find(`.${KSELECTED}`).removeClass(KSELECTED);\n                that.unpinnedContainer.addClass(KHIDDEN);\n                return;\n            }\n        },\n\n        _toolbarButtonClick: function(e) {\n            const that = this;\n            const itemUid = $(e.currentTarget).attr(UID_ATTR);\n            const unpinnedPanes = that.unpinnedContainer.find(`.${KPANE}`);\n            const currentlyOpened = unpinnedPanes.filter(\":visible\");\n            const unpinnedContainerVisible = that.unpinnedContainer.is(\":visible\");\n\n            e.preventDefault();\n            that._toolbar.find(`.${KBUTTON}`).removeClass(KSELECTED);\n\n            if (currentlyOpened.attr(UID_ATTR) === itemUid && unpinnedContainerVisible) {\n                that.unpinnedContainer.addClass(KHIDDEN);\n                return;\n            }\n\n            that._showUnpinnedPane(itemUid);\n        },\n\n        _showUnpinnedPane: function(paneUid) {\n            const that = this;\n            const toolbarWidth = that._toolbar.outerWidth();\n            const pane = that._findPaneByUid(paneUid);\n            const hasUnpinnedSize = pane.unpinnable.unpinnedSize;\n\n            that.unpinnedContainer.removeClass(KHIDDEN).css({ left: `${toolbarWidth}px` });\n            that.unpinnedContainer.find(`.${KPANE}`).addClass(KHIDDEN);\n            that.unpinnedContainer.find(paneSelector(paneUid)).removeClass(KHIDDEN);\n\n            if (hasUnpinnedSize) {\n                that.unpinnedContainer.css({ width: `${pane.unpinnable.unpinnedSize}` });\n            }\n\n            that._toolbar.find(`.${KBUTTON}[${UID_ATTR}=\"${paneUid}\"]`).addClass(KSELECTED);\n        },\n\n        _pinPaneClick: function(e) {\n            const that = this;\n            const button = $(e.currentTarget);\n            const isTabbed = button.parent().is(\"li\");\n            const action = button.attr(ACTION_ATTR);\n            const paneElement = isTabbed ? button.parent() : $(e.currentTarget).closest(`.${KPANE}`);\n            const pane = that._findPaneByUid(paneElement.attr(UID_ATTR));\n            const isUnpinned = pane.unpinnable.unpinned;\n            const parentPane = that._findPaneByUid(pane.parentUid);\n            const parentPaneElement = that.panesContainer.find(`.${KPANE}[${UID_ATTR}=\"${parentPane.uid}\"], .${SPLITTER}[${UID_ATTR}=\"${parentPane.uid}\"]`);\n            const eventData = { pane: pane, paneElement: paneElement };\n\n            if (isUnpinned) {\n                kendo.destroy(paneElement);\n                paneElement.remove();\n            }\n\n            pane.unpinnable.unpinned = action === PIN ? false : true;\n            that._refreshRootPane();\n            that.unpinnedContainer.toggleClass(KHIDDEN, action === PIN);\n            that.unpinnedContainer.find(`.${KPANE}`).removeClass(KKPINNED_PANE).addClass(KKUNPINNED_PANE);\n\n            if (action === \"pin\") {\n                that.trigger(PIN, eventData);\n                return;\n            }\n\n            that.trigger(UNPIN, eventData);\n            that._showUnpinnedPane(pane.uid);\n        },\n\n        _closePane: function(e) {\n            const that = this;\n            const button = $(e.currentTarget);\n            const isTabbed = button.parent().is(\"li\");\n            const paneElement = isTabbed ? button.parent() : $(e.currentTarget).closest(`.${KPANE}`);\n            const pane = that._findPaneByUid(paneElement.attr(UID_ATTR));\n            const parentPane = that._findPaneByUid(pane.parentUid);\n            const parentPaneElement = that.panesContainer.find(`.${KPANE}[${UID_ATTR}=\"${parentPane.uid}\"], .${SPLITTER}[${UID_ATTR}=\"${parentPane.uid}\"]`);\n            const paneIndex = parentPane.panes.indexOf(pane);\n            const eventData = { pane: pane, paneElement: paneElement, event: e };\n\n            if (that.trigger(CLOSE, eventData)) {\n                e.preventDefault();\n            }\n\n            if (pane.unpinnable && pane.unpinnable.unpinned) {\n                that.unpinnedContainer.addClass(KHIDDEN);\n            }\n\n            parentPane.panes.splice(paneIndex, 1);\n\n            if (that._shouldHideParent(parentPane)) {\n                parentPane.visible = false;\n            }\n\n            that._refreshRootPane();\n        },\n\n        _shouldHideParent: function(pane) {\n            const that = this,\n            parent = that._findPaneByUid(pane.parentUid);\n\n            if (pane.panes.length == 0) {\n                if (pane.type == TAB && parent.panes.length == 1) {\n                    parent.panes.splice(0,1);\n                    parent.visible = false;\n                }\n                return true;\n            }\n\n            if (pane.panes.length == 1 &&\n                pane.panes[0].type == TAB &&\n                !pane.panes.some(x => x.visible)) {\n                return true;\n            }\n\n            return false;\n        },\n\n        _refreshPane: function(paneElement, pane) {\n            const that = this;\n            const parentElement = paneElement.parent();\n            const isTabbed = paneElement.is(`.${KPANE_TABBED}`);\n\n            kendo.destroy(paneElement);\n            isTabbed ? paneElement.empty() : paneElement.remove();\n            that._refreshToolbar();\n            that._createPane(isTabbed ? paneElement : parentElement, pane);\n        },\n\n        _processPanes: function(pane) {\n            const that = this;\n            pane.uid = pane.uid || kendo.guid();\n            that._extendPane(pane);\n\n            if (pane.type === SPLIT && !pane.orientation) {\n                pane.orientation = HORIZONTAL;\n            }\n\n            pane.panes.forEach((childPane) => {\n                childPane.parentUid = pane.uid;\n\n                if (childPane.type == CONTENT) {\n                    if (childPane.unpinnable === undefined$1 || childPane.unpinnable === true) {\n                        childPane.unpinnable = {\n                            unpinned: false\n                        };\n                    }\n                    childPane.uid = childPane.uid || kendo.guid();\n                }\n\n                if (childPane.panes && childPane.panes.length) {\n                    that._processPanes(childPane);\n                }\n            });\n        },\n\n        _extendPane: function(pane) {\n            const that = this;\n\n            if (pane.panes) {\n                for (var j = 0; j < pane.panes.length; j++) {\n                    pane.panes.forEach(subItem => {\n                        that._extendPane(subItem);\n                    });\n                }\n            }\n\n            extend(pane, {\n                visible: pane.visible === undefined$1 ? that.paneDefaults.visible : pane.visible,\n                closeable: pane.closeable === undefined$1 ? that.paneDefaults.closeable : pane.closeable,\n                collapsed: pane.collapsed === undefined$1 ? that.paneDefaults.collapsed : pane.collapsed,\n                size: pane.size === undefined$1 ? that.paneDefaults.size : pane.size,\n                scrollable: false,\n            });\n        },\n\n        _togglePane: function(pane) {\n            const that = this;\n\n            pane.visible = !pane.visible;\n            that._refreshRootPane();\n        },\n\n        _removePane: function(pane) {\n            const that = this;\n            const parentPane = that._findPaneByUid(pane.parentUid);\n            const paneIndex = parentPane.panes.indexOf(pane);\n            const parentPaneElement = that.panesContainer.find(`[${UID_ATTR}=\"${pane.uid}\"]`).parent();\n\n            parentPane.panes.splice(paneIndex, 1);\n            that._refreshRootPane();\n        },\n\n        _refreshToolbar: function() {\n            const that = this;\n            const unpinnedPanes = that._unpinnedPanes();\n            const unpinnedPannesContainer = $(`<div class=\"${KHIDDEN}\"/>`).addClass(KUNPINNED_CONTAINER);\n\n            if (!that.unpinnedContainer) {\n                that.unpinnedContainer = unpinnedPannesContainer;\n                unpinnedPannesContainer.append(unpinnedResizeSplitbar);\n                unpinnedPannesContainer.insertBefore(that.panesContainer);\n            }\n\n            if (!unpinnedPanes.length) {\n                that._toolbar && that._toolbar.remove();\n                that._toolbar = null;\n                return;\n            }\n\n            if (!that._toolbar) {\n                that._toolbar = that.element.prepend(TOOLBAR_TEMPLATE).find(`.${DOCK_MANAGER_TOOLBAR}`);\n            }\n\n            that._toolbar.empty();\n\n            for (let i = 0; i < unpinnedPanes.length; i++) {\n                const pane = unpinnedPanes[i];\n\n                const button = $(kendo.html.renderButton({ fillMode: \"flat\", size: \"small\" }))\n                                .addClass(TOOLBAR_BUTTON)\n                                .append(buttonTextTemplate(that._paneHeader(pane)));\n\n                button.attr(UID_ATTR, pane.uid);\n                that._toolbar.append(button);\n\n                if (i < unpinnedPanes.length - 1) {\n                    that._toolbar.append(SEPARATOR);\n                }\n            }\n        },\n\n        destroy: function() {\n            const that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.element.off(NS);\n            that.element.empty();\n\n            kendo.destroy(that.wrapper);\n        },\n\n        refresh: function() {\n            const that = this;\n            kendo.destroy(that.unpinnedContainer);\n            that.unpinnedContainer.empty();\n            that._refreshRootPane();\n        },\n\n        _refreshRootPane: function() {\n            const that = this;\n            const rootPaneElement = that.element.find(`[${UID_ATTR}=\"${that.options.rootPane.uid}\"]`);\n\n            that._refreshPane(rootPaneElement, that.options.rootPane);\n        },\n\n        _createSplitPane: function(parentElement, pane) {\n            const that = this;\n            const splitterElement = $(\"<div ref-dock-splitter/>\").attr(UID_ATTR, pane.uid);\n            const splitterOptions = {\n                orientation: pane.orientation || HORIZONTAL,\n                panes: []\n            };\n\n            if (!pane.panes.some(x=>x.visible)) {\n                return;\n            }\n\n            parentElement.append(splitterElement);\n\n            const childPanesToInit = [];\n\n            pane.panes.forEach((childPane) => {\n                const paneOptions = {\n                    uid: childPane.uid,\n                    scrollable: false\n                };\n                const paneElement = $(PANE).removeClass(KSTATIC_PANE);\n\n                if (childPane.unpinnable && childPane.unpinnable.unpinned) {\n                    that._createUnpinnedPane(childPane);\n                    return;\n                }\n\n                if (childPane.size) {\n                    paneOptions.size = childPane.size;\n                }\n\n                if (childPane.visible != undefined$1) {\n                    paneOptions.visible = childPane.visible;\n                }\n\n                if (childPane.visible) {\n                    splitterElement.append(paneElement);\n                    childPanesToInit.push(\n                        () => that._createPane(paneElement, childPane)\n                    );\n                    splitterOptions.panes.push(paneOptions);\n                }\n            });\n\n            pane.splitter = new kendo.ui.Splitter(splitterElement, splitterOptions); // eslint-disable-line no-new\n            pane.splitter.element.addClass(DOCK_SPLITTER);\n            childPanesToInit.forEach(x => x());\n            pane.splitter.bind(RESIZE, that._updatePaneSize.bind(that));\n        },\n\n        _updatePaneSize: function(e) {\n            const that = this;\n            if (!e.leftPane && !e.rightPane) {\n                return;\n            }\n\n            const leftPane = that._findPaneByUid(e.leftPane.uid),\n            rightPane = that._findPaneByUid(e.rightPane.uid);\n\n            leftPane.size = e.leftPane.size;\n            rightPane.size = e.rightPane.size;\n            that.trigger(RESIZE, { ev: e, leftPane: leftPane, rightPane: rightPane });\n        },\n\n        _createTabPane: function(parentElement, pane) {\n            const that = this;\n            const tabStripElement = $(\"<div class='k-header'/>\");\n            const tabContainer = $(\"<ul/>\");\n            const tabStripOptions = {\n                animation: false,\n            };\n            const selectedPane = (pane.selected === undefined$1 || pane.panes.indexOf(pane.panes[pane.selected]) == -1 || pane.panes[pane.selected].unpinnable.unpinned) ? 0 : pane.selected;\n\n            if (!pane.panes.some(x=>x.visible)) {\n                return;\n            }\n\n            tabStripElement.append(tabContainer);\n            parentElement.append(tabStripElement);\n            parentElement.attr(UID_ATTR, pane.uid);\n            parentElement.addClass(KPANE_TABBED);\n\n            pane.panes.forEach((childPane) => {\n                const tab = $(tabTemplate(that._paneHeader(childPane))).attr(UID_ATTR, childPane.uid);\n                const contentElement = $(\"<div/>\");\n\n                if (childPane.unpinnable && childPane.unpinnable.unpinned) {\n                    that._createUnpinnedPane(childPane);\n                    return;\n                }\n\n                if (childPane.visible) {\n                    that._addActions(tab, childPane);\n                    tabContainer.append(tab);\n                    tabStripElement.append(contentElement);\n                    that._createPane(contentElement, childPane);\n                }\n            });\n\n            $(tabContainer.children()[selectedPane]).addClass(KACTIVE);\n            tabStripElement.kendoTabStrip(tabStripOptions);\n        },\n\n        _createContentPane: function(parentElement, pane) {\n            const that = this;\n            const content = typeof pane.content === \"function\" ? kendo.template(pane.content)({}) : pane.content;\n            const element = $(contentPaneTemplate(extend({}, pane, { title: that._paneHeader(pane), content: content })));\n            const parentPane = that._findPaneByUid(pane.parentUid);\n            const isUnnpinned = pane.unpinnable && pane.unpinnable.unpinned;\n\n\n            if (parentPane && parentPane.type === TAB && !isUnnpinned) {\n                parentElement.append(content);\n                return;\n            }\n\n            parentElement.addClass(isUnnpinned ? KKUNPINNED_PANE : KKPINNED_PANE)\n                         .removeClass(KSTATIC_PANE)\n                         .attr(UID_ATTR, pane.uid);\n            that._addActions(element.find(`.${KPANE_ACTIONS}`), pane);\n            parentElement.append(element);\n        },\n\n        _createUnpinnedPane: function(pane) {\n            const that = this;\n            const paneElement = $(PANE).removeClass(KSTATIC_PANE);\n\n            if (that.unpinnedContainer.find(paneSelector(pane.uid)).length) {\n                return;\n            }\n\n            that.unpinnedContainer.prepend(paneElement);\n            that._createContentPane(paneElement, pane);\n        },\n\n        _addActions: function(actionsContainer, pane) {\n            const that = this;\n\n            that.actions.forEach((action) => {\n                if (action.shouldAdd(pane)) {\n                    actionsContainer.append($(kendo.html.renderButton({ fillMode: \"flat\", icon: action.icon, themeColor: 'base' })).attr(ACTION_ATTR, action.name));\n                }\n            });\n\n        },\n\n        _createPane: function(parentElement, pane) {\n            const that = this;\n\n            if (pane.id) {\n                parentElement.attr(\"id\", pane.id);\n            }\n\n            return that[\"_create\" + capitalizeFirstLetter(pane.type) + \"Pane\"](parentElement, pane);\n        },\n\n        _unpinnedPanes: function(panes) {\n            const that = this;\n            const options = that.options;\n            let result = [];\n\n            if (!panes) {\n                panes = options.rootPane.panes;\n            }\n\n            panes.forEach((pane) => {\n                if (pane.unpinnable && pane.unpinnable.unpinned) {\n                    result.push(pane);\n                }\n\n                if (pane.panes && pane.panes.length) {\n                    result = result.concat(that._unpinnedPanes(pane.panes));\n                }\n            });\n\n            return result;\n        },\n\n        _paneHeader: function(pane) {\n            const that = this;\n            const parentPane = that._findPaneByUid(pane.parentUid);\n            const isTabbed = parentPane && parentPane.type === \"tab\";\n            let header = pane.header;\n\n            if (isTabbed && pane.tabHeader) {\n                header = pane.tabHeader;\n            }\n\n            if (!header) {\n                return pane.title || \"\";\n            }\n\n            return kendo.template(header)(pane);\n        },\n\n        _findPaneByUid: function(uid, parent) {\n            const that = this;\n            let found;\n\n            parent = parent || that.options.rootPane;\n\n            if (parent.uid === uid) {\n                return parent;\n            }\n\n            parent.panes.forEach((pane) => {\n                if (pane.uid === uid) {\n                    found = pane;\n                    return;\n                }\n\n                if (pane.panes && pane.panes.length) {\n                    const result = that._findPaneByUid(uid, pane);\n\n                    if (result) {\n                        found = result;\n                        return;\n                    }\n                }\n            });\n            return found;\n        },\n\n        _getPaneById: function(pane, prop, value) {\n            const that = this;\n            let found;\n\n            if (pane[prop] == value) {\n                return pane;\n            }\n\n            if (pane.panes) {\n                pane.panes.forEach((childPane) => {\n                    let result = that._getPaneById(childPane, prop, value);\n                    if (result) {\n                        found = result;\n                    }\n                });\n            }\n            return found;\n        },\n\n        _initNavigator: function(params) {\n            const that = this;\n\n            that.navigatorDraggable = new kendo.ui.Draggable(that.element, {\n                autoScroll: true,\n                filter: \".k-pane-header, .k-pane-tabbed .k-tabstrip-item\",\n                hint: function(element) {\n                    const isTabbed = element.is(\"li\");\n                    const paneElement = element.closest(`.${KPANE}`);\n                    const pane = that._findPaneByUid((isTabbed ? element : paneElement).attr(UID_ATTR));\n                    const actionsHtml = isTabbed ? that._getActionButtons(element) : paneElement.find(`.${KPANE_ACTIONS}`).html();\n\n                    return hintTemplate({\n                        width: paneElement.width(),\n                        height: paneElement.height(),\n                        content: pane.content,\n                        title: that._paneHeader(pane),\n                        actions: actionsHtml,\n                    });\n                },\n                updateHint: function(hint, event) {\n                    const coordinates = {\n                        left: event.x.location + 1,\n                        top: event.y.location + 1,\n                    };\n\n                    const additionStyles = {\n                        zIndex: 100010,\n                    };\n\n                    hint.css($.extend({}, coordinates, additionStyles));\n\n                },\n                dragstart: that._dragStart.bind(that),\n                dragend: that._dragEnd.bind(that),\n                drag: that._drag.bind(that)\n            });\n        },\n\n        _dragStart: function(e) {\n            const that = this;\n            const target = $(e.currentTarget);\n            const pane = target.closest(`.${KPANE}`);\n\n            that.draggedPane = {\n                width: pane.width(),\n                height: pane.height(),\n                pane,\n                target\n            };\n\n            that._displayGlobalIndicators();\n\n            that.trigger(DRAGSTART, { pane: that.draggedPane.pane, draggableEvent: e });\n        },\n\n        _dragEnd: function(e) {\n            const that = this;\n            const hoveredIndicator = that.element.find(`.${KDOCK_INDICATOR}:hover`);\n            const eventData = { pane: that.draggedPane.pane, draggableEvent: e };\n\n            if (hoveredIndicator.length) {\n                that.navigatorDraggable.hint.hide();\n                that._updateLayout(hoveredIndicator);\n            }\n\n            that.element.find(`.${KDOCK_INDICATOR}`).remove();\n            that.element.find(`.${KDOCK_PREVIEW}`).remove();\n\n            if (!hoveredIndicator.length) {\n                that._showHiddenPanes();\n            }\n            that.trigger(DRAGEND, eventData);\n            that.hoveredPane = null;\n            that.draggedPane = null;\n        },\n\n        _drag: function(e) {\n            const that = this;\n            const currentPane = $(e.elementUnderCursor).closest(`.${KPANE}[${UID_ATTR}]`);\n            const pane = that._findPaneByUid(currentPane.attr(UID_ATTR));\n            const navigator = $(NAVIGATOR_TEMPLATE);\n            const currentPaneUid = currentPane.attr(UID_ATTR);\n            const prevPaneUid = that.hoveredPane && that.hoveredPane.attr(UID_ATTR);\n            const eventData = { pane: that.draggedPane.pane, draggableEvent: e };\n            const dragTargetUid = e.currentTarget.closest(`.${KPANE}`).attr(UID_ATTR);\n\n            if (that.trigger(DRAG, eventData)) {\n                e.preventDefault();\n                return;\n            }\n\n            if (currentPaneUid === prevPaneUid) {\n                return;\n            }\n\n            that.hoveredPane = currentPane;\n            that.element.find(`.${KDOCK_NAVIGATOR}`).remove();\n            navigator.css({\n                position: \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%,-50%)\",\n                \"z-index\": 100008\n            });\n\n            if (pane && pane.dockable && !pane.dockable.innerDock) {\n                navigator.css(\"display\", \"none\");\n            }\n            if (currentPaneUid !== dragTargetUid) {\n                currentPane.append(navigator);\n            }\n        },\n\n        _showHiddenPanes: function() {\n            const that = this;\n            const isTabbed = that.draggedPane.pane.is(`.${KPANE_TABBED}`);\n\n            if (isTabbed) {\n                return that._showTab();\n            }\n\n            that._showPane(that.draggedPane.pane);\n        },\n\n        _showTab: function(tab) {\n            if (tab === undefined$1) {\n                return;\n            }\n\n            const that = this;\n            const tabstrip = tab.closest(`.${KTABSTRIP}`).data(\"kendoTabStrip\");\n\n            tab.show();\n            tabstrip.activateTab(tab);\n        },\n\n        _showPane: function(paneElement) {\n            const that = this;\n            const splitbar = paneElement.siblings(`.${KSPLITBAR}:hidden`);\n            paneElement.show();\n            splitbar.show();\n        },\n\n        _hideDraggedPane: function(draggedElement) {\n            const that = this;\n            const isTabbed = draggedElement.is(\"li\");\n\n            if (isTabbed) {\n                return that._hideTab(draggedElement);\n            }\n\n            that._hidePane(draggedElement);\n        },\n\n        _hidePane: function(draggedElement) {\n            const that = this;\n            const paneElement = draggedElement.closest(`.${KPANE}`);\n            const prevElement = paneElement.prev();\n            const nextElement = paneElement.next();\n\n            paneElement.hide();\n\n            if (prevElement.is(`.${KSPLITBAR}`)) {\n                return prevElement.hide();\n            }\n\n            nextElement.hide();\n        },\n\n        _hideTab: function(tab) {\n            const that = this;\n            const isActive = tab.is(`.${KACTIVE}`);\n            const tabstrip = tab.closest(`.${KTABSTRIP}`).data(\"kendoTabStrip\");\n\n            tab.hide();\n\n            if (isActive) {\n                tabstrip.activateTab(\"li:visible:first\");\n            }\n        },\n\n        _getActionButtons: function(paneElement) {\n            const buttons = paneElement.find(\"button\");\n            const container = $(\"<div/>\");\n\n            buttons.each((_, button) => container.append($(button).clone()));\n\n            return container.html();\n        },\n\n        _displayGlobalIndicators: function() {\n            const that = this;\n\n            that.indicators.forEach((indicator) => {\n                const element = $(INDICATOR_TEMPLATE);\n\n                if (indicator.name === \"middle\") {\n                    return;\n                }\n\n                that.element.append(element);\n                element.css({\n                    position: \"absolute\",\n                    \"z-index\": \"100002\",\n                    top: indicator.top,\n                    left: indicator.left,\n                    transform: `${indicator.transform} rotate(${indicator.rotate})`\n                });\n                element.attr(INDICATOR_ATTR, indicator.name);\n            });\n        },\n\n        _displayDockPreview: function(e) {\n            const that = this;\n            const indicator = $(e.currentTarget);\n            const isGlobalIndicator = !indicator.parent().is(`.${KDOCK_NAVIGATOR}`);\n            const indicatorName = indicator.attr(INDICATOR_ATTR);\n            const indicatorUid = indicator.attr(UID_ATTR);\n            const indicatorData = that.indicators.filter(i => i.name === indicatorName)[0];\n            const previewElement = $(`<div class=\"${KDOCK_PREVIEW}\"/>`);\n            const container = isGlobalIndicator ? that.panesContainer : that.hoveredPane;\n            const toolbarWidth = that._toolbar ? that._toolbar.outerWidth() : 0;\n            const containerWidth = container.outerWidth();\n            const containerHeight = container.outerHeight();\n            const existingPreview = indicatorUid && container.find(`.${KDOCK_PREVIEW}[${UID_ATTR}=\"${indicatorUid}\"]`);\n            const uid = kendo.guid();\n            let width = that.draggedPane.width;\n            let height = that.draggedPane.height;\n\n            if (existingPreview && existingPreview.length) {\n                return existingPreview.show();\n            }\n\n            if (indicatorName === MIDDLE) {\n                width = containerWidth;\n                height = containerHeight;\n            }\n\n            if (indicatorName === TOP || indicatorName === BOTTOM) {\n                if (height > containerHeight / 2) {\n                    height = containerHeight / 2;\n                }\n\n                width = containerWidth;\n            }\n\n            if (indicatorName === LEFT || indicatorName === RIGHT) {\n                if (width > containerWidth / 2) {\n                    width = containerWidth / 2;\n                }\n\n                height = containerHeight;\n            }\n\n            const css = {\n                position: \"absolute\",\n                \"z-index\": 100000,\n                top: indicatorData.previewTop(containerHeight, height),\n                left: indicatorData.previewLeft(containerWidth, width) + (isGlobalIndicator ? toolbarWidth : 0),\n                width: width,\n                height\n            };\n\n            previewElement.css(css);\n            previewElement.attr(INDICATOR_ATTR, indicatorData.name)\n                          .attr(UID_ATTR, uid);\n            indicator.attr(UID_ATTR, uid);\n            container.append(previewElement);\n            that.draggedPane.preview = {\n                width,\n                height\n            };\n            that.draggedPane.container = {\n                width: containerWidth,\n                height: containerHeight\n            };\n        },\n\n        _hideDockPreview: function() {\n            const that = this;\n\n            that.element.find(`.${KDOCK_PREVIEW}`).hide();\n        },\n\n        _updateLayout: function(indicator) {\n            const that = this;\n            const isTabbed = that.draggedPane.target.is(\"li\");\n            const isGlobalIndicator = !indicator.parent().is(`.${KDOCK_NAVIGATOR}`);\n            const paneElement = isTabbed ? that.draggedPane.target : that.draggedPane.pane;\n            const hoveredPane = that._findPaneByUid(that.hoveredPane.attr(UID_ATTR));\n            const draggedPane = that._findPaneByUid(paneElement.attr(UID_ATTR));\n            const location = indicator.attr(INDICATOR_ATTR);\n            const draggedPaneParent = that._findPaneByUid(draggedPane.parentUid);\n            const draggedPaneIndex = draggedPaneParent.panes.indexOf(draggedPane);\n            const rootPaneElement = that.element.find(`[${UID_ATTR}=\"${that.options.rootPane.uid}\"]`);\n\n            draggedPaneParent.panes.splice(draggedPaneIndex, 1);\n            location == MIDDLE ? that._tabDock(hoveredPane, draggedPane) : that._splitDock(hoveredPane, draggedPane, location, isGlobalIndicator);\n            that._processPanes(that.options.rootPane);\n            that._adjustSiblingSizes(draggedPane, location, isGlobalIndicator);\n            that._refreshPane(rootPaneElement, that.options.rootPane);\n            location == MIDDLE ?\n                that.trigger(INNER_DOCK, { pane: draggedPane, paneElement: paneElement }) :\n                that.trigger(DOCK, { pane: draggedPane, paneElement: paneElement });\n        },\n\n        _splitDock: function(targetPane, pane, location, isGlobalDock) {\n            const that = this;\n            const targetPaneParent = isGlobalDock ? that.options.rootPane : that._findPaneByUid(targetPane.parentUid);\n            const targetPaneIndex = targetPaneParent.panes.indexOf(targetPane);\n            const action = location === TOP || location === LEFT ? UNSHIFT : PUSH;\n            const paneIndex = targetPaneIndex + (action === UNSHIFT ? 0 : 1);\n            const orientation = location === TOP || location === BOTTOM ? VERTICAL : HORIZONTAL;\n            const dimension = location === TOP || location === BOTTOM ? HEIGHT : WIDTH;\n            const newParentPane = {\n                type: SPLIT,\n                orientation,\n                panes: [],\n            };\n            const previewSize = that.draggedPane.preview[dimension];\n            const size = `${previewSize}px`;\n\n            pane.size = size;\n\n            if (isGlobalDock) {\n                newParentPane.panes.push(targetPaneParent);\n                (location === TOP || location === LEFT) ? newParentPane.panes.unshift(pane) : newParentPane.panes.push(pane);\n                that.options.rootPane = newParentPane;\n                return;\n            }\n\n            if (((location === TOP || location === BOTTOM) && targetPaneParent.orientation === VERTICAL) ||\n                ((location === LEFT || location === RIGHT) && targetPaneParent.orientation === HORIZONTAL)) {\n                return targetPaneParent.panes.splice(paneIndex, 0, pane);\n            }\n\n            if (targetPane) {\n                newParentPane.size = targetPane.size;\n                targetPane.size = null;\n            }\n\n            targetPaneParent.panes.splice(targetPaneIndex, 1);\n            newParentPane.panes.push(targetPane);\n            newParentPane.panes[action](pane);\n            targetPaneParent.panes.splice(targetPaneIndex, 0, newParentPane);\n        },\n\n        _tabDock: function name(targetPane, pane) {\n            const that = this;\n            const targetPaneParent = that._findPaneByUid(targetPane.parentUid);\n            const targetPaneIndex = targetPaneParent.panes.indexOf(targetPane);\n            const newParentPane = {\n                type: TAB,\n                panes: [\n                    targetPane,\n                    pane\n                ]\n            };\n\n            if (targetPane.type === TAB) {\n                targetPane.panes.push(pane);\n                return;\n            }\n\n            targetPaneParent.panes.splice(targetPaneIndex, 1);\n            targetPaneParent.panes.splice(targetPaneIndex, 0, newParentPane);\n\n        },\n\n        _adjustSiblingSizes: function(pane, location, isGlobalDock) {\n            const that = this;\n            const siblings = that._getSiblings(pane);\n            const dimension = location === TOP || location === BOTTOM ? HEIGHT : WIDTH;\n            const parentSize = that.draggedPane.container[dimension];\n            const draggedPaneSize = that.draggedPane[dimension];\n            const newParentSize = parentSize - draggedPaneSize;\n            const noSizePanes = [];\n            let freeSpace = newParentSize;\n\n            if (location === MIDDLE) {\n                return;\n            }\n\n            if (siblings.length === 2) {\n                siblings[0].size = null;\n                return;\n            }\n\n            siblings.forEach((childPane) => {\n                if (childPane.uid === pane.uid) {\n                    return;\n                }\n\n                if (!childPane.size) {\n                    noSizePanes.push(childPane);\n                    return;\n                }\n\n                childPane.size = that._calculateNewSize(parentSize, newParentSize, childPane.size);\n                freeSpace -= childPane.size;\n            });\n\n            noSizePanes.forEach((noSizePane) => {\n                const newSize = freeSpace / noSizePanes.length;\n\n                noSizePane.size = newSize;\n            });\n\n        },\n\n        _calculateNewSize: function(parentSize, newParentSize, paneSize) {\n            const proportion = newParentSize / parentSize;\n            let unit = \"px\";\n            let noUnitSize;\n\n            if (isPercentageSize(paneSize)) {\n                unit = \"%\";\n            }\n            if (typeof paneSize === \"string\") {\n                noUnitSize = +paneSize.replace(unit, \"\");\n            }\n\n            return `${noUnitSize * proportion}${unit}`;\n        },\n\n        _getSiblings: function(pane) {\n            const that = this;\n            const parent = that._findPaneByUid(pane.parentUid);\n\n            return parent.panes.filter(p => p.visible !== false &&\n                                            p.uid !== pane.uid &&\n                                            (p.unpinnable && p.unpinnable.unpinned !== true));\n        }\n    });\n\n    ui.plugin(DockManager);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}