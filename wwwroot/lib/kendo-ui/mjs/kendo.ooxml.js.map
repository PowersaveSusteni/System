{"version":3,"file":"kendo.ooxml.js","names":["IntlService","Workbook","Worksheet","__meta__","id","name","category","advanced","depends","$","register","toString","kendo","convertedWorkbook","ConvertClass","toDataURL","prototype","Object","assign","result","call","this","Error","toDataURLAsync","deferred","Deferred","resolve","then","dataURI","reject","promise","window","ooxml","createZip","JSZip","jQuery"],"sources":["kendo.ooxml.js"],"mappings":"MAAO,8BACOA,iBAAkBC,cAAeC,cAAiB,6BAEhE,MAAMC,SAAW,CACbC,GAAI,QACJC,KAAM,kBACNC,SAAU,YACVC,UAAU,EACVC,QAAS,CAAC,OAAQ,qBAGtB,SAAUC,GAENT,YAAYU,SAAS,CACjBC,SAAUC,MAAMD,WAIpB,IAAIE,EAAoBD,MAAME,aAAab,UAC3C,IAAIc,EAAYF,EAAkBG,UAAUD,UAE5CE,OAAOC,OAAOL,EAAkBG,UAAW,CACvCD,UAAW,WACP,IAAII,EAASJ,EAAUK,KAAKC,MAC5B,GAAsB,iBAAXF,EACP,MAAM,IAAIG,MAAM,gHAGpB,OAAOH,CACX,EAEAI,eAAgB,WACZ,IAAIC,EAAWf,EAAEgB,WACbN,EAASJ,EAAUK,KAAKC,MAW5B,MAVsB,iBAAXF,EACPA,EAASK,EAASE,QAAQP,GACnBA,GAAUA,EAAOQ,MACxBR,EAAOQ,MAAK,SAASC,GACjBJ,EAASE,QAAQE,EACrB,IAAG,WACCJ,EAASK,QACb,IAGGL,EAASM,SACpB,IAGJC,OAAOnB,MAAMoB,MAAQD,OAAOnB,MAAMoB,OAAS,CAAC,EAC5CD,OAAOnB,MAAMoB,MAAMhC,YAAcA,YACjC+B,OAAOnB,MAAMoB,MAAM/B,SAAWY,EAC9BkB,OAAOnB,MAAMoB,MAAM9B,UAAYU,MAAME,aAAaZ,WAClD6B,OAAOnB,MAAMoB,MAAMC,UAAY,WAE3B,GAAqB,oBAAVC,MACP,MAAM,IAAIZ,MAAM,uHAGpB,OAAO,IAAIY,KACf,CAEH,CAlDD,CAkDGH,OAAOnB,MAAMuB,eAEPhC","ignoreList":[],"sourcesContent":["import './kendo.core.js';\nimport { I as IntlService, W as Workbook, a as Worksheet } from './kendo.ooxml.cmn.chunk.js';\n\nconst __meta__ = {\n    id: \"ooxml\",\n    name: \"XLSX generation\",\n    category: \"framework\",\n    advanced: true,\n    depends: [\"core\", \"ooxml.cmn.chunk\"]\n};\n\n(function($) {\n\n    IntlService.register({\n        toString: kendo.toString\n    });\n\n\n    let convertedWorkbook = kendo.ConvertClass(Workbook);\n    var toDataURL = convertedWorkbook.prototype.toDataURL;\n\n    Object.assign(convertedWorkbook.prototype, {\n        toDataURL: function() {\n            var result = toDataURL.call(this);\n            if (typeof result !== 'string') {\n                throw new Error('The toDataURL method can be used only with jsZip 2. Either include jsZip 2 or use the toDataURLAsync method.');\n            }\n\n            return result;\n        },\n\n        toDataURLAsync: function() {\n            var deferred = $.Deferred();\n            var result = toDataURL.call(this);\n            if (typeof result === 'string') {\n                result = deferred.resolve(result);\n            } else if (result && result.then) {\n                result.then(function(dataURI) {\n                    deferred.resolve(dataURI);\n                }, function() {\n                    deferred.reject();\n                });\n            }\n\n            return deferred.promise();\n        }\n    });\n\n    window.kendo.ooxml = window.kendo.ooxml || {};\n    window.kendo.ooxml.IntlService = IntlService;\n    window.kendo.ooxml.Workbook = convertedWorkbook;\n    window.kendo.ooxml.Worksheet = kendo.ConvertClass(Worksheet);\n    window.kendo.ooxml.createZip = function() {\n        /* global JSZip */\n        if (typeof JSZip === \"undefined\") {\n            throw new Error(\"JSZip not found. Check http://docs.telerik.com/kendo-ui/framework/excel/introduction#requirements for more details.\");\n        }\n\n        return new JSZip();\n    };\n\n})(window.kendo.jQuery);\n\nexport { __meta__ };\n"]}