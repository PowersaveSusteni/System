{"version":3,"file":"kendo.form.js","names":["__meta__","id","name","category","description","depends","features","$","kendo","window","ui","NS","Widget","extend","encode","htmlEncode","VALIDATE","VALIDATEFIELD","CHANGE","CLICK","SUBMIT","CLEAR","EQUAL_SET","GROUP","ARIA_DESCRIBEDBY","DATA_STOP","DATA_ROLE","DOT","formStyles","form","horizontal","vertical","field","fieldsContainer","fieldWrap","fieldError","fieldHint","fieldset","layout","legend","label","emptyLabel","optional","buttonsContainer","buttonsEnd","submit","clear","invalid","hidden","formOrientation","Form","init","element","options","that","this","fn","call","deepExtend","formData","_wrapper","_setFields","_setModel","_renderContainers","renderButtons","_renderButtons","_editable","_renderBoolLabels","_renderFieldsHints","_setEvents","_applyCssClasses","events","orientation","validatable","validateOnBlur","validationSummary","errorTemplate","buttonsTemplate","messages","grid","items","formatLabel","focusFirst","size","_noLabelfieldTemplate","styles","colSpan","_fieldTemplate","encoded","text","_boolLabelTemplate","_groupTemplate","_errorTemplate","message","_hintTemplate","width","height","wrapper","addClass","css","layoutWrapper","_setupLayoutContainer","_flattenFields","fields","concat","item","shift","result","push","apply","_defaultLabel","fieldName","customFormat","length","isFunction","split","join","trim","_formatLabel","isPlainObject","_defaultFields","formDataFields","Object","keys","itemFields","defaultFormDataFields","i","fieldInfo","fieldValue","type","editor","attributes","defaultFields","_fields","parseDate","toString","Editable","editors","_isHidden","optionalText","isHidden","_isAntiForgeryToken","data","ObservableObject","_model","MyModel","Model","define","validatorOptions","_addEditableMvvmAttributes","editable","kendoEditable","model","clearContainer","skipFocus","target","getKendoEditable","validator","_removeEditableMvvmAttributes","attr","_getItemTemplate","antiForgeryTokenName","_renderField","fieldTemplate","isHorizontal","fieldType","isBoolField","template","_toggleFieldErrorState","state","closest","toggleClass","fieldElement","find","parent","after","fieldWidgetInstance","nextLabelElement","hint","_associateHintContainer","widgetInstance","next","_errorsByName","removeAttribute","insertAfter","input","hintId","nextFocusable","getWidgetFocusableElement","toggleAttribute","_toggleHint","_renderGroup","child","renderedGroup","append","container","targetContainer","_buttonsTemplate","buttons","kendoButton","themeColor","add","appendTarget","layoutContainer","layoutClassNames","appendTo","cols","bind","_validateField","_validate","on","_submit","_clear","_changeHandler","_change","ev","toJSON","valid","error","trigger","preventDefault","errors","value","jsonModel","validate","reset","unbind","isHiddenInput","is","val","hasClass","Upload","clearAllFiles","set","removeClass","_validateProxy","setOptions","newOptions","destroy","removeAttr","empty","off","cssProperties","registerPrefix","plugin","jQuery","kendo$1"],"sources":["kendo.form.js"],"mappings":"MAAO,4BACA,oBAEP,MAAMA,SAAW,CACTC,GAAI,OACJC,KAAM,OACNC,SAAU,MACVC,YAAa,mBACbC,QAAS,CAAE,WAAY,UACvBC,SAAU,CAAC,CACPL,GAAI,iBACJC,KAAM,YACNE,YAAa,+BACbC,QAAS,CAAE,eAAgB,WAAY,cAAe,eAAgB,wBACvE,CACCJ,GAAI,mBACJC,KAAM,cACNE,YAAa,iCACbC,QAAS,CAAE,YAAa,aAAc,iBAAkB,eACzD,CACCJ,GAAI,cACJC,KAAM,SACNE,YAAa,4BACbC,QAAS,CAAE,iBAAkB,gBAAiB,SAAU,SAAU,SAAU,cAAe,aAAc,gBAAiB,UAAW,WAAY,aAClJ,CACCJ,GAAI,cACJC,KAAM,SACNE,YAAa,4BACbC,QAAS,CAAE,cAInB,SAAUE,GACN,IAAIC,EAAQC,OAAOD,MACfE,EAAKF,EAAME,GACXC,EAAK,aACLC,EAASF,EAAGE,OACZC,EAASN,EAAEM,OACXC,EAASN,EAAMO,WACfC,EAAW,WACXC,EAAgB,gBAEhBC,EAAS,SACTC,EAAQ,QAAUR,EAClBS,EAAS,SACTC,EAAQ,QAGRC,EAAY,WACZC,EAAQ,QACRC,EAAmB,mBACnBC,EAAY,YACZC,EAAY,YAGZC,EAAM,IAINC,EAAa,CACbC,KAAM,SACNC,WAAY,oBACZC,SAAU,GACVC,MAAO,eACPC,gBAAiB,0BACjBC,UAAW,oBACXC,WAAY,qBACZC,UAAW,cACXC,SAAU,kBACVC,OAAQ,gBACRC,OAAQ,gBACRC,MAAO,uBACPC,WAAY,gBACZC,SAAU,mBACVC,iBAAkB,iBAClBC,WAAY,gBACZC,OAAQ,gBACRC,MAAO,eACPC,QAAS,YACTC,OAAQ,YAGRC,EACY,aADZA,EAEU,WAGVC,EAAOtC,EAAOC,OAAO,CACrBsC,KAAM,SAASC,EAASC,GACpB,IAAIC,EAAOC,KAEX3C,EAAO4C,GAAGL,KAAKM,KAAKH,EAAMF,EAASC,GAEnCC,EAAKD,QAAU7C,EAAMkD,WAAW,CAAC,EAAGJ,EAAKD,QAASA,GAE9CA,GAAWA,EAAQM,WACnBL,EAAKD,QAAQM,SAAWN,EAAQM,UAGpCL,EAAKM,WAELN,EAAKO,aAELP,EAAKQ,YAELR,EAAKS,oBAEDT,EAAKD,QAAQW,eACbV,EAAKW,iBAGTX,EAAKY,YAELZ,EAAKa,oBAELb,EAAKc,qBAELd,EAAKe,aAELf,EAAKgB,kBACT,EAEAC,OAAQ,CACJtD,EACAD,EACAE,EACAE,EACAC,GAGJgC,QAAS,CACLnD,KAAM,OACNsE,YAAavB,EACbwB,YAAa,CACTC,gBAAgB,EAChBC,mBAAmB,EACnBC,cAAe,MAEnBC,gBAAiB,KACjBC,SAAU,CACNjC,OAAQ,SACRC,MAAO,QACPJ,SAAU,cAEdJ,OAAQ,GACRyC,KAAM,CAAC,EACPpB,SAAU,CAAC,EACXqB,MAAO,GACPC,YAAa,KACbC,YAAY,EACZlB,eAAe,EACfmB,KAAM,UAGVC,sBAAuB,EAAGC,SAAQC,UAAStC,SAAQhB,WAC3B,eAAelB,EAAOuE,EAAOrD,UAAUsD,EAAU,cAAcxE,EAAOwE,KAAa,MAAOtC,EAASlC,EAAOuE,EAAOrC,QAAU,oBACvGlC,EAAOuE,EAAO7C,UAAU1B,EAAOuE,EAAO5C,0EACA3B,EAAOkB,mBAGzFuD,eAAgB,EAAGF,SAAQC,UAAStC,SAAQhB,QAAOQ,QAAOvC,KAAIyC,cAC9C,eAAe5B,EAAOuE,EAAOrD,UAAUsD,EAAU,cAAcxE,EAAOwE,KAAa,MAAMtC,EAAS,GAAGlC,EAAOuE,EAAOrC,UAAY,QACzHR,IAAUQ,EACZ,iBAAiBlC,EAAOuE,EAAO7C,gBAAgB1B,EAAOb,WAAYa,EAAOb,wBAC3C,IAAjBuC,EAAMgD,UAA4C,IAAlBhD,EAAMgD,QAC/ChD,EAAMiD,MAAQjD,EACZ1B,EAAO0B,EAAMiD,MAAQjD,KACtBA,EAAME,SAAW,gBAAgB5B,EAAOuE,EAAO3C,cAAc5B,EAAO4B,YAAqB,IAC9F,WACE,IACF,sDAAsD5B,EAAOkB,mBAGjF0D,mBAAoB,EAAGL,SAAQC,UAAStC,SAAQhB,QAAOQ,QAAOvC,KAAIyC,cAClD,wCAAwC5B,EAAOb,WAAYa,EAAOb,wBACpC,IAAjBuC,EAAMgD,UAA4C,IAAlBhD,EAAMgD,QAC/ChD,EAAMiD,MAAQjD,EACZ1B,EAAO0B,EAAMiD,MAAQjD,KACtBA,EAAME,SAAW,gBAAgB5B,EAAOuE,EAAO3C,cAAc5B,EAAO4B,YAAqB,IAC9F,WAEhBiD,eAAgB,EAAGN,SAAQC,UAAS9C,WACpB,oBAAoB1B,EAAOuE,EAAOhD,aAAaiD,EAAU,cAAcxE,EAAOwE,KAAa,sBACrExE,EAAOuE,EAAO9C,YAAYzB,EAAO0B,EAAMiD,MAAQjD,yBAGrFoD,eAAgB,EAAG5D,QAAO6D,aAAc,kCAAkC7D,sBAA0B6D,iBAEpGC,cAAe,EAAG7F,KAAI4F,aAAc,gCAAgC5F,sBAAuB4F,iBAE3FjC,SAAU,WACN,IAAIN,EAAOC,KACPF,EAAUC,EAAKD,QACfzB,EAAasB,EAAKmC,OAClBU,EAAQ1C,EAAQ0C,MAChBC,EAAS3C,EAAQ2C,OAErB1C,EAAK2C,QAAU3C,EAAKF,QACf8C,SAAStE,EAAWC,MACpBqE,SAAStE,EAAWyB,EAAQmB,cAE7BwB,GACA1C,EAAK2C,QAAQD,OAAOA,GAGpBD,GACAzC,EAAK2C,QAAQE,IAhKT,YAgKwBJ,GAGhCzC,EAAK8C,cAAgB9C,EAAK+C,sBAAsB/C,EAAK2C,QAAS,CAC1DlB,KAAM1B,EAAQ0B,KACdzC,OAAQe,EAAQf,QAExB,EAEAgE,eAAgB,SAASC,GAMrB,IALA,IAAIvB,EAAQ,GAAGwB,OAAOD,GAClBE,EAAOzB,EAAM0B,QACbC,EAAS,GACTC,EAAO,GAAGA,KAEPH,GACCA,EAAKzB,MACL4B,EAAKC,MAAM7B,EAAOyB,EAAKzB,OAEvB4B,EAAKnD,KAAKkD,EAAQF,GAGtBA,EAAOzB,EAAM0B,QAGjB,OAAOC,CACX,EAEAG,cAAe,SAASC,GACpB,IACIC,EADOzD,KACaF,QAAQ4B,YAEhC,GAAK8B,EAAUE,OAIf,OAAIzG,EAAM0G,WAAWF,GACVA,EAAaD,GAGjBA,EAAUI,MAAM,sBAAsBC,KAAK,KAAKC,OAAS,GACpE,EAEAC,aAAc,SAAStF,EAAOQ,GAI1B,OA7NZ,aA2NuBjC,EAAEgH,cAAc/E,GAASA,EAAMiD,KAAOjD,GAGtCA,EAJAe,KAOCuD,cAAc9E,EAC9B,EAEAwF,eAAgB,WACZ,IAKIxF,EAJAqB,EADOE,KACQF,QACfoE,EAAiBC,OAAOC,KAAKtE,EAAQM,UAAY,CAAC,GAClDiE,EAAavE,EAAQ2B,OAAS,CAAC,EAC/B6C,EAAwB,GAG5B,GAAID,EAAWX,OACX,OAAOW,EAGX,IAAK,IAAIE,EAAI,EAAGA,EAAIL,EAAeR,OAAQa,GAAK,EAC5C9F,EAAQyF,EAAeK,GAEvBD,EAAsBjB,KAAK,CACvB5E,MAAOA,EACP/B,GAAI+B,IAIZ,OAAO6F,CACX,EAEAhE,WAAY,WACR,IAGIkE,EAAWC,EAAYC,EAAMC,EAAQC,EAHrC7E,EAAOC,KACP6E,EAAgB9E,EAAKgD,eAAehD,EAAKkE,kBACzC7D,EAAWL,EAAKD,QAAQM,UAAY,CAAC,EAKzC,IAAK,IAAI3B,KAFTsB,EAAK+E,QAAU,GAEGD,EAEdJ,EAAarE,GADboE,EAAYK,EAAcpG,IACMA,OAEhCiG,EAAmC,iBAArBF,EAAUG,OAAsBH,EAAUG,OACpD1H,EAAMyH,KAAKD,GAAaxH,EAAM8H,UAAUN,EAAWO,aAA4BP,GAEnFE,EAAS1H,EAAM0G,WAAWa,EAAUG,QAAUH,EAAUG,OACnDxH,EAAG8H,SAAShF,GAAGH,QAAQoF,QAAQR,GAAQ,GAAKF,EAAUG,OAEtD5E,EAAKoF,UAAUX,EAAUG,UACtBH,EAAUvF,MACV2F,EAAa,CACT,kBAAmBJ,EAAU9H,IAAM8H,EAAU/F,MAAQ,eAEjD+F,EAAUI,YAAeJ,EAAUI,WAAW,gBACtDA,EAAa,CACT,aAAcJ,EAAU7H,MAAQ6H,EAAU/F,SAKtD+F,EAAYlH,GAAO,EAAM,CACrB2B,MAAOuF,EAAUvF,OAASuF,EAAU7H,MAAQ6H,EAAU/F,MACtD2G,aAAcrF,EAAKD,QAAQyB,SAASpC,UACrCqF,EAAW,CACV9H,GAAI8H,EAAU9H,IAAM8H,EAAU/F,MAC9B9B,KAAM6H,EAAU7H,MAAQ6H,EAAU/F,MAClCiG,KAAMA,EACNC,OAAQA,EACRC,WAAYA,EACZS,SAAUtF,EAAKoF,UAAUX,EAAUG,SAAW5E,EAAKuF,oBAAoBd,EAAU7H,MAAQ6H,EAAU/F,SAGvGsB,EAAK+E,QAAQrG,GAAS+F,CAE9B,EAEAjE,UAAW,WACP,IAAIR,EAAOC,KACPF,EAAUC,EAAKD,QACfM,EAAWN,EAAQM,UAAY,CAAC,EAEpC,GAAIN,EAAQM,oBAAoBnD,EAAMsI,KAAKC,iBACvCzF,EAAK0F,OAASrF,MADlB,CAKA,IAAIsF,EAAUzI,EAAMsI,KAAKI,MAAMC,OAAO,CAAE5C,OAAQjD,EAAK+E,UAErD/E,EAAK0F,OAAS,IAAIC,EAAQtF,EAJ1B,CAKJ,EAEAO,UAAW,WACP,IAAIZ,EAAOC,KACPF,EAAUC,EAAKD,QACf+F,EAAmB9F,EAAKD,QAAQoB,YAEpCnB,EAAK+F,6BAEL/F,EAAKgG,SAAWhG,EAAK2C,QAAQsD,cAAc,CACvCC,MAAOlG,EAAK0F,OACZzC,OAAQjD,EAAK+E,SAAW,GACxB3D,eAAgB0E,EAAiB1E,eACjCC,kBAAmByE,EAAiBzE,kBACpCC,cAAewE,EAAiBxE,eAAiBtB,EAAKsC,eACtD6D,gBAAgB,EAChBC,WAAYrG,EAAQ6B,WACpByE,OAAQrG,EACR6B,KAAM9B,EAAQ8B,OACfyE,mBAEHtG,EAAKuG,UAAYvG,EAAKgG,SAAS7E,YAE/BnB,EAAKwG,+BACT,EAEAT,2BAA4B,WAExB9F,KAAK0C,QAAQ8D,KAAKrI,EA9TX,WA+TX,EAEAoI,8BAA+B,WAE3BvG,KAAK0C,QACA8D,KAAKtI,GAAW,GAChBsI,KAAKrI,EApUP,OAqUP,EAEAsI,iBAAkB,SAAS/B,GAUvB,OANIA,IAAS1G,EAHFgC,KAISoC,eAJTpC,KAMSgC,cAIxB,EAEAmD,UAAW,SAASR,GAChB,MAAyB,iBAAXA,GAAkC,WAAXA,CACzC,EAEAW,oBAAqB,SAAS7G,GAC1B,OAAOA,IAAUtB,EAAG8H,SAASyB,oBAEjC,EAEAC,aAAc,SAASzD,GACnB,IAKI0D,EALA7G,EAAOC,KACP3B,EAAasB,EAAKmC,OAClB+E,EAAe9G,EAAKD,QAAQmB,cAAgBvB,EAC5CoH,EAAY/G,EAAK0F,OAAOzC,QAAUjD,EAAK0F,OAAOzC,OAAOE,EAAKzE,QAAUsB,EAAK0F,OAAOzC,OAAOE,EAAKzE,OAAOiG,KACnGqC,EAAcD,GAA2B,YAAdA,EAmB/B,OAfIF,EADAG,GAAeF,IAAiB3D,EAAKyB,OACrB5E,EAAK8B,sBAEL9B,EAAKiC,eAGR/E,EAAM+J,SAASJ,EAAhB,CAA+B,CAC3C9E,OAAQzD,EACR3B,GAAIwG,EAAKxG,IAAMwG,EAAKzE,OAAS,GAC7BA,MAAOyE,EAAKzE,OAAS,GACrBQ,MAAO8H,IAAgB7D,EAAKyB,OAAS,KAAO5E,EAAKgE,aAAab,EAAKzE,MAAOyE,EAAKjE,OAC/E8C,QAASmB,EAAKnB,SAAW,GACzB5C,SAAUY,EAAKD,QAAQyB,SAASpC,SAChCM,OAAQM,EAAKoF,UAAUjC,EAAKyB,SAAW5E,EAAKuF,oBAAoBpC,EAAKzE,QAI7E,EAEAwI,uBAAwB,SAASpH,EAASqH,GACtC,IAAIzI,EAAQoB,EAAQsH,QAAQ/I,EAAMC,EAAWI,OAEzCA,EAAMiF,QACNjF,EAAM2I,YAAY/I,EAAWO,WAAYsI,EAEjD,EAEAtG,kBAAmB,WAMf,IALA,IAGInC,EAAO4I,EAHPtH,EAAOC,KACP3B,EAAasB,EAAKmC,OAClBkB,EAASjD,EAAK+E,QAGTP,EAAI,EAAGA,EAAIvB,EAAOU,OAAQa,GAAK,EACpC9F,EAAQuE,EAAOuB,IACf8C,EAAetH,EAAK2C,QAAQ4E,KAAK,UAAY7I,EAAM9B,KAAO,6BAEpC8B,EAAMQ,QAASR,EAAM4G,UAA2B,YAAf5G,EAAMiG,OAAsBjG,EAAMkG,QAIzF0C,EAAaE,SAASC,MAAMvK,EAAM+J,SAASjH,EAAKoC,mBAApBlF,CAAwC,CAChE6E,OAAQzD,EACR3B,GAAI+B,EAAM/B,IAAM+B,EAAMA,OAAS,GAC/BU,SAAUY,EAAKD,QAAQyB,SAASpC,SAChCF,MAAOc,EAAKgE,aAAatF,EAAMA,MAAOA,EAAMQ,SAGxD,EAEA4B,mBAAoB,WAKhB,IAJA,IAEIpC,EAAOgJ,EAAqBJ,EAAcK,EAAkBC,EAF5D5H,EAAOC,KACPgD,EAASjD,EAAK+E,QAGTP,EAAI,EAAGA,EAAIvB,EAAOU,OAAQa,GAAK,EACpC9F,EAAQuE,EAAOuB,IACf8C,EAAetH,EAAK2C,QAAQ4E,KAAK,UAAU7I,EAAM9B,eAAe8B,EAAM9B,YAEhD8B,EAAMkJ,OAAQlJ,EAAM4G,WAI1CsC,EAAO3K,EAAEC,EAAM+J,SAASjH,EAAKwC,cAApBtF,CAAmC,CAAEqF,QAAS7D,EAAMkJ,MAAQ,GAAIjL,GAAI+B,EAAM/B,MAEnFqD,EAAK6H,wBAAwBP,EAAcM,EAAKnB,KAAK,QAErDiB,EAAsBxK,EAAM4K,eAAeR,MAIvCA,GADAK,EAAmBD,EAAoB5H,QAAQiI,KAAK,cAAgBL,EAAoB5H,QAAQ2G,KAAK,MAAQ,OAC7E9C,OAASgE,EAAmBD,EAAoB/E,SAGhF3C,EAAKuG,UAAUyB,cAActJ,EAAM9B,MAAM+G,SACzCiE,EAAKP,YAAY/I,EAAWoB,QAC5BxC,EAAM+K,gBAAgBX,EAAcpJ,EAAkB0J,EAAKnB,KAAK,QAGpEmB,EAAKM,YAAYZ,GAEzB,EAEAO,wBAAyB,SAASM,EAAOC,GACrC,IAAIC,EAAgBnL,EAAMoL,0BAA0BH,GAE/CE,GAAkBD,GAIvBlL,EAAMqL,gBAAgBF,EAAenK,EAAkBkK,EAC3D,EAEAI,YAAa,SAAS1I,EAASqH,GAC3B,IAEIS,EADAlJ,EAAQoB,EAAQsH,QAAQ/I,EAAMC,EAAWI,OAGzCA,EAAMiF,SACNiE,EAAOlJ,EAAM6I,KAAKlJ,EAAMC,EAAWQ,YAE1B6E,SACLiE,EAAKP,YAAY/I,EAAWoB,OAAQyH,GARjClH,KASE4H,wBAAwB/H,EAAS8H,EAAKnB,KAAK,OAG5D,EAEAgC,aAAc,SAAStF,GACnB,IAEIuF,EAAOC,EAAehK,EAFtBqB,EAAOC,KACP0E,EAAOxB,EAAKwB,KAGhBhG,EAAkBgK,EAAgB1L,EAAEC,EAAM+J,SAASjH,EAAK0G,iBAAiB/B,GAArCzH,CAA4C,CAC5E6E,OAAQzD,EACRY,MAAOiE,EAAKjE,OAAS,GACrB8C,QAASmB,EAAKnB,WAGlBrD,EAAkBqB,EAAK+C,sBAAsB4F,EAAe,CACxDlH,KAAM0B,EAAK1B,KACXzC,OAAQmE,EAAKnE,UACX2J,EAEN,IAAK,IAAInE,EAAI,EAAGA,EAAIrB,EAAKzB,MAAMiC,OAAQa,GAAK,EACxCkE,EAAQvF,EAAKzB,MAAM8C,GACnB7F,EAAgBiK,OAAO5I,EAAK4G,aAAa8B,IAG7C,OAAOC,CACX,EAEAlI,kBAAmB,WAOf,IANA,IAII0C,EAAY0F,EAJZ7I,EAAOC,KACP6E,EAAgB9E,EAAKkE,iBAErB4E,EADwC,SAAxB9I,EAAKD,QAAQf,OACKgB,EAAK8C,cAAgB9C,EAAK2C,QAGvD6B,EAAI,EAAGA,EAAIM,EAAcnB,OAAQa,GAAK,EAKvCqE,GAJJ1F,EAAO2B,EAAcN,IACTG,OAEC1G,EACG+B,EAAKyI,aAAatF,GAElBnD,EAAK4G,aAAazD,GAGlC2F,EAAgBF,OAAOC,EAE/B,EAEAE,iBAAkB,WACd,IAGIC,EAASzJ,EAAQC,EAHjBO,EAAUE,KAAKF,QACfyB,EAAWzB,EAAQyB,SACnBlD,EAAasB,EAAKmC,OAqBtB,OAlBgC,OAA5BhC,EAAQwB,gBACRyH,EAAU9L,EAAM+J,SAASlH,EAAQwB,gBAAvBrE,CAAwC,CAC9C6E,OAAQzD,EACRkD,SAAUA,KAGdjC,EAAStC,EAAE,kBAAoBqB,EAAWiB,OAAS,KAAO/B,EAAOgE,EAASjC,QAAU,aAAa0J,YAAY,CACzGtE,KAAM,SACNuE,WAAY,UACZrH,KAAM9B,EAAQ8B,OAElBrC,EAAQvC,EAAE,kBAAoBqB,EAAWkB,MAAQ,KAAOhC,EAAOgE,EAAShC,OAAS,aAAayJ,YAAY,CACtGpH,KAAM9B,EAAQ8B,OAGlBmH,EAAUzJ,EAAO4J,IAAI3J,IAGlBwJ,CACX,EAEArI,eAAgB,WACZ,IAMIqI,EANAhJ,EAAOC,KACP0C,EAAU3C,EAAK2C,QACf5C,EAAUC,EAAKD,QACfzB,EAAasB,EAAKmC,OAClB+E,EAAe/G,EAAQmB,cAAgBvB,EACvCN,EAAmBsD,EAAQ4E,KAAKlJ,EAAMC,EAAWe,kBAGhDA,EAAiBsE,SAClBtE,EAAmBpC,EAAE,WAChB2F,SAAStE,EAAWe,kBACpBuD,SAASkE,EAAexI,EAAWgB,WAAa,KAGzD0J,EAAUhJ,EAAK+I,mBAEf1J,EAAiBuJ,OAAOI,GAExBhJ,EAAKF,QAAQ8I,OAAOvJ,EACxB,EAEA0D,sBAAuB,SAASqG,EAAcrJ,GAC1C,IAGIsJ,EAHArK,EAASe,EAAQf,OACjByC,EAAO1B,EAAQ0B,KACf6H,EAAmB,GAyBvB,MAtBsB,iBAAXtK,GAAkC,KAAXA,IAC9BqK,EAAkBpM,EAAE,eACfsM,SAASH,GACTxG,SAAStE,EAAWU,QAEzBsK,EAAiBhG,KAAK,OAAStE,IAGpB,SAAXA,GAAqC,iBAATyC,IACH,iBAAdA,EAAK+H,KACZF,EAAiBhG,KAAK,eAAiB7B,EAAK+H,MAChB,iBAAd/H,EAAK+H,MACnBH,EAAgBxG,IAAI,wBAAyBpB,EAAK+H,MAGtDF,EAAiBhG,KAAK,WAAa7B,EAAK+H,OAGxCH,GACAA,EAAgBzG,SAAS0G,EAAiBxF,KAAK,MAG5CuF,CACX,EAEAtI,WAAY,WACR,IAAIf,EAAOC,KACKD,EAAKuG,UAGhBkD,KAhmBO,gBAgmBazJ,EAAK0J,eAAeD,KAAKzJ,IAC7CyJ,KAAK/L,EAAUsC,EAAK2J,UAAUF,KAAKzJ,IAExCA,EAAK2C,QACAiH,GAAG9L,EAAST,EAAI2C,EAAK6J,QAAQJ,KAAKzJ,IAClC4J,GAAG7L,EAAQV,EAAI2C,EAAK8J,OAAOL,KAAKzJ,IAChC4J,GAAG/L,EAAQR,EAAIgB,EAAMC,EAAWkB,MAAOQ,EAAK8J,OAAOL,KAAKzJ,IAExDA,EAAK+J,iBACN/J,EAAK+J,eAAiB/J,EAAKgK,QAAQP,KAAKzJ,IAG5CA,EAAK0F,OAAO+D,KAAK7L,EAAQoC,EAAK+J,eAClC,EAEAL,eAAgB,SAASO,GACrB,IAAIjK,EAAOC,KACPuF,EAAO,CACHU,MAAOlG,EAAK0F,OAAOwE,SACnBC,MAAOF,EAAGE,MACVzL,MAAOuL,EAAGvL,MACV0L,MAAOH,EAAGG,MACVjC,MAAO8B,EAAG9B,OAGlBnI,EAAKkH,uBAAuB1B,EAAK2C,OAAQ3C,EAAK2E,OAE9CnK,EAAKwI,YAAYhD,EAAK2C,OAAQ3C,EAAK2E,OAE/BnK,EAAKqK,QAAQ1M,EAAe6H,IAC5ByE,EAAGK,gBAEX,EAEAX,UAAW,SAASM,GAChB,IACIzE,EAAO,CACHU,MAFGjG,KAESyF,OAAOwE,SACnBC,MAAOF,EAAGE,MACVI,OAAQN,EAAGM,QAJRtK,KAONoK,QAAQ3M,EAAU8H,EAC3B,EAEAwE,QAAS,SAASC,GACd,IACIvL,EAAQuL,EAAGvL,MACX8G,EAAO,CACH9G,MAAOA,EACP8L,MAJGvK,KAISyF,OAAOhH,IAJhBuB,KAONoK,QAAQzM,EAAQ4H,EACzB,EAEAqE,QAAS,SAASI,GACd,IACIQ,EADOxK,KACUyF,OAAOwE,SADjBjK,KAGFoK,QAAQvM,EAAQ,CAAEoI,MAAOuE,KAC9BR,EAAGK,gBAEX,EAEAR,OAAQ,SAASG,GAGbA,EAAGK,iBAFQrK,KAINT,QAJMS,KAMNoK,QAAQtM,EACjB,EAEA2M,SAAU,WACN,IACInE,EADOtG,KACUsG,UAErB,GAAKA,EAIL,OAAOA,EAAUmE,UACrB,EAEAlL,MAAO,WACH,IAAIQ,EAAOC,KACPgD,EAASjD,EAAK+E,QACdmB,EAAQlG,EAAK0F,OACbM,EAAWhG,EAAKgG,SAChB5E,EAAiBpB,EAAKuG,UAAUxG,QAAQqB,eAE5CpB,EAAKuG,UAAUoE,QAEXvJ,GACA8E,EACK0E,OA3rBP,OA4rBOA,OAAO5M,GAGhB,IAAK,IAAIwG,EAAI,EAAGA,EAAIvB,EAAOU,OAAQa,GAAK,EAAG,CACvC,IAAI9F,EAAQuE,EAAOuB,GAAG9F,MAClBoB,EAAUE,EAAK2C,QAAQ4E,KAAK,UAAY7I,EAAQ,MAChDoJ,EAAiB5K,EAAM4K,eAAehI,GACtC+K,EAAgB/K,EAAQgL,GAAG,sBAE1BhL,EAAQgL,GA3rBM,gCA2rB2BhL,EAAQgL,GA5rBtC,6BA4rBoED,GAChF/K,EAAQiL,IAAI,KAGXjD,GAAkBhI,EAAQkL,SAAS,cACpClD,EAAiB5K,EAAM4K,eAAehI,EAAQsH,QAAQ,kBAGtDU,IACI5K,EAAME,GAAG6N,QAAUnD,aAA0B5K,EAAME,GAAG6N,OACtDnD,EAAeoD,gBAEfpD,EAAe0C,MAAM,OAI7BxK,EAAKwI,YAAY1I,GAAS,GAEE,kBAAjBoG,EAAMxH,IACboB,EAAQiL,IAAI,SACZ7E,EAAMiF,IAAIzM,GAAO,IACTmM,GACR3E,EAAMiF,IAAIzM,EAAO,KAEzB,CAEAsB,EAAK2C,QAAQ4E,KAAKlJ,EAAMC,EAAWO,YAC9BuM,YAAY9M,EAAWO,YAExBuC,GACA8E,EACKuD,KApuBP,MAouBiBzD,EAASqF,gBACnB5B,KAAKzL,EAAWgI,EAASqF,eAEtC,EAEAC,WAAY,SAASC,GACjB,IAAIvL,EAAOC,KAEXD,EAAKwL,UAELxL,EAAK2C,QACAyI,YAAY9M,EAAWE,YACvBiN,WAAWtN,GACXuN,QAEL1L,EAAKH,KAAKG,EAAKF,QAASyL,EAC5B,EAEAC,QAAS,WACL,IAAIxL,EAAOC,KAEXD,EAAK2C,QAAQgJ,IAAItO,GAEb2C,EAAK0F,SACL1F,EAAK0F,OAAOkF,OAAOhN,EAAQoC,EAAK+J,gBAChC/J,EAAK+J,eAAiB,MAG1BzM,EAAO4C,GAAGsL,QAAQrL,KAAKH,EAAKgG,UAE5B1I,EAAO4C,GAAGsL,QAAQrL,KAAKH,GAEnBA,EAAKgG,WACLhG,EAAKgG,SAASwF,UACdxL,EAAKgG,SAAW,KAExB,IAGJ9I,EAAM0O,cAAcC,eAAe,OAAQ,WAE3CzO,EAAG0O,OAAOlM,GAEVrC,GAAO,EAAMqC,EAAM,CAAEmC,OAAQzD,GAElC,CAhyBC,CAgyBCnB,OAAOD,MAAM6O,QAClB,IAAIC,QAAU9O,aAELR,SAAUsP","ignoreList":[],"sourcesContent":["import './kendo.editable.js';\nimport './kendo.button.js';\n\nconst __meta__ = {\n        id: \"form\",\n        name: \"Form\",\n        category: \"web\",\n        description: \"The Form widget.\",\n        depends: [ \"editable\", \"button\" ],\n        features: [{\n            id: \"form-dropdowns\",\n            name: \"DropDowns\",\n            description: \"Support for DropDown editors\",\n            depends: [ \"autocomplete\", \"combobox\", \"multiselect\", \"dropdowntree\", \"multicolumncombobox\" ]\n        }, {\n            id: \"form-datepickers\",\n            name: \"DatePickers\",\n            description: \"Support for DatePicker editors\",\n            depends: [ \"dateinput\", \"datepicker\", \"datetimepicker\", \"timepicker\" ]\n        }, {\n            id: \"form-inputs\",\n            name: \"Inputs\",\n            description: \"Support for Input editors\",\n            depends: [ \"numerictextbox\", \"maskedtextbox\", \"switch\", \"rating\", \"slider\", \"colorpicker\", \"radiogroup\", \"checkboxgroup\", \"textbox\", \"textarea\", \"checkbox\" ]\n        }, {\n            id: \"form-editor\",\n            name: \"Editor\",\n            description: \"Support for Editor editor\",\n            depends: [ \"editor\" ]\n        }]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            NS = \".kendoForm\",\n            Widget = ui.Widget,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            VALIDATE = \"validate\",\n            VALIDATEFIELD = \"validateField\",\n            VALIDATEINPUT = \"validateInput\",\n            CHANGE = \"change\",\n            CLICK = \"click\" + NS,\n            SUBMIT = \"submit\",\n            CLEAR = \"clear\",\n            MAX_WIDTH = \"max-width\",\n            SET = \"set\",\n            EQUAL_SET = \"equalSet\",\n            GROUP = \"group\",\n            ARIA_DESCRIBEDBY = \"aria-describedby\",\n            DATA_STOP = \"data-stop\",\n            DATA_ROLE = \"data-role\",\n            EDITABLE = \"editable\",\n            FORM = \"form\",\n            DOT = \".\",\n            DATA_ROLE_RADIO_GROUP = \"[data-role='radiogroup']\",\n            DATA_ROLE_CHECKBOX_GROUP = \"[data-role='checkboxgroup']\";\n\n        var formStyles = {\n            form: \"k-form\",\n            horizontal: \"k-form-horizontal\",\n            vertical: \"\",\n            field: \"k-form-field\",\n            fieldsContainer: \"k-form-fields-container\",\n            fieldWrap: \"k-form-field-wrap\",\n            fieldError: \"k-form-field-error\",\n            fieldHint: \"k-form-hint\",\n            fieldset: \"k-form-fieldset\",\n            layout: \"k-form-layout\",\n            legend: \"k-form-legend\",\n            label: \"k-label k-form-label\",\n            emptyLabel: \"k-label-empty\",\n            optional: \"k-label-optional\",\n            buttonsContainer: \"k-form-buttons\",\n            buttonsEnd: \"k-buttons-end\",\n            submit: \"k-form-submit\",\n            clear: \"k-form-clear\",\n            invalid: \"k-invalid\",\n            hidden: \"k-hidden\"\n        };\n\n        var formOrientation = {\n            horizontal: \"horizontal\",\n            vertical: \"vertical\"\n        };\n\n        var Form = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.options = kendo.deepExtend({}, that.options, options);\n\n                if (options && options.formData) {\n                    that.options.formData = options.formData;\n                }\n\n                that._wrapper();\n\n                that._setFields();\n\n                that._setModel();\n\n                that._renderContainers();\n\n                if (that.options.renderButtons) {\n                    that._renderButtons();\n                }\n\n                that._editable();\n\n                that._renderBoolLabels();\n\n                that._renderFieldsHints();\n\n                that._setEvents();\n\n                that._applyCssClasses();\n            },\n\n            events: [\n                VALIDATEFIELD,\n                VALIDATE,\n                CHANGE,\n                SUBMIT,\n                CLEAR\n            ],\n\n            options: {\n                name: \"Form\",\n                orientation: formOrientation.vertical,\n                validatable: {\n                    validateOnBlur: true,\n                    validationSummary: false,\n                    errorTemplate: null\n                },\n                buttonsTemplate: null,\n                messages: {\n                    submit: \"Submit\",\n                    clear: \"Clear\",\n                    optional: \"(Optional)\"\n                },\n                layout: \"\",\n                grid: {},\n                formData: {},\n                items: [],\n                formatLabel: null,\n                focusFirst: false,\n                renderButtons: true,\n                size: \"medium\"\n            },\n\n            _noLabelfieldTemplate: ({ styles, colSpan, hidden, field })=>\n                                    `<div class='${encode(styles.field)} ${colSpan ? `k-col-span-${encode(colSpan)}` : '' } ${hidden ? encode(styles.hidden) : '' }'>` +\n                                        `<span class='${encode(styles.label)} ${encode(styles.emptyLabel)}'></span>` +\n                                        `<div class='k-form-field-wrap' data-container-for='${encode(field)}'></div>` +\n                                    \"</div>\",\n\n            _fieldTemplate: ({ styles, colSpan, hidden, field, label, id, optional }) =>\n                            `<div class='${encode(styles.field)} ${colSpan ? `k-col-span-${encode(colSpan)}` : ''} ${hidden ? `${encode(styles.hidden)}` : ''}'>` +\n                                ((label && !hidden) ?\n                                `<label class='${encode(styles.label)}' for='${encode(id)}' id='${encode(id)}-form-label'>` +\n                                    ((typeof label.encoded != 'undefined' && label.encoded === false) ?\n                                    label.text || label\n                                    : encode(label.text || label)) +\n                                    (label.optional ? `<span class='${encode(styles.optional)}'>${encode(optional)}</span>` : '') +\n                                \"</label>\"\n                                : '' ) +\n                                `<div class='k-form-field-wrap' data-container-for='${encode(field)}'></div>` +\n                            \"</div>\",\n\n            _boolLabelTemplate: ({ styles, colSpan, hidden, field, label, id, optional }) =>\n                            `<label class='k-checkbox-label' for='${encode(id)}' id='${encode(id)}-form-label'>` +\n                                ((typeof label.encoded != 'undefined' && label.encoded === false) ?\n                                label.text || label\n                                : encode(label.text || label)) +\n                                (label.optional ? `<span class='${encode(styles.optional)}'>${encode(optional)}</span>` : '') +\n                            \"</label>\",\n\n            _groupTemplate: ({ styles, colSpan, label }) =>\n                            `<fieldset class='${encode(styles.fieldset)} ${colSpan ? `k-col-span-${encode(colSpan)}` : ''}'>` +\n                                `<legend class='${encode(styles.legend)}'>${encode(label.text || label)}</legend>` +\n                            \"</fieldset>\",\n\n            _errorTemplate: ({ field, message }) => `<span class='k-form-error' id='${field}-form-error'><div>${message}</div></span>`,\n\n            _hintTemplate: ({ id, message }) => `<div class='k-form-hint' id='${id}-form-hint'><span>${message}</span></div>`,\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    formStyles = Form.styles,\n                    width = options.width,\n                    height = options.height;\n\n                that.wrapper = that.element\n                    .addClass(formStyles.form)\n                    .addClass(formStyles[options.orientation]);\n\n                if (height) {\n                    that.wrapper.height(height);\n                }\n\n                if (width) {\n                    that.wrapper.css(MAX_WIDTH, width);\n                }\n\n                that.layoutWrapper = that._setupLayoutContainer(that.wrapper, {\n                    grid: options.grid,\n                    layout: options.layout\n                });\n            },\n\n            _flattenFields: function(fields) {\n                var items = [].concat(fields),\n                    item = items.shift(),\n                    result = [],\n                    push = [].push;\n\n                while (item) {\n                    if (item.items) {\n                        push.apply(items, item.items);\n                    } else {\n                        push.call(result, item);\n                    }\n\n                    item = items.shift();\n                }\n\n                return result;\n            },\n\n            _defaultLabel: function(fieldName) {\n                var that = this,\n                    customFormat = that.options.formatLabel;\n\n                if (!fieldName.length) {\n                    return;\n                }\n\n                if (kendo.isFunction(customFormat)) {\n                    return customFormat(fieldName);\n                }\n\n                return fieldName.split(/(.*[a-z])(?=[A-Z])/).join(\" \").trim() + \":\";\n            },\n\n            _formatLabel: function(field, label) {\n                var that = this,\n                    text = $.isPlainObject(label) ? label.text : label;\n\n                if (text !== undefined$1) {\n                    return label;\n                }\n\n                return that._defaultLabel(field);\n            },\n\n            _defaultFields: function() {\n                var that = this,\n                    options = that.options,\n                    formDataFields = Object.keys(options.formData || {}),\n                    itemFields = options.items || {},\n                    defaultFormDataFields = [],\n                    field;\n\n                if (itemFields.length) {\n                    return itemFields;\n                }\n\n                for (var i = 0; i < formDataFields.length; i += 1) {\n                    field = formDataFields[i];\n\n                    defaultFormDataFields.push({\n                        field: field,\n                        id: field\n                    });\n                }\n\n                return defaultFormDataFields;\n            },\n\n            _setFields: function() {\n                var that = this,\n                    defaultFields = that._flattenFields(that._defaultFields()),\n                    formData = that.options.formData || {},\n                    fieldInfo, fieldValue, type, editor, attributes;\n\n                that._fields = [];\n\n                for (var field in defaultFields) {\n                    fieldInfo = defaultFields[field];\n                    fieldValue = formData[fieldInfo.field];\n\n                    type = typeof fieldInfo.editor === \"string\" ? fieldInfo.editor :\n                        kendo.type(fieldValue ? kendo.parseDate(fieldValue.toString()) || fieldValue : fieldValue);\n\n                    editor = kendo.isFunction(fieldInfo.editor) ? fieldInfo.editor :\n                         ui.Editable.fn.options.editors[type] ? \"\" : fieldInfo.editor;\n\n                    if (!that._isHidden(fieldInfo.editor)) {\n                        if (fieldInfo.label) {\n                            attributes = {\n                                \"aria-labelledby\": fieldInfo.id || fieldInfo.field + \"-form-label\"\n                            };\n                        } else if (!fieldInfo.attributes || !fieldInfo.attributes[\"aria-label\"]) {\n                            attributes = {\n                                \"aria-label\": fieldInfo.name || fieldInfo.field\n                            };\n                        }\n                    }\n\n                    fieldInfo = extend(true, {\n                        label: fieldInfo.label || fieldInfo.name || fieldInfo.field,\n                        optionalText: that.options.messages.optional\n                    }, fieldInfo, {\n                        id: fieldInfo.id || fieldInfo.field,\n                        name: fieldInfo.name || fieldInfo.field,\n                        type: type,\n                        editor: editor,\n                        attributes: attributes,\n                        isHidden: that._isHidden(fieldInfo.editor) || that._isAntiForgeryToken(fieldInfo.name || fieldInfo.field)\n                    });\n\n                    that._fields[field] = fieldInfo;\n                }\n            },\n\n            _setModel: function() {\n                var that = this,\n                    options = that.options,\n                    formData = options.formData || {};\n\n                if (options.formData instanceof kendo.data.ObservableObject) {\n                    that._model = formData;\n                    return;\n                }\n\n                var MyModel = kendo.data.Model.define({ fields: that._fields });\n\n                that._model = new MyModel(formData);\n            },\n\n            _editable: function() {\n                var that = this,\n                    options = that.options,\n                    validatorOptions = that.options.validatable;\n\n                that._addEditableMvvmAttributes();\n\n                that.editable = that.wrapper.kendoEditable({\n                    model: that._model,\n                    fields: that._fields || [],\n                    validateOnBlur: validatorOptions.validateOnBlur,\n                    validationSummary: validatorOptions.validationSummary,\n                    errorTemplate: validatorOptions.errorTemplate || that._errorTemplate,\n                    clearContainer: false,\n                    skipFocus: !options.focusFirst,\n                    target: that,\n                    size: options.size\n                }).getKendoEditable();\n\n                that.validator = that.editable.validatable;\n\n                that._removeEditableMvvmAttributes();\n            },\n\n            _addEditableMvvmAttributes: function() {\n                // required for two mvvm bindable widgets on one element\n                this.wrapper.attr(DATA_ROLE, EDITABLE);\n            },\n\n            _removeEditableMvvmAttributes: function() {\n                // required for two mvvm bindable widgets on one element\n                this.wrapper\n                    .attr(DATA_STOP, true)\n                    .attr(DATA_ROLE, FORM);\n            },\n\n            _getItemTemplate: function(type) {\n                var that = this,\n                    template;\n\n                if (type === GROUP) {\n                    template = that._groupTemplate;\n                } else {\n                    template = that._fieldTemplate;\n                }\n\n                return template;\n            },\n\n            _isHidden: function(editor) {\n                return typeof editor === \"string\" && editor === \"hidden\";\n            },\n\n            _isAntiForgeryToken: function(field) {\n                return field === ui.Editable.antiForgeryTokenName;\n\n            },\n\n            _renderField: function(item) {\n                var that = this,\n                    formStyles = Form.styles,\n                    isHorizontal = that.options.orientation === formOrientation.horizontal,\n                    fieldType = that._model.fields && that._model.fields[item.field] && that._model.fields[item.field].type,\n                    isBoolField = fieldType && fieldType === \"boolean\",\n                    fieldTemplate, renderedField;\n\n                if (isBoolField && isHorizontal && !item.editor) {\n                    fieldTemplate = that._noLabelfieldTemplate;\n                } else {\n                    fieldTemplate = that._fieldTemplate;\n                }\n\n                renderedField = (kendo.template(fieldTemplate)({\n                    styles: formStyles,\n                    id: item.id || item.field || \"\",\n                    field: item.field || \"\",\n                    label: isBoolField && !item.editor ? null : that._formatLabel(item.field, item.label),\n                    colSpan: item.colSpan || \"\",\n                    optional: that.options.messages.optional,\n                    hidden: that._isHidden(item.editor) || that._isAntiForgeryToken(item.field)\n                }));\n\n                return renderedField;\n            },\n\n            _toggleFieldErrorState: function(element, state) {\n                var field = element.closest(DOT + formStyles.field);\n\n                if (field.length) {\n                    field.toggleClass(formStyles.fieldError, state);\n                }\n            },\n\n            _renderBoolLabels: function() {\n                var that = this,\n                    formStyles = Form.styles,\n                    fields = that._fields,\n                    field, fieldElement;\n\n                for (var i = 0; i < fields.length; i += 1) {\n                    field = fields[i];\n                    fieldElement = that.wrapper.find(\"[name='\" + field.name + \"']:not([type='hidden'])\");\n\n                    if (!fieldElement || !field.label || field.isHidden || field.type !== \"boolean\" || field.editor) {\n                        continue;\n                    }\n\n                    fieldElement.parent().after(kendo.template(that._boolLabelTemplate)({\n                        styles: formStyles,\n                        id: field.id || field.field || \"\",\n                        optional: that.options.messages.optional,\n                        label: that._formatLabel(field.field, field.label)\n                    }));\n                }\n            },\n\n            _renderFieldsHints: function() {\n                var that = this,\n                    fields = that._fields,\n                    field, fieldWidgetInstance, fieldElement, nextLabelElement, hint;\n\n                for (var i = 0; i < fields.length; i += 1) {\n                    field = fields[i];\n                    fieldElement = that.wrapper.find(`[name='${field.name}'],[id='${field.name}']`);\n\n                    if (!fieldElement || !field.hint || field.isHidden) {\n                        continue;\n                    }\n\n                    hint = $(kendo.template(that._hintTemplate)({ message: field.hint || \"\", id: field.id }));\n\n                    that._associateHintContainer(fieldElement, hint.attr(\"id\"));\n\n                    fieldWidgetInstance = kendo.widgetInstance(fieldElement);\n\n                    if (fieldWidgetInstance) {\n                        nextLabelElement = fieldWidgetInstance.element.next(\"label[for='\" + fieldWidgetInstance.element.attr(\"id\") + \"']\");\n                        fieldElement = nextLabelElement.length ? nextLabelElement : fieldWidgetInstance.wrapper;\n                    }\n\n                    if (that.validator._errorsByName(field.name).length) {\n                        hint.toggleClass(formStyles.hidden);\n                        kendo.removeAttribute(fieldElement, ARIA_DESCRIBEDBY, hint.attr(\"id\"));\n                    }\n\n                    hint.insertAfter(fieldElement);\n                }\n            },\n\n            _associateHintContainer: function(input, hintId) {\n                var nextFocusable = kendo.getWidgetFocusableElement(input);\n\n                if (!nextFocusable || !hintId) {\n                    return;\n                }\n\n                kendo.toggleAttribute(nextFocusable, ARIA_DESCRIBEDBY, hintId);\n            },\n\n            _toggleHint: function(element, state) {\n                var that = this,\n                    field = element.closest(DOT + formStyles.field),\n                    hint;\n\n                if (field.length) {\n                    hint = field.find(DOT + formStyles.fieldHint);\n\n                    if (hint.length) {\n                        hint.toggleClass(formStyles.hidden, state);\n                        that._associateHintContainer(element, hint.attr(\"id\"));\n                    }\n                }\n            },\n\n            _renderGroup: function(item) {\n                var that = this,\n                    type = item.type,\n                    child, renderedGroup, fieldsContainer;\n\n                fieldsContainer = renderedGroup = $(kendo.template(that._getItemTemplate(type))({\n                    styles: formStyles,\n                    label: item.label || \"\",\n                    colSpan: item.colSpan\n                }));\n\n                fieldsContainer = that._setupLayoutContainer(renderedGroup, {\n                    grid: item.grid,\n                    layout: item.layout\n                }) || renderedGroup;\n\n                for (var i = 0; i < item.items.length; i += 1) {\n                    child = item.items[i];\n                    fieldsContainer.append(that._renderField(child));\n                }\n\n                return renderedGroup;\n            },\n\n            _renderContainers: function() {\n                var that = this,\n                    defaultFields = that._defaultFields(),\n                    columnsLayout = that.options.layout === \"grid\",\n                    targetContainer = columnsLayout ? that.layoutWrapper : that.wrapper,\n                    item, type, container;\n\n                for (var i = 0; i < defaultFields.length; i += 1) {\n                    item = defaultFields[i];\n                    type = item.type;\n\n                    if (type === GROUP) {\n                        container = that._renderGroup(item);\n                    } else {\n                        container = that._renderField(item);\n                    }\n\n                    targetContainer.append(container);\n                }\n            },\n\n            _buttonsTemplate: function() {\n                var options = this.options,\n                    messages = options.messages,\n                    formStyles = Form.styles,\n                    buttons, submit, clear;\n\n                if (options.buttonsTemplate !== null) {\n                    buttons = kendo.template(options.buttonsTemplate)({\n                        styles: formStyles,\n                        messages: messages\n                    });\n                } else {\n                    submit = $(\"<button class='\" + formStyles.submit + \"'>\" + encode(messages.submit) + \"</button>\").kendoButton({\n                        type: \"submit\",\n                        themeColor: \"primary\",\n                        size: options.size\n                    });\n                    clear = $(\"<button class='\" + formStyles.clear + \"'>\" + encode(messages.clear) + \"</button>\").kendoButton({\n                        size: options.size\n                    });\n\n                    buttons = submit.add(clear);\n                }\n\n                return buttons;\n            },\n\n            _renderButtons: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    formStyles = Form.styles,\n                    isHorizontal = options.orientation === formOrientation.horizontal,\n                    buttonsContainer = wrapper.find(DOT + formStyles.buttonsContainer),\n                    buttons;\n\n                if (!buttonsContainer.length) {\n                    buttonsContainer = $(\"<div />\")\n                        .addClass(formStyles.buttonsContainer)\n                        .addClass(isHorizontal ? formStyles.buttonsEnd : \"\");\n                }\n\n                buttons = that._buttonsTemplate();\n\n                buttonsContainer.append(buttons);\n\n                that.element.append(buttonsContainer);\n            },\n\n            _setupLayoutContainer: function(appendTarget, options) {\n                var layout = options.layout,\n                    grid = options.grid,\n                    layoutClassNames = [],\n                    layoutContainer, rowsGap, colsGap;\n\n                if (typeof layout === \"string\" && layout !== \"\") {\n                    layoutContainer = $(\"<div></div>\")\n                        .appendTo(appendTarget)\n                        .addClass(formStyles.layout);\n\n                    layoutClassNames.push(\"k-d-\" + layout);\n                }\n\n                if (layout === \"grid\" && typeof grid === \"object\") {\n                    if (typeof grid.cols === \"number\") {\n                        layoutClassNames.push(\"k-grid-cols-\" + grid.cols);\n                    } else if (typeof grid.cols === \"string\") {\n                        layoutContainer.css(\"grid-template-columns\", grid.cols);\n                    }\n\n                    layoutClassNames.push(\"k-gap-x-\" + grid.cols);\n                }\n\n                if (layoutContainer) {\n                    layoutContainer.addClass(layoutClassNames.join(\" \"));\n                }\n\n                return layoutContainer;\n            },\n\n            _setEvents: function() {\n                var that = this,\n                    validator = that.validator;\n\n                validator\n                    .bind(VALIDATEINPUT, that._validateField.bind(that))\n                    .bind(VALIDATE, that._validate.bind(that));\n\n                that.wrapper\n                    .on(SUBMIT + NS, that._submit.bind(that))\n                    .on(CLEAR + NS, that._clear.bind(that))\n                    .on(CLICK + NS, DOT + formStyles.clear, that._clear.bind(that));\n\n                if (!that._changeHandler) {\n                    that._changeHandler = that._change.bind(that);\n                }\n\n                that._model.bind(CHANGE, that._changeHandler);\n            },\n\n            _validateField: function(ev) {\n                var that = this,\n                    data = {\n                        model: that._model.toJSON(),\n                        valid: ev.valid,\n                        field: ev.field,\n                        error: ev.error,\n                        input: ev.input\n                    };\n\n                that._toggleFieldErrorState(data.input, !data.valid);\n\n                that._toggleHint(data.input, !data.valid);\n\n                if (that.trigger(VALIDATEFIELD, data)) {\n                    ev.preventDefault();\n                }\n            },\n\n            _validate: function(ev) {\n                var that = this,\n                    data = {\n                        model: that._model.toJSON(),\n                        valid: ev.valid,\n                        errors: ev.errors\n                    };\n\n                that.trigger(VALIDATE, data);\n            },\n\n            _change: function(ev) {\n                var that = this,\n                    field = ev.field,\n                    data = {\n                        field: field,\n                        value: that._model[field]\n                    };\n\n                that.trigger(CHANGE, data);\n            },\n\n            _submit: function(ev) {\n                var that = this,\n                    jsonModel = that._model.toJSON();\n\n                if (that.trigger(SUBMIT, { model: jsonModel })) {\n                    ev.preventDefault();\n                }\n            },\n\n            _clear: function(ev) {\n                var that = this;\n\n                ev.preventDefault();\n\n                that.clear();\n\n                that.trigger(CLEAR);\n            },\n\n            validate: function() {\n                var that = this,\n                    validator = that.validator;\n\n                if (!validator) {\n                    return;\n                }\n\n                return validator.validate();\n            },\n\n            clear: function() {\n                var that = this,\n                    fields = that._fields,\n                    model = that._model,\n                    editable = that.editable,\n                    validateOnBlur = that.validator.options.validateOnBlur;\n\n                that.validator.reset();\n\n                if (validateOnBlur) {\n                    model\n                        .unbind(SET)\n                        .unbind(EQUAL_SET);\n                }\n\n                for (var i = 0; i < fields.length; i += 1) {\n                    var field = fields[i].field;\n                    var element = that.wrapper.find(\"[name='\" + field + \"']\");\n                    var widgetInstance = kendo.widgetInstance(element);\n                    var isHiddenInput = element.is(\"input[type=hidden]\");\n\n                    if (!element.is(DATA_ROLE_CHECKBOX_GROUP) && !element.is(DATA_ROLE_RADIO_GROUP) && !isHiddenInput) {\n                        element.val(\"\");\n                    }\n\n                    if (!widgetInstance && element.hasClass(\"k-hidden\")) {\n                        widgetInstance = kendo.widgetInstance(element.closest(\".k-signature\"));\n                    }\n\n                    if (widgetInstance) {\n                        if (kendo.ui.Upload && widgetInstance instanceof kendo.ui.Upload) {\n                            widgetInstance.clearAllFiles();\n                        } else {\n                            widgetInstance.value(null);\n                        }\n                    }\n\n                    that._toggleHint(element, false);\n\n                    if (typeof model[field] === \"boolean\") {\n                        element.val(\"false\");\n                        model.set(field, false);\n                    } else if (!isHiddenInput) {\n                        model.set(field, null);\n                    }\n                }\n\n                that.wrapper.find(DOT + formStyles.fieldError)\n                    .removeClass(formStyles.fieldError);\n\n                if (validateOnBlur) {\n                    model\n                        .bind(SET, editable._validateProxy)\n                        .bind(EQUAL_SET, editable._validateProxy);\n                }\n            },\n\n            setOptions: function(newOptions) {\n                var that = this;\n\n                that.destroy();\n\n                that.wrapper\n                    .removeClass(formStyles.horizontal)\n                    .removeAttr(DATA_STOP)\n                    .empty();\n\n                that.init(that.element, newOptions);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n\n                if (that._model) {\n                    that._model.unbind(CHANGE, that._changeHandler);\n                    that._changeHandler = null;\n                }\n\n                Widget.fn.destroy.call(that.editable);\n\n                Widget.fn.destroy.call(that);\n\n                if (that.editable) {\n                    that.editable.destroy();\n                    that.editable = null;\n                }\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"Form\", \"k-form-\");\n\n        ui.plugin(Form);\n\n        extend(true, Form, { styles: formStyles });\n\n  })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}