{"version":3,"file":"kendo.validator.js","names":["__meta__","id","name","category","description","depends","$","kendo","window","Widget","ui","NS","INVALIDMSG","invalidMsgRegExp","RegExp","INVALIDINPUT","VALIDINPUT","VALIDATIONSUMMARY","INVALIDLABEL","MESSAGEBOX","ARIAINVALID","emailRegExp","ALLOWED_URL_PROTOCOLS","INPUTSELECTOR","CHECKBOXSELECTOR","NUMBERINPUTSELECTOR","BLUR","NAME","FORM","NOVALIDATE","VALIDATE","CHANGE","VALIDATE_INPUT","patternMatcher","value","pattern","test","hasAttribute","input","length","attributes","parseHtml","text","parseHTML","searchForMessageContainer","elements","fieldName","element","containers","idx","className","getAttribute","attr","add","isLabelFor","label","nodeName","validator","rules","messages","allowSubmit","noop","validateOnInit","SUMMARYTEMPLATE","errors","result","i","field","message","Validator","extend","init","options","that","this","resolved","resolvers","ruleResolvers","resolve","resolveRules","validateAttributeSelector","fn","call","_errorTemplate","template","errorTemplate","_summaryTemplate","validationSummary","is","_inputSelector","_checkboxSelector","_errors","_attachEvents","_isValidated","_validateOnInit","validate","events","required","min","max","step","email","url","date","dateCompare","captcha","noNameCheckbox","quote","indexOf","namedCheckbox","find","checkbox","filter","radio","val","parseFloat","raise","decimals","split","Math","pow","floor","selector","matcher","URL","includes","protocol","parseDate","widgetInstance","isValidated","isValid","data","getCaptchaId","_validating","done","_checkElement","fail","error","console","warn","removeData","validateOnBlur","_allowSubmit","destroy","off","_submit","e","stopPropagation","stopImmediatePropagation","preventDefault","state","validateInput","trigger","on","bind","inputs","invalid","eq","showValidationSummary","valid","_checkValidity","lbl","_findMessageContainer","next","addClass","messageText","_extractMessage","key","messageLabel","replace","wasValid","isInputInner","inputWrapper","parent","removeAttr","hasClass","closest","lblId","_decorateMessageContainer","replaceWith","parentElement","get","nextElement","prevElement","prev","wrapper","insertAfter","removeClass","_inputWrapper","toggleClass","inputWrap","inputLabel","_inputLabel","errorId","_associateMessageContainer","hideMessages","_disassociateMessageContainers","reset","labels","hideValidationSummary","locators","messageLocators","getElementsByTagName","locate","container","decorate","ruleKey","nonDefaultMessage","customMessage","prototype","isFunction","format","rule","results","push","setOptions","deepExtend","_setEvents","_getInputNames","sorted","nextFocusable","getWidgetFocusableElement","toggleAttribute","addBack","_errorsByName","inputNames","_renderSummary","insertBefore","join","_summaryClick","link","target","errorsList","summary","html","plugin","jQuery","kendo$1"],"sources":["kendo.validator.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.core.js';\n\nconst __meta__ = {\n    id: \"validator\",\n    name: \"Validator\",\n    category: \"web\",\n    description: \"The Validator offers an easy way to do a client-side form validation.\",\n    depends: [ \"core\" ]\n};\n\n\n(function($, undefined$1) {\n    let kendo = window.kendo,\n        Widget = kendo.ui.Widget,\n        NS = \".kendoValidator\",\n        INVALIDMSG = \"k-invalid-msg\",\n        invalidMsgRegExp = new RegExp(INVALIDMSG,'i'),\n        INVALIDINPUT = \"k-invalid\",\n        VALIDINPUT = \"k-valid\",\n        VALIDATIONSUMMARY = \"k-validation-summary\",\n        INVALIDLABEL = \"k-text-error\",\n        MESSAGEBOX = \"k-messagebox k-messagebox-error\",\n        INPUTINNER = \".k-input-inner\",\n        INPUTWRAPPER = \".k-input\",\n        ARIAINVALID = \"aria-invalid\",\n        ARIADESCRIBEDBY = \"aria-describedby\",\n        emailRegExp = /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/i,\n        ALLOWED_URL_PROTOCOLS = [\"http:\", \"https:\", \"ftp:\", \"ftps:\"],\n        INPUTSELECTOR = \":input:not(:button,[type=submit],[type=reset],[disabled],[readonly])\",\n        CHECKBOXSELECTOR = \":checkbox:not([disabled],[readonly])\",\n        NUMBERINPUTSELECTOR = \"[type=number],[type=range]\",\n        BLUR = \"blur\",\n        NAME = \"name\",\n        FORM = \"form\",\n        NOVALIDATE = \"novalidate\",\n        //events\n        VALIDATE = \"validate\",\n        CHANGE = \"change\",\n        VALIDATE_INPUT = \"validateInput\",\n\n        patternMatcher = function(value, pattern) {\n            if (typeof pattern === \"string\") {\n                pattern = new RegExp('^(?:' + pattern + ')$');\n            }\n            return pattern.test(value);\n        },\n        matcher = function(input, selector, pattern) {\n            var value = input.val();\n\n            if (input.filter(selector).length && value !== \"\") {\n                return patternMatcher(value, pattern);\n            }\n            return true;\n        },\n        hasAttribute = function(input, name) {\n            if (input.length) {\n                return input[0].attributes[name] != null;\n            }\n            return false;\n        };\n\n    if (!kendo.ui.validator) {\n        kendo.ui.validator = { rules: {}, messages: {}, allowSubmit: $.noop, validateOnInit: $.noop };\n    }\n\n    function resolveRules(element) {\n        var resolvers = kendo.ui.validator.ruleResolvers || {},\n            rules = {},\n            name;\n\n        for (name in resolvers) {\n            $.extend(true, rules, resolvers[name].resolve(element));\n        }\n        return rules;\n    }\n\n    function decode(value) {\n        return value.replace(/&amp/g, '&amp;')\n            .replace(/&quot;/g, '\"')\n            .replace(/&#39;/g, \"'\")\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>');\n    }\n\n    function numberOfDecimalDigits(value) {\n        value = (value + \"\").split('.');\n        if (value.length > 1) {\n            return value[1].length;\n        }\n        return 0;\n    }\n\n    function parseHtml(text) {\n        if ($.parseHTML) {\n            return $($.parseHTML(text));\n        }\n        return $(text);\n    }\n\n    function searchForMessageContainer(elements, fieldName) {\n        var containers = $(),\n            element,\n            attr;\n\n        for (var idx = 0, length = elements.length; idx < length; idx++) {\n            element = elements[idx];\n            if (invalidMsgRegExp.test(element.className)) {\n                attr = element.getAttribute(kendo.attr(\"for\"));\n                if (attr === fieldName) {\n                    containers = containers.add(element);\n                }\n            }\n        }\n        return containers;\n    }\n\n    function isLabelFor(label, element) {\n        if (!label) {\n            return false;\n        }\n        if (typeof label.nodeName !== 'string' || label.nodeName !== 'LABEL') {\n            return false;\n        }\n        if (typeof label.getAttribute('for') !== 'string' || typeof element.getAttribute('id') !== 'string') {\n            return false;\n        }\n        if (label.getAttribute('for') !== element.getAttribute('id')) {\n            return false;\n        }\n\n        return true;\n    }\n\n    var SUMMARYTEMPLATE = ({ errors }) => {\n        let result = '<ul>';\n        for (var i = 0; i < errors.length; i += 1) {\n            result += `<li><a data-field=\"${errors[i].field}\" href=\"#\">${errors[i].message}</a></li>`;\n        }\n\n        result += '</ul>';\n        return result;\n    };\n\n    var Validator = Widget.extend({\n        init: function(element, options) {\n            var that = this,\n                resolved = resolveRules(element),\n                validateAttributeSelector = \"[\" + kendo.attr(\"validate\") + \"!=false]\";\n\n            options = options || {};\n\n            options.rules = $.extend({}, kendo.ui.validator.rules, resolved.rules, options.rules);\n            options.messages = $.extend({}, kendo.ui.validator.messages, resolved.messages, options.messages);\n\n            Widget.fn.init.call(that, element, options);\n\n            that._errorTemplate = kendo.template(that.options.errorTemplate);\n            that._summaryTemplate = kendo.template(that.options.validationSummary.template || SUMMARYTEMPLATE);\n\n            if (that.element.is(FORM)) {\n                that.element.attr(NOVALIDATE, NOVALIDATE);\n            }\n\n            that._inputSelector = INPUTSELECTOR + validateAttributeSelector;\n            that._checkboxSelector = CHECKBOXSELECTOR + validateAttributeSelector;\n\n            that._errors = {};\n            that._attachEvents();\n            that._isValidated = false;\n\n            if (that._validateOnInit()) {\n                that.validate();\n            }\n        },\n\n        events: [ VALIDATE, CHANGE, VALIDATE_INPUT ],\n\n        options: {\n            name: \"Validator\",\n            errorTemplate: ({ message }) => `<span class=\"k-form-error\">${message}</span>`,\n            messages: {\n                required: \"{0} is required\",\n                pattern: \"{0} is not valid\",\n                min: \"{0} should be greater than or equal to {1}\",\n                max: \"{0} should be smaller than or equal to {1}\",\n                step: \"{0} is not valid\",\n                email: \"{0} is not valid email\",\n                url: \"{0} is not valid URL\",\n                date: \"{0} is not valid date\",\n                dateCompare: \"End date should be greater than or equal to the start date\",\n                captcha: \"The text you entered doesn't match the image.\"\n            },\n            rules: {\n                required: function(input) {\n                    var noNameCheckbox = !input.attr(\"name\") && !input.is(\":checked\"),\n                        name = input.attr(\"name\"),\n                        quote = !!name && name.indexOf(\"'\") > -1 ? '\\\"' : \"'\",\n                        namedCheckbox = input.attr(\"name\") && !this.element.find(\"input[name=\" + quote + input.attr(\"name\") + quote + \"]:checked\").length,\n                        checkbox = input.filter(\"[type=checkbox]\").length && (noNameCheckbox || namedCheckbox),\n                        radio = input.filter(\"[type=radio]\").length && !this.element.find(\"input[name=\" + quote + input.attr(\"name\") + quote + \"]:checked\").length,\n                        value = input.val();\n\n                    return !(hasAttribute(input, \"required\") && (!value || value === \"\" || value.length === 0 || checkbox || radio));\n                },\n                pattern: function(input) {\n                    if (input.filter(\"[type=text],[type=email],[type=url],[type=tel],[type=search],[type=password]\").filter(\"[pattern]\").length && input.val() !== \"\") {\n                        return patternMatcher(input.val(), input.attr(\"pattern\"));\n                    }\n                    return true;\n                },\n                min: function(input) {\n                    if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[min]\").length && input.val() !== \"\") {\n                        var min = parseFloat(input.attr(\"min\")) || 0,\n                            val = kendo.parseFloat(input.val());\n\n                        return min <= val;\n                    }\n                    return true;\n                },\n                max: function(input) {\n                    if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[max]\").length && input.val() !== \"\") {\n                        var max = parseFloat(input.attr(\"max\")) || 0,\n                            val = kendo.parseFloat(input.val());\n\n                        return max >= val;\n                    }\n                    return true;\n                },\n                step: function(input) {\n                    if (input.filter(NUMBERINPUTSELECTOR + \",[\" + kendo.attr(\"type\") + \"=number]\").filter(\"[step]\").length && input.val() !== \"\") {\n                        var min = parseFloat(input.attr(\"min\")) || 0,\n                            step = kendo.parseFloat(input.attr(\"step\")) || 1,\n                            val = parseFloat(input.val()),\n                            decimals = numberOfDecimalDigits(step),\n                            raise;\n\n                        if (decimals) {\n                            raise = Math.pow(10, decimals);\n                            return ((Math.floor((val - min) * raise)) % (step * raise)) / Math.pow(100, decimals) === 0;\n                        }\n                        return ((val - min) % step) === 0;\n                    }\n                    return true;\n                },\n                email: function(input) {\n                    return matcher(input, \"[type=email],[\" + kendo.attr(\"type\") + \"=email]\", emailRegExp);\n                },\n                url: function(input) {\n                    if (input.filter(\"[type=url],[\" + kendo.attr(\"type\") + \"=url]\").length && input.val() !== \"\") {\n                        try {\n                            const url = new URL(input.val());\n                            return ALLOWED_URL_PROTOCOLS.includes(url.protocol);\n                        } catch {\n                            return false;\n                        }\n                    }\n                    return true;\n                },\n                date: function(input) {\n                    if (input.filter(\"[type^=date],[\" + kendo.attr(\"type\") + \"=date]\").length && input.val() !== \"\") {\n                        return kendo.parseDate(input.val(), input.attr(kendo.attr(\"format\"))) !== null;\n                    }\n                    return true;\n                },\n                captcha: function(input) {\n                    if (input.filter(\"[\" + kendo.attr(\"role\") + \"=captcha]\").length) {\n                        var that = this,\n                            captcha = kendo.widgetInstance(input),\n                            isValidated = function(isValid) {\n                                return typeof(isValid) !== 'undefined' && isValid !== null;\n                            };\n\n                        if (!input.data(\"captcha_validating\") && !isValidated(captcha.isValid()) && !!captcha.getCaptchaId()) {\n                            input.data(\"captcha_validating\", true);\n                            that._validating = true;\n                            captcha.validate().done(function() {\n                                that._validating = false;\n                                that._checkElement(input);\n                            }).fail(function(data) {\n                                that._validating = false;\n                                if (data.error && data.error === \"handler_not_defined\") {\n                                    window.console.warn(\"Captcha's validationHandler is not defined! You should either define a proper validation endpoint or declare a callback function to ensure the required behavior.\");\n                                }\n                            });\n                        }\n\n                        if (isValidated(captcha.isValid())) {\n                            input.removeData(\"captcha_validating\");\n                            return captcha.isValid();\n                        }\n                    }\n                    return true;\n                }\n            },\n            validateOnBlur: true,\n            validationSummary: false\n        },\n\n        _allowSubmit: function() {\n            return kendo.ui.validator.allowSubmit(this.element, this.errors());\n        },\n\n        _validateOnInit: function() {\n            return kendo.ui.validator.validateOnInit(this.element);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.element.off(NS);\n\n            if (this.validationSummary) {\n                this.validationSummary.off(NS);\n                this.validationSummary = null;\n            }\n        },\n\n        value: function() {\n            if (!this._isValidated) {\n                return false;\n            }\n\n            return this.errors().length === 0;\n        },\n\n        _submit: function(e) {\n            if ((!this.validate() && !this._allowSubmit()) || this._validating) {\n                e.stopPropagation();\n                e.stopImmediatePropagation();\n                e.preventDefault();\n                return false;\n            }\n            return true;\n        },\n\n        _checkElement: function(element) {\n            var state = this.value();\n\n            this.validateInput(element);\n\n            if (this.value() !== state) {\n                this.trigger(CHANGE);\n            }\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            if (that.element.is(FORM)) {\n                that.element.on(\"submit\" + NS, that._submit.bind(that));\n            }\n\n            if (that.options.validateOnBlur) {\n                if (!that.element.is(INPUTSELECTOR)) {\n                    that.element.on(BLUR + NS, that._inputSelector, function() {\n                        that._checkElement($(this));\n                    });\n\n                    that.element.on(\"click\" + NS, that._checkboxSelector, function() {\n                        that._checkElement($(this));\n                    });\n                } else {\n                    that.element.on(BLUR + NS, function() {\n                        that._checkElement(that.element);\n                    });\n\n                    if (that.element.is(CHECKBOXSELECTOR)) {\n                        that.element.on(\"click\" + NS, function() {\n                            that._checkElement(that.element);\n                        });\n                    }\n                }\n            }\n        },\n\n        validate: function() {\n            var inputs;\n            var idx;\n            var result = false;\n            var length;\n\n            var isValid = this.value();\n\n            this._errors = {};\n\n            if (!this.element.is(INPUTSELECTOR)) {\n                var invalid = false;\n\n                inputs = this.element.find(this._inputSelector);\n\n                for (idx = 0, length = inputs.length; idx < length; idx++) {\n                    if (!this.validateInput(inputs.eq(idx))) {\n                        invalid = true;\n                    }\n                }\n\n                result = !invalid;\n            } else {\n                result = this.validateInput(this.element);\n            }\n\n            if (this.options.validationSummary && !isValid) {\n                this.showValidationSummary();\n            }\n\n            this.trigger(VALIDATE, { valid: result, errors: this.errors() });\n\n            if (isValid !== result) {\n                this.trigger(CHANGE);\n            }\n\n            return result;\n        },\n\n        validateInput: function(input) {\n            input = $(input);\n\n\n            this._isValidated = true;\n\n            var that = this,\n                template = that._errorTemplate,\n                result = that._checkValidity(input),\n                valid = result.valid,\n                widgetInstance,\n                className = \".\" + INVALIDMSG,\n                fieldName = (input.attr(NAME) || \"\"),\n                lbl = that._findMessageContainer(fieldName).add(input.next(className).filter(function() {\n                    var element = $(this);\n                    if (element.filter(\"[\" + kendo.attr(\"for\") + \"]\").length) {\n                        return element.attr(kendo.attr(\"for\")) === fieldName;\n                    }\n\n                    return true;\n\n                })).addClass(\"k-hidden\"),\n                messageText = !valid ? that._extractMessage(input, result.key) : \"\",\n                messageLabel = !valid ? parseHtml(template({ message: decode(messageText), field: fieldName })) : \"\",\n                wasValid = !input.attr(ARIAINVALID),\n                isInputInner = input.is(INPUTINNER),\n                inputWrapper = input.parent(INPUTWRAPPER);\n\n            input.removeAttr(ARIAINVALID);\n\n            if (input.hasClass(\"k-hidden\")) {\n                widgetInstance = kendo.widgetInstance(input.closest(\".k-signature\"));\n            }\n\n            if (input.is(\"[type=radio]\")) {\n                widgetInstance = kendo.widgetInstance(input.closest(\".k-radio-list\"));\n            }\n\n            if (input.is(\"[type=checkbox]\")) {\n                widgetInstance = kendo.widgetInstance(input.closest(\".k-checkbox-list\"));\n            }\n\n            if (!valid && !input.data(\"captcha_validating\")) {\n                that._errors[fieldName] = messageText;\n                var lblId = lbl.attr('id');\n\n                that._decorateMessageContainer(messageLabel, fieldName);\n\n\n                if (lblId) {\n                    messageLabel.attr('id', lblId);\n                }\n\n                if (lbl.length !== 0) {\n                    lbl.replaceWith(messageLabel);\n                } else {\n                    widgetInstance = widgetInstance || kendo.widgetInstance(input);\n                    var parentElement = input.parent().get(0);\n                    var nextElement = input.next().get(0);\n                    var prevElement = input.prev().get(0);\n\n                    // Get the instance of the RadioGroup which is not initialized on the input element\n                    if (!widgetInstance && input.is(\"[type=radio]\")) {\n                        widgetInstance = kendo.widgetInstance(input.closest(\".k-radio-list\"));\n                    }\n\n                    // Get the instance of the CheckBoxGroup which is not initialized on the input element\n                    if (!widgetInstance && input.is(\"[type=checkbox]\")) {\n                        widgetInstance = kendo.widgetInstance(input.closest(\".k-checkbox-list\"));\n                    }\n\n                    if (widgetInstance && widgetInstance.wrapper && (widgetInstance.element !== widgetInstance.wrapper || [\"Signature\", \"RadioGroup\", \"CheckBoxGroup\"].indexOf(widgetInstance.options.name) > -1)) {\n                        messageLabel.insertAfter(widgetInstance.wrapper);\n                    } else if (parentElement && parentElement.nodeName === \"LABEL\") {\n                        // Input inside label\n                        messageLabel.insertAfter(parentElement);\n                    } else if (nextElement && isLabelFor(nextElement, input[0])) {\n                        // Input before label\n                        messageLabel.insertAfter(nextElement);\n                    } else if (prevElement && isLabelFor(prevElement, input[0])) {\n                        // Input after label\n                        messageLabel.insertAfter(input);\n                    } else if (isInputInner && inputWrapper.length) {\n                        // Input after input wrapper\n                        messageLabel.insertAfter(inputWrapper);\n                    } else {\n                        messageLabel.insertAfter(input);\n                    }\n                }\n\n                messageLabel.removeClass(\"k-hidden\");\n\n                input.attr(ARIAINVALID, true);\n            } else {\n                delete that._errors[fieldName];\n            }\n\n            if (wasValid !== valid) {\n                this.trigger(VALIDATE_INPUT, { valid: valid, input: input, error: messageText, field: fieldName });\n            }\n\n            widgetInstance = (widgetInstance && widgetInstance.options.name == \"Signature\") ? widgetInstance : kendo.widgetInstance(input);\n            if (!widgetInstance || !(widgetInstance._inputWrapper || widgetInstance.wrapper) || (input.is(\"[type=checkbox]\") || input.is(\"[type=radio]\"))) {\n                input.toggleClass(INVALIDINPUT, !valid);\n                input.toggleClass(VALIDINPUT, valid);\n            }\n\n            if (widgetInstance) {\n                var inputWrap = widgetInstance._inputWrapper || widgetInstance.wrapper;\n                var inputLabel = widgetInstance._inputLabel;\n\n                if (inputWrap && !(input.is(\"[type=checkbox]\") || input.is(\"[type=radio]\"))) {\n                    inputWrap.toggleClass(INVALIDINPUT, !valid);\n                    inputWrap.toggleClass(VALIDINPUT, valid);\n                }\n                if (inputLabel) {\n                    inputLabel.toggleClass(INVALIDLABEL, !valid);\n                }\n            }\n\n            if (wasValid !== valid) {\n                var errorId = messageLabel ? messageLabel.attr(\"id\") : lbl.attr(\"id\");\n\n                that._associateMessageContainer(input, errorId);\n\n                if (this.options.validationSummary && this.options.validateOnBlur) {\n                    this.showValidationSummary();\n                }\n            }\n\n            return valid;\n        },\n\n        hideMessages: function() {\n            var that = this,\n                className = \".\" + INVALIDMSG,\n                element = that.element;\n\n            that._disassociateMessageContainers();\n\n            if (!element.is(INPUTSELECTOR)) {\n                element.find(className).addClass(\"k-hidden\");\n            } else {\n                element.next(className).addClass(\"k-hidden\");\n            }\n        },\n\n        reset: function() {\n            var that = this,\n                inputs = that.element.find(\".\" + INVALIDINPUT),\n                labels = that.element.find(\".\" + INVALIDLABEL);\n\n            that._errors = [];\n\n            that.hideMessages();\n\n            that.hideValidationSummary();\n\n            inputs.removeAttr(ARIAINVALID);\n            inputs.removeClass(INVALIDINPUT);\n            labels.removeClass(INVALIDLABEL);\n        },\n\n        _findMessageContainer: function(fieldName) {\n            var locators = kendo.ui.validator.messageLocators,\n                name,\n                containers = $();\n\n            for (var idx = 0, length = this.element.length; idx < length; idx++) {\n                containers = containers.add(searchForMessageContainer(this.element[idx].getElementsByTagName(\"*\"), fieldName));\n            }\n\n            for (name in locators) {\n                containers = containers.add(locators[name].locate(this.element, fieldName));\n            }\n\n            return containers;\n        },\n\n        _decorateMessageContainer: function(container, fieldName) {\n            var locators = kendo.ui.validator.messageLocators,\n                name;\n\n            container.addClass(INVALIDMSG)\n                .attr(kendo.attr(\"for\"), fieldName || \"\");\n\n            if (!container.attr(\"id\")) {\n                container.attr(\"id\", fieldName + \"-error\");\n            }\n\n            for (name in locators) {\n                locators[name].decorate(container, fieldName);\n            }\n        },\n\n        _extractMessage: function(input, ruleKey) {\n            var that = this,\n                customMessage = that.options.messages[ruleKey],\n                fieldName = input.attr(NAME),\n                nonDefaultMessage;\n\n            if (!kendo.ui.Validator.prototype.options.messages[ruleKey]) {\n                 nonDefaultMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n            }\n\n            customMessage = kendo.isFunction(customMessage) ? customMessage(input) : customMessage;\n\n            return kendo.format(input.attr(kendo.attr(ruleKey + \"-msg\")) || input.attr(\"validationMessage\") || nonDefaultMessage || customMessage || input.attr(\"title\") || \"\",\n                fieldName,\n                input.attr(ruleKey) || input.attr(kendo.attr(ruleKey)));\n        },\n\n        _checkValidity: function(input) {\n            var rules = this.options.rules,\n                rule;\n\n            for (rule in rules) {\n                if (!rules[rule].call(this, input)) {\n                    return { valid: false, key: rule };\n                }\n            }\n\n            return { valid: true };\n        },\n\n        errors: function() {\n            var results = [],\n                errors = this._errors,\n                error;\n\n            for (error in errors) {\n                results.push(errors[error]);\n            }\n            return results;\n        },\n\n        setOptions: function(options) {\n            if (options.validationSummary) {\n                this.hideValidationSummary();\n            }\n\n            kendo.deepExtend(this.options, options);\n\n            this.destroy();\n\n            this.init(this.element, this.options);\n\n            this._setEvents(this.options);\n        },\n\n        _getInputNames: function() {\n            var that = this,\n                inputs = that.element.find(that._inputSelector),\n                sorted = [];\n\n            for (var idx = 0, length = inputs.length; idx < length; idx++) {\n                var input = $(inputs[idx]);\n\n                if (hasAttribute(input, NAME)) {\n                    // Add current name if:\n                    // - not present so far;\n                    // - present but not part of CheckBoxGroup or RadioGroup.\n                    if (sorted.indexOf(input.attr(NAME)) === -1 ||\n                        (input.closest(\".k-checkbox-list\").length === 0 &&\n                        input.closest(\".k-radio-list\").length === 0)) {\n                            sorted.push(input.attr(NAME));\n                    }\n                }\n            }\n\n            return sorted;\n        },\n\n        _associateMessageContainer: function(input, errorId) {\n            var nextFocusable = kendo.getWidgetFocusableElement(input);\n\n            if (!nextFocusable || !errorId) {\n                return;\n            }\n\n            kendo.toggleAttribute(nextFocusable, ARIADESCRIBEDBY, errorId);\n        },\n\n        _disassociateMessageContainers: function() {\n            var that = this,\n                inputs = that.element.find(\".\" + INVALIDINPUT).addBack(),\n                input, errorId;\n\n            for (var i = 0; i < inputs.length; i += 1) {\n                input = $(inputs[i]);\n\n                if (input.is(\"input\")) {\n                    errorId = that._findMessageContainer(input.attr(NAME))\n                        .add(input.next(\".\" + INVALIDMSG))\n                        .attr(\"id\");\n\n                    that._associateMessageContainer(input, errorId);\n                }\n            }\n        },\n\n        _errorsByName: function() {\n            var that = this,\n                inputNames = that._getInputNames(),\n                sorted = [];\n\n            for (var i = 0; i < inputNames.length; i += 1) {\n                var name = inputNames[i];\n\n                if (that._errors[name]) {\n                    sorted.push({\n                        field: name,\n                        message: that._errors[name]\n                    });\n                }\n            }\n\n            return sorted;\n        },\n\n        _renderSummary: function() {\n            var that = this,\n                options = this.options.validationSummary,\n                element = this.element,\n                prevElement = element.prev(),\n                container;\n\n            if (options.container) {\n                container = $(options.container);\n            } else if (prevElement && prevElement.hasClass(VALIDATIONSUMMARY)) {\n                container = prevElement;\n            } else {\n                container = $(\"<div />\").insertBefore(that.element);\n            }\n\n            container.addClass([VALIDATIONSUMMARY, MESSAGEBOX].join(\" \"));\n            container.attr(\"role\", \"alert\");\n\n            container.on(\"click\" + NS, that._summaryClick.bind(that));\n\n            return container;\n        },\n\n        _summaryClick: function(e) {\n            e.preventDefault();\n\n            var that = this,\n                link = $(e.target),\n                target = that.element.find(\"[name='\" + link.data(\"field\") + \"']\"),\n                nextFocusable;\n\n            if (!target.length) {\n                return;\n            }\n\n            nextFocusable = kendo.getWidgetFocusableElement(target);\n\n            if (nextFocusable) {\n                nextFocusable.trigger(\"focus\");\n            }\n        },\n\n        showValidationSummary: function() {\n            var that = this,\n                summary = that.validationSummary,\n                errors = that._errorsByName(),\n                errorsList;\n\n            if (!summary) {\n                summary = that.validationSummary = that._renderSummary();\n            }\n\n            errorsList = parseHtml(that._summaryTemplate({\n                errors: errors\n            }));\n\n            summary.html(errorsList);\n\n            summary.toggleClass(\"k-hidden\", !errors.length);\n        },\n\n        hideValidationSummary: function() {\n            var that = this,\n                summary = that.validationSummary;\n\n            if (!summary) {\n                return;\n            }\n\n            summary.addClass(\"k-hidden\");\n        }\n    });\n\n    kendo.ui.plugin(Validator);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}