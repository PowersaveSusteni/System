{"version":3,"file":"kendo.maskedtextbox.js","names":["addInputPrefixSuffixContainers","__meta__","id","name","category","description","depends","$","undefined$1","global","window","min","Math","kendo","caret","keys","ui","Widget","NS","isPlainObject","setTimeout","STATEDISABLED","STATEINVALID","FOCUSED","DISABLED","READONLY","CHANGE","MOUSEUP","DROP","KEYDOWN","PASTE","ns","INPUT_EVENT_NAME","support","propertyChangeEvent","MaskedTextBox","extend","init","element","options","DOMElement","that","this","fn","call","_rules","rules","_wrapper","_tokenize","_form","addClass","attr","on","value","_togglePrompt","_old","_emptyMask","_oldValue","wrapper","_timeoutId","_maskLength","val","clearTimeout","removeClass","_change","mask","length","is","parents","enable","readonly","_validationIcon","icon","iconClass","insertAfter","_label","_applyCssClasses","widget","suffixInsertAfter","floatingLabel","refresh","notify","clearPromptChar","unmaskOnPost","promptChar","culture","label","size","fillMode","rounded","prefixOptions","separator","suffixOptions","events","L","C","A","a","setOptions","_unbindInput","_bindInput","destroy","off","_formElement","_resetHandler","_submitHandler","raw","_unmask","replace","RegExp","escapeRegExp","emptyMask","_mask","_unmaskedValue","_activeElement","show","_editable","disable","_keydown","bind","_drop","_trackChange","_inputHandler","browser","msie","version","join","_legacyIEInputHandler","toggleClass","prop","trigger","__changing","inputChange","backward","old","cursor","lengthDiff","mobile","mobileOS","__dropping","android","contentStart","str1","str2","i","stringDiffStart","content","substring","caretPos","endContent","_trimStartPromptChars","unmasked","_findCaretPosBackwards","count","indexOf","pos","caretStart","_find","__backward","e","input","type","__pasting","formId","form","closest","key","keyCode","BACKSPACE","ENTER","idx","step","charAt","tokens","start","end","valueLength","chr","current","empty","chrIdx","split","token","tokenIdx","tokensLength","result","test","isFunction","_blinkInvalidState","floating","labelText","_floatingLabelContainer","wrap","parent","FloatingLabel","guid","_inputLabel","style","cssText","width","className","_addInvalidState","_invalidStateTimeout","_removeInvalidState","rule","maskChars","numberFormat","getCulture","currency","symbol","l","text","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","kendo$1"],"sources":["kendo.maskedtextbox.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.core.js';\nimport './kendo.floatinglabel.js';\nimport './kendo.icons.js';\nimport { a as addInputPrefixSuffixContainers } from './kendo.prefix-suffix-containers.chunk.js';\n\nconst __meta__ = {\n    id: \"maskedtextbox\",\n    name: \"MaskedTextBox\",\n    category: \"web\",\n    description: \"The MaskedTextBox widget allows to specify a mask type on an input field.\",\n    depends: [\"core\", \"floatinglabel\", \"icons\", \"prefix-suffix-containers.chunk\"]\n};\n\n(function($, undefined$1) {\n    var global = window;\n    var min = global.Math.min;\n    var kendo = global.kendo;\n    var caret = kendo.caret;\n    var keys = kendo.keys;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var NS = \".kendoMaskedTextBox\";\n    var isPlainObject = $.isPlainObject;\n    var setTimeout = window.setTimeout;\n\n    var LABELCLASSES = \"k-label k-input-label\";\n    var FLOATINGLABELCLASS = \"k-floating-label\";\n    var STATEDISABLED = \"k-disabled\";\n    var STATEINVALID = \"k-invalid\";\n    var FOCUSED = \"k-focus\";\n    var DISABLED = \"disabled\";\n    var READONLY = \"readonly\";\n    var CHANGE = \"change\";\n    var MOUSEUP = \"mouseup\";\n    var DROP = \"drop\";\n    var KEYDOWN = \"keydown\";\n    var PASTE = \"paste\";\n    var INPUT = \"input\";\n\n    function ns(name) { return name + NS; }\n\n    var INPUT_EVENT_NAME = ns(kendo.support.propertyChangeEvent ? \"propertychange\" : INPUT);\n\n    function stringDiffStart(str1, str2) {\n        var i = 0;\n        while (i < str2.length) {\n            if (str1[i] !== str2[i]) {\n                break;\n            }\n            i++;\n        }\n\n        return i;\n    }\n    var MaskedTextBox = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var DOMElement;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._rules = $.extend({}, that.rules, that.options.rules);\n\n            element = that.element;\n            DOMElement = element[0];\n\n            that._wrapper();\n            that._tokenize();\n            that._form();\n\n            that.element\n                .addClass(\"k-input-inner\")\n                .attr(\"autocomplete\", \"off\")\n                .on(\"focus\" + NS, function() {\n                    var value = DOMElement.value;\n\n                    if (!value) {\n                        DOMElement.value = that._old = that._emptyMask;\n                    } else {\n                        that._togglePrompt(true);\n                    }\n\n                    that._oldValue = value;\n                    that.wrapper.addClass(FOCUSED);\n\n                    that._timeoutId = setTimeout(function() {\n                        caret(element, 0, value ? that._maskLength : 0);\n                    });\n                })\n                .on(\"focusout\" + NS, function() {\n                    var value = element.val();\n\n                    clearTimeout(that._timeoutId);\n                    DOMElement.value = that._old = \"\";\n\n                    if (value !== that._emptyMask) {\n                        DOMElement.value = that._old = value;\n                    }\n\n                    that.wrapper.removeClass(FOCUSED);\n                    that._change();\n                    that._togglePrompt();\n                });\n\n            if (that.options.mask && that.options.mask.length > 0) {\n                that.element.attr(\"aria-placeholder\", that.options.mask);\n            }\n\n            var disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n            if (disabled) {\n                that.enable(false);\n            } else {\n                that.readonly(element.is(\"[readonly]\"));\n            }\n\n            that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n\n            that.value(that.options.value || element.val());\n\n            that._label();\n            that._applyCssClasses();\n\n            addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, suffixInsertAfter: that._validationIcon });\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n\n            kendo.notify(that);\n        },\n\n        options: {\n            name: \"MaskedTextBox\",\n            clearPromptChar: false,\n            unmaskOnPost: false,\n            promptChar: \"_\",\n            culture: \"\",\n            rules: {},\n            value: \"\",\n            mask: \"\",\n            label: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            }\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        rules: {\n            \"0\": /\\d/,\n            \"9\": /\\d|\\s/,\n            \"#\": /\\d|\\s|\\+|\\-/,\n            \"L\": /[a-zA-Z]/,\n            \"?\": /[a-zA-Z]|\\s/,\n            \"&\": /\\S/,\n            \"C\": /./,\n            \"A\": /[a-zA-Z0-9]/,\n            \"a\": /[a-zA-Z0-9]|\\s/\n        },\n\n        setOptions: function(options) {\n            var that = this;\n\n            Widget.fn.setOptions.call(that, options);\n\n            that._rules = $.extend({}, that.rules, that.options.rules);\n\n            that._tokenize();\n\n            this._unbindInput();\n            this._bindInput();\n\n            that.value(that.element.val());\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that.floatingLabel) {\n                that.floatingLabel.destroy();\n            }\n\n            that.element.off(NS);\n\n            if (that._formElement) {\n                that._formElement.off(\"reset\", that._resetHandler);\n                that._formElement.off(\"submit\", that._submitHandler);\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        raw: function() {\n            var unmasked = this._unmask(this.element.val(), 0);\n            return unmasked.replace(new RegExp(escapeRegExp(this.options.promptChar), \"g\"), \"\");\n        },\n\n        value: function(value) {\n            var element = this.element;\n            var emptyMask = this._emptyMask;\n\n            if (value === undefined$1) {\n                return this.element.val();\n            }\n\n            if (value === null) {\n                value = \"\";\n            }\n\n            if (!emptyMask) {\n                this._oldValue = value;\n                element.val(value);\n                return;\n            }\n\n            value = this._unmask(value + \"\");\n\n            element.val(value ? emptyMask : \"\");\n\n            this._mask(0, this._maskLength, value);\n            this._unmaskedValue = null;\n\n            value = element.val();\n            this._oldValue = value;\n\n            if (kendo._activeElement() !== element) {\n                if (value === emptyMask) {\n                    element.val(\"\");\n                } else {\n                    this._togglePrompt();\n                }\n            }\n\n            if (this.floatingLabel) {\n                this.floatingLabel.refresh();\n            }\n        },\n\n        _togglePrompt: function(show) {\n            var DOMElement = this.element[0];\n            var value = DOMElement.value;\n\n            if (this.options.clearPromptChar) {\n                if (!show) {\n                    value = value.replace(new RegExp(escapeRegExp(this.options.promptChar), \"g\"), \" \");\n                } else {\n                    value = this._oldValue;\n                }\n\n                DOMElement.value = this._old = value;\n            }\n        },\n\n        readonly: function(readonly) {\n            var that = this;\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        _bindInput: function() {\n            var that = this;\n\n            if (that._maskLength) {\n                that.element\n                    .on(ns(KEYDOWN), that._keydown.bind(that))\n                    .on(ns(DROP), that._drop.bind(that))\n                    .on(ns(CHANGE), that._trackChange.bind(that))\n                    .on(INPUT_EVENT_NAME, that._inputHandler.bind(that));\n\n\n                if (kendo.support.browser.msie) {\n                    var version = kendo.support.browser.version;\n                    if (version > 8 && version < 11) {\n                        var events = [ns(MOUSEUP), ns(DROP), ns(KEYDOWN), ns(PASTE)].join(\" \");\n                        that.element.on(events, that._legacyIEInputHandler.bind(that));\n                    }\n                }\n            }\n        },\n\n        _unbindInput: function() {\n            var events = [INPUT_EVENT_NAME, ns(KEYDOWN), ns(MOUSEUP), ns(DROP), ns(PASTE)].join(\" \");\n\n            this.element.off(events);\n        },\n\n        _editable: function(options) {\n            var that = this;\n            var element = that.element;\n            var wrapper = that.wrapper;\n            var disable = options.disable;\n            var readonly = options.readonly;\n\n            that._unbindInput();\n\n            if (!readonly && !disable) {\n                element.prop(DISABLED, false)\n                       .prop(READONLY, false);\n\n                wrapper.removeClass(STATEDISABLED);\n\n                that._bindInput();\n            } else {\n                element.attr(DISABLED, disable)\n                       .attr(READONLY, readonly);\n\n                wrapper.toggleClass(STATEDISABLED, disable);\n            }\n        },\n\n        _change: function() {\n            var that = this;\n            var value = that.value();\n\n            if (value !== that._oldValue) {\n                that._oldValue = value;\n\n                that.trigger(CHANGE);\n                that.element.trigger(CHANGE);\n            }\n            else if (value === \"\" && that.__changing) {//ensure change is raised when empty value (mask is stripped from input content) for consistent ngjs model update\n                that.element.trigger(CHANGE);\n            }\n        },\n\n        inputChange: function(backward) {\n            var that = this;\n            var old = that._old;\n            var element = that.element[0];\n            var value = element.value;\n            var selection = caret(element);\n            var cursor = selection[1];\n            var lengthDiff = value.length - old.length;\n            var mobile = kendo.support.mobileOS;\n\n            if (that.__dropping && lengthDiff < 0) {//dropping in same input on WebKit is raised once for the removal phase and once for the adding phase\n                return;\n            }\n\n            if (lengthDiff === -1 && mobile.android && mobile.browser === \"chrome\") {\n                backward = true;\n            }\n\n            var contentStart = min(cursor, stringDiffStart(value, old));\n            var content = value.substring(contentStart, cursor);\n\n            element.value = value.substring(0, contentStart) + that._emptyMask.substring(contentStart);\n\n            var caretPos = that._mask(contentStart, cursor, content);\n            var endContent = that._trimStartPromptChars(value.substring(cursor), min(lengthDiff, caretPos - contentStart));\n\n            var unmasked = that._unmask(endContent, old.length - endContent.length);\n            that._mask(caretPos, caretPos, unmasked);\n\n            if (backward) {\n                caretPos = that._findCaretPosBackwards(contentStart);\n            }\n\n            caret(element, caretPos);\n\n            //clean-up flags\n            that.__dropping = false;\n        },\n\n        _trimStartPromptChars: function(content, count) {\n            var promptChar = this.options.promptChar;\n\n            while (count-- > 0 && content.indexOf(promptChar) === 0) {\n                content = content.substring(1);\n            }\n\n            return content;\n        },\n\n        _findCaretPosBackwards: function(pos) {\n            var caretStart = this._find(pos, true);\n            if (caretStart < pos) {\n                caretStart += 1;\n            }\n\n            return caretStart;\n        },\n\n        _inputHandler: function() {\n            if (kendo._activeElement() !== this.element[0]) {\n                return;\n            }\n\n            this.inputChange(this.__backward);\n        },\n\n        _legacyIEInputHandler: function(e) {\n            var that = this;\n            var input = that.element[0];\n            var value = input.value;\n            var type = e.type;\n\n            that.__pasting = (type === \"paste\");\n\n            setTimeout(function() {\n                if (type === \"mouseup\" && that.__pasting) {\n                    return;\n                }\n                if (input.value && input.value !== value) {\n                    that.inputChange(that.__backward);\n                }\n            });\n        },\n\n        _trackChange: function() {\n            var that = this;\n\n            that.__changing = true;\n            setTimeout(function() { that.__changing = false; });\n        },\n\n        _form: function() {\n            var that = this;\n            var element = that.element;\n            var formId = element.attr(\"form\");\n            var form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(element[0].value);\n                    });\n                };\n\n                that._submitHandler = function() {\n                    that.element[0].value = that._old = that.raw();\n                };\n\n                if (that.options.unmaskOnPost) {\n                    form.on(\"submit\", that._submitHandler);\n                }\n\n                that._formElement = form.on(\"reset\", that._resetHandler);\n            }\n        },\n\n        _keydown: function(e) {\n            var key = e.keyCode;\n\n            this.__backward = key === keys.BACKSPACE;\n\n            if (key === keys.ENTER) {\n                this._change();\n            }\n        },\n\n        _drop: function() {\n            this.__dropping = true;\n        },\n\n        _find: function(idx, backward) {\n            var value = this.element.val() || this._emptyMask;\n            var step = 1;\n\n            if (backward === true) {\n                step = -1;\n            }\n\n            while (idx > -1 || idx <= this._maskLength) {\n                if (value.charAt(idx) !== this.tokens[idx]) {\n                    return idx;\n                }\n\n                idx += step;\n            }\n\n            return -1;\n        },\n\n        _mask: function(start, end, value, backward) {\n            var element = this.element[0];\n            var current = element.value || this._emptyMask;\n            var empty = this.options.promptChar;\n            var valueLength;\n            var chrIdx = 0;\n            var unmasked;\n            var chr;\n            var idx;\n\n            start = this._find(start, backward);\n\n            if (start > end) {\n                end = start;\n            }\n\n            unmasked = this._unmask(current.substring(end), end);\n            value = this._unmask(value, start);\n            valueLength = value.length;\n\n            if (value) {\n                unmasked = unmasked.replace(new RegExp(\"^_{0,\" + valueLength + \"}\"), \"\");\n            }\n\n            value += unmasked;\n            current = current.split(\"\");\n            chr = value.charAt(chrIdx);\n\n            while (start < this._maskLength) {\n                current[start] = chr || empty;\n                chr = value.charAt(++chrIdx);\n\n                if (idx === undefined$1 && chrIdx > valueLength) {\n                    idx = start;\n                }\n\n                start = this._find(start + 1);\n            }\n\n            element.value = this._old = current.join(\"\");\n\n            if (kendo._activeElement() === element) {\n                if (idx === undefined$1) {\n                    idx = this._maskLength;\n                }\n\n                caret(element, idx);\n            }\n\n            return idx;\n        },\n\n        _unmask: function(value, idx) {\n            if (!value) {\n                return \"\";\n            }\n\n            if (this._unmaskedValue === value) {\n                return this._unmaskedValue;\n            }\n            value = (value + \"\").split(\"\");\n\n            var chr;\n            var token;\n            var chrIdx = 0;\n            var tokenIdx = idx || 0;\n\n            var empty = this.options.promptChar;\n\n            var valueLength = value.length;\n            var tokensLength = this.tokens.length;\n\n            var result = \"\";\n\n            while (tokenIdx < tokensLength) {\n                chr = value[chrIdx];\n                token = this.tokens[tokenIdx];\n\n                if (chr === token || chr === empty) {\n                    result += chr === empty ? empty : \"\";\n\n                    chrIdx += 1;\n                    tokenIdx += 1;\n                } else if (typeof token !== \"string\") {\n                    if ((token && token.test && token.test(chr)) || (kendo.isFunction(token) && token(chr))) {\n                        result += chr;\n                        tokenIdx += 1;\n                    } else {\n                        if (valueLength === 1) {\n                            this._blinkInvalidState();\n                        }\n                    }\n\n                    chrIdx += 1;\n                } else {\n                    tokenIdx += 1;\n                }\n\n                if (chrIdx >= valueLength) {\n                    break;\n                }\n            }\n            this._unmaskedValue = result;\n            return result;\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n                floating = isPlainObject(options.label) ? options.label.floating : false;\n                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                if (floating) {\n                    that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                }\n\n                if (kendo.isFunction(labelText)) {\n                    labelText = labelText.call(that);\n                }\n\n                if (!labelText) {\n                    labelText = \"\";\n                }\n\n                if (!id) {\n                    id = options.name + \"_\" + kendo.guid();\n                    element.attr(\"id\", id);\n                }\n\n                that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this;\n            var element = that.element;\n            var DOMElement = element[0];\n\n            var wrapper = element.wrap(\"<span class='k-input k-maskedtextbox'></span>\").parent();\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"100%\";\n            that.wrapper = wrapper.addClass(DOMElement.className).removeClass('input-validation-error');\n        },\n\n        _blinkInvalidState: function() {\n            var that = this;\n\n            that._addInvalidState();\n            clearTimeout(that._invalidStateTimeout);\n            that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n        },\n\n        _addInvalidState: function() {\n            var that = this;\n\n            that.wrapper.addClass(STATEINVALID);\n            that._validationIcon.removeClass(\"k-hidden\");\n        },\n\n        _removeInvalidState: function() {\n            var that = this;\n\n            that.wrapper.removeClass(STATEINVALID);\n            that._validationIcon.addClass(\"k-hidden\");\n            that._invalidStateTimeout = null;\n        },\n\n        _tokenize: function() {\n            var tokens = [];\n            var tokenIdx = 0;\n\n            var mask = this.options.mask || \"\";\n            var maskChars = mask.split(\"\");\n            var length = maskChars.length;\n            var idx = 0;\n            var chr;\n            var rule;\n\n            var emptyMask = \"\";\n            var promptChar = this.options.promptChar;\n            var numberFormat = kendo.getCulture(this.options.culture).numberFormat;\n            var rules = this._rules;\n\n            while (idx < length) {\n                chr = maskChars[idx];\n                rule = rules[chr];\n\n                if (rule) {\n                    tokens[tokenIdx] = rule;\n                    emptyMask += promptChar;\n                    tokenIdx += 1;\n                } else {\n                    if (chr === \".\" || chr === \",\") {\n                        chr = numberFormat[chr];\n                    } else if (chr === \"$\") {\n                        chr = numberFormat.currency.symbol;\n                    } else if (chr === \"\\\\\") {\n                        idx += 1;\n                        chr = maskChars[idx];\n                    }\n\n                    chr = chr.split(\"\");\n\n                    for (var i = 0, l = chr.length; i < l; i++) {\n                        tokens[tokenIdx] = chr[i];\n                        emptyMask += chr[i];\n                        tokenIdx += 1;\n                    }\n                }\n                idx++;\n            }\n\n            this.tokens = tokens;\n\n            this._emptyMask = emptyMask;\n            this._maskLength = emptyMask.length;\n        }\n    });\n\n    function escapeRegExp(text) {\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n    }\n\n    kendo.cssProperties.registerPrefix(\"MaskedTextBox\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"MaskedTextBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(MaskedTextBox);\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}