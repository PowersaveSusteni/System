{"version":3,"file":"kendo.treeview.js","names":["__meta__","id","name","category","description","depends","features","$","undefined$1","TreeView","subGroup","nodeContents","nodeIcon","spriteRe","kendo","window","ui","data","encode","htmlEncode","extend","template","isArray","Array","Widget","HierarchicalDataSource","keys","NS","TEMP_NS","SELECT","CHECK","NAVIGATE","CHANGE","ERROR","CHECKED","INDETERMINATE","DRAGSTART","PROGRESS","DRAG","DROP","DRAGEND","DATABOUND","ITEMSLOADED","LOADCOMPLETED","REQUESTEND","CLICK","UNDEFINED","KSTATEHOVER","KTREEVIEW","NODE","ICON","TOGGLE_ICON_ELM","STRING","ARIA_CHECKED","ARIA_SELECTED","ARIA_DISABLED","ARIA_EXPANDED","ARIA_ACTIVEDESCENDANT","ARIA_BUSY","DISABLED","bindings","text","url","spriteCssClass","imageUrl","attr","imageAttr","contentAttr","linkAttr","isDomElement","o","HTMLElement","nodeType","nodeName","treeViewItemDefaultClasses","contentChild","filter","node","result","children","length","checkboxes","find","insertAction","indexOffset","nodeData","referenceNode","parentNode","group","closest","parent","is","this","_dataSourceMove","dataSource","model","referenceItem","dataItem","referenceNodeIndex","indexOf","index","_insert","updateNodeHtml","wrapper","toggleButton","checkbox","innerWrapper","hasClass","prependTo","remove","removeAttr","appendTo","append","eq","addClass","container","tmp","toLowerCase","nextSibling","nodeValue","trim","test","className","insertBefore","firstChild","appendChild","moveContents","DataBoundWidget","init","element","options","inferred","list","that","hasDataSource","loadOnDemand","prototype","call","_dataSourceUids","_animation","_accessors","_templates","root","_wrapper","_group","_applyCssClasses","_tabindex","_dataSource","_attachEvents","_dragging","_syncHtmlAndDataSource","autoBind","_progress","fetch","_attemptLoadCompleted","bind","_progressHandler","_requestStart","checkChildren","updateIndeterminate","_ariaId","format","guid","notify","clickableItems","MOUSEENTER","_clickHandler","_click","on","e","preventDefault","removeClass","_toggleButtonClick","_keydown","_keypress","_focus","_blur","_mousedown","_checkboxChange","_retryRequest","target","focus","i","item","uid","itemCheckbox","view","uidAttr","expandedAttr","checkboxesEnabled","items","expanded","hasChildren","checked","prop","next","animationOptions","animation","hasCollapseAnimation","collapse","expand","reverse","effects","hide","enabled","dragAndDrop","dragging","widget","HierarchicalDragAndDrop","reorderable","autoScroll","allowedContainers","itemSelector","hintText","_hintText","clickMoveClick","contains","source","destination","dropHintContainer","itemFromTarget","content","first","last","dropPositionFrom","dropHint","prevAll","dragstart","trigger","sourceNode","drag","originalEvent","dropTarget","pageY","pageX","statusClass","status","setStatusClass","setStatus","drop","navigationTarget","_tempPreventNavigation","destinationNode","valid","setValid","state","dropPosition","position","dragend","triggerDragEnd","current","insertAfter","destroy","ev","off","templates","dragClue","treeview","fieldAccessor","_fieldAccessor","contentAttributes","encoded","contentCssAttributes","_checkboxes","setAttributes","setDefaultClasses","cssClass","groupLength","firstLevel","textClass","isLink","selected","checkboxClass","toggleButtonClass","toggleIcon","icon","support","isRtl","groupAttributes","attributes","groupCssClass","r","renderItems","itemContent","imgAttributes","imageCssAttributes","itemElement","tag","textAttr","linkCssAttributes","toJSON","loading","messages","retry","requestFailed","defaultClasses","stringifyAttributes","hasOwnProperty","setDataSource","one","_bindDataSource","_refreshHandler","refresh","_errorHandler","_error","_loadCompletedHandler","_loadCompleted","_requestEndHandler","_dsRequestEnd","_loadedNodes","setTimeout","type","_loadCompletedFired","concat","nodes","_unbindDataSource","unbind","silentRead","fields","field","create","recursiveRead","_initChildren","events","duration","dataTextField","size","textField","fieldName","fieldBindings","count","getter","map","x","d","Math","min","level","setOptions","fn","_trigger","eventName","_setChecked","datasource","value","isFunction","_setCheckedValue","_setIndeterminate","siblings","all","indeterminate","subnodes","_bubbleIndeterminate","skipDownward","_skip","set","isChecked","_preventChange","currentTarget","toggle","browser","msie","edge","_clickTarget","_focusable","select","clickTarget","touch","_nextVisible","scrollContainer","containers","offsets","documentElement","document","scrollHeight","clientHeight","push","scrollTop","focusElement","_enabled","skipSelf","wrapperRe","itemRe","_expanded","nextParent","_previousVisible","lastChild","prev","scrollTo","scrollIntoView","block","key","keyCode","focused","rtl","RIGHT","LEFT","DOWN","UP","HOME","END","ENTER","SPACEBAR","matchToFocus","focusedNode","get","_match","clearTimeout","_matchTimer","_matchNextByText","startIndex","contents","href","wrap","_getSelectedNode","groupElement","css","_nodes","groupData","each","_updateNodeClasses","defaultTemplate","html","renderCheckBox","rounded","replace","textWrap","_processNodes","callback","getByUid","_dataItem","_insertNode","insertCallback","collapsed","childrenData","updatedGroupLength","nodeHtml","_renderItem","_renderGroup","applyStylesFromKendoAttributes","_updateNodes","nodeWrapper","isCollapsed","context","render","setCheckedState","findByUid","toggleClass","end","elements","_toggle","ns","_appendItems","dataItems","viewItems","rootItems","_refreshChildren","child","empty","_refreshRoot","groupHtml","parentElement","action","bubble","_remove","_loaded","load","retryHtml","replaceWith","loaded","enable","arguments","_current","_updateActiveDescendant","direction","height","kendoStop","kendoAnimate","reset","complete","force","showProgress","loadingText","_objectOrSelf","referenceDataItem","destTreeview","destDataSource","loadPromise","Deferred","resolve","promise","_toObservableData","obj","jQuery","ObservableArray","splice","apply","success","loadModel","inserted","done","max","add","noop","keepData","prevSibling","detach","findByText","getAttribute","expandPath","path","nodeIds","slice","nodeElement","then","proceed","shift","_parentIds","parents","unshift","expandTo","Node","len","cssProperties","registerPrefix","plugin","kendo$1"],"sources":["kendo.treeview.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.data.js';\nimport './kendo.treeview.draganddrop.js';\nimport './kendo.html.input.js';\nimport './kendo.icons.js';\n\nconst __meta__ = {\n    id: \"treeview\",\n    name: \"TreeView\",\n    category: \"web\",\n    description: \"The TreeView widget displays hierarchical data in a traditional tree structure,with support for interactive drag-and-drop operations.\",\n    depends: [ \"data\", \"html.input\", \"icons\" ],\n    features: [{\n        id: \"treeview-dragging\",\n        name: \"Drag & Drop\",\n        description: \"Support for drag & drop\",\n        depends: [ \"treeview.draganddrop\" ]\n    }]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        data = kendo.data,\n        encode = kendo.htmlEncode,\n        extend = $.extend,\n        template = kendo.template,\n        isArray = Array.isArray,\n        Widget = ui.Widget,\n        HierarchicalDataSource = data.HierarchicalDataSource,\n        keys = kendo.keys,\n        NS = \".kendoTreeView\",\n        TEMP_NS = \".kendoTreeViewTemp\",\n        SELECT = \"select\",\n        CHECK = \"check\",\n        NAVIGATE = \"navigate\",\n        EXPAND = \"expand\",\n        CHANGE = \"change\",\n        ERROR = \"error\",\n        CHECKED = \"checked\",\n        INDETERMINATE = \"indeterminate\",\n        COLLAPSE = \"collapse\",\n        DRAGSTART = \"dragstart\",\n        PROGRESS = \"progress\",\n        DRAG = \"drag\",\n        DROP = \"drop\",\n        DRAGEND = \"dragend\",\n        DATABOUND = \"dataBound\",\n        ITEMSLOADED = \"itemsLoaded\",\n        LOADCOMPLETED = \"loadCompleted\",\n        REQUESTEND = \"requestEnd\",\n        CLICK = \"click\",\n        KENDOKEYDOWN = \"kendoKeydown\",\n        UNDEFINED = \"undefined\",\n        KSTATEHOVER = \"k-hover\",\n        KTREEVIEW = \"k-treeview\",\n        VISIBLE = \":visible\",\n        NODE = \".k-treeview-item\",\n        ICON = \"k-icon\",\n        TOGGLE_ICON_ELM = `<span></span>`,\n        STRING = \"string\",\n        ARIA_CHECKED = \"aria-checked\",\n        ARIA_SELECTED = \"aria-selected\",\n        ARIA_DISABLED = \"aria-disabled\",\n        ARIA_EXPANDED = \"aria-expanded\",\n        ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n        ARIA_BUSY = \"aria-busy\",\n        DISABLED = \"k-disabled\",\n        TreeView,\n        subGroup, nodeContents, nodeIcon,\n        spriteRe,\n        bindings = {\n            text: \"dataTextField\",\n            url: \"dataUrlField\",\n            spriteCssClass: \"dataSpriteCssClassField\",\n            imageUrl: \"dataImageUrlField\",\n            attr: \"dataAttrField\",\n            imageAttr: \"dataImageAttrField\",\n            contentAttr: \"dataContentAttrField\",\n            linkAttr: \"dataLinkAttrField\",\n        },\n        isJQueryInstance = function(obj) {\n            return (obj instanceof kendo.jQuery) || (window.jQuery && obj instanceof window.jQuery);\n        },\n        isDomElement = function(o) {\n            return (\n                typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n                o && typeof o === \"object\" && o.nodeType === 1 && typeof o.nodeName === STRING\n            );\n        };\n\n    const treeViewItemDefaultClasses = {\n        item: \"k-treeview-item\",\n        image: \"k-image\",\n        contentText: \"k-treeview-leaf-text\"\n    };\n\n    function contentChild(filter) {\n        return function(node) {\n            var result = node.children(\".k-animation-container\");\n\n            if (!result.length) {\n                result = node;\n            }\n\n            return result.children(filter);\n        };\n    }\n\n    function templateNoWith(code) {\n        return kendo.template(code, { useWithBlock: false });\n    }\n\n    subGroup = contentChild(\".k-treeview-group\");\n    nodeContents = contentChild(\".k-treeview-group,.k-content\");\n    nodeIcon = function(node) {\n        return node.children(\"div\").find(`.k-treeview-toggle > span:first`);\n    };\n\n    function checkboxes(node) {\n         return node.find(\".k-checkbox-wrap:first input[type=checkbox]\");\n    }\n\n    function insertAction(indexOffset) {\n        return function(nodeData, referenceNode) {\n            referenceNode = referenceNode.closest(NODE);\n\n            var group = referenceNode.parent(),\n                parentNode;\n\n            if (group.parent().is(\"li\")) {\n                parentNode = group.parent();\n            }\n\n            return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model) {\n                var referenceItem = this.dataItem(referenceNode);\n                var referenceNodeIndex = referenceItem && referenceNode.parent().children().length !== referenceItem.parent().length ? referenceItem.parent().indexOf(referenceItem) : referenceNode.index();\n\n                return this._insert(dataSource.data(), model, referenceNodeIndex + indexOffset);\n            });\n        };\n    }\n\n    spriteRe = /k-sprite/;\n\n    function moveContents(node, container) {\n        var tmp;\n\n        while (node && node.nodeName.toLowerCase() != \"ul\") {\n            tmp = node;\n            node = node.nextSibling;\n\n            if (tmp.nodeType == 3) {\n                tmp.nodeValue = kendo.trim(tmp.nodeValue);\n            }\n\n            if (spriteRe.test(tmp.className)) {\n                container.insertBefore(tmp, container.firstChild);\n            } else {\n                container.appendChild(tmp);\n            }\n        }\n    }\n\n    function updateNodeHtml(node) {\n        var wrapper = node.children(\"div\"),\n            group = node.children(\"ul\"),\n            toggleButton = wrapper.find(`.k-treeview-toggle > span`),\n            checkbox = node.children(\"input[type=checkbox]\"),\n            innerWrapper = wrapper.children(\".k-treeview-leaf\");\n\n        if (node.hasClass(\"k-treeview\")) {\n            return;\n        }\n\n        if (!wrapper.length) {\n            wrapper = $(\"<div />\").prependTo(node);\n        }\n\n        if (!toggleButton.length && group.length) {\n            toggleButton = $(`<span class='k-treeview-toggle'>${TOGGLE_ICON_ELM}</span>`).prependTo(wrapper);\n        } else if (!group.length || !group.children().length) {\n            toggleButton.parent().remove();\n            group.remove();\n            node.removeAttr(ARIA_EXPANDED);\n        }\n\n        if (checkbox.length) {\n            $(\"<span class='k-checkbox-wrap' />\").appendTo(wrapper).append(checkbox);\n        }\n\n        if (!innerWrapper.length) {\n            innerWrapper = node.children(\"a\").eq(0).addClass(\"k-treeview-leaf k-link\");\n\n            if (!innerWrapper.length) {\n                innerWrapper = $(\"<span class='k-treeview-leaf' />\");\n            }\n\n            innerWrapper.appendTo(wrapper);\n\n            if (wrapper.length) {\n                moveContents(wrapper[0].nextSibling, innerWrapper[0]);\n            }\n        }\n    }\n    TreeView = kendo.ui.DataBoundWidget.extend({\n        init: function(element, options) {\n            var that = this,\n                inferred = false,\n                hasDataSource = options && !!options.dataSource,\n                list;\n\n            if (isArray(options)) {\n                options = { dataSource: options };\n            }\n\n            if (options && typeof options.loadOnDemand == UNDEFINED && isArray(options.dataSource)) {\n                options.loadOnDemand = false;\n            }\n\n            Widget.prototype.init.call(that, element, options);\n\n            element = that.element;\n            options = that.options;\n\n            that._dataSourceUids = {};\n\n            list = (element.is(\"ul\") && element) ||\n                   (element.hasClass(KTREEVIEW) && element.children(\"ul\"));\n\n            inferred = !hasDataSource && list.length;\n\n            if (inferred) {\n                options.dataSource.list = list;\n            }\n\n            that._animation();\n\n            that._accessors();\n\n            that._templates();\n\n            // render treeview if it's not already rendered\n            if (!element.hasClass(KTREEVIEW)) {\n                that._wrapper();\n\n                if (list) {\n                    that.root = element;\n                    that._group(that.wrapper);\n                }\n            } else {\n                // otherwise just initialize properties\n                that.wrapper = element;\n                that.root = element.children(\"ul\").eq(0);\n            }\n\n            that._applyCssClasses();\n            that._tabindex();\n\n            that.wrapper.find(\">ul\").attr(\"role\", \"tree\");\n\n            that._dataSource(inferred);\n\n            that._attachEvents();\n\n            that._dragging();\n\n            if (!inferred) {\n                if (options.autoBind) {\n                    that._progress(true);\n                    that.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n                }\n                else {\n                    that._progressHandler = that._requestStart.bind(that);\n                    that.dataSource.bind(PROGRESS, that._progressHandler);\n                }\n            } else {\n                that._syncHtmlAndDataSource();\n            }\n\n            if (options.checkboxes && options.checkboxes.checkChildren) {\n                that.updateIndeterminate();\n            }\n\n            if (that.element[0].id) {\n                that._ariaId = kendo.format(\"{0}_tv_active\", that.element[0].id);\n            } else {\n                that._ariaId = kendo.guid() + \"_tv_active\";\n            }\n\n            kendo.notify(that);\n        },\n\n        _attachEvents: function() {\n            var that = this,\n                clickableItems = \".k-treeview-leaf:not(.k-selected,.k-disabled)\",\n                MOUSEENTER = \"mouseenter\";\n\n            that._clickHandler = that._click.bind(that);\n\n            that.wrapper\n                .on(MOUSEENTER + NS, \".k-treeview-leaf.k-selected\", function(e) { e.preventDefault(); })\n                .on(MOUSEENTER + NS, clickableItems, function() { $(this).addClass(KSTATEHOVER); })\n                .on(\"mouseleave\" + NS, clickableItems, function() { $(this).removeClass(KSTATEHOVER); })\n                .on(CLICK + NS, clickableItems, that._clickHandler)\n                .on(\"dblclick\" + NS, \".k-treeview-leaf:not(.k-disabled)\", that._toggleButtonClick.bind(that))\n                .on(CLICK + NS, `.k-treeview-toggle .${ICON}`, that._toggleButtonClick.bind(that))\n                .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                .on(\"keypress\" + NS, that._keypress.bind(that))\n                .on(\"focus\" + NS, that._focus.bind(that))\n                .on(\"blur\" + NS, that._blur.bind(that))\n                .on(\"mousedown\" + NS, `.k-treeview-leaf,.k-checkbox-wrap :checkbox,.k-treeview-toggle .${ICON}`, that._mousedown.bind(that))\n                .on(\"change\" + NS, \".k-checkbox-wrap :checkbox\", that._checkboxChange.bind(that))\n                .on(\"click\" + NS, \".k-request-retry\", that._retryRequest.bind(that))\n                .on(\"click\" + NS, \".k-link.k-disabled\", function(e) { e.preventDefault(); })\n                .on(\"click\" + NS, function(e) {\n                    var target = $(e.target);\n\n                    if (!target.is(\":kendoFocusable\") && !target.find(\"input,select,textarea,button,object\").is(\":kendoFocusable\")) {\n                        that.focus();\n                    }\n                });\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _syncHtmlAndDataSource: function(root, dataSource) {\n            root = root || this.root;\n            dataSource = dataSource || this.dataSource;\n            var data = dataSource.view(),\n                uidAttr = kendo.attr(\"uid\"),\n                expandedAttr = kendo.attr(\"expanded\"),\n                checkboxesEnabled = this.options.checkboxes,\n                items = root.children(\"li\"),\n                i,\n                item,\n                dataItem,\n                uid,\n                itemCheckbox;\n\n            for (i = 0; i < items.length; i++) {\n                dataItem = data[i];\n                uid = dataItem.uid;\n                item = items.eq(i);\n                item.attr(\"role\", \"treeitem\")\n                    .attr(uidAttr, uid)\n                    .attr(ARIA_SELECTED, item.hasClass(\"k-selected\"));\n\n                dataItem.expanded = item.attr(expandedAttr) === \"true\";\n\n                if (dataItem.hasChildren) {\n                    item.attr(ARIA_EXPANDED, dataItem.expanded);\n                }\n\n                if (checkboxesEnabled) {\n                    itemCheckbox = checkboxes(item);\n                    dataItem.checked = itemCheckbox.prop(CHECKED);\n                    itemCheckbox.attr(\"id\", \"_\" + uid);\n                    itemCheckbox.next(\".k-checkbox-label\").attr(\"for\", \"_\" + uid);\n\n                    item.attr(ARIA_CHECKED, item.checked);\n                }\n\n                this._syncHtmlAndDataSource(item.children(\"ul\"), dataItem.children);\n            }\n        },\n\n        _animation: function() {\n            var options = this.options,\n                animationOptions = options.animation,\n                hasCollapseAnimation = animationOptions.collapse && \"effects\" in animationOptions.collapse,\n                collapse = extend({}, animationOptions.expand, animationOptions.collapse);\n\n            if (!hasCollapseAnimation) {\n                collapse = extend(collapse, { reverse: true });\n            }\n\n            if (animationOptions === false) {\n                animationOptions = {\n                    expand: { effects: {} },\n                    collapse: { hide: true, effects: {} }\n                };\n            }\n\n            animationOptions.collapse = extend(collapse, { hide: true });\n            options.animation = animationOptions;\n        },\n\n        _dragging: function() {\n            var enabled = this.options.dragAndDrop;\n            var dragging = this.dragging;\n\n            if (enabled && !dragging) {\n                var widget = this;\n\n                this.dragging = new ui.HierarchicalDragAndDrop(this.element, {\n                    reorderable: true,\n                    autoScroll: this.options.autoScroll,\n                    filter: \"div:not(.k-disabled) .k-treeview-leaf\",\n                    allowedContainers: \".k-treeview\",\n                    itemSelector: \".k-treeview .k-treeview-item\",\n                    hintText: this._hintText.bind(this),\n                    clickMoveClick: this.options.dragAndDrop.clickMoveClick === true ? true : false,\n                    contains: function(source, destination) {\n                        return $.contains(source, destination);\n                    },\n                    dropHintContainer: function(item) {\n                        return item;\n                    },\n                    itemFromTarget: function(target) {\n                        var item = target.closest(\".k-treeview-top,.k-treeview-mid,.k-treeview-bot\");\n                        return {\n                            item: item,\n                            content: target.closest(\".k-treeview-leaf\"),\n                            first: item.hasClass(\"k-treeview-top\"),\n                            last: item.hasClass(\"k-treeview-bot\")\n                        };\n                    },\n                    dropPositionFrom: function(dropHint) {\n                        return dropHint.prevAll(\".k-treeview-leaf\").length > 0 ? \"after\" : \"before\";\n                    },\n                    dragstart: function(source) {\n                        widget.wrapper.attr(kendo.attr(\"scrollable\"), false);\n                        return widget.trigger(DRAGSTART, { sourceNode: source[0] });\n                    },\n                    drag: function(options) {\n                        widget.trigger(DRAG, {\n                            originalEvent: options.originalEvent,\n                            sourceNode: options.source[0],\n                            dropTarget: options.target[0],\n                            pageY: options.pageY,\n                            pageX: options.pageX,\n                            statusClass: options.status,\n                            setStatusClass: options.setStatus\n                        });\n                    },\n                    drop: function(options) {\n                        var dropTarget = $(options.dropTarget);\n                        var navigationTarget = dropTarget.closest(\"a\");\n\n                        if (navigationTarget && navigationTarget.attr(\"href\")) {\n                            widget._tempPreventNavigation(navigationTarget);\n                        }\n\n                        return widget.trigger(DROP, {\n                            originalEvent: options.originalEvent,\n                            sourceNode: options.source,\n                            destinationNode: options.destination,\n                            valid: options.valid,\n                            setValid: function(state) {\n                                this.valid = state;\n                                options.setValid(state);\n                            },\n                            dropTarget: options.dropTarget,\n                            dropPosition: options.position\n                        });\n                    },\n                    dragend: function(options) {\n                        var source = options.source;\n                        var destination = options.destination;\n                        var position = options.position;\n\n                        widget.wrapper.removeAttr(kendo.attr(\"scrollable\"));\n\n                        function triggerDragEnd(source) {\n                            if (widget.options.checkboxes && widget.options.checkboxes.checkChildren) {\n                                widget.updateIndeterminate();\n                            }\n\n                            widget.current(source);\n                            widget.element.focus();\n\n                            widget.trigger(DRAGEND, {\n                                originalEvent: options.originalEvent,\n                                sourceNode: source && source[0],\n                                destinationNode: destination[0],\n                                dropPosition: position\n                            });\n                        }\n\n                        // perform reorder / move\n                        // different handling is necessary because append might be async in remote bound tree\n                        if (position == \"over\") {\n                            widget.append(source, destination, triggerDragEnd);\n                        } else {\n                            if (position == \"before\") {\n                                source = widget.insertBefore(source, destination);\n                            } else if (position == \"after\") {\n                                source = widget.insertAfter(source, destination);\n                            }\n\n                            triggerDragEnd(source);\n                        }\n                    }\n                });\n            } else if (!enabled && dragging) {\n                dragging.destroy();\n                this.dragging = null;\n            }\n        },\n\n        _tempPreventNavigation: function(node) {\n            node.on(CLICK + NS + TEMP_NS, function(ev) {\n                ev.preventDefault();\n                node.off(CLICK + NS + TEMP_NS);\n            });\n        },\n\n        _hintText: function(node) {\n            return this.templates.dragClue({\n                item: this.dataItem(node),\n                treeview: this.options\n            });\n        },\n\n        _templates: function() {\n            let that = this,\n                options = that.options,\n                fieldAccessor = that._fieldAccessor.bind(that);\n\n            if (options.template && typeof options.template == STRING) {\n                options.template = template(options.template);\n            } else if (!options.template) {\n                options.template = ({ item }) => {\n                    let text = fieldAccessor(\"text\")(item);\n                    let contentAttributes = fieldAccessor(\"contentAttr\")(item);\n\n                    if (typeof item.encoded != 'undefined' && item.encoded === false) {\n                        return `<span ${that.templates.contentCssAttributes(contentAttributes)}>${text}</span>`;\n                    }\n\n                    return `<span ${that.templates.contentCssAttributes(contentAttributes)}>${encode(text)}</span>`;\n                };\n            }\n\n            that._checkboxes();\n\n            that.templates = {\n                setAttributes: function(item) {\n                    return that.templates.setDefaultClasses(treeViewItemDefaultClasses.item, item.attr);\n                },\n                cssClass: function(group, item) {\n                    var result = \"\",\n                        index = item.index,\n                        groupLength = group.length - 1;\n\n                    if (group.firstLevel && index === 0) {\n                        result += \"k-treeview-top \";\n                    }\n\n                    if (index === 0 && index != groupLength) {\n                        result += (result.indexOf(\"k-treeview-top\") != -1) ? \"\" : \"k-treeview-top\";\n                    } else if (index == groupLength) {\n                        result += \"k-treeview-bot\";\n                    } else {\n                        result += \"k-treeview-mid\";\n                    }\n\n                    return result;\n                },\n                textClass: function(item, isLink) {\n                    var result = \"k-treeview-leaf\";\n\n                    if (isLink) {\n                        result += \" k-link\";\n                    }\n\n                    if (item.enabled === false) {\n                        result += \" k-disabled\";\n                    }\n\n                    if (item.selected === true) {\n                        result += \" k-selected\";\n                    }\n\n                    return result;\n                },\n                checkboxClass: function(item) {\n                    var result = \"k-checkbox\";\n\n                    if (item.enabled === false) {\n                        result += \" k-disabled\";\n                    }\n\n                    return result;\n                },\n                toggleButtonClass: function(item) {\n                    var result = \"k-treeview-toggle\";\n\n                    if (item.enabled === false) {\n                        result += \" k-disabled\";\n                    }\n\n                    return result;\n                },\n                toggleIcon: function(icon, item) {\n                    if (item.expanded !== true) {\n                        return ui.icon(icon, { icon: `caret-alt-${kendo.support.isRtl(that.element) ? 'left' : 'right'}` });\n                    } else {\n                        return ui.icon(icon, { icon: 'caret-alt-down' });\n                    }\n                },\n                groupAttributes: function(group) {\n                    var attributes = \"\";\n\n                    if (!group.firstLevel) {\n                        attributes = \"role='group'\";\n                    }\n\n                    return attributes + (group.expanded !== true ? ` ${kendo.attr(\"style-display\")}=\"none\"` : \"\");\n                },\n                groupCssClass: function(group) {\n                    var cssClass = \"k-treeview-group\";\n\n                    if (group.firstLevel) {\n                        cssClass += \" k-treeview-lines\";\n                    }\n\n                    return cssClass;\n                },\n                dragClue: (data) => data.treeview.template(data),\n                group: (data) =>\n                `<ul class='${data.r.groupCssClass(data.group)}'${data.r.groupAttributes(data.group)}>` +\n                    data.renderItems(data) +\n                `</ul>`,\n                itemContent: (data) => {\n                    let imageUrl = fieldAccessor(\"imageUrl\")(data.item);\n                    let imgAttributes = fieldAccessor(\"imageAttr\")(data.item);\n                    let spriteCssClass = fieldAccessor(\"spriteCssClass\")(data.item);\n                    let result = \"\";\n\n                    if (imageUrl) {\n                        result += `<img ${that.templates.imageCssAttributes(imgAttributes)} alt='' src='${imageUrl}'>`;\n                    }\n\n                    if (spriteCssClass) {\n                        result += `<span class='k-sprite ${spriteCssClass}'></span>`;\n                    }\n\n                    result += data.treeview.template(data);\n\n                    return result;\n                },\n                itemElement: (data) => {\n                    let item = data.item,\n                        r = data.r;\n                    let url = fieldAccessor(\"url\")(item),\n                        tag = url ? 'a' : 'span',\n                        textAttr = url ? ' href=\"' + url + '\"' : '';\n                    let result = `<div class=\"${r.cssClass(data.group, item)}\">`;\n\n                    if (item.hasChildren) {\n                        result += `<span class='${r.toggleButtonClass(item)}'>` +\n                                    r.toggleIcon($(TOGGLE_ICON_ELM), item) +\n                                  `</span>`;\n                    }\n\n                    if (data.treeview.checkboxes) {\n                        result += `<span class='k-checkbox-wrap' role='presentation'>` +\n                                    data.treeview.checkboxes.template(data) +\n                                  `</span>`;\n                    }\n\n                    result += `<${tag} ${r.linkCssAttributes(item, !!url)} ${textAttr}>` +\n                                 r.itemContent(data) +\n                              `</${tag}>`;\n\n                    result += \"</div>\";\n\n                    return result;\n                },\n                item: (data) => {\n                    var item = data.item,\n                        r = data.r;\n                    var result =\n                        `<li role='treeitem'` +\n                        `${kendo.attr(\"uid\")}=\"${item.uid}\"` +\n                        `${r.setAttributes(item.toJSON ? item.toJSON() : item)} `;\n\n                    if (data.treeview.checkboxes) {\n                        result +=\n                            `aria-checked=\"${item.checked ? 'true' : 'false'}\" `;\n                    }\n\n                    result +=\n                        `aria-selected=\"${item.selected ? 'true' : 'false'}\" ` +\n                            `${item.enabled === false ? 'aria-disabled=\"true\"' : ''}`;\n\n                    if (item.hasChildren) {\n                        result += `aria-expanded=\"${item.expanded ? \"true\" : \"false\"}\" `;\n                    }\n\n                    result +=\n                        `data-expanded=\"${item.expanded ? \"true\" : \"false\"}\" >` +\n                        r.itemElement(data) +\n                        `</li>`;\n\n                    return result;\n                },\n                loading: ({ messages }) =>\n                    `<div class='k-icon k-i-loading'></div> ${encode(messages.loading)}`,\n                retry: ({ messages }) =>\n                    `${encode(messages.requestFailed)} ` +\n                    `<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-request-retry'><span class='k-button-text'>${encode(messages.retry)}</span></button>`,\n                imageCssAttributes: function(imgAttributes) {\n                    return that.templates.setDefaultClasses(treeViewItemDefaultClasses.image, imgAttributes);\n                },\n                contentCssAttributes: function(contentAttributes) {\n                    return that.templates.setDefaultClasses(treeViewItemDefaultClasses.contentText, contentAttributes);\n                },\n                linkCssAttributes: function(item, isLink) {\n                    return that.templates.setDefaultClasses(this.textClass(item, isLink), fieldAccessor(\"linkAttr\")(item));\n                },\n                setDefaultClasses: function(defaultClasses, attributes) {\n                    attributes = attributes && attributes.toJSON ? attributes.toJSON() : attributes || {};\n                    if (!attributes['class']) {\n                        attributes['class'] = defaultClasses;\n                    } else {\n                        attributes['class'] += \" \" + defaultClasses;\n                    }\n\n                    return that.templates.stringifyAttributes(attributes);\n\n                },\n                stringifyAttributes: function(attributes) {\n                    let result = \"\";\n                    for (let attr in attributes) {\n                        if (attributes.hasOwnProperty(attr)) {\n                            result += attr + \"=\\\"\" + attributes[attr] + \"\\\" \";\n                        }\n                    }\n                    return result;\n                }\n\n            };\n        },\n\n        items: function() {\n            return this.element.find(\".k-treeview-item > div:first-child\");\n        },\n\n        setDataSource: function(dataSource) {\n            var options = this.options;\n\n            options.dataSource = dataSource;\n\n            this._dataSourceUids = {};\n\n            this._dataSource();\n\n            if (options.checkboxes && options.checkboxes.checkChildren) {\n                this.dataSource.one(\"change\", this.updateIndeterminate.bind(this, null));\n            }\n\n            if (this.options.autoBind) {\n                this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n            }\n        },\n\n        _bindDataSource: function() {\n            var that = this;\n\n            that._refreshHandler = that.refresh.bind(that);\n            that._errorHandler = that._error.bind(that);\n            that._loadCompletedHandler = that._loadCompleted.bind(that);\n            that._requestEndHandler = that._dsRequestEnd.bind(that);\n            that._loadedNodes = [];\n\n            that.dataSource.bind(CHANGE, that._refreshHandler);\n            that.dataSource.bind(ERROR, that._errorHandler);\n\n            that.dataSource.bind(ITEMSLOADED, that._loadCompletedHandler);\n            that.dataSource.bind(REQUESTEND, that._requestEndHandler);\n        },\n\n        _dsRequestEnd: function(e) {\n            var that = this;\n\n            setTimeout(function() {\n                if (e.type === \"read\" && !that._loadCompletedFired) {\n                    that._attemptLoadCompleted();\n                }\n            });\n        },\n\n        _loadCompleted: function(e) {\n            var that = this;\n            that._loadedNodes = that._loadedNodes.concat(e.nodes);\n\n            if (!that.dataSource.loading() && that.options.loadOnDemand === false) {\n                that.trigger(LOADCOMPLETED, { nodes: that._loadedNodes });\n                that._loadedNodes = [];\n            }\n        },\n\n        _attemptLoadCompleted: function() { // If there are no items to be loaded ensure event is triggered on dataBound\n            var that = this,\n                items = that.dataSource.view(),\n                current, i;\n\n            if (that.options.loadOnDemand === false) {\n                for (i = 0; i < items.length; i++) {\n                    current = items[i];\n                    if (current.hasChildren && (!current.children || !current.children.data() || current.children.data().length === 0)) {\n                        return;\n                    }\n                }\n\n                that._loadCompletedFired = true;\n                that.trigger(LOADCOMPLETED, { nodes: [] });\n            }\n        },\n\n        _unbindDataSource: function() {\n            var dataSource = this.dataSource;\n\n            if (dataSource) {\n                dataSource.unbind(CHANGE, this._refreshHandler);\n                dataSource.unbind(PROGRESS, this._progressHandler);\n                dataSource.unbind(ERROR, this._errorHandler);\n                dataSource.unbind(ITEMSLOADED, this._loadCompletedHandler);\n                dataSource.unbind(REQUESTEND, this._requestEndHandler);\n            }\n        },\n\n        _dataSource: function(silentRead) {\n            var that = this,\n                options = that.options,\n                dataSource = options.dataSource;\n\n            function recursiveRead(data) {\n                for (var i = 0; i < data.length; i++) {\n                    data[i]._initChildren();\n\n                    data[i].children.fetch();\n\n                    recursiveRead(data[i].children.view());\n                }\n            }\n\n            dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            that._unbindDataSource();\n\n            if (!dataSource.fields) {\n                dataSource.fields = [\n                    { field: \"text\" },\n                    { field: \"url\" },\n                    { field: \"spriteCssClass\" },\n                    { field: \"imageUrl\" }\n                ];\n            }\n\n            that.dataSource = dataSource = HierarchicalDataSource.create(dataSource);\n\n            if (silentRead) {\n                dataSource.fetch();\n\n                recursiveRead(dataSource.view());\n            }\n\n            that._bindDataSource();\n        },\n\n        events: [\n            DRAGSTART,\n            DRAG,\n            DROP,\n            DRAGEND,\n\n            DATABOUND,\n            LOADCOMPLETED,\n\n            EXPAND,\n            COLLAPSE,\n            SELECT,\n            CHANGE,\n            NAVIGATE,\n            CHECK,\n            KENDOKEYDOWN\n        ],\n\n        options: {\n            name: \"TreeView\",\n            dataSource: {},\n            animation: {\n                expand: {\n                    effects: \"expand:vertical\",\n                    duration: 200\n                }, collapse: {\n                    duration: 100\n                }\n            },\n            messages: {\n                loading: \"Loading...\",\n                requestFailed: \"Request failed.\",\n                retry: \"Retry\"\n            },\n            dragAndDrop: false,\n            checkboxes: false,\n            autoBind: true,\n            autoScroll: false,\n            loadOnDemand: true,\n            template: \"\",\n            dataTextField: null,\n            size: \"medium\"\n        },\n\n        _accessors: function() {\n            var that = this,\n                options = that.options,\n                i, field, textField,\n                element = that.element;\n\n            for (i in bindings) {\n                field = options[bindings[i]];\n                textField = element.attr(kendo.attr(i + \"-field\"));\n\n                if (!field && textField) {\n                    field = textField;\n                }\n\n                if (!field) {\n                    field = i;\n                }\n\n                if (!isArray(field)) {\n                    field = [field];\n                }\n\n                options[bindings[i]] = field;\n            }\n        },\n\n        // generates accessor function for a given field name, honoring the data*Field arrays\n        _fieldAccessor: function(fieldName) {\n            var fieldBindings = this.options[bindings[fieldName]],\n                count = fieldBindings.length;\n\n            return (function(item) {\n                if (count === 0) {\n                    return kendo.getter(fieldName)(item);\n                }\n\n                return $.map(fieldBindings, function(x) {\n                    return function(d) { return kendo.getter(x)(d); };\n                })[Math.min(item.level(), count - 1)](item);\n            });\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._animation();\n\n            this._dragging();\n\n            this._accessors();\n\n            this._templates();\n        },\n\n        _trigger: function(eventName, node) {\n            return this.trigger(eventName, {\n                node: node.closest(NODE)[0]\n            });\n        },\n\n        _setChecked: function(datasource, value) {\n            if (!datasource || !kendo.isFunction(datasource.view)) {\n                return;\n            }\n\n            for (var i = 0, nodes = datasource.view(); i < nodes.length; i++) {\n                if (nodes[i].enabled !== false) {\n                    this._setCheckedValue(nodes[i], value);\n                }\n\n                if (nodes[i].children) {\n                    this._setChecked(nodes[i].children, value);\n                }\n            }\n        },\n\n        _setCheckedValue: function(node, value) {\n            node[CHECKED] = value;\n        },\n\n        _setIndeterminate: function(node) {\n            var group = subGroup(node),\n                siblings, length,\n                all = true,\n                i;\n\n            if (!group.length) {\n                return;\n            }\n\n            siblings = checkboxes(group.children());\n\n            length = siblings.length;\n\n            if (!length) {\n                return;\n            } else if (length > 1) {\n                for (i = 1; i < length; i++) {\n                    if (siblings[i].checked != siblings[i - 1].checked ||\n                        siblings[i].indeterminate || siblings[i - 1].indeterminate) {\n                        all = false;\n                        break;\n                    }\n                }\n            } else {\n                all = !siblings[0].indeterminate;\n            }\n\n            node.attr(ARIA_CHECKED, all ? siblings[0].checked : \"mixed\");\n\n            return checkboxes(node)\n                .data(INDETERMINATE, !all)\n                .prop(INDETERMINATE, !all)\n                .prop(CHECKED, all && siblings[0].checked);\n        },\n\n        updateIndeterminate: function(node) {\n            // top-down update of inital indeterminate state for all nodes\n            node = node || this.wrapper;\n\n            var subnodes = subGroup(node).children();\n            var i;\n            var checkbox;\n            var dataItem;\n\n            if (subnodes.length) {\n                for (i = 0; i < subnodes.length; i++) {\n                    this.updateIndeterminate(subnodes.eq(i));\n                }\n\n                if (node.is(\".k-treeview\")) {\n                    return;\n                }\n\n                checkbox = this._setIndeterminate(node);\n\n                dataItem = this.dataItem(node);\n\n                if (checkbox && checkbox.prop(CHECKED)) {\n                    dataItem.checked = true;\n                } else {\n                    if (dataItem) {\n                        delete dataItem.checked;\n                    }\n                }\n            }\n        },\n\n        _bubbleIndeterminate: function(node, skipDownward) {\n            // bottom-up setting of indeterminate state of parent nodes\n            if (!node.length) {\n                return;\n            }\n\n            if (!skipDownward) {\n                //update the indeterminate state of the node itself\n                this.updateIndeterminate(node);\n            }\n\n            var parentNode = this.parent(node),\n                checkbox;\n\n            if (parentNode.length) {\n                this._setIndeterminate(parentNode);\n\n                checkbox = parentNode.children(\"div\").find(\".k-checkbox-wrap input[type=checkbox]\");\n\n                this._skip = true;\n                if (checkbox.prop(INDETERMINATE) === false) {\n                    this.dataItem(parentNode).set(CHECKED, checkbox.prop(CHECKED));\n                } else {\n                    // delete this.dataItem(parentNode).checked;\n                    this.dataItem(parentNode).set(CHECKED, false);\n                }\n\n                this._skip = false;\n\n                this._bubbleIndeterminate(parentNode, true);\n            }\n        },\n\n        _checkboxChange: function(e) {\n            var that = this;\n            var checkbox = $(e.target);\n            var isChecked = checkbox.prop(CHECKED);\n            var node = checkbox.closest(NODE);\n            var dataItem = this.dataItem(node);\n\n            if (this._preventChange) {\n                return;\n            }\n\n            if (dataItem.checked != isChecked) {\n                dataItem.set(CHECKED, isChecked);\n                node.attr(ARIA_CHECKED, isChecked);\n                this._trigger(CHECK, node);\n            }\n\n            if (checkbox.is(\":focus\")) {\n                that._trigger(NAVIGATE, node);\n                that.focus();\n            }\n        },\n\n        _toggleButtonClick: function(e) {\n            var node = $(e.currentTarget).closest(NODE);\n\n            if (node.is(\"[aria-disabled='true']\")) {\n                return;\n            }\n\n            this.toggle(node);\n        },\n\n        _mousedown: function(e) {\n            var that = this;\n            var currentTarget = $(e.currentTarget);\n            var node = $(e.currentTarget).closest(NODE);\n            var browser = kendo.support.browser;\n\n            if (node.is(\"[aria-disabled='true']\")) {\n                return;\n            }\n\n            //IE does not trigger change for indeterminate checkboxes\n            if ((browser.msie || browser.edge) && currentTarget.is(\":checkbox\")) {\n                if (currentTarget.prop(INDETERMINATE)) {\n                    that._preventChange = false;\n\n                    currentTarget.prop(CHECKED, !currentTarget.prop(CHECKED));\n                    currentTarget.trigger(CHANGE);\n\n                    currentTarget.on(CLICK + NS, function(e) {\n                        e.preventDefault();\n                    });\n\n                    that._preventChange = true;\n                } else {\n                    currentTarget.off(CLICK + NS);\n                    that._preventChange = false;\n                }\n            }\n\n            that._clickTarget = node;\n            that.current(node);\n        },\n\n        _focusable: function(node) {\n            return node && node.length && node.is(\":visible\") && !node.find(\".k-treeview-leaf\").first().hasClass(DISABLED);\n        },\n\n        _focus: function() {\n            var current = this.select(),\n                clickTarget = this._clickTarget;\n\n            // suppress initial focus state on touch devices (until keyboard is used)\n            if (kendo.support.touch) {\n                return;\n            }\n\n            if (clickTarget && clickTarget.length) {\n                current = clickTarget;\n            }\n\n            if (!this._focusable(current)) {\n                current = this.current();\n            }\n\n            if (!this._focusable(current)) {\n                current = this._nextVisible($());\n            }\n\n            this.current(current);\n        },\n\n        focus: function() {\n            var wrapper = this.wrapper,\n                scrollContainer = wrapper[0],\n                containers = [],\n                offsets = [],\n                documentElement = document.documentElement,\n                i;\n\n            do {\n                scrollContainer = scrollContainer.parentNode;\n\n                if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                    containers.push(scrollContainer);\n                    offsets.push(scrollContainer.scrollTop);\n                }\n            } while (scrollContainer != documentElement);\n\n            kendo.focusElement(wrapper);\n\n            for (i = 0; i < containers.length; i++) {\n                containers[i].scrollTop = offsets[i];\n            }\n        },\n\n        _blur: function() {\n            this.current().find(\".k-treeview-leaf\").first().removeClass(\"k-focus\");\n        },\n\n        _enabled: function(node) {\n            return !node.children(\"div\").children(\".k-treeview-leaf\").hasClass(DISABLED);\n        },\n\n        parent: function(node) {\n            var wrapperRe = /\\bk-treeview\\b(?!-)/,\n                itemRe = /\\bk-treeview-item\\b/,\n                result,\n                skipSelf;\n\n            if (typeof node == STRING) {\n                node = this.element.find(node);\n            }\n\n            if (!isDomElement(node)) {\n                node = node[0];\n            }\n\n            skipSelf = itemRe.test(node.className);\n\n            do {\n                node = node.parentNode;\n\n                if (itemRe.test(node.className)) {\n                    if (skipSelf) {\n                        result = node;\n                    } else {\n                        skipSelf = true;\n                    }\n                }\n            } while (!wrapperRe.test(node.className) && !result);\n\n            return $(result);\n        },\n\n        _nextVisible: function(node) {\n            var that = this,\n                expanded = that._expanded(node),\n                result;\n\n            function nextParent(node) {\n                while (node.length && !node.next().length) {\n                    node = that.parent(node);\n                }\n\n                if (node.next().length) {\n                    return node.next();\n                } else {\n                    return node;\n                }\n            }\n\n            if (!node.length || !node.is(\":visible\")) {\n                result = that.root.children().eq(0);\n            } else if (expanded) {\n                result = subGroup(node).children().first();\n\n                // expanded node with no children\n                if (!result.length) {\n                    result = nextParent(node);\n                }\n            } else {\n                result = nextParent(node);\n            }\n\n            return result;\n        },\n\n        _previousVisible: function(node) {\n            var that = this,\n                lastChild,\n                result;\n\n            if (!node.length || node.prev().length) {\n                if (node.length) {\n                    result = node.prev();\n                } else {\n                    result = that.root.children().last();\n                }\n\n                while (that._expanded(result)) {\n                    lastChild = subGroup(result).children().last();\n\n                    if (!lastChild.length) {\n                        break;\n                    }\n\n                    result = lastChild;\n                }\n            } else {\n                result = that.parent(node) || node;\n            }\n\n            return result;\n        },\n\n        scrollTo: function(item) {\n            if (item && item.length > 0) {\n                item[0].scrollIntoView({ block: \"nearest\" });\n            }\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode,\n                target,\n                focused = that.current(),\n                expanded = that._expanded(focused),\n                checkbox = focused.find(\".k-checkbox-wrap\").first().find(\":checkbox\"),\n                rtl = kendo.support.isRtl(that.element);\n\n            if (e.target != e.currentTarget) {\n                return;\n            }\n\n            if ((!rtl && key == keys.RIGHT) || (rtl && key == keys.LEFT)) {\n                if (expanded) {\n                    target = that._nextVisible(focused);\n                } else if (!focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                    that.expand(focused);\n                }\n            } else if ((!rtl && key == keys.LEFT) || (rtl && key == keys.RIGHT)) {\n                if (expanded && !focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                    that.collapse(focused);\n                } else {\n                    target = that.parent(focused);\n\n                    if (!that._enabled(target)) {\n                        target = undefined$1;\n                    }\n                }\n            } else if (key == keys.DOWN) {\n                target = that._nextVisible(focused);\n            } else if (key == keys.UP) {\n                target = that._previousVisible(focused);\n            } else if (key == keys.HOME) {\n                target = that._nextVisible($());\n            } else if (key == keys.END) {\n                target = that._previousVisible($());\n            } else if (key == keys.ENTER && !focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                if (!focused.find(\".k-treeview-leaf\").first().hasClass(\"k-selected\")) {\n                    if (!that._trigger(SELECT, focused)) {\n                        that.select(focused);\n                    }\n                }\n            } else if (key == keys.SPACEBAR && checkbox.length) {\n                if (!focused.find(\".k-treeview-leaf\").first().hasClass(DISABLED)) {\n                    checkbox.prop(CHECKED, !checkbox.prop(CHECKED))\n                        .data(INDETERMINATE, false)\n                        .prop(INDETERMINATE, false);\n\n                    that._checkboxChange({ target: checkbox });\n                }\n                target = focused;\n            }\n\n            if (target) {\n                e.preventDefault();\n\n                if (focused[0] != target[0]) {\n                    that._trigger(NAVIGATE, target);\n                    that.current(target);\n                    that.scrollTo(target);\n                }\n            }\n        },\n\n        _keypress: function(e) {\n            var that = this;\n            var delay = 300;\n            var focusedNode = that.current().get(0);\n            var matchToFocus;\n            var key = e.key;\n            var isPrintable = key.length === 1;\n\n            if (!isPrintable) {\n                return;\n            }\n\n            if (!that._match) {\n                that._match = \"\";\n            }\n\n            that._match += key;\n            clearTimeout(that._matchTimer);\n            that._matchTimer = setTimeout(function() {\n                that._match = \"\";\n            }, delay);\n\n            matchToFocus = focusedNode &&\n                            that._matchNextByText(\n                                Array.prototype.indexOf.call(that.element.find(\".k-treeview-item\"),\n                                focusedNode), that._match\n                            );\n\n            if (!matchToFocus.length) {\n                matchToFocus = that._matchNextByText(-1, that._match);\n            }\n\n            if (matchToFocus.get(0) && matchToFocus.get(0) !== focusedNode) {\n                that._trigger(NAVIGATE, matchToFocus);\n                that.current(matchToFocus);\n            }\n        },\n\n        _matchNextByText: function(startIndex, text) {\n            var element = this.element;\n            var textNodes = element.find(\".k-treeview-leaf\").filter(function(i, element) {\n                return (i > startIndex &&\n                        $(element).is(\":visible\") &&\n                        $(element).text().toLowerCase().indexOf(text) === 0);\n            });\n\n            return textNodes.eq(0).closest(NODE);\n        },\n\n        _click: function(e) {\n            var that = this,\n                node = $(e.currentTarget),\n                contents = nodeContents(node.closest(NODE)),\n                href = node.attr(\"href\"),\n                shouldNavigate;\n\n            if (href) {\n                shouldNavigate = href == \"#\" || href.indexOf(\"#\" + this.element.id + \"-\") >= 0;\n            } else {\n                shouldNavigate = contents.length && !contents.children().length;\n            }\n\n            if (shouldNavigate) {\n                e.preventDefault();\n            }\n\n            if (!node.hasClass(\".k-selected\") && !that._trigger(SELECT, node)) {\n                that.select(node);\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                wrapper, root,\n                wrapperClasses = \"k-treeview\";\n\n            if (element.is(\"ul\")) {\n                wrapper = element.wrap('<div />').parent();\n                root = element;\n            } else {\n                wrapper = element;\n                root = wrapper.children(\"ul\").eq(0);\n            }\n\n            that.wrapper = wrapper.addClass(wrapperClasses);\n            that.root = root;\n        },\n\n        _getSelectedNode: function() {\n            return this.element.find(\".k-selected\").closest(NODE);\n        },\n\n        _group: function(item) {\n            var that = this,\n                firstLevel = item.hasClass(KTREEVIEW),\n                group = {\n                    firstLevel: firstLevel,\n                    expanded: firstLevel || that._expanded(item)\n                },\n                groupElement = item.children(\"ul\");\n\n            groupElement\n                .addClass(that.templates.groupCssClass(group))\n                .css(\"display\", group.expanded ? \"\" : \"none\");\n\n            if (!firstLevel) {\n                groupElement.attr(\"role\", \"group\");\n            }\n\n            that._nodes(groupElement, group);\n        },\n\n        _nodes: function(groupElement, groupData) {\n            var that = this,\n                nodes = groupElement.children(\"li\"),\n                nodeData;\n\n            groupData = extend({ length: nodes.length }, groupData);\n\n            nodes.each(function(i, node) {\n                node = $(node);\n\n                nodeData = { index: i, expanded: that._expanded(node) };\n\n                updateNodeHtml(node);\n\n                that._updateNodeClasses(node, groupData, nodeData);\n\n                // iterate over child nodes\n                that._group(node);\n            });\n        },\n\n        _checkboxes: function() {\n            var options = this.options;\n            var checkboxes = options.checkboxes;\n            var defaultTemplate, checkbox;\n\n            if (checkboxes) {\n                defaultTemplate = kendo.html.renderCheckBox($(\"<input/>\"), $.extend({}, options, {\n                    rounded: \"medium\"\n                }));\n\n                defaultTemplate = defaultTemplate.replace(\">\", \"\");\n\n                checkbox = ({ item }) =>\n                defaultTemplate +\n                ` id=\"_${item.uid}\" aria-hidden=\"true\" type=\"checkbox\" tabindex=\"-1\"` +\n                `${checkboxes.name ? 'name=\"' + checkboxes.name + '\"' : ''} ` +\n                `${(item.enabled === false) ? 'disabled' : ''} ` +\n                `${item.checked ? 'checked' : ''}/>`;\n\n                checkboxes = extend({\n                    template: checkbox\n                }, options.checkboxes);\n\n                if (typeof checkboxes.template == STRING) {\n                    checkboxes.template = template(checkboxes.template);\n                }\n\n                options.checkboxes = checkboxes;\n            }\n        },\n\n        _updateNodeClasses: function(node, groupData, nodeData) {\n            var wrapper = node.children(\"div\"),\n                group = node.children(\"ul\"),\n                templates = this.templates;\n\n            if (node.hasClass(\"k-treeview\")) {\n                return;\n            }\n\n            nodeData = nodeData || {};\n            nodeData.expanded = typeof nodeData.expanded != UNDEFINED ? nodeData.expanded : this._expanded(node);\n            nodeData.index = typeof nodeData.index != UNDEFINED ? nodeData.index : node.index();\n            nodeData.enabled = typeof nodeData.enabled != UNDEFINED ? nodeData.enabled : !wrapper.children(\".k-treeview-leaf\").hasClass(\"k-disabled\");\n\n            groupData = groupData || {};\n            groupData.firstLevel = typeof groupData.firstLevel != UNDEFINED ? groupData.firstLevel : node.parent().parent().hasClass(KTREEVIEW);\n            groupData.length = typeof groupData.length != UNDEFINED ? groupData.length : node.parent().children().length;\n\n            // li\n            node.addClass(\"k-treeview-item\");\n\n            // div\n            wrapper.removeClass(\"k-treeview-top k-treeview-mid k-treeview-bot\")\n                   .addClass(templates.cssClass(groupData, nodeData));\n\n            // chekbox\n            var checkbox = wrapper.find(\".k-checkbox\");\n            checkbox.removeClass(\"k-checkbox k-disabled\").addClass(templates.checkboxClass(nodeData));\n\n            // span / a\n            var textWrap = wrapper.children(\".k-treeview-leaf\");\n            var isLink = textWrap[0] && textWrap[0].nodeName.toLowerCase() == \"a\";\n            textWrap.removeClass(\"k-treeview-leaf k-link k-disabled\")\n                .addClass(templates.textClass(nodeData, isLink));\n\n            // toggle button\n            if (group.length || node.attr(\"data-hasChildren\") == \"true\") {\n                var toggleButton = wrapper.find(\".k-treeview-toggle\");\n                var toggleIcon = toggleButton.children(`span`);\n                toggleButton.removeClass(\"k-treeview-toggle k-disabled\").addClass(templates.toggleButtonClass(nodeData));\n\n                // renderv icon\n                templates.toggleIcon(toggleIcon, nodeData);\n\n\n                group.addClass(\"k-treeview-group\");\n            }\n        },\n\n\n        _processNodes: function(nodes, callback) {\n            var that = this;\n            var items = that.element.find(nodes);\n            for (var i = 0; i < items.length; i++) {\n                callback.call(that, i, $(items[i]).closest(NODE));\n            }\n        },\n\n        dataItem: function(node) {\n            var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                dataSource = this.dataSource;\n\n            return dataSource && dataSource.getByUid(uid);\n        },\n\n        _dataItem: function(node) {\n            var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                dataSource = this.dataSource;\n\n            return dataSource && this._dataSourceUids[uid];\n        },\n\n        _insertNode: function(nodeData, index, parentNode, insertCallback, collapsed) {\n            var that = this,\n                group = subGroup(parentNode),\n                updatedGroupLength = group.children().length + 1,\n                childrenData,\n                groupData = {\n                    firstLevel: parentNode.hasClass(KTREEVIEW),\n                    expanded: !collapsed,\n                    length: updatedGroupLength\n                }, node, i, item, nodeHtml = \"\", firstChild, lastChild,\n                append = function(item, group) {\n                    item.appendTo(group);\n                };\n\n            for (i = 0; i < nodeData.length; i++) {\n                item = nodeData[i];\n\n                item.index = index + i;\n\n                nodeHtml += that._renderItem({\n                    group: groupData,\n                    item: item\n                });\n            }\n\n            node = $(nodeHtml);\n\n            if (!node.length) {\n                return;\n            }\n\n            if (!group.length) {\n                group = $(that._renderGroup({\n                    group: groupData\n                }));\n\n                kendo.applyStylesFromKendoAttributes(group, [\"display\"]);\n                group.appendTo(parentNode);\n\n                parentNode.attr(ARIA_EXPANDED, true);\n            }\n\n            insertCallback(node, group);\n\n            if (parentNode.hasClass(\"k-treeview-item\")) {\n                updateNodeHtml(parentNode);\n                that._updateNodeClasses(parentNode, groupData, { expanded: !collapsed });\n            }\n\n            firstChild = node.prev().first();\n            lastChild = node.next().last();\n\n            that._updateNodeClasses(firstChild, {}, { expanded: firstChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n            that._updateNodeClasses(lastChild, {}, { expanded: lastChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n\n            // render sub-nodes\n            for (i = 0; i < nodeData.length; i++) {\n                item = nodeData[i];\n\n                if (item.hasChildren) {\n                    childrenData = item.children.data();\n\n                    if (childrenData.length) {\n                        that._insertNode(childrenData, item.index, node.eq(i), append, !item.expanded);\n                    }\n                }\n            }\n\n            return node;\n        },\n\n        _updateNodes: function(items, field) {\n            var that = this;\n            var i, node, nodeWrapper, item, isChecked, isCollapsed, kin;\n            var context = { treeview: that.options, item: item };\n            var render = field != \"expanded\" && field != \"checked\";\n\n            function setCheckedState(root, state) {\n                if (root.is(\".k-treeview-group\")) {\n                    root.find(\".k-treeview-item:not([aria-disabled])\").attr(ARIA_CHECKED, state);\n                }\n\n                root.find(\".k-checkbox-wrap input[type=checkbox]:not([disabled])\")\n                    .prop(CHECKED, state)\n                    .data(INDETERMINATE, false)\n                    .prop(INDETERMINATE, false);\n            }\n\n            if (field == \"selected\") {\n                item = items[0];\n\n                node = that.findByUid(item.uid);\n                kin = node.find(\".k-treeview-leaf\").first();\n\n                kin.removeClass(\"k-hover\")\n                    .toggleClass(\"k-selected\", item[field])\n                    .end();\n\n                if (item[field]) {\n                    that.current(node);\n                }\n\n                node.attr(ARIA_SELECTED, !!item[field]);\n            } else {\n                var elements = $.map(items, function(item) {\n                    return that.findByUid(item.uid).children(\"div\");\n                });\n\n                for (i = 0; i < items.length; i++) {\n                    context.item = item = items[i];\n                    nodeWrapper = elements[i];\n                    node = nodeWrapper.parent();\n\n                    if (render) {\n                        if (kendo.unbind) {\n                            kendo.unbind(nodeWrapper);\n                        }\n                        nodeWrapper.children(\".k-treeview-leaf\")\n                            .html(that.templates.itemContent(context));\n                    }\n\n                    if (field == CHECKED) {\n                        isChecked = item[field];\n\n                        setCheckedState(nodeWrapper, isChecked);\n\n                        node.attr(ARIA_CHECKED, isChecked);\n\n                        if (that.options.checkboxes.checkChildren) {\n                            setCheckedState(node.children(\".k-treeview-group\"), isChecked);\n\n                            that._setChecked(item.children, isChecked);\n\n                            that._bubbleIndeterminate(node);\n                        }\n                    } else if (field == \"expanded\") {\n                        that._toggle(node, item, item[field]);\n                    } else if (field == \"enabled\") {\n                        node.find(\".k-checkbox-wrap input[type=checkbox]\").prop(\"disabled\", !item[field]);\n\n                        isCollapsed = !nodeContents(node).is(VISIBLE);\n\n                        node.removeAttr(ARIA_DISABLED);\n\n                        if (!item[field]) {\n                            if (item.selected) {\n                                item.set(\"selected\", false);\n                            }\n\n                            if (item.expanded) {\n                                item.set(\"expanded\", false);\n                            }\n\n                            isCollapsed = true;\n                            node.attr(ARIA_SELECTED, false)\n                                .attr(ARIA_DISABLED, true);\n                        }\n\n                        that._updateNodeClasses(node, {}, { enabled: item[field], expanded: !isCollapsed });\n                    }\n\n                    if (nodeWrapper.length) {\n                        this.trigger(\"itemChange\", { item: nodeWrapper, data: item, ns: ui });\n                    }\n                }\n            }\n        },\n\n        _appendItems: function(index, items, parentNode) {\n            var group = subGroup(parentNode);\n            var children = group.children();\n            var collapsed = !this._expanded(parentNode);\n\n            if (this.element === parentNode) {\n                var dataItems = this.dataSource.data();\n                var viewItems = this.dataSource.view();\n                var rootItems = viewItems.length < dataItems.length ? viewItems : dataItems;\n                index = rootItems.indexOf(items[0]);\n            } else if (items.length) {\n                index = items[0].parent().indexOf(items[0]);\n            }\n\n            if (typeof index == UNDEFINED) {\n                index = children.length;\n            }\n\n            this._insertNode(items, index, parentNode, function(item, group) {\n                // insert node into DOM\n                if (index >= children.length) {\n                    item.appendTo(group);\n                } else {\n                    item.insertBefore(children.eq(index));\n                }\n            }, collapsed);\n\n            this._updateNodeClasses(parentNode, {}, { expanded: !collapsed });\n\n            if (!collapsed) {\n                subGroup(parentNode).css(\"display\", \"block\");\n            }\n        },\n\n        _refreshChildren: function(parentNode, items, index) {\n            var i, children, child;\n            var options = this.options;\n            var loadOnDemand = options.loadOnDemand;\n            var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n\n            subGroup(parentNode).empty();\n\n            if (!items.length) {\n                updateNodeHtml(parentNode);\n            } else {\n                this._appendItems(index, items, parentNode);\n\n                children = subGroup(parentNode).children();\n\n                if (loadOnDemand && checkChildren) {\n                    this._bubbleIndeterminate(children.last());\n                }\n\n                for (i = 0; i < children.length; i++) {\n                    child = children.eq(i);\n                    this.trigger(\"itemChange\", {\n                        item: child.children(\"div\"),\n                        data: items[i],\n                        ns: ui\n                    });\n                }\n            }\n        },\n\n        _refreshRoot: function(items) {\n            var groupHtml = this._renderGroup({\n                    items: items,\n                    group: {\n                        firstLevel: true,\n                        expanded: true\n                    }\n                });\n\n            if (this.root.length && this.root[0].parentElement) {\n                var group = $(groupHtml);\n\n                this.root\n                    .attr(\"class\", group.attr(\"class\"))\n                    .html(group.html());\n            } else {\n                this.root = this.wrapper.html(groupHtml).children(\"ul\");\n            }\n\n            var elements = this.root.children(\".k-treeview-item\");\n            for (var i = 0; i < items.length; i++) {\n                this.trigger(\"itemChange\", {\n                    item: elements.eq(i),\n                    data: items[i],\n                    ns: ui\n                });\n            }\n        },\n\n        refresh: function(e) {\n            var node = e.node;\n            var action = e.action;\n            var items = e.items;\n            var parentNode = this.wrapper;\n            var options = this.options;\n            var loadOnDemand = options.loadOnDemand;\n            var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n            var i;\n\n            if (this._skip) {\n                return;\n            }\n\n            for (i = 0; i < items.length; i++) {\n                this._dataSourceUids[items[i].uid] = items[i];\n            }\n\n            if (e.field) {\n                if (!items[0] || !items[0].level) {\n                    return;\n                }\n\n                return this._updateNodes(items, e.field);\n            }\n\n            if (node) {\n                parentNode = this.findByUid(node.uid);\n                this._progress(parentNode, false);\n            }\n\n            if (checkChildren && action != \"remove\") {\n                var bubble = false;\n\n                for (i = 0; i < items.length; i++) {\n                    if (\"checked\" in items[i]) {\n                        bubble = true;\n                        break;\n                    }\n                }\n\n                if (!bubble && node && node.checked) {\n                    for (i = 0; i < items.length; i++) {\n                        items[i].checked = true;\n                    }\n                }\n            }\n\n            if (action == \"add\") {\n                this._appendItems(e.index, items, parentNode);\n            } else if (action == \"remove\") {\n                this._remove(this.findByUid(items[0].uid), false);\n            } else if (action == \"itemchange\") {\n                this._updateNodes(items);\n            } else if (action == \"itemloaded\") {\n                this._refreshChildren(parentNode, items, e.index);\n            } else {\n                this._refreshRoot(items);\n                this.element.attr(ARIA_BUSY, false);\n            }\n\n            if (action != \"remove\") {\n                for (i = 0; i < items.length; i++) {\n                    if (!loadOnDemand || items[i].expanded || items[i]._loaded) {\n                        items[i].load();\n                    }\n                }\n            }\n\n            this.wrapper.find(\">ul\").attr(\"role\", \"tree\");\n\n\n            this.trigger(DATABOUND, { node: node ? parentNode : undefined$1 });\n            if (this.dataSource.filter() && this.options.checkboxes.checkChildren) {\n                this.updateIndeterminate(parentNode);\n            }\n        },\n\n        _error: function(e) {\n            var node = e.node && this.findByUid(e.node.uid);\n            var retryHtml = this.templates.retry({ messages: this.options.messages });\n\n            if (node) {\n                this._progress(node, false);\n                this._expanded(node, false);\n                nodeIcon(node).replaceWith(ui.icon($(TOGGLE_ICON_ELM), { icon: \"arrow-rotate-cw\" }));\n                e.node.loaded(false);\n            } else {\n                this._progress(false);\n                this.dataSource.data([]);\n                this.element.html(retryHtml);\n            }\n        },\n\n        _retryRequest: function(e) {\n            e.preventDefault();\n\n            this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n        },\n\n        expand: function(nodes) {\n            this._processNodes(nodes, function(index, item) {\n                this.toggle(item, true);\n            });\n        },\n\n        collapse: function(nodes) {\n            this._processNodes(nodes, function(index, item) {\n                this.toggle(item, false);\n            });\n        },\n\n        enable: function(nodes, enable) {\n            if (typeof nodes === \"boolean\") {\n                enable = nodes;\n                nodes = this.items();\n            } else {\n                enable = arguments.length == 2 ? !!enable : true;\n            }\n\n            this._processNodes(nodes, function(index, item) {\n                this.dataItem(item).set(\"enabled\", enable);\n            });\n        },\n\n        current: function(node) {\n            var that = this,\n                current = that._current,\n                element = that.element;\n\n            if (arguments.length > 0 && node && node.length) {\n                if (current) {\n                    current.find(\".k-treeview-leaf\").first().removeClass(\"k-focus\");\n                }\n\n                current = that._current = $(node, element).closest(NODE);\n                current.find(\".k-treeview-leaf\").first().addClass(\"k-focus\");\n                that._updateActiveDescendant();\n\n                return;\n            }\n\n            if (!current) {\n                current = that._nextVisible($());\n            }\n\n            return current;\n        },\n\n        _updateActiveDescendant: function() {\n            var current = this._current,\n                id = current[0].id || this._ariaId,\n                prev = this.element.find(\"#\" + this._ariaId);\n\n            if (prev.length > 0) {\n                prev.removeAttr(\"id\");\n            }\n\n            this.root.removeAttr(ARIA_ACTIVEDESCENDANT);\n            current.attr(\"id\", id);\n            this.root.attr(ARIA_ACTIVEDESCENDANT, id);\n        },\n\n        select: function(node) {\n            var that = this,\n                element = that.element;\n\n            if (!arguments.length) {\n                return element.find(\".k-selected\").closest(NODE);\n            }\n\n            node = $(node, element).closest(NODE);\n\n            element.find(\".k-selected\").each(function() {\n                var dataItem = that.dataItem(this);\n                if (dataItem) {\n                    dataItem.set(\"selected\", false);\n                    delete dataItem.selected;\n                } else {\n                    $(this).removeClass(\"k-selected\");\n                }\n            });\n\n            if (node.length) {\n                that.dataItem(node).set(\"selected\", true);\n                that._clickTarget = node;\n            }\n\n            that.trigger(CHANGE);\n        },\n\n        _toggle: function(node, dataItem, expand) {\n            var options = this.options;\n            var contents = nodeContents(node);\n            var direction = expand ? \"expand\" : \"collapse\";\n            var loaded;\n\n            if (contents.data(\"animating\")) {\n                return;\n            }\n\n            loaded = dataItem && dataItem.loaded();\n\n            if (expand && !loaded) {\n                if (options.loadOnDemand) {\n                    this._progress(node, true);\n                }\n\n                contents.remove();\n                dataItem.load();\n            } else {\n                this._updateNodeClasses(node, {}, { expanded: expand });\n\n                if (!expand) {\n                    contents.css(\"height\", contents.height()).css(\"height\");\n                }\n\n                contents\n                    .kendoStop(true, true)\n                    .kendoAnimate(extend(\n                        { reset: true },\n                        options.animation[direction],\n                        { complete: function() {\n                            if (expand) {\n                                contents.css(\"height\", \"\");\n                            }\n                        } }\n                    ));\n            }\n\n        },\n\n        toggle: function(node, expand) {\n            node = $(node);\n\n            if (!nodeIcon(node)) {\n                return;\n            }\n\n            if (arguments.length == 1) {\n                expand = !this._expanded(node);\n            }\n\n            this._expanded(node, expand);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            Widget.fn.destroy.call(that);\n\n            that.wrapper.off(NS);\n            that.wrapper.find(\".k-checkbox-wrap :checkbox\").off(NS);\n            that._clickHandler = null;\n\n            that._unbindDataSource();\n\n            if (that.dragging) {\n                that.dragging.destroy();\n            }\n\n            that._dataSourceUids = {};\n\n            kendo.destroy(that.element);\n\n            that.root = that.wrapper = that.element = null;\n        },\n\n        _expanded: function(node, value, force) {\n            var expandedAttr = kendo.attr(\"expanded\");\n            var dataItem;\n            var expanded = value;\n            var direction = expanded ? \"expand\" : \"collapse\";\n\n            if (node.children().hasClass(\"k-hidden\")) {\n                node.children().removeClass(\"k-hidden\");\n            }\n\n            if (arguments.length == 1) {\n                dataItem = this._dataItem(node);\n                return node.attr(expandedAttr) === \"true\" || (dataItem && dataItem.expanded);\n            }\n\n            dataItem = this.dataItem(node);\n\n            if (nodeContents(node).data(\"animating\")) {\n                return;\n            }\n\n            if (force || !this._trigger(direction, node)) {\n                if (expanded) {\n                    node.attr(expandedAttr, \"true\");\n                    node.attr(ARIA_EXPANDED, \"true\");\n                } else {\n                    node.removeAttr(expandedAttr);\n                    node.attr(ARIA_EXPANDED, \"false\");\n                }\n\n                if (dataItem) {\n                    dataItem.set(\"expanded\", expanded);\n                    // necessary when expanding an item yields an error and the item is not expanded as a result\n                    expanded = dataItem.expanded;\n                }\n            }\n        },\n\n        _progress: function(node, showProgress) {\n            var element = this.element;\n            var loadingText = this.templates.loading({ messages: this.options.messages });\n\n            if (arguments.length == 1) {\n                showProgress = node;\n\n                if (showProgress) {\n                    element.html(loadingText);\n                } else {\n                    element.empty();\n                }\n\n                this.element.attr(ARIA_BUSY, showProgress);\n            } else {\n                nodeIcon(node).replaceWith(\n                    $(TOGGLE_ICON_ELM)\n                        .toggleClass('k-i-loading', showProgress)\n                        .toggleClass('k-icon', showProgress));\n                node.attr(ARIA_BUSY, showProgress);\n            }\n        },\n\n        text: function(node, text) {\n            var dataItem = this.dataItem(node),\n                fieldBindings = this.options[bindings.text],\n                level = dataItem.level(),\n                length = fieldBindings.length,\n                field = fieldBindings[Math.min(level, length - 1)];\n\n            if (text) {\n                dataItem.set(field, text);\n            } else {\n                return dataItem[field];\n            }\n        },\n\n        _objectOrSelf: function(node) {\n            return $(node).closest(\"[data-role=treeview]\").data(\"kendoTreeView\") || this;\n        },\n\n        _dataSourceMove: function(nodeData, group, parentNode, callback) {\n            var referenceDataItem,\n                destTreeview = this._objectOrSelf(parentNode || group),\n                destDataSource = destTreeview.dataSource;\n            var loadPromise = $.Deferred().resolve().promise();\n\n            if (parentNode && parentNode[0] != destTreeview.element[0]) {\n                referenceDataItem = destTreeview.dataItem(parentNode);\n\n                if (!referenceDataItem.loaded()) {\n                    destTreeview._progress(parentNode, true);\n                    loadPromise = referenceDataItem.load();\n                }\n\n                if (parentNode != this.root) {\n                    destDataSource = referenceDataItem.children;\n\n                    if (!destDataSource || !(destDataSource instanceof HierarchicalDataSource)) {\n                        referenceDataItem._initChildren();\n                        referenceDataItem.loaded(true);\n                        destDataSource = referenceDataItem.children;\n                    }\n                }\n            }\n\n            nodeData = this._toObservableData(nodeData);\n\n            return callback.call(destTreeview, destDataSource, nodeData, loadPromise);\n        },\n\n        _toObservableData: function(node) {\n            var dataItem = node, dataSource, uid;\n\n            if (isJQueryInstance(node) || isDomElement(node)) {\n                dataSource = this._objectOrSelf(node).dataSource;\n                uid = $(node).attr(kendo.attr(\"uid\"));\n                dataItem = dataSource.getByUid(uid);\n\n                if (dataItem) {\n                    dataItem = dataSource.remove(dataItem);\n                }\n            }\n\n            return dataItem;\n        },\n\n        _insert: function(data, model, index) {\n            if (!(model instanceof kendo.data.ObservableArray)) {\n                if (!isArray(model)) {\n                    model = [model];\n                }\n            } else {\n                // items will be converted to new Node instances\n                model = model.toJSON();\n            }\n\n            var parentNode = data.parent();\n\n            if (parentNode && parentNode._initChildren) {\n                parentNode.hasChildren = true;\n                parentNode._initChildren();\n            }\n\n            data.splice.apply(data, [ index, 0 ].concat(model));\n\n            return this.findByUid(data[index].uid);\n        },\n\n        insertAfter: insertAction(1),\n\n        insertBefore: insertAction(0),\n\n        append: function(nodeData, parentNode, success) {\n            var group = this.root;\n\n            if (parentNode && nodeData instanceof jQuery && parentNode[0] === nodeData[0]) {\n                return;\n            }\n\n            parentNode = parentNode && parentNode.length ? parentNode : null;\n\n            if (parentNode) {\n                group = subGroup(parentNode);\n            }\n\n            return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model, loadModel) {\n                var inserted;\n                var that = this;\n\n                function add() {\n                    if (parentNode) {\n                        that._expanded(parentNode, true, true);\n                    }\n\n                    var data = dataSource.data(),\n                        index = Math.max(data.length, 0);\n\n                    return that._insert(data, model, index);\n                }\n\n                loadModel.done(function() {\n                    inserted = add();\n                    success = success || $.noop;\n                    success(inserted);\n                });\n\n                return inserted || null;\n            });\n        },\n\n        _remove: function(node, keepData) {\n            var that = this,\n                parentNode,\n                prevSibling, nextSibling;\n\n            node = $(node, that.element);\n\n            if (node.attr(\"id\") === that.root.attr(ARIA_ACTIVEDESCENDANT)) {\n                that.root.removeAttr(ARIA_ACTIVEDESCENDANT);\n            }\n\n            parentNode = node.parent().parent();\n            prevSibling = node.prev();\n            nextSibling = node.next();\n\n            node[keepData ? \"detach\" : \"remove\"]();\n\n            if (parentNode.hasClass(\"k-treeview-item\")) {\n                updateNodeHtml(parentNode);\n                that._updateNodeClasses(parentNode);\n            }\n\n            that._updateNodeClasses(prevSibling);\n            that._updateNodeClasses(nextSibling);\n\n            return node;\n        },\n\n        remove: function(node) {\n            var dataItem = this.dataItem(node);\n            if (dataItem) {\n                this.dataSource.remove(dataItem);\n            }\n        },\n\n        detach: function(node) {\n            return this._remove(node, true);\n        },\n\n        findByText: function(text) {\n            return $(this.element).find(\".k-treeview-leaf\").filter(function(i, element) {\n                return $(element).text() == text;\n            }).closest(NODE);\n        },\n\n        findByUid: function(uid) {\n            var items = this.element.find(\".k-treeview-item\");\n            var uidAttr = kendo.attr(\"uid\");\n            var result;\n\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].getAttribute(uidAttr) == uid) {\n                    result = items[i];\n                    break;\n                }\n            }\n\n            return $(result);\n        },\n\n        expandPath: function(path, complete) {\n            var treeview = this;\n            var nodeIds = path.slice(0);\n            var callback = complete || $.noop;\n\n            function proceed() {\n                nodeIds.shift();\n\n                if (nodeIds.length) {\n                    expand(nodeIds[0]).then(proceed);\n                } else {\n                    callback.call(treeview);\n                }\n            }\n\n            function expand(id) {\n                var result = $.Deferred();\n                var node = treeview.dataSource.get(id);\n                var expandedAttr = kendo.attr(\"expanded\");\n                var nodeElement;\n\n                if (node) {\n                    nodeElement = treeview.findByUid(node.uid);\n\n                    if (node.loaded()) {\n                        node.set(\"expanded\", true);\n                        nodeElement.attr(expandedAttr, true);\n                        nodeElement.attr(ARIA_EXPANDED, true);\n                        result.resolve();\n                    } else {\n                        // manually show progress of the node\n                        // should be moved to `refresh`\n                        // if the datasource starts triggering a `requestStart` event for nodes\n                        treeview._progress(nodeElement, true);\n\n                        node.load().then(function() {\n                            node.set(\"expanded\", true);\n                            nodeElement.attr(expandedAttr, true);\n                            nodeElement.attr(ARIA_EXPANDED, true);\n                            result.resolve();\n                        });\n                    }\n                } else {\n                    result.resolve();\n                }\n\n                return result.promise();\n            }\n\n            // expand async nodes\n            expand(nodeIds[0]).then(proceed);\n        },\n\n        _parentIds: function(node) {\n            var parent = node && node.parentNode();\n            var parents = [];\n            while (parent && parent.parentNode) {\n                parents.unshift(parent.id);\n                parent = parent.parentNode();\n            }\n\n            return parents;\n        },\n\n        expandTo: function(node) {\n            if (!(node instanceof kendo.data.Node)) {\n                node = this.dataSource.get(node);\n            }\n\n            var parents = this._parentIds(node);\n\n            this.expandPath(parents);\n        },\n\n        _renderItem: function(options) {\n            if (!options.group) {\n                options.group = {};\n            }\n\n            options.treeview = this.options;\n\n            options.r = this.templates;\n\n            return this.templates.item(options);\n        },\n\n        _renderGroup: function(options) {\n            var that = this;\n\n            options.renderItems = function(options) {\n                    var html = \"\",\n                        i = 0,\n                        items = options.items,\n                        len = items ? items.length : 0,\n                        group = options.group;\n\n                    group.length = len;\n\n                    for (; i < len; i++) {\n                        options.group = group;\n                        options.item = items[i];\n                        options.item.index = i;\n                        html += that._renderItem(options);\n                    }\n\n                    return html;\n                };\n\n            options.r = that.templates;\n\n            return that.templates.group(options);\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"TreeView\", \"k-treeview-\");\n\n    ui.plugin(TreeView);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}