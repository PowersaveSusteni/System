{"version":3,"file":"kendo.pivotgrid.js","names":["createDataTree","createLocalDataState","sumAggregate","averageAggregate","minAggregate","maxAggregate","countAggregate","fetchData","createDataState","fetchDiscover","headersReducer","PivotGridNavigation","toData","toTree","toColumns","toRows","addKPI","addMultipleMeasures","buildKPIMeasures","cloneDataTree","compareAxes","configuratorReducer","createAxisDescriptors","createDiscoverBody","createFlatSchemaDimensions","createRequestBody","createTuples","discoverCommands","mergeTrees","parseResponse","readData","rootFields","setFilter","setSort","useLoaderContainer","__meta__","id","name","category","description","depends","features","$","undefined$1","kendo","window","ui","encode","htmlEncode","Class","Comparer","data","Widget","DataSource","outerWidth","_outerWidth","outerHeight","_outerHeight","normalizeFilter","Query","normalizeSort","toString","identity","o","map","extend","keys","isFunction","RESIZE","READ","CHANGE","ERROR","PROGRESS","MEASURES","STATERESET","AUTO","DIV","NS","ROW_TOTAL_KEY","DATABINDING","DATABOUND","EXPANDMEMBER","HEADERTEMPLATE","key","headerClass","colspan","rowspan","expandable","iconClass","role","expanded","icon","COLLAPSEMEMBER","STATE_EXPANDED_ICONNAME","STATE_EXPANDED_SELECTOR","STATE_COLLAPSED_ICONNAME","HEADER_TEMPLATE","member","caption","PIVOTGRID_TREND_ICONS_MAP","KPISTATUS_TEMPLATE","dataItem","value","KPITREND_TEMPLATE","DATACELL_TEMPLATE","fmtValue","tableStyles","normalizeMeasures","measure","descriptor","descriptors","call","d","type","normalizeMembers","expand","slice","normalizeName","indexOf","accumulateMembers","accumulator","rootTuple","tuple","level","idx","length","children","members","stringify","buildPath","descriptorsForAxes","tuples","result","k","push","JSON","parse","descriptorsForMembers","axis","measures","firstTuple","tupleMembers","found","j","getName","hierarchy","addMissingPathMembers","tupletoSearch","findExistingTuple","tupleToDescriptors","createAggregateGetter","m","measureGetter","getter","field","aggregatorContext","state","aggregate","isNumber","val","isNaN","isDate","getTime","loadLocalData","params","deferred","that","this","originalData","reader","_pristineData","columnSettings","_createSettings","columnAxes","rowSettings","rowAxes","stateArgs","dataTree","dataField","columnsData","filter","item","fields","sort","flattenSortDescriptors","_saveState","trigger","resolve","i","dir","split","pop","createLocalMeasure","format","measureMap","sum","average","min","max","count","bind","uniqueName","functions","PivotCubeBuilder","init","options","dimensions","_normalizeDescriptors","keyField","_rootTuples","rootNames","measureAggregators","root","parts","aggregatorsLength","dimensionsSchema","measureIdx","rootNamesLength","levelName","levelNum","hasChildren","parentName","_sortMap","sortDescriptors","flattenTree","mapItem","sortedMaps","sortTree","directParentName","fillSortTree","sortItemsTree","create","flatColumns","index","_expandedTuples","current","currentKeys","memberInfo","expandedNames","accumulatorKeys","isEmptyObject","_findExpandedMember","uniquePath","names","expandedIdx","join","_asTuples","rootInfo","expandedInfo","concat","apply","_measuresInfo","rowAxis","aggregateNames","resultFuncs","formats","_toDataArray","measuresInfo","rowKeys","columnKeys","aggregates","n","row","column","columnKey","columnMeasureNames","rowMeasureNamesLength","rowMeasureNames","rowLength","columnLength","items","_addData","resultFunc","ordinal","_matchDescriptors","getters","parentField","expectedValue","_calculateAggregate","totalItem","aggregator","_processColumns","columns","rowTotal","updateColumn","path","columnIndex","childrenMap","_measureAggregators","defaultAggregate","measureDescriptors","aggregators","toLowerCase","Error","_buildGetters","_parseDescriptors","parsedDescriptors","parseDescriptors","getRootNames","mapNames","_filter","expr","filters","operator","_normalizeFilter","logic","process","measuresRowAxis","measuresAxis","columnDescriptors","rowDescriptors","rows","rowValue","rowIdx","rowDescriptor","rowName","columnsInfo","rowsInfo","aggregatedData","columnGetters","rowGetters","processed","expandedColumns","expandedRows","hasExpandedRows","axes","PivotTransport","transport","discover","read","update","destroy","success","catalog","connection","cube","PivotDataSourceV2","schema","cubes","catalogs","hierarchies","levels","cubeSchema","_cubeSchema","fn","transportOptions","_online","XmlaTransportV2","_columns","_rows","_measuresAxis","values","_measures","serverSorting","serverPaging","serverFiltering","serverGrouping","serverAggregates","normalizeAxis","_mergeState","fetch","callback","_data","_query","done","settings","dimensionsSettings","displayValueFunc","sortValueFunc","displayValue","sortValue","defaultHierarchy","restoreMeasure","memberType","distinct","levelUniqueName","childrenCardinality","isPrevented","_params","Deferred","newDataState","response","_preventRefresh","error","err","promise","measureAxes","isOdata","converters","schemaMeasures","schemaKPIs","kpis","schemaDimensions","schemaHierarchies","schemaLevels","schemaCubes","schemaCatalogs","schemaMembers","_handleCustomErrors","command","status","reject","restrictions","catalogName","cubeName","dimensionName","dimensionUniqueName","hierarchyName","hierarchyUniqueName","_columnTuples","_rowTuples","_view","PivotDataSource","cubeBuilder","_skipNormalize","_axes","memberUniqueName","schemaData","dataGetter","_rawData","treeOp","_clearAxesData","query","rowsAxisDescriptors","columnsAxisDescriptors","_expandPath","origin","other","memberToExpand","_lastExpanded","_descriptorsForAxis","_process","e","page","pageSize","group","_updateLocalData","expandColumn","expandRow","_processResult","processedData","_requestData","columnIndexes","rowIndexes","resultAxis","axisToSkip","hasColumnTuples","_rowMeasures","_normalizeTuples","_columnMeasures","_normalizeData","columnsLength","rowsLength","validateAxis","sourceTuples","targetTuples","columnIdx","dataIdx","targetColumnsLength","membersCount","measuresLength","tupleIndex","adjustDataByColumn","adjustDataByRow","_mergeAxes","_readData","newData","_createTuple","buildRoot","Number","_hasRoot","target","source","isRoot","sourceAxes","startIndex","columnMeasures","rowMeasures","oldRowsLength","newRowsLength","oldColumnsLength","newColumnsLength","rowIndex","dataIndex","calcIndex","indices","buildDataIndices","Math","prepareDataOnColumns","parseSource","mergedColumns","mergeTuples","targetIndex","sourceIndex","parseInt","prepareDataOnRows","mergedRows","findDataIndex","parsedRoot","memberIndex","offset","_mergeColumnData","_mergeRowData","toAdd","toJSON","drop","splice","_observe","_ranges","_addRange","_total","_pristineTotal","memberIdx","last","roots","indexes","tupleName","_addMissingDataItems","metadata","addEmptyDataItem","_normalizeOrdinals","lastOrdinal","converter","sortFunction","currentItem","newAxis","collection","queue","shift","counter","targetMembers","sourceMembers","equalTuples","first","second","equal","toFind","membersLength","addMembers","len","findParentMember","parentMember","parentPath","normalizeTupleMeasures","measureIndex","measurePosition","spliceIndex","baseHierarchyPath","memberName","expandMemberDescriptor","sortDescriptor","sortDescriptorForMember","crossJoin","r","crossJoinCommand","tmp","measureNames","rootName","rootLength","l","child","serializeMembers","crossJoinCommands","dataSource","filterFunctionFormats","contains","doesnotcontain","startswith","endswith","eq","neq","serializeExpression","expression","serializeOptions","parentTagName","capitalize","keyToUse","replace","toUpperCase","xmlaDiscoverCommands","convertersMap","serializeFilters","properties","Catalog","XmlaTransport","RemoteTransport","originalOptions","url","setup","dataType","contentType","parameterMap","ajax","fetchOptions","noop","requestOptions","then","catch","asArray","object","translateAxis","captionGetter","unameGetter","levelNameGetter","levelNumGetter","childrenGetter","hierarchyGetter","parentNameGetter","Member","schemaDataReaderMap","groupName","displayFolder","defaultFormat","goal","trend","statusGraphic","trendGraphic","defaultMember","orderingProperty","xmlaReaderMethods","XmlaDataReader","XmlDataReader","_extend","methodName","option","xml","errors","fault","faultstring","faultcode","cells","ordinalGetter","valueGetter","fmtValueGetter","_mapSchema","obj","transports","xmla","readers","removeExpr","expressions","PivotSettingTarget","element","addClass","_refreshHandler","refresh","template","actions","enabled","ns","emptyTemplate","_sortable","on","closest","action","attr","hasClass","remove","sortable","sortDirection","currentTarget","find","filterable","fieldMenu","PivotFieldMenu","messages","setting","empty","setDataSource","unbind","kendoSortable","connectWith","hint","cursor","start","change","add","move","newIndex","_isKPI","validate","isMeasure","Array","isArray","sortExpressions","_sort","skipExpr","allowUnsort","html","sortIcon","_sortIcon","off","sortExpr","PivotSettingTargetV2","parent","text","navigatable","ev","chip","keyCode","DELETE","BACKSPACE","configuratorNavigation","elements","focusElement","DOWN","altKey","ctrlKey","shiftKey","LEFT","ind","el","RIGHT","UP","otherTarget","PivotFieldMenuV2","events","_applyState","_sortState","_stateFilter","_savedState","_cancelChanges","deepExtend","_initialState","_redraw","_state","newState","modifyInit","blur","_savedFilter","_emptyState","enable","removeClass","_targetsHTML","menuenabled","PivotConfiguratorButton","_element","_attachEvents","configurator","setOptions","toggle","pivot","pivotEl","toggleClass","getKendoPivotGridV2","_setContentWidth","_updateDimensions","PivotContainer","_addClasses","configuratorPosition","className","PivotGridV2","_dataSource","_bindConfigurator","_ariaId","guid","_wrapper","_columnHeadersWrapper","_rowHeadersWrapper","_contentWrapper","wrapper","append","_columnBuilder","ColumnRowBuilder","columnHeaderTemplate","ariaId","_rowBuilder","rowHeaderTemplate","_contentBuilder","ContentBuilderV2","dataCellTemplate","kpiStatusTemplate","kpiTrendTemplate","_scrollable","button","is","isRow","paths","eventName","reducerPayLoad","payload","tree","getTree","currentAxes","newHeaders","_exportData","autoBind","_aria","_initPivotGridNavigation","_initLoader","notify","height","columnWidth","emptyCellLabel","loader","_windowResizeHandler","defaultOptions","size","exporting","kendoLoader","_loaderContainer","navigation","tabIndex","keyboardEvents","keydown","_target","nav","_ev","next","nextElementSibling","HTMLElement","matches","parentNode","querySelector","click","setTimeout","confHeader","setAttribute","String","focus","firstCell","_matchAriaAttributes","rowHeaderRows","querySelectorAll","rowHeaderCols","from","reduce","acc","curr","getAttribute","colHeaderRows","colHeaderCells","valueTableCells","emptyCell","firstColHeadersRow","firstColHeaderRowCellsIds","forEach","valueCellsIds","filterAndMap","c","idParts","cell","cellColIndex","colHeaderCellsIds","headerCellColIndex","headerCellColspan","arr","predicate","mapper","_progressHandler","_errorHandler","_requestStart","_error","_resize","div","scrollbar","style","setProperty","document","createElement","cssText","innerHTML","body","appendChild","offsetWidth","scrollWidth","removeChild","columnsHeader","rowsHeader","scroll","scrollLeft","scrollTop","_wheelScroll","delta","wheelDeltaY","preventDefault","one","css","_progress","_isExport","message","progress","offsetHeight","contentTable","columnTable","rowTable","width","kendoPivotConfiguratorV2","cellInfoByElement","cellInfo","contentBuilder","columnsCount","rowsCount","columnTuple","hash","rowTuple","lastFocusedCellID","_activeElement","lastCellIdWithTabIndex","setTuples","build","setRowColumnInfo","columnHeaderLeafs","getHeaderLeafs","rowHeaderLeafs","columnHeaderBreadth","getBreadth","rowHeaderDepth","plugin","PivotGrid","columnBuilder","rowBuilder","support","isRtl","_createLayout","ColumnBuilder","RowBuilder","ContentBuilder","_templates","builder","eventArgs","request","childrenLoaded","maxChildren","reorderable","measureFields","columnFields","rowFields","columnTemplate","rowTemplate","dataTemplate","useWithBlock","kendoPivotConfigurator","columnInfo","rowInfo","view","measuresTarget","rowsTarget","columnsTarget","clearTimeout","_headerReflowTimeout","_stateResetHandler","_stateReset","reset","_measureFields","_createSettingTarget","pivotOptions","getIcons","_initSettingTargets","layoutTable","leftContainer","rightContainer","gridWrapper","wrap","content","columnsHeaderTree","dom","Tree","rowsHeaderTree","contentTree","firstChild","_setSectionsWidth","_setSectionsHeight","_setContentHeight","_columnHeaderReflow","browser","mozilla","leftColumn","measureFieldsHeight","columnFieldsHeight","rowFieldsHeight","innerHeight","columnsHeight","padding","firstRowHeight","secondRowHeight","calculatedWidth","minWidth","ceil","_resetColspan","skipScrollbar","clientHeight","_colspan","_layoutTimeout","_axisMeasures","hasMeasure","columnAxis","render","_indexes","touchScroller","contentResized","movable","sender","x","y","htmlNode","createMetadata","maxMembers","addColElements","table","addRowElements","addColumCell","_getTemplate","measureType","cellMembers","cellMeasure","cellValue","rowEl","rowItem","cellEl","total","headerTemplate","columnHeaderRows","_getExportData","rowElement","match","rowSpan","colSpan","defaultCellTemplate","treeData","headerRows","headerLeafs","breadth","rowHeaderBreadth","_tree","_breadth","_headerLeafs","tbody","_tbody","colgroup","_colGroup","_rowLength","_buildRows","_normalize","cellsLength","cellIdx","tupleAll","_rowIndex","_row","parentRow","rowKey","notFirst","collapsed","measureRow","_cell","_content","childRow","childrenLength","allCell","nextMember","cellChildren","memberCollapsed","rootLevelNum","cellIconEl","maxcolSpan","allRow","firstMemberName","tuplePath","hasChild","axisInfo","axisInfoMember","skipChildren","firstEmpty","_buildRow","templateInfo","cellContent","startIdx","PivotExcelExporter","widget","columnHeaderTable","rowHeaderTable","columnHeaderLength","rowHeaderLength","autoWidth","_cells","background","color","contentRows","columnRows","rowRows","_freezePane","colSplit","rowSplit","_columnsV2","_cellsV2","Object","_rowsV2","contentCells","endIndex","_freezePaneV2","_filterV2","excel","to","workbook","sheets","freezePane","PivotExcelMixin","proto","saveAsExcel","proxyURL","fileName","exporter","book","ooxml","Workbook","toDataURLAsync","dataURI","saveAs","forceProxy","always","prototype","PDFMixin","_drawPDF","_drawPDFShadow","avoidLinks","pdf","_saveAsPDF","saveAsPDF","pivotgrid","common","jQuery","kendo$1"],"sources":["kendo.pivotgrid.js"],"mappings":"MAAO,uBACA,wBACA,yBACA,0BACA,wCACA,kCACOA,oBAAqBC,0BAA2BC,kBAAmBC,sBAAuBC,kBAAmBC,kBAAmBC,oBAAqBC,eAAgBC,qBAAsBC,mBAAoBC,oBAAqBC,yBAA0BC,YAAaC,YAAaC,eAAgBC,YAAaC,YAAaC,yBAA0BC,sBAAuBC,mBAAoBC,iBAAkBC,yBAA0BC,2BAA4BC,wBAAyBC,gCAAiCC,uBAAwBC,kBAAmBC,sBAAuBC,gBAAiBC,mBAAoBC,cAAeC,gBAAiBC,eAAgBC,YAAe,oDAC/qBC,uBAA0B,mCAExC,MAAMC,SAAW,CACbC,GAAI,YACJC,KAAM,YACNC,SAAU,MACVC,YAAa,qDACbC,QAAS,CAAC,MAAO,OAAQ,WAAY,WAAY,QAAS,SAAU,uBAAwB,6BAA8B,yBAC1HC,SAAU,CAAC,CACPL,GAAI,yBACJC,KAAM,eACNE,YAAa,4FACbC,QAAS,CAAE,uBACZ,CACCJ,GAAI,sBACJC,KAAM,YACNE,YAAa,wBACbC,QAAS,CAAE,oBACZ,CACCJ,GAAI,yBACJC,KAAM,eACNE,YAAa,8CACbC,QAAS,CAAE,UACZ,CACCJ,GAAI,uBACJC,KAAM,aACNE,YAAa,gCACbC,QAAS,CAAE,MAAO,YACnB,CACCJ,GAAI,kBACJC,KAAM,kBACNE,YAAa,iDACbC,QAAS,CAAE,uBAKnB,SAAUE,EAAGC,GACT,IAAIC,EAAQC,OAAOD,MACfE,EAAKF,EAAME,GACXC,EAASH,EAAMI,WACfC,EAAQL,EAAMK,MACdC,EAAWN,EAAMO,KAAKD,SACtBE,EAASN,EAAGM,OACZC,EAAaT,EAAMO,KAAKE,WACxBC,EAAaV,EAAMW,YACnBC,EAAcZ,EAAMa,aACpBC,EAAkBd,EAAMO,KAAKQ,MAAMD,gBACnCE,EAAgBhB,EAAMO,KAAKQ,MAAMC,cACjCC,EAAW,CAAC,EAAEA,SACdC,EAAW,SAASC,GAAK,OAAOA,CAAG,EACnCC,EAAMtB,EAAEsB,IACRC,EAASvB,EAAEuB,OACXC,EAAOtB,EAAMsB,KACbC,EAAavB,EAAMuB,WACnBC,EAAS,SACTC,EAAO,OACPC,EAAS,SACTC,EAAQ,QAERC,EAAW,WAEXC,EAAW,WACXC,EAAa,aACbC,EAAO,OACPC,EAAM,cACNC,EAAK,kBACLC,EAAgB,gBAChBC,EAAc,cACdC,EAAY,YACZC,EAAe,eACfC,EAAiB,EAAG9C,KAAI+C,MAAKC,cAAaC,UAASC,UAASC,aAAYC,YAAWC,OAAMC,cAAe,WAAWtD,YAAaqD,MAASF,EAAa,kBAAkBG,KAAc,iBAAiB3C,EAAOoC,cAAgBpC,EAAOqC,OAAiBC,EAAU,YAActC,EAAOsC,GAAW,IAAM,MAAMC,EAAU,YAAcvC,EAAOuC,GAAW,IAAM,MAC7TC,EAAa3C,EAAME,GAAG6C,KAAKjD,EAAE,gEAAiE,CAAEiD,KAAM,WAAW5C,EAAOyC,OAAkB,UAEzKI,EAAiB,iBACjBC,EAA0B,iBAC1BC,EAA0B,QAAQD,cAAoCA,IACtEE,EAA2B,kBAC3BC,EAAkB,EAAGC,YAAa,SAASlD,EAAOkD,EAAOC,SAAWD,EAAO5D,eAC3E8D,EAA4B,CACxB,qBAAsB,iBACtB,qBAAsB,eACtB,kBAAmB,SAEvBC,EAAqB,EAAGC,cAAezD,EAAME,GAAG6C,KAAKjD,EAAE,gBAAgBK,EAAOsD,EAASC,mBAAoB,CAAEX,KAAM,eAAcU,EAASC,MAAQ,EAAI,OAASD,EAASC,MAAQ,EAAI,OAAS,UAC7LC,EAAoB,EAAGF,cAAezD,EAAME,GAAG6C,KAAKjD,EAAE,gBAAgBK,EAAOsD,EAASC,mBAAoB,CAAEX,KAAMQ,EAA0B,cAAaE,EAASC,MAAQ,EAAI,WAAaD,EAASC,MAAQ,EAAI,WAAa,YAC7NE,EAAoB,EAAGH,cAAgBA,IAAWA,EAASI,UAAYJ,EAASC,OAAQ,qCAAqCvD,EAAOsD,EAASI,UAAYJ,EAASC,gBAA6B,SAc3LI,EACU,cADVA,EAEQ,sBAFRA,EAGa,yCAHbA,EAIO,qBAJPA,EAKc,kCALdA,EAMO,gBANPA,EAOW,aAGnB,SAASC,EAAkBC,GACvB,IAAIC,EAAgC,iBAAZD,EAAuB,CAAC,CAAEvE,KAAMuE,IAAaA,EACjEE,EAA4C,mBAA9BjD,EAASkD,KAAKF,GAAmCA,EAAcA,IAAelE,EAAc,CAACkE,GAAc,GAE7H,OAAO7C,EAAI8C,GAAa,SAASE,GAC7B,MAAiB,iBAANA,EACA,CAAE3E,KAAM2E,GAEZtE,EAAEuB,QAAO,EAAM+C,EAAG,CAAE3E,KAAM2E,EAAE3E,KAAM4E,KAAMD,EAAEC,MACrD,GACJ,CAEA,SAASC,EAAiBjB,GACtB,IAAIY,EAA+B,iBAAXZ,EAAsB,CAAC,CAAE5D,KAAM,CAAC4D,GAASkB,QAAQ,IAAWlB,EAChFa,EAA4C,mBAA9BjD,EAASkD,KAAKF,GAAmCA,EAAcA,IAAelE,EAAc,CAACkE,GAAc,GAE7H,OAAO7C,EAAI8C,GAAa,SAASE,GAC7B,MAAiB,iBAANA,EACA,CAAE3E,KAAM,CAAC2E,GAAIG,QAAQ,GAEzB,CAAE9E,KAAiC,mBAA1BwB,EAASkD,KAAKC,EAAE3E,MAA6B2E,EAAE3E,KAAK+E,QAAU,CAACJ,EAAE3E,MAAQ8E,OAAQH,EAAEG,OACvG,GACJ,CAEA,SAASE,EAAchF,GAKnB,OAJ2B,IAAvBA,EAAKiF,QAAQ,OACbjF,EAAO,KAAOA,EAAO,MAGlBA,CACX,CAEA,SAASkF,EAAkBC,EAAaC,EAAWC,EAAOC,GACtD,IAAIC,EAAKC,EACLC,EACA7B,EAYJ,GAVKyB,IACDA,EAAQD,GAGPE,IACDA,EAAQ,IAGZ1B,EAASyB,EAAMK,QAAQJ,MAER1B,EAAOW,QAAtB,CAaA,GARAiB,GADAC,EAAW7B,EAAO6B,UACAD,OAEdH,IAAUD,EACVD,EAAY5E,EAAMoF,UAAU,CAAC/B,EAAO5D,UAAYwF,EACzCA,IACPL,EAAY5E,EAAMoF,UAAUC,GAAUP,EAAOC,MAAW,GAGxDE,EACA,IAAKD,EAAM,EAAGA,EAAMC,EAAQD,IACxBL,EAAkBC,EAAaC,EAAWK,EAASF,GAAMD,GAIjEJ,EAAkBC,EAAaC,EAAWC,EAAOC,EAAQ,EAjBzD,CAkBJ,CAEA,SAASO,GAAmBC,GACxB,IAAIC,EAAS,CAAC,EAEVD,EAAON,QACPN,EAAkBa,EAAQD,EAAO,IAGrC,IAAIrB,EAAc,GAClB,IAAK,IAAIuB,KAAKD,EACVtB,EAAYwB,KAAK,CAAEjG,KAAMkG,KAAKC,MAAMH,GAAIlB,OAAQiB,EAAOC,KAG3D,OAAOvB,CACX,CA6CA,SAAS2B,GAAsBC,EAAMX,EAASY,IA3C9C,SAA+BZ,EAASW,GACpC,IACIE,GADSF,EAAKP,QAAU,IACJ,GAExB,GAAIS,GAAcb,EAAQF,OAASe,EAAWb,QAAQF,OAGlD,IAFA,IAAIgB,EAAeD,EAAWb,QAErBH,EAAM,EAAGA,EAAMiB,EAAahB,OAAQD,IACzC,IAAIiB,EAAajB,GAAKhB,QAAtB,CAKA,IADA,IAAIkC,GAAQ,EACHC,EAAI,EAAGA,EAAIhB,EAAQF,OAAQkB,IAChC,GAAiE,IAA7DC,GAAQjB,EAAQgB,IAAIzB,QAAQuB,EAAajB,GAAKqB,WAAkB,CAChEH,GAAQ,EACR,KACJ,CAGCA,GACDf,EAAQO,KAAK,CAAEjG,KAAM,CAACwG,EAAajB,GAAKvF,MAAO8E,QAAQ,GAX3D,CAeZ,EAqBI+B,CAAsBnB,EAFtBW,EAAOA,GAAQ,CAAC,GAIZC,EAASd,OAAS,GAClBE,EAAQO,KAAK,CACTjG,KAAMoC,EACNmC,SAAS,EACTkB,SAAUZ,EAAiByB,KAInC,IAAIQ,EAAgB,CAChBpB,QAASA,GAGb,GAAIW,EAAKP,OAAQ,CACb,IAAIC,EAASgB,GAAkBV,EAAKP,OAAQgB,GACxCf,EAAOV,QACPK,EApCZ,SAA4BL,GAIxB,IAHA,IAAIU,EAAS,GACTL,EAAUL,EAAMK,QAEXH,EAAM,EAAGA,EAAMG,EAAQF,OAAQD,IAChCG,EAAQH,GAAKhB,SAKjBwB,EAAOE,KAAK,CAAEjG,KAAM,CAAC0F,EAAQH,GAAKvF,MAAO8E,OAAQY,EAAQH,GAAKE,SAASD,OAAS,IAGpF,OAAOO,CACX,CAsBsBiB,CAAmBjB,EAAOV,OAE5C,CAEA,OAAOK,CACX,CAEA,SAASuB,GAAsBC,GAC3B,IAAIC,EAAgB5G,EAAM6G,OAAOF,EAAEG,OAAO,GAC1C,OAAO,SAASC,EAAmBC,GAC/B,OAAOL,EAAEM,UAAUL,EAAcG,EAAkBtD,UAAWuD,EAAOD,EACzE,CACJ,CAEA,SAASG,GAASC,GACd,MAAsB,iBAARA,IAAqBC,MAAMD,EAC7C,CAEA,SAASE,GAAOF,GACZ,OAAOA,GAAOA,EAAIG,OACtB,CAoBA,SAASC,GAAchH,EAAMiH,EAAQC,GACjC,MAAMC,EAAOC,KACPC,GAAgBF,EAAKG,OAAOtH,KAAKA,IAAS,IAAIiE,MAAM,GACtDoD,IAAiBF,EAAKI,gBACtBJ,EAAKI,cAAgBF,GAEzB,MAAMG,EAAiBL,EAAKM,gBAAgBR,EAAOS,YAC7CC,EAAcR,EAAKM,gBAAgBR,EAAOW,SAC1CpC,EAAW2B,EAAK3B,WAGhBqC,EAAY,CACdC,SAHajL,eAAewK,EAAcM,EAAaH,EAAgBhC,EAAU,CAAEuC,UAAW,YAAaC,YAAa,WAAab,EAAKc,UAAY,IAItJT,eAAgBA,EAChBG,YAAaA,EACbD,WAAYT,EAAOS,WACnBE,QAASX,EAAOW,QAChBpC,SAAUA,EAAS3E,KAAI,SAASqH,GAAQ,OAAOA,CAAM,IACrDC,OAAQ,CAAEJ,UAAW,YAAaC,YAAa,WAC/CI,KAAMC,GAAuBpB,EAAOmB,MAAQ,KAGhDjB,EAAKmB,WAAWxL,qBAAqB+K,IACrCV,EAAKoB,QAAQpH,GACb+F,EAASsB,SACb,CAEA,SAASH,GAAuB1E,GAE5B,IADA,IAAIsB,EAAS,GACJwD,EAAI,EAAGA,EAAI9E,EAAYe,OAAQ+D,IACpCxD,EAAOE,KAAK,CACRuD,IAAK/E,EAAY8E,GAAGC,IACpBnC,MAAO5C,EAAY8E,GAAGlC,MAAMoC,MAAM,KAAKC,QAG/C,OAAO3D,CACX,CAEA,SAAS4D,GAAmBtC,EAAOvE,EAAK8G,EAAQpC,GAC5C,IACIqC,EAAa,CACbC,IAAOjM,aACPkM,QAAWjM,iBACXkM,IAAOjM,aACPkM,IAAOjM,aACPkM,MAASjM,gBAGTsG,EAAU,CACNN,MAFQ,SAAS+E,GAAQ,OAAOA,EAAKd,KAAKb,MAAQ,EAEjC8C,KAAK,CAAE9C,MAAOA,IAC/BG,UAAWqC,EAAWrC,GACtB3D,QAASf,EACTsH,WAAYtH,EACZ8B,KAAM,EACN5E,KAAM,CAAC8C,IAMf,OAJI8G,IACArF,EAAQiD,UAAUoC,OAlBL,SAAS3F,GAAS,OAAO1D,EAAMqJ,OAAO1B,KAAK0B,OAAQ3F,EAAQ,EAkBlCkG,KAAK,CAAEP,OAAQA,KAGlDrF,CACX,CAsBA,IAAI8F,GAAY,CACZP,IAAK,SAAS7F,EAAOsD,GACjB,IAAIpC,EAAcoC,EAAMpC,YAQxB,OANKsC,GAAStC,GAEHsC,GAASxD,KAChBkB,GAAelB,GAFfkB,EAAclB,EAKXkB,CACX,EACA+E,MAAO,SAASjG,EAAOsD,GACnB,OAAQA,EAAMpC,aAAe,GAAK,CACtC,EACA4E,QAAS,CACLvC,UAAW,SAASvD,EAAOsD,GACvB,IAAIpC,EAAcoC,EAAMpC,YAgBxB,OAdIoC,EAAM2C,QAAU5J,IAChBiH,EAAM2C,MAAQ,GAGbzC,GAAStC,GAEHsC,GAASxD,KAChBkB,GAAelB,GAFfkB,EAAclB,EAKdwD,GAASxD,IACTsD,EAAM2C,QAGH/E,CACX,EACAY,OAAQ,SAASwB,GACb,IAAIpC,EAAcoC,EAAMpC,YAMxB,OAJIsC,GAAStC,KACTA,GAA4BoC,EAAM2C,OAG/B/E,CACX,GAEJ8E,IAAK,SAAShG,EAAOsD,GACjB,IAAIpC,EAAcoC,EAAMpC,YASxB,OAPKsC,GAAStC,IAAiByC,GAAOzC,KAClCA,EAAclB,GAGdkB,EAAclB,IAAUwD,GAASxD,IAAU2D,GAAO3D,MAClDkB,EAAclB,GAEXkB,CACX,EACA6E,IAAK,SAAS/F,EAAOsD,GACjB,IAAIpC,EAAcoC,EAAMpC,YASxB,OAPKsC,GAAStC,IAAiByC,GAAOzC,KAClCA,EAAclB,GAGdkB,EAAclB,IAAUwD,GAASxD,IAAU2D,GAAO3D,MAClDkB,EAAclB,GAEXkB,CACX,GAGAmF,GAAmB1J,EAAMgB,OAAO,CAChC2I,KAAM,SAASC,GACXtC,KAAKsC,QAAU5I,EAAO,CAAC,EAAGsG,KAAKsC,QAASA,GACxCtC,KAAKuC,WAAavC,KAAKwC,sBAAsB,QAASxC,KAAKsC,QAAQC,YACnEvC,KAAK5B,SAAW4B,KAAKwC,sBAAsB,OAAQxC,KAAKsC,QAAQlE,SACpE,EAEAoE,sBAAuB,SAASC,EAAUlG,GACtCA,EAAcA,GAAe,CAAC,EAC9B,IACI4C,EADA4B,EAAS,CAAC,EAGd,GAAmC,mBAA/BzH,EAASkD,KAAKD,GAAmC,CACjD,IAAK,IAAIc,EAAM,EAAGC,EAASf,EAAYe,OAAQD,EAAMC,EAAQD,IAEpC,iBADrB8B,EAAQ5C,EAAYc,IAEhB0D,EAAO5B,GAAS,CAAC,EACVA,EAAMsD,KACb1B,EAAO5B,EAAMsD,IAAatD,GAGlC5C,EAAcwE,CAClB,CAEA,OAAOxE,CACX,EAEAmG,YAAa,SAASC,EAAWC,GAC7B,IAEIC,EAAM/K,EAAMgL,EAEZzF,EAJA0F,EAAoBH,EAAmBtF,QAAU,EACjD0F,EAAmBhD,KAAKuC,YAAc,GAEtCU,EAAa,EAGbC,EAAkBP,EAAUrF,OAC5BO,EAAS,GACTlE,EAAO,GAEX,GAAIuJ,GAAmBN,EAAmBtF,OAAQ,CAC9C,IAAK2F,EAAa,EAAGA,EAAaF,EAAmBE,IAAc,CAI/D,IAFAJ,EAAO,CAAErF,QAAS,IAEbH,EAAM,EAAGA,EAAM6F,EAAiB7F,IAEjCyF,GADAhL,EAAO6K,EAAUtF,IACJkE,MAAM,KAEnBsB,EAAKrF,QAAQqF,EAAKrF,QAAQF,QAAU,CAChCC,SAAU,GACV5B,SAAUqH,EAAiBlL,IAAS,CAAC,GAAG6D,SAAW,MACnD7D,KAAMA,EACNqL,UAAWrL,EACXsL,SAAU,IACVC,aAAa,EACbC,WAAYR,EAAMxF,OAAS,EAAIwF,EAAM,GAAK1K,EAC1CsG,UAAW5G,GAIfiL,EAAoB,IACpBF,EAAKrF,QAAQqF,EAAKrF,QAAQF,QAAU,CAChCC,SAAU,GACV5B,QAAUiH,EAAmBK,GAAatH,QAC1C7D,KAAM8K,EAAmBK,GAAY3G,WAAWxE,KAChDqL,UAAW,WACXC,SAAU,IACVC,aAAa,EACbC,WAAYlL,EACZsG,UAAW,aAInBb,EAAOA,EAAOP,QAAUuF,CAC5B,CAEAlJ,EAAKoE,KAAKxD,EACd,CAEA,MAAO,CACHZ,KAAMA,EACNiE,OAAQC,EAEhB,EAEA0F,SAAU,SAAS9J,EAAK+J,GACpB,IAEIC,EACAC,EACA9I,EAJA+I,EAAa,GACbC,EAAW,GAKf,IAAKhJ,KAAOnB,EACHA,EAAImB,GAAKiJ,kBACVD,EAAS7F,KAAK5F,EAAEuB,OAAO,CAAC,EAAG,CAAE5B,KAAM8C,EAAK0I,WAAY7J,EAAImB,GAAK0I,cAMrE,IAAKM,EAAStG,OACV,IAAK1C,KAAOnB,EACRmK,EAAS7F,KAAK5F,EAAEuB,OAAO,CAAC,EAAG,CAAE5B,KAAM8C,EAAK0I,WAAY7J,EAAImB,GAAK0I,cAIrEQ,GAAaF,EAAUnK,GAGvB,IAAK,IAAI4H,EAAI,EAAGA,EAAImC,EAAgBlG,OAAQ+D,IACxC0C,GAAcP,EAAgBnC,GAAGlC,MAAMoC,MAAM,KAAKC,MAAOoC,EAAUjL,EAASqL,OAAO,CAAE7E,MAAO,OAAQmC,IAAKkC,EAAgBnC,GAAGC,OAGhImC,EAAcQ,GAAYL,GAG1B,IAAK,IAAIpF,EAAI,EAAGA,EAAIiF,EAAYnG,OAAQkB,KACpCkF,EAAUjK,EAAIgK,EAAYjF,GAAG1G,OACrBoM,MAAQ1F,EAChBmF,EAAWnF,GAAKkF,EAGpB,OAAOC,CACX,EAEAQ,gBAAiB,SAAS1K,EAAK0B,EAAUyH,EAAoBY,GACzD,IAEIP,EACA9F,EAEAvC,EACA8I,EACAU,EACAC,EAGAC,EAEAC,EACAzB,EACAhL,EACAuF,EAhBA0F,EAAoBH,EAAmBtF,QAAU,EACjD0F,EAAmBhD,KAAKuC,YAAc,GAQtCtF,EAAc,GACduH,EAAkB,GAYtB,IAAK5J,KAJD4I,GAAmBA,EAAgBlG,SAAWnF,EAAEsM,cAAchL,KAC9DA,EAAMuG,KAAKuD,SAAS9J,EAAK+J,IAGjB/J,EAAK,CASb,IARAiK,EAAUjK,EAAImB,GAGdwJ,EAAUnH,GAFVqH,EAAatE,KAAK0E,oBAAoBvJ,EAAUuI,EAAQiB,aAEvBT,QAAU,GAC3CG,EAAcG,EAAgBF,EAAWJ,QAAU,GAEnDK,EAAgBD,EAAW5I,OAAOkJ,MAE7B3B,EAAa,EAAGA,EAAaF,EAAmBE,IAAc,CAE/D,IADA9F,EAAQ,CAAEK,QAAS,IACdH,EAAM,EAAGA,EAAMkH,EAAcjH,OAAQD,IAClCA,IAAQiH,EAAW5I,OAAOmJ,aAC1B1H,EAAMK,QAAQL,EAAMK,QAAQF,QAAU,CAClCC,SAAU,GACV5B,QAAS+H,EAAQ3H,MACjBjE,KAAM4L,EAAQ5L,KACduL,aAAa,EACbD,SAAU,EACVD,UAAWO,EAAQJ,WAAaI,EAAQ5L,KACxCwL,WAAYI,EAAQJ,WACpB5E,UAAWgF,EAAQJ,WAAaI,EAAQ5L,MAGzB,IAAfmL,GACAoB,EAAYtG,KAAKL,GAAUP,EAAOE,GAAKyH,KAAK,OAIhDhC,GADAhL,EAAOyM,EAAclH,IACRkE,MAAM,KACnBpE,EAAMK,QAAQL,EAAMK,QAAQF,QAAU,CAClCC,SAAU,GACV5B,SAAUqH,EAAiBlL,IAAS,CAAC,GAAG6D,SAAW,MACnD7D,KAAMA,EACNqL,UAAWrL,EACXsL,SAAU,IACVC,aAAa,EACbC,WAAYR,EAAMxF,OAAS,EAAIwF,EAAM,GAAK1K,EAC1CsG,UAAW5G,IAKnBiL,EAAoB,IACpB5F,EAAMK,QAAQL,EAAMK,QAAQF,QAAU,CAClCC,SAAU,GACV5B,QAASiH,EAAmBK,GAAYtH,QACxC7D,KAAM8K,EAAmBK,GAAY3G,WAAWxE,KAChDqL,UAAW,WACXC,SAAU,IACVC,aAAa,EACbC,WAAYlL,EACZsG,UAAW,aAInB0F,EAAQA,EAAQ9G,QAAUH,CAC9B,CAEAF,EAAYqH,EAAWJ,OAASE,EAChCI,EAAgBF,EAAWJ,OAASG,CACxC,CAEA,MAAO,CACH1K,KAAM6K,EACN5G,OAAQX,EAEhB,EAEAyH,oBAAqB,SAASlH,EAAS8F,GACnC,IAAK,IAAIjG,EAAM,EAAGA,EAAMG,EAAQF,OAAQD,IACpC,GAAIG,EAAQH,GAAKsH,aAAerB,EAC5B,MAAO,CACH5H,OAAQ8B,EAAQH,GAChB6G,MAAO7G,EAIvB,EAEA0H,UAAW,SAAStL,EAAK6C,EAAYsG,EAAoBY,GACrDZ,EAAqBA,GAAsB,GAE3C,IAAIoC,EAAWhF,KAAK0C,YAAYpG,EAAWuG,KAAMD,GAC7CqC,EAAejF,KAAKmE,gBAAgB1K,EAAK6C,EAAWnB,SAAUyH,EAAoBY,GAEtF,MAAO,CACH7J,KAAM,GAAGuL,OAAOC,MAAMH,EAASrL,KAAMsL,EAAatL,MAClDiE,OAAQ,GAAGsH,OAAOC,MAAMH,EAASpH,OAAQqH,EAAarH,QAE9D,EAEAwH,cAAe,SAAShH,EAAUiH,GAY9B,IAXA,IAQIhJ,EACAvE,EATAuF,EAAM,EACNC,EAASc,GAAYA,EAASd,OAE9BgI,EAAiB,GACjBC,EAAc,CAAC,EACfC,EAAU,CAAC,EAEXjJ,EAAeyD,KAAK5B,UAAY,CAAC,EAI9Bf,EAAMC,EAAQD,IAEjBhB,EAAUE,EADVzE,EAAOsG,EAASf,GAAKf,WAAWxE,OACD,CAAC,EAEhCwN,EAAevH,KAAKjG,GAEhBuE,EAAQwB,SACR0H,EAAYzN,GAAQuE,EAAQwB,QAG5BxB,EAAQqF,SACR8D,EAAQ1N,GAAQuE,EAAQqF,QAIhC,MAAO,CACHkD,MAAOU,EACPE,QAASA,EACTD,YAAaA,EACbF,QAASA,EAEjB,EAEAI,aAAc,SAAShM,EAAKiM,EAAcC,EAASC,GAC/C,IAEIC,EACA/N,EAAMuJ,EAAG7C,EAAGV,EAAGgI,EACfC,EAAKC,EAAQC,EAIbC,EARArI,EAAS,GAMTsI,EAAwB,EACxBC,EAAkB,GAGlBC,EAAYV,EAAQrI,QAAU,EAC9BgJ,EAAeV,EAAWtI,QAAU,EASxC,IAPIoI,EAAaL,QAEbc,GADAC,EAAkBV,EAAad,OACStH,OAExC4I,EAAqBR,EAAad,MAGjCvD,EAAI,EAAGA,EAAIgF,EAAWhF,IAGvB,IAFA0E,EAAMtM,EAAIkM,EAAQtE,IAAM9G,GAEnBuL,EAAI,EAAGA,EAAIK,EAAuBL,IAKnC,IAJIJ,EAAaL,UACba,EAAqB,CAACE,EAAgBN,KAGrCtH,EAAI,EAAGA,EAAI8H,EAAc9H,IAU1B,IATAyH,EAAYL,EAAWpH,IAAMjE,EAC7ByL,EAASD,EAAIQ,MAAMN,GAGfJ,EADAI,IAAc1L,EACDwL,EAAIF,WAEJG,EAASA,EAAOH,WAAa,CAAC,EAG1C/H,EAAI,EAAGA,EAAIoI,EAAmB5I,OAAQQ,IACvChG,EAAOoO,EAAmBpI,GAC1BkC,KAAKwG,SAAS3I,EAAQgI,EAAW/N,GAAO4N,EAAaF,QAAQ1N,GAAO4N,EAAaH,YAAYzN,IAM7G,OAAO+F,CACX,EAEA2I,SAAU,SAAS3I,EAAQ9B,EAAO2F,EAAQ+E,GACtC,IACIC,EADAxK,EAAW,GAGXH,IACAA,EAAQ0K,EAAaA,EAAW1K,GAASA,EAAMkB,YAC/Cf,EAAWwF,EAASrJ,EAAMqJ,OAAOA,EAAQ3F,GAASA,GAKtD8B,EAFA6I,EAAU7I,EAAOP,QAEC,CACdoJ,QAASA,EACT3K,MAAOA,GAAS,GAChBG,SAAUA,EAElB,EAEAyK,kBAAmB,SAAS7K,EAAUQ,EAAYsK,GAS9C,IARA,IAAI9D,EACA+D,EACAC,EAIA/K,EAFA6I,EAAQtI,EAAWsI,MACnBvH,EAAMf,EAAWuI,YAGdxH,EAAM,GAET,IADAyF,EAAQ8B,IAAQvH,GAAKkE,MAAM,MACjBjE,OAAS,IACfuJ,EAAc/D,EAAM,GACpBgE,EAAgBhE,EAAM,IAGtB/G,GADAA,EAAQ6K,EAAQC,GAAa/K,MACV1D,GAAyB,OAAV2D,EAAkBA,EAAMzC,WAAayC,IAE1D+K,GACT,OAAO,EAInB,OAAO,CACX,EAEAC,oBAAqB,SAASnE,EAAoBxD,EAAmB4H,GAKjE,IAJA,IACI3H,EACAvH,EAFA+F,EAAS,CAAC,EAILoF,EAAa,EAAGA,EAAaL,EAAmBtF,OAAQ2F,IAC7DnL,EAAO8K,EAAmBK,GAAY3G,WAAWxE,MACjDuH,EAAQ2H,EAAUnB,WAAW/N,IAAS,CAAE,GAClCmF,YAAc2F,EAAmBK,GAAYgE,WAAW7H,EAAmBC,GACjFxB,EAAO/F,GAAQuH,EAGnB,OAAOxB,CACX,EAEAqJ,gBAAiB,SAAStE,EAAoBrG,EAAaqK,EAASO,EAAS/H,EAAmBgI,EAAU/H,EAAOgI,GAS7G,IARA,IAAItL,EACAO,EACA0J,EACAgB,EACApM,EAAK9C,EAAMwL,EAAYgE,EACvBxL,EAAWsD,EAAkBtD,SAC7BuB,EAAM,EAEHA,EAAMd,EAAYe,OAAQD,IAC7Bf,EAAaC,EAAYc,GAGpB2C,KAAK2G,kBAAkB7K,EAAUQ,EAAYsK,KAIlDU,EAAOhL,EAAWsI,MAAM/H,MAAM,EAAGP,EAAWuI,aAAaC,KAAK,IAO9DxB,EANAxL,EAAOwE,EAAWsI,MAAMtI,EAAWuI,aAUnCmB,EAASmB,EAFTvM,EAAM0M,GADNxP,EAAOA,EAAO,KAHdiE,GADAA,EAAQ6K,EAAQ9O,GAAMgE,MACH1D,GAAyB,OAAV2D,EAAkBA,EAAMzC,WAAayC,MAM9C,CACrBmI,MAAO7E,EAAMkI,YACbjE,WAAYA,EACZxL,KAAMA,EACN+L,kBAAyC,IAAvByD,EAAKvK,QAAQ,KAAcuK,EAAO,GACpD3C,WAAY2C,EAAOhE,EACnBkE,YAAa,CAAC,EACdzL,MAAOA,GAGPuL,GAAQH,EAAQG,KAAUH,EAAQG,GAAME,YAAYF,EAAOhE,EAAa,IAAMvH,KAC9EoL,EAAQG,GAAME,YAAYF,EAAOhE,EAAa,IAAMvH,IAAS,GAGjEiL,EAAYI,EAASb,MAAM3L,IAAQ,CAC/BiL,WAAY,CAAC,GAGjBuB,EAASb,MAAM3L,GAAO,CAClBsJ,MAAO8B,EAAO9B,MACd2B,WAAY7F,KAAK+G,oBAAoBnE,EAAoBxD,EAAmB4H,IAG5EK,IACKF,EAAQvM,IACTyE,EAAMkI,cAEVJ,EAAQvM,GAAOoL,GAG3B,EAEAyB,oBAAqB,SAASnF,GAC1B,IAGIhG,EAAYD,EAASgB,EAAKC,EAC1BoK,EAAkBpI,EAJlBqI,EAAqBrF,EAAQlE,UAAY,GACzCA,EAAW4B,KAAK5B,UAAY,CAAC,EAC7BwJ,EAAc,GAIlB,GAAID,EAAmBrK,QACnB,IAAKD,EAAM,EAAGC,EAASqK,EAAmBrK,OAAQD,EAAMC,EAAQD,IAK5D,GAFAqK,EAAmB,KADnBrL,EAAU+B,GADV9B,EAAaqL,EAAmBtK,IACFvF,MAGjB,CAET,GAAyB,iBADzBwH,EAAYjD,EAAQiD,WACe,CAG/B,KAFAoI,EAAmBvF,GAAU7C,EAAUuI,gBAGnC,MAAM,IAAIC,MAAM,uCAGpBzL,EAAQiD,UAAYoI,EAAiBpI,WAAaoI,EAClDrL,EAAQwB,OAAS6J,EAAiB7J,MACtC,CAGA+J,EAAY7J,KAAK,CACbzB,WAAYA,EACZX,QAASU,EAAQV,QACjBkC,OAAQxB,EAAQwB,OAChBoJ,WAAYlI,GAAsB1C,IAE1C,OAGJuL,EAAY7J,KAAK,CACbzB,WAAY,CAAExE,KAAM,WACpB6D,QAAS,UACTsL,WAAY,WAAa,OAAO,CAAG,IAI3C,OAAOW,CACX,EAEAG,cAAe,SAASnD,GAKpB,IAJA,IACI9B,EACAhL,EAFA+F,EAAS,CAAC,EAILR,EAAM,EAAGA,EAAMuH,EAAMtH,OAAQD,KAElCyF,GADAhL,EAAO8M,EAAMvH,IACAkE,MAAM,MAETjE,OAAS,EACfO,EAAOiF,EAAM,IAAMzK,EAAM6G,OAAO4D,EAAM,IAAI,GAE1CjF,EAAO/F,GAAQO,EAAM6G,OAAOpC,EAAchF,IAAO,GAIzD,OAAO+F,CACX,EAEAmK,kBAAmB,SAASzL,GAMxB,IALA,IAAI0L,EAAoBC,GAAiB3L,GACrCoG,EAAYwF,GAAaF,EAAkBpF,MAC3C1H,EAAW8M,EAAkB9M,SAC7B0C,EAAS,GAEJR,EAAM,EAAGA,EAAMlC,EAASmC,OAAQD,IACrCQ,EAAOE,KAAKqK,GAASjN,EAASkC,GAAKvF,KAAM6K,IAG7C,MAAO,CACHE,KAAMF,EACNxH,SAAU0C,EAElB,EAEAwK,QAAS,SAASzP,EAAMiI,GACpB,IAAKA,EACD,OAAOjI,EAOX,IAJA,IAAI0P,EACAjL,EAAM,EACNkL,EAAU1H,EAAO0H,QAEdlL,EAAMkL,EAAQjL,OAAQD,IAGH,QAFtBiL,EAAOC,EAAQlL,IAENmL,WACLD,EAAQlL,GAAO2C,KAAKyI,iBAAiBH,IAI7C,OAAO,IAAIjQ,EAAMO,KAAKQ,MAAMR,GAAMiI,OAAOA,GAAQjI,IACrD,EAEA6P,iBAAkB,SAAS5H,GACvB,IAAI9E,EAAQ8E,EAAO9E,MAAMwF,MAAM,KAC3B1D,EAAS,GAEb,IAAK9B,EAAMuB,OACP,OAAOvB,EAGX,IAAK,IAAIsB,EAAM,EAAGA,EAAMtB,EAAMuB,OAAQD,IAClCQ,EAAOE,KAAK,CACRoB,MAAO0B,EAAO1B,MACdqJ,SAAU,KACVzM,MAAOA,EAAMsB,KAIrB,MAAO,CACHqL,MAAO,KACPH,QAAS1K,EAEjB,EAEA8K,QAAS,SAAS/P,EAAM0J,GACpB1J,EAAOA,GAAQ,GACf0J,EAAUA,GAAW,CAAC,EAEtB1J,EAAOoH,KAAKqI,QAAQzP,EAAM0J,EAAQzB,QAElC,IAAIzC,EAAWkE,EAAQlE,UAAY,GAE/BwK,EAA2C,SAAzBtG,EAAQuG,aAE1BC,EAAoBxG,EAAQ6E,SAAW,GACvC4B,EAAiBzG,EAAQ0G,MAAQ,IAEhCF,EAAkBxL,QAAUyL,EAAezL,UAAYc,EAASd,QAAWc,EAASd,QAAUsL,KAC/FE,EAAoBC,EACpBA,EAAiB,GACjBH,GAAkB,GAGjBE,EAAkBxL,QAAWyL,EAAezL,SAC7CsL,GAAkB,IAGjBE,EAAkBxL,QAAUc,EAASd,SACtCwL,EAAoBnM,EAAiB2F,EAAQlE,WAGjD0K,EAAoB9I,KAAKgI,kBAAkBc,GAC3CC,EAAiB/I,KAAKgI,kBAAkBe,GAExC,IAIIE,EAaAnN,EACAsD,EAGA8J,EAAQC,EAAeC,EAAShC,EAChCxM,EAAK0M,EAAMhE,EAAYvH,EACvBsN,EAAaC,EAvBbC,EAAiB,CAAC,EAClBpC,EAAU,CAAC,EACX6B,EAAO,CAAC,EAGR3J,EAAQ,CAAEkI,YAAa,GAEvB3E,EAAqB5C,KAAKyH,oBAAoBnF,GAE9CkH,EAAgBxJ,KAAK+H,cAAce,EAAkBjG,MACrD4G,EAAazJ,KAAK+H,cAAcgB,EAAelG,MAE/C6G,GAAY,EAEZC,EAAkBb,EAAkB3N,SACpCyO,EAAeb,EAAe5N,SAI9B0O,EAA0C,IAAxBD,EAAatM,OAK/BA,EAAS1E,EAAK0E,OACdD,EAAM,EAEV,GAAIyL,EAAkBjG,KAAKvF,QAAUyL,EAAelG,KAAKvF,OAGrD,IAFAoM,GAAY,EAEPrM,EAAM,EAAGA,EAAMC,EAAQD,IAkBxB,IAfA+B,EAAoB,CAChBtD,SAHJA,EAAWlD,EAAKyE,GAIZ6G,MAAO7G,GAGX+J,EAAWmC,EAAehP,IAAkB,CACxCgM,MAAO,CAAC,EACRV,WAAY,CAAC,GAGjB7F,KAAKkH,gBAAgBtE,EAAoB+G,EAAiBH,EAAerC,EAAS/H,EAAmBgI,EAAU/H,GAAQwK,GAEvHzC,EAASvB,WAAa7F,KAAK+G,oBAAoBnE,EAAoBxD,EAAmBgI,GACtFmC,EAAehP,GAAiB6M,EAE3B8B,EAAS,EAAGA,EAASU,EAAatM,OAAQ4L,IAC3CC,EAAgBS,EAAaV,GAExBlJ,KAAK2G,kBAAkB7K,EAAUqN,EAAeM,IAKrDnC,EAAO6B,EAAcvE,MAAM/H,MAAM,EAAGsM,EAActE,aAAaC,KAAK,IAGpExB,EAFA8F,EAAUD,EAAcvE,MAAMuE,EAActE,aAU5CmE,EAFApO,EAAM0M,GADN8B,EAAUA,EAAU,KAFpBH,GADAA,EAAWQ,EAAWL,GAAStN,MACP1D,EAAc6Q,EAAS3P,WAAa2P,KAKhD,CACRtE,WAAY2C,EAAOhE,EACnBA,WAAYA,EACZxL,KAAMsR,EACNrN,MAAOkN,GAGXlN,EAAQwN,EAAe3O,IAAQ,CAC3B2L,MAAO,CAAC,EACRV,WAAY,CAAC,GAGjB7F,KAAKkH,gBAAgBtE,EAAoB+G,EAAiBH,EAAerC,EAAS/H,EAAmBrD,EAAOsD,GAAO,GAEnHtD,EAAM8J,WAAa7F,KAAK+G,oBAAoBnE,EAAoBxD,EAAmBrD,GACnFwN,EAAe3O,GAAOmB,GA9BlBiE,KAAKkH,gBAAgBtE,EAAoB+G,EAAiBH,EAAerC,EAAS/H,EAAmB,CAAEmH,MAAO,CAAC,EAAGV,WAAY,CAAC,GAAKxG,GAAO,GAsD3J,OAnBIqK,GAAapM,KACTsF,EAAmBtF,OAAS,IAAOgF,EAAQ6E,SAAY7E,EAAQ6E,QAAQ7J,SACvEwL,EAAoB,CAChBjG,KAAM,GACN1H,SAAU,KAIlBkO,EAAcrJ,KAAK+E,UAAUoC,EAAS2B,EAAmBF,EAAkB,GAAKhG,EAAoBN,EAAQtB,KAAOsB,EAAQtB,KAAO,IAClIsI,EAAWtJ,KAAK+E,UAAUiE,EAAMD,EAAgBH,EAAkBhG,EAAqB,GAAIN,EAAQtB,KAAOsB,EAAQtB,KAAO,IAEzHmG,EAAUkC,EAAYzL,OACtBoL,EAAOM,EAAS1L,OAEhB2L,EAAiBvJ,KAAKyF,aAAa8D,EAAgBvJ,KAAKoF,cAAcxC,EAAoBgG,GAAkBU,EAAS3P,KAAM0P,EAAY1P,OAEvI4P,EAAiBpC,EAAU6B,EAAO,GAG/B,CACHc,KAAM,CACF3C,QAAS,CAAEvJ,OAAQuJ,GACnB6B,KAAM,CAAEpL,OAAQoL,IAEpBpQ,KAAM2Q,EAEd,IAGAQ,GAAiBrR,EAAMgB,OAAO,CAC9B2I,KAAM,SAASC,EAAS0H,GACpBhK,KAAKgK,UAAYA,EACjBhK,KAAKsC,QAAU0H,EAAU1H,SAAW,CAAC,EAEhCtC,KAAKgK,UAAUC,UACZrQ,EAAW0I,EAAQ2H,YACnBjK,KAAKiK,SAAW3H,EAAQ2H,SAGpC,EACAC,KAAM,SAAS5H,GACX,OAAOtC,KAAKgK,UAAUE,KAAK5H,EAC/B,EACA6H,OAAQ,SAAS7H,GACb,OAAOtC,KAAKgK,UAAUG,OAAO7H,EACjC,EACA0B,OAAQ,SAAS1B,GACb,OAAOtC,KAAKgK,UAAUhG,OAAO1B,EACjC,EACA8H,QAAS,SAAS9H,GACd,OAAOtC,KAAKgK,UAAUI,QAAQ9H,EAClC,EACA2H,SAAU,SAAS3H,GACf,GAAItC,KAAKgK,UAAUC,SACf,OAAOjK,KAAKgK,UAAUC,SAAS3H,GAEnCA,EAAQ+H,QAAQ,CAAC,EACrB,EACAC,QAAS,SAAS9K,GACd,IAAI8C,EAAUtC,KAAKsC,SAAW,CAAC,EAE/B,GAAI9C,IAAQpH,EACR,OAAQkK,EAAQiI,YAAc,CAAC,GAAGD,QAItC,IAAIC,EAAajI,EAAQiI,YAAc,CAAC,EACxCA,EAAWD,QAAU9K,EAErBQ,KAAKsC,QAAQiI,WAAaA,EAC1BpS,EAAEuB,OAAOsG,KAAKgK,UAAU1H,QAAS,CAAEiI,WAAYA,GACnD,EACAC,KAAM,SAAShL,GACX,IAAI8C,EAAUtC,KAAKsC,SAAW,CAAC,EAE/B,GAAI9C,IAAQpH,EACR,OAAQkK,EAAQiI,YAAc,CAAC,GAAGC,KAGtC,IAAID,EAAajI,EAAQiI,YAAc,CAAC,EACxCA,EAAWC,KAAOhL,EAElBQ,KAAKsC,QAAQiI,WAAaA,EAC1B7Q,GAAO,EAAMsG,KAAKgK,UAAU1H,QAAS,CAAEiI,WAAYA,GACvD,IAGAE,GAAoB3R,EAAWY,OAAO,CACtC2I,KAAM,SAASC,GAEX,IAAIkI,IAASlI,GAAW,CAAC,GAAGoI,QAAU,CAAC,GAAGF,KAEtCE,EAAS,CACTZ,KAAMvQ,EACNoR,MAAOpR,EACPqR,SAAUrR,EACV6E,SAAU7E,EACVgJ,WAAYhJ,EACZsR,YAAatR,EACbuR,OAAQvR,EACRiE,QAASjE,GAGTiR,IACAxK,KAAK+K,WAAa5S,EAAEuB,OAAOgR,EAAQ1K,KAAKgL,YAAYR,KAGxD1R,EAAWmS,GAAG5I,KAAK7F,KAAKwD,KAAMtG,GAAO,EAAM,CAAC,EAAG,CAC3CgR,OAAQ1K,KAAK+K,YACdzI,IAEH,IAAI4I,EAAmBlL,KAAKsC,QAAQ0H,WAAa,CAAC,EAEE,UAA/ChK,KAAKsC,QAAQ5F,MAAQ,QAAQmL,eAC9B7H,KAAKmL,SAAU,EACfnL,KAAKgK,UAAY,IAAIoB,GAAgBF,IAErClL,KAAKgK,UAAY,IAAID,GAAe/J,KAAKsC,QAAQ0H,WAAa,CAAC,EAAGhK,KAAKgK,WAG3EhK,KAAKqL,SAAW1O,EAAiBqD,KAAKsC,QAAQ6E,SAC9CnH,KAAKsL,MAAQ3O,EAAiBqD,KAAKsC,QAAQ0G,MAE3C,IAAI5K,EAAW4B,KAAK+K,WAAa/K,KAAK+K,WAAW3M,WAAa4B,KAAKsC,QAAQlE,UAAY,GAEvD,oBAA5B9E,EAASkD,KAAK4B,KACd4B,KAAKuL,cAAgBnN,EAASD,MAAQ,UACtCC,EAAWA,EAASoN,QAAU,IAGlCxL,KAAKyL,UAAYrP,EAAkBgC,EACvC,EAEAkE,QAAS,CACLoJ,eAAe,EACfC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,EAChBC,kBAAkB,GAGtBhC,KAAM,WACF,MAAO,CACH3C,QAAS4E,GAAc/L,KAAKmH,WAC5B6B,KAAM+C,GAAc/L,KAAKgJ,QAEjC,EAEAsB,QAAS,SAAS9K,GACd,GAAIA,IAAQpH,EACR,OAAO4H,KAAKgK,UAAUM,UAG1BtK,KAAKgK,UAAUM,QAAQ9K,GACvBQ,KAAKgM,YAAY,CAAC,GAClBhM,KAAKkK,MACT,EAEAM,KAAM,SAAShL,GACX,GAAIA,IAAQpH,EACR,OAAO4H,KAAKgK,UAAUQ,OAG1BxK,KAAKgK,UAAUQ,KAAKhL,GACpBQ,KAAKgM,YAAY,CAAC,GAClBhM,KAAKkK,MACT,EAEArB,aAAc,WACV,OAAO7I,KAAKuL,eAAiB,SACjC,EAEAU,MAAO,SAASC,GACZ,IAAInM,EAAOC,KACX,GAAIA,KAAKmM,QAAU/T,GAAqC,IAAtB4H,KAAKmM,MAAM7O,OAAc,CAOvD,OAAO0C,KAAKoM,SAASC,MANZ,WACDzS,EAAWsS,IACXA,EAAS1P,KAAKuD,EAEtB,GAGJ,CACJ,EAEAM,gBAAiB,SAASyJ,GAMtB,IALA,IACIlP,EADA0R,EAAW,GAEX/J,EAAavC,KAAK+K,WAAWwB,qBAC7BC,EAAmB,SAAS1L,GAAQ,OAAOA,EAAKd,KAAKpF,IAAM,EAC3D6R,EAAgB,SAAS1Q,GAAS,OAAOA,CAAO,EAC3CsF,EAAI,EAAGA,EAAIyI,EAAKxM,OAAQ+D,IAC7BzG,EAAMkP,EAAKzI,GAAGvJ,KAAK,GACnBwU,EAASvO,KAAK,CACVnD,IAAKA,EACL8R,aAAcF,EAAiBvK,KAAK,CAAErH,IAAKA,IAC3C+R,UAAWF,EACX9Q,SAAU4G,EAAW3H,IAAQ,CAAC,GAAGe,SAAWf,IAGpD,OAAO0R,CACX,EAEAtB,YAAa,SAASR,GAClB,MAAO,CACH+B,mBAAoB,WAChB,OAAO/B,EAAKjI,UAChB,EACAA,WAAY,WACR,IAAI1E,EAAS,GACT0E,EAAaiI,EAAKjI,WAEtB,IAAK,IAAI3H,KAAO2H,EACZ1E,EAAOE,KAAK,CACRjG,KAAM8C,EACNe,QAAS4G,EAAW3H,GAAKe,SAAWf,EACpCsH,WAAYtH,EACZgS,iBAAkBhS,EAClB8B,KAAM,IAad,OATI8N,EAAKpM,UACLP,EAAOE,KAAK,CACRjG,KAAMoC,EACNyB,QAASzB,EACTgI,WAAYhI,EACZwC,KAAM,IAIPmB,CACX,EACAgP,eAAgB,SAASzO,EAAU/B,GAC/B,IAAK,IAAIgF,EAAI,EAAGA,EAAIjD,EAASd,OAAQ+D,IAC5BjD,EAASiD,GAAG/B,YACblB,EAASiD,GAAG/B,UAAYjD,EAAQiD,UAChClB,EAASiD,GAAGtF,MAAQM,EAAQN,MAC5BqC,EAASiD,GAAG1F,QAAUU,EAAQV,QAC9ByC,EAASiD,GAAGa,WAAa7F,EAAQ6F,WACjC9D,EAASiD,GAAG3E,KAAO,EAG/B,EACA0B,SAAU,WACN,IAAIP,EAAS,GACTO,EAAWoM,EAAKpM,SAEpB,IAAK,IAAIxD,KAAOwD,EACZP,EAAOE,KAAK0D,GAAmBrD,EAASxD,GAAKuE,MAAOvE,EAAKwD,EAASxD,GAAK8G,OAAQtD,EAASxD,GAAK0E,YAGjG,OAAOzB,CACX,EACAiP,WAAY,SAAShV,GACjB,IAAIoH,EAAS7G,EAAM6G,OAAOpC,EAAchF,IAAO,GAC3Cc,EAAOoH,KAAKsC,QAAQ1J,MAAQoH,KAAKG,eAAiB,GACtD,OAAKvH,EAAK0E,cAII4B,EAAOtG,EAAK,IAHf,IAIf,EAAEqJ,KAAKjC,MACPxC,QAAS,SAAS1F,GACd,IAGIoH,EACAnD,EAJAnD,EAAOoH,KAAKsC,QAAQ1J,MAAQoH,KAAKG,eAAiB,GAClDtC,EAAS,GACTkP,EAAW,CAAC,EAGZ1P,EAAM,EAEV,IAAiC,IAA7BvF,EAAKiF,QAAQ,WACb,MAAO,CACH,CACIpB,QAAS6O,EAAKjI,WAAWzK,EAAKyJ,MAAM,KAAK,IAAI5F,SAAW7D,EACxDkV,gBAAiBlV,EACjBA,KAAMA,EACNmV,oBAAqB,EACrB/K,WAAYpK,IAOxB,IAFAoH,EAAS7G,EAAM6G,OAAOpC,EAAchF,IAAO,GAEpCuF,EAAMzE,EAAK0E,OAAQD,MACtBtB,EAAQmD,EAAOtG,EAAKyE,MACI,IAAVtB,IAAyB,IAAVA,GAAqBgR,EAAShR,KACvDgR,EAAShR,IAAS,EAElB8B,EAAOE,KAAK,CACRpC,QAASI,EAAQ,GACjBjE,KAAMiE,EAAQ,GACdkR,oBAAqB,EACrB/K,WAAYnG,KAKxB,OAAO8B,CACX,EAAEoE,KAAKjC,MAEf,EAEAkK,KAAM,SAAStR,GACX,MAAMmH,EAAOC,KACPkN,EAAcnN,EAAKoB,QAr2Cd,eAq2CoC,CAAEzE,KAAM5C,IACjD+F,EAASE,EAAKoN,QAAQvU,GACtBkH,EAAW3H,EAAEiV,WAiCnB,OAhCKF,IACDnN,EAAKoB,QAAQlH,GAET8F,EAAKuC,QAAQ1J,KACbgH,GAAcpD,KAAKuD,EAAMA,EAAKuC,QAAQ1J,KAAMiH,EAAQC,GACG,UAA/CE,KAAKsC,QAAQ5F,MAAQ,QAAQmL,cACrC9H,EAAKiK,UAAUE,KAAK,CAChBtR,KAAMiH,EACNwK,QAAS,SAASgD,GACdtN,EAAKmB,WAAWmM,GAChBtN,EAAKoB,QAh3CZ,aAg3CgC,CAAEmM,SAAUD,EAAc3Q,KAAM5C,IACzDiG,EAAKoB,QAAQpH,GACTgG,EAAKwN,kBACLxN,EAAKwN,iBAAkB,GAE3BzN,EAASsB,SACb,EACAoM,MAAO,SAASC,GACZ1N,EAAKoB,QAAQnH,EAAO,CAAEwT,MAAOC,GACjC,IAGJ1N,EAAKiK,UAAUE,KAAK,CAChBG,QAAS,SAASzR,GACdgH,GAAcpD,KAAKuD,EAAMnH,EAAMiH,EAAQC,EAC3C,EACA0N,MAAO,SAASC,GACZ1N,EAAKoB,QAAQnH,EAAO,CAAEwT,MAAOC,GACjC,KAIL3N,EAAS4N,SACpB,EAEAP,QAAS,SAASvU,GACd,IAAImH,EAAOC,KACPsC,EAAUxJ,EAAWmS,GAAGkC,QAAQ3Q,KAAKuD,EAAMnH,GAsB/C,OApBA0J,EAAU5I,EAAO,CACb4G,WAAYtC,KAAKC,MAAMD,KAAKP,UAAUsC,EAAKsL,WAC3C7K,QAASxC,KAAKC,MAAMD,KAAKP,UAAUsC,EAAKuL,QACxCzC,aAAc9I,EAAK8I,eACnB8E,YAAa5N,EAAK0L,WACnBnJ,GAE6C,UAA3CtC,KAAKsC,QAAQ5F,MAAQ,IAAImL,gBAC1BvF,EAAQiI,WAAaxK,EAAKuC,QAAQ0H,UAAUO,YAG5CjI,EAAQzB,SACRyB,EAAQzB,OAAS1H,EAAgBmJ,EAAQzB,QACzCyB,EAAQzB,QAAUyB,EAAQzB,QAAU,CAAC,GAAG0H,SAGxCjG,EAAQtB,OACRsB,EAAQtB,KAAO3H,EAAciJ,EAAQtB,OAGlCsB,CACX,EAEA2H,SAAU,SAAS3H,GACf,MAAMvC,EAAOC,KACPgK,EAAYjK,EAAKiK,UACjB4D,EAAgC,UAAtB7N,EAAKuC,QAAQ5F,KAEvBmR,EAAa,CACfC,eAAkB/N,EAAKG,OAAO9B,SAC9B2P,WAAchO,EAAKG,OAAO8N,KAC1BC,iBAAoBlO,EAAKG,OAAOqC,WAChC2L,kBAAqBnO,EAAKG,OAAO2K,YACjCsD,aAAgBpO,EAAKG,OAAO4K,OAC5BsD,YAAerO,EAAKG,OAAOyK,MAC3B0D,eAAkBtO,EAAKG,OAAO0K,SAC9B0D,cAAiBvO,EAAKG,OAAO1C,SAGjC,OAAIwM,EAAUC,WAAa2D,EAChB5D,EAAUC,SAAS3H,GAGvBnK,EAAEiV,UAAS,SAAStN,GACvBkK,EAAUC,SAASvQ,EAAO,CACtB2Q,QAAS,SAASiD,GACfA,EAAWvN,EAAKG,OAAOjC,MAAMqP,GAExBvN,EAAKwO,oBAAoBjB,KAIzBO,EAAWvL,EAAQkM,WACnBlB,EAAWO,EAAWvL,EAAQkM,SAASlB,IAE3CxN,EAASsB,QAAQkM,GACrB,EACAE,MAAO,SAASF,EAAUmB,EAAQjB,GAC9B1N,EAAS4O,OAAOpB,GAChBvN,EAAKyN,MAAMF,EAAUmB,EAAQjB,EACjC,GACDlL,GACP,IAAGoL,UAAUrB,MAAK,WACdtM,EAAKoB,QAAQ,eACjB,GACJ,EAEA2M,eAAgB,WACZ,MAAM/N,EAAOC,KACb,OAAOD,EAAKkK,SACR,CACIuE,QAAS,iBACTG,aAAc,CACVC,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,SAGzC,EAEAuD,WAAY,WACR,MAAMhO,EAAOC,KACb,OAAOD,EAAKkK,SACR,CACIuE,QAAS,aACTG,aAAc,CACVC,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,SAGrC,EAEJyD,iBAAkB,WACd,MAAMlO,EAAOC,KACb,OAAOD,EAAKkK,SACR,CACIuE,QAAS,mBACTG,aAAc,CACVC,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,SAGrC,EAEJ0D,kBAAmB,SAASY,GACxB,MAAM/O,EAAOC,KACb,OAAOD,EAAKkK,SAAS,CACjBuE,QAAS,oBACTG,aAAc,CACVC,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,OACzBuE,oBAAqBD,IAGhC,EAEDX,aAAc,SAASa,GACnB,MAAMjP,EAAOC,KACb,OAAOD,EAAKkK,SAAS,CACjBuE,QAAS,eACTG,aAAc,CACVC,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,OACzByE,oBAAqBD,IAGjC,EAEAZ,YAAa,WAET,OADapO,KACDiK,SAAS,CACjBuE,QAAS,cACTG,aAAc,CACVC,YAJK5O,KAIagK,UAAUM,YAGxC,EAGA+D,eAAgB,WAEZ,OADarO,KACDiK,SAAS,CACjBuE,QAAS,kBAEjB,EAGAF,cAAe,SAASK,GACpB,MAAM5O,EAAOC,KACb,OAAOD,EAAKkK,SAAS,CACjBuE,QAAS,gBACTG,aAAcjV,EAAO,CAClBkV,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,QACzBmE,IAEX,EAEAzN,WAAY,SAAS7B,GACjB,IAAIU,EAAOC,KAEXD,EAAKmP,cAAgB7P,EAAM8H,QAC3BpH,EAAKoP,WAAa9P,EAAM2J,KACxBjJ,EAAKqP,MAAQrP,EAAKoM,MAAQ9M,EAAMzG,IACpC,EAEAuO,QAAS,SAAS3H,GACd,GAAIA,IAAQpH,EACR,OAAO4H,KAAKqL,SAGhBrL,KAAKqL,SAAW1O,EAAiB6C,GACjCQ,KAAKkK,MACT,EAEAlB,KAAM,SAASxJ,GACX,GAAIA,IAAQpH,EACR,OAAO4H,KAAKsL,MAGhBtL,KAAKsL,MAAQ3O,EAAiB6C,GAE9BQ,KAAKkK,MACT,EAEA9L,SAAU,SAASoB,GACf,GAAIA,IAAQpH,EACR,OAAO4H,KAAKyL,UAGhBzL,KAAKyL,UAAYrP,EAAkBoD,GAEnCQ,KAAKkK,MACT,EAEA8B,YAAa,SAAS1J,GAGlB,OAFAA,EAAUxJ,EAAWmS,GAAGe,YAAYxP,KAAKwD,KAAMsC,EAGnD,EAEA8J,OAAQ,SAAS9J,GACb,IAAIvC,EAAOC,KACPH,EAASnG,EAAO,CAAC,EAAG,CACpBsH,KAAMjB,EAAKiB,OACX6H,aAAc9I,EAAK8I,eACnBhI,OAAQd,EAAKc,UACdyB,GAGH,OAFAtC,KAAKgM,YAAYnM,GAEVG,KAAKkK,MAChB,IAGAmF,GAAkBvW,EAAWY,OAAO,CACpC2I,KAAM,SAASC,GACX,IAEIlE,EAFAoM,IAASlI,GAAW,CAAC,GAAGoI,QAAU,CAAC,GAAGF,KACtC3B,EAAe,UAGf6B,EAAS,CACTZ,KAAMvQ,EACNoR,MAAOpR,EACPqR,SAAUrR,EACV6E,SAAU7E,EACVgJ,WAAYhJ,EACZsR,YAAatR,EACbuR,OAAQvR,EACRiE,QAASjE,GAGTiR,IACAE,EAASvS,EAAEuB,OAAOgR,EAAQ1K,KAAKgL,YAAYR,IAC3CxK,KAAKsP,YAAc,IAAIlN,GAAiBoI,IAG5C1R,EAAWmS,GAAG5I,KAAK7F,KAAKwD,KAAMtG,GAAO,EAAM,CAAC,EAAG,CAC3CgR,OAAQA,GACTpI,IAEHtC,KAAKgK,UAAY,IAAID,GAAe/J,KAAKsC,QAAQ0H,WAAa,CAAC,EAAGhK,KAAKgK,WAEvEhK,KAAKqL,SAAW1O,EAAiBqD,KAAKsC,QAAQ6E,SAC9CnH,KAAKsL,MAAQ3O,EAAiBqD,KAAKsC,QAAQ0G,MAE3C5K,EAAW4B,KAAKsC,QAAQlE,UAAY,GAEJ,oBAA5B9E,EAASkD,KAAK4B,KACdyK,EAAezK,EAASD,MAAQ,UAChCC,EAAWA,EAASoN,QAAU,IAGlCxL,KAAKyL,UAAYrP,EAAkBgC,GACnC4B,KAAKuL,cAAgB1C,EAErB7I,KAAKuP,eAAiB,EACtBvP,KAAKwP,MAAQ,CAAC,CAClB,EAEAxE,YAAa,SAASR,GAClB,MAAO,CACHjI,WAAY,WACR,IAAI1E,EAAS,GACT0E,EAAaiI,EAAKjI,WAEtB,IAAK,IAAI3H,KAAO2H,EACZ1E,EAAOE,KAAK,CACRjG,KAAM8C,EACNe,QAAS4G,EAAW3H,GAAKe,SAAWf,EACpCsH,WAAYtH,EACZgS,iBAAkBhS,EAClB8B,KAAM,IAad,OATI8N,EAAKpM,UACLP,EAAOE,KAAK,CACRjG,KAAMoC,EACNyB,QAASzB,EACTgI,WAAYhI,EACZwC,KAAM,IAIPmB,CACX,EACAgN,YAAa,WACT,MAAO,EACX,EACAzM,SAAU,WACN,IAAIP,EAAS,GACTO,EAAWoM,EAAKpM,SAEpB,IAAK,IAAIxD,KAAOwD,EACZP,EAAOE,KAAK,CACRjG,KAAM8C,EACNe,QAASf,EACTsH,WAAYtH,EACZqM,WAAYrM,IAIpB,OAAOiD,CACX,EACAL,QAAS,SAAS8P,EAAUqB,GACxB,IAKIzP,EACAnD,EANAjE,EAAO6W,EAAa3B,iBAAmB2B,EAAac,iBACpDC,EAAa1P,KAAKsC,QAAQoI,OAAO9R,KACjC+W,EAAa/V,EAAW8V,GAAcA,EAAarX,EAAM6G,OAAOwQ,GAAY,GAC5E9W,EAAQoH,KAAKsC,QAAQ1J,MAAQ+W,EAAW3P,KAAKsC,QAAQ1J,OAAUoH,KAAK4P,UAAY,GAChF/R,EAAS,GAGTR,EAAM,EACN0P,EAAW,CAAC,EAMhB,GAJIjV,IACAA,EAAOA,EAAKyJ,MAAM,KAAK,KAGtBoN,EAAakB,OAWd,OAVAhS,EAAOE,KAAK,CACRpC,QAAS6O,EAAKjI,WAAWzK,GAAM6D,SAAW7D,EAC1CmV,oBAAqB,IACrB8B,oBAAqBjX,EACrBmX,oBAAqBnX,EACrBkV,gBAAiBlV,EACjBA,KAAMA,EACNoK,WAAYpK,IAGT+F,EAKX,IAFAqB,EAAS7G,EAAM6G,OAAOpC,EAAchF,IAAO,GAEpCuF,EAAMzE,EAAK0E,OAAQD,MACtBtB,EAAQmD,EAAOtG,EAAKyE,MACI,IAAVtB,GAAiBgR,EAAShR,KACpCgR,EAAShR,IAAS,EAElB8B,EAAOE,KAAK,CACRpC,QAASI,EACTkR,oBAAqB,IACrB8B,oBAAqBjX,EACrBmX,oBAAqBnX,EACrBkV,gBAAiBlV,EACjBA,KAAMiE,EACNmG,WAAYnG,KAKxB,OAAO8B,CACX,EAAEoE,KAAKjC,MAEf,EAEAsC,QAAS,CACLoJ,eAAe,EACfC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,EAChBC,kBAAkB,GAGtBxB,QAAS,SAAS9K,GACd,GAAIA,IAAQpH,EACR,OAAO4H,KAAKgK,UAAUM,UAG1BtK,KAAKgK,UAAUM,QAAQ9K,GACvBQ,KAAKgM,YAAY,CAAC,GAClBhM,KAAKwP,MAAQ,CAAC,EACdxP,KAAKpH,KAAK,GACd,EAEA4R,KAAM,SAAShL,GACX,GAAIA,IAAQpH,EACR,OAAO4H,KAAKgK,UAAUQ,OAG1BxK,KAAKgK,UAAUQ,KAAKhL,GACpBQ,KAAKwP,MAAQ,CAAC,EACdxP,KAAKgM,YAAY,CAAC,GAClBhM,KAAKpH,KAAK,GACd,EAEAkR,KAAM,WACF,OAAO9J,KAAKwP,KAChB,EAEArI,QAAS,SAAS3H,GACd,GAAIA,IAAQpH,EACR,OAAO4H,KAAKqL,SAGhBrL,KAAKuP,gBAAkB,EACvBvP,KAAK8P,gBAAiB,EAEtB9P,KAAKqL,SAAW1O,EAAiB6C,GACjCQ,KAAK+P,MAAM,CACP5I,QAAS3H,EACTwJ,KAAMhJ,KAAKgQ,sBACX5R,SAAU4B,KAAK5B,WACf4C,KAAMhB,KAAKgB,OACXH,OAAQb,KAAKa,UAErB,EAEAmI,KAAM,SAASxJ,GACX,GAAIA,IAAQpH,EACR,OAAO4H,KAAKsL,MAGhBtL,KAAKuP,gBAAkB,EACvBvP,KAAK8P,gBAAiB,EAEtB9P,KAAKsL,MAAQ3O,EAAiB6C,GAE9BQ,KAAK+P,MAAM,CACP5I,QAASnH,KAAKiQ,yBACdjH,KAAMxJ,EACNpB,SAAU4B,KAAK5B,WACf4C,KAAMhB,KAAKgB,OACXH,OAAQb,KAAKa,UAErB,EAEAzC,SAAU,SAASoB,GACf,GAAIA,IAAQpH,EACR,OAAO4H,KAAKyL,UAGhBzL,KAAKuP,gBAAkB,EACvBvP,KAAK8P,gBAAiB,EAEtB9P,KAAK+P,MAAM,CACP5I,QAASnH,KAAKiQ,yBACdjH,KAAMhJ,KAAKgQ,sBACX5R,SAAUhC,EAAkBoD,GAC5BwB,KAAMhB,KAAKgB,OACXH,OAAQb,KAAKa,UAErB,EAEAgI,aAAc,WACV,OAAO7I,KAAKuL,eAAiB,SACjC,EAEA2E,YAAa,SAAS5I,EAAMnJ,GACxB,IAAIgS,EAAkB,YAAThS,EAAqB,UAAY,OAC1CiS,EAAiB,YAATjS,EAAqB,OAAS,UAEtCX,EAAUb,EAAiB2K,GAC3B+I,EAAiB5R,GAAQjB,EAAQA,EAAQF,OAAS,IAEtD0C,KAAKsQ,cAAgBH,EAErB3S,EAAUU,GAAsB8B,KAAK8J,OAAOqG,GAAS3S,EAASwC,KAAK5B,YAEnE,IAAK,IAAIf,EAAM,EAAGA,EAAMG,EAAQF,OAAQD,IAAO,CAG3C,GAFiBoB,GAAQjB,EAAQH,MAEdgT,EAAgB,CAC/B,GAAI7S,EAAQH,GAAKT,OACb,OAEJY,EAAQH,GAAKT,QAAS,CAC1B,MACIY,EAAQH,GAAKT,QAAS,CAE9B,CAEA,IAAIL,EAAc,CAAC,EACnBA,EAAY4T,GAAU3S,EACtBjB,EAAY6T,GAASpQ,KAAKuQ,oBAAoBH,GAE9CpQ,KAAKoM,OAAO7P,EAChB,EAEAgU,oBAAqB,SAASpS,GAC1B,IAAI2L,EAAO9J,KAAK8J,OACZvN,EAAcyD,KAAK7B,MAAW,GAKlC,OAHI2L,GAAQA,EAAK3L,IAAS2L,EAAK3L,GAAMP,QAAUkM,EAAK3L,GAAMP,OAAO,KAC7DrB,EAAcoB,GAAmBmM,EAAK3L,GAAMP,QAAU,KAEnDrB,CACX,EAEA0T,uBAAwB,WACpB,OAAOjQ,KAAKuQ,oBAAoB,UACpC,EAEAP,oBAAqB,WACjB,OAAOhQ,KAAKuQ,oBAAoB,OACpC,EAEAC,SAAU,SAAS5X,EAAM6X,GACrBzQ,KAAKoP,MAAQxW,GAEb6X,EAAIA,GAAK,CAAC,GACRlK,MAAQkK,EAAElK,OAASvG,KAAKoP,MAE1BpP,KAAKmB,QAAQpH,EAAQ0W,EACzB,EAEArE,OAAQ,SAAS9J,GACb,IAAIvC,EAAOC,KAOX,OALKsC,IACDtC,KAAKuP,gBAAkB,EACvBvP,KAAK8P,gBAAiB,GAGnB/P,EAAKgQ,MAAMrW,EAAO,CAAC,EAAG,CACzBgX,KAAM3Q,EAAK2Q,OACXC,SAAU5Q,EAAK4Q,WACf3P,KAAMjB,EAAKiB,OACXH,OAAQd,EAAKc,SACb+P,MAAO7Q,EAAK6Q,QACZtR,UAAWS,EAAKT,YAChB6H,QAASnH,KAAKiQ,yBACdjH,KAAMhJ,KAAKgQ,sBACX5R,SAAU4B,KAAK5B,YAChBkE,GACP,EAEAyN,MAAO,SAASzN,GACZ,IAAIjD,EAAQW,KAAKgM,YAAY1J,GAE7B,OAAItC,KAAKmM,MAAM7O,QAAU0C,KAAKsP,aAC1BtP,KAAKmN,QAAQ9N,GACbW,KAAK6Q,iBAAiB7Q,KAAKG,eAEpBhI,EAAEiV,WAAWhM,UAAUsM,WAG3B1N,KAAKkK,KAAK7K,EACrB,EAEA2M,YAAa,SAAS1J,GAkBlB,OAjBAA,EAAUxJ,EAAWmS,GAAGe,YAAYxP,KAAKwD,KAAMsC,MAE/BlK,IACZ4H,KAAKyL,UAAYrP,EAAkBkG,EAAQlE,UAEvCkE,EAAQ6E,QACR7E,EAAQ6E,QAAUxK,EAAiB2F,EAAQ6E,SACnC7E,EAAQ6E,UAChBnH,KAAKqL,SAAW,IAGhB/I,EAAQ0G,KACR1G,EAAQ0G,KAAOrM,EAAiB2F,EAAQ0G,MAChC1G,EAAQ0G,OAChBhJ,KAAKsL,MAAQ,KAGdhJ,CACX,EAEAzB,OAAQ,SAASrB,GACb,GAAIA,IAAQpH,EACR,OAAO4H,KAAKqI,QAGhBrI,KAAKuP,gBAAkB,EACvBvP,KAAK8P,gBAAiB,EACtB9P,KAAKoM,OAAO,CAAEvL,OAAQrB,EAAKkR,KAAM,GACrC,EAEAI,aAAc,SAASxJ,GACnBtH,KAAKkQ,YAAY5I,EAAM,UAC3B,EAEAyJ,UAAW,SAASzJ,GAChBtH,KAAKkQ,YAAY5I,EAAM,OAC3B,EAEA+C,QAAS,SAASzR,GACd,IAAIqH,EACAD,KAAKsP,cACLrP,GAAgBD,KAAKE,OAAOtH,KAAKA,IAAS,IAAIiE,MAAM,IAExD/D,EAAWmS,GAAGZ,QAAQ7N,KAAKwD,KAAMpH,GAC7BqH,IACAD,KAAKG,cAAgBF,EAE7B,EAEA+Q,eAAgB,SAASpY,EAAMkR,GAC3B,GAAI9J,KAAKsP,YAAa,CAClB,IAAI2B,EAAgBjR,KAAKsP,YAAY3G,QAAQ/P,EAAMoH,KAAKkR,cAExDtY,EAAOqY,EAAcrY,KACrBkR,EAAOmH,EAAcnH,IACzB,CAEA,IAAIqH,EAAeC,EACfxT,EAAQyT,EAAYjT,EAAUkT,EAC9BxI,EAAoB9I,KAAKmH,UACzB4B,EAAiB/I,KAAKgJ,OACtBuI,EAAkBzH,EAAK3C,SAAW2C,EAAK3C,QAAQvJ,OAE9CkL,EAAkBxL,SAAUyL,EAAezL,SAAUiU,IAAoBvR,KAAKwR,eAAelU,QAAW0C,KAAK5B,WAAWd,SACzHwM,EAAO,CACH3C,QAAS,CAAC,EACV6B,KAAMc,EAAK3C,UAId2B,EAAkBxL,QAAWyL,EAAezL,QAAkC,SAAxB0C,KAAK6I,iBAA6B0I,IACzFzH,EAAO,CACH3C,QAAS,CAAC,EACV6B,KAAMc,EAAK3C,UAInBnH,KAAKwP,MAAQ,CACTrI,QAAS4E,GAAc/L,KAAKwP,MAAMrI,SAClC6B,KAAM+C,GAAc/L,KAAKwP,MAAMxG,OAGnCc,EAAO,CACH3C,QAAS4E,GAAcjC,EAAK3C,SAC5B6B,KAAM+C,GAAcjC,EAAKd,OAG7BmI,EAAgBnR,KAAKyR,iBAAiB3H,EAAK3C,QAAQvJ,OAAQoC,KAAKwP,MAAMrI,QAAQvJ,OAAQkL,EAAmB9I,KAAK0R,mBAC9GN,EAAapR,KAAKyR,iBAAiB3H,EAAKd,KAAKpL,OAAQoC,KAAKwP,MAAMxG,KAAKpL,OAAQmL,EAAgB/I,KAAKwR,gBAE9FxR,KAAKuP,eAAiB,IACtBvP,KAAKuP,gBAAkB,GAGtBvP,KAAKsP,cACN1W,EAAOoH,KAAK2R,eAAe,CACvBC,cAAe9H,EAAK3C,QAAQvJ,OAAON,OACnCuU,WAAY/H,EAAKd,KAAKpL,OAAON,OAC7B6T,cAAeA,EACfC,WAAYA,EACZxY,KAAMA,KAIY,QAAtBoH,KAAKsQ,eACL1S,EAASkM,EAAK3C,QAAQvJ,OACtBQ,EAAW4B,KAAK0R,mBAChBL,EAAaS,GAAahI,EAAK3C,QAASnH,KAAKwP,MAAMrI,QAAS/I,MAGxDkT,EAAa,UACbxH,EAAK3C,QAAUkK,EAkpB/B,SAA4BU,EAAcC,EAAcH,EAAYzT,EAAUxF,GAC1E,IAAIqZ,EAAW/I,EAAQgJ,EACnBN,EAAgBG,EAAazU,OAC7B6U,EAAsBC,GAAaJ,EAAc5T,GACjDiU,EAAiBjU,EAASd,QAAU,EAExC,IAAK4L,EAAS,EAAGA,EAAS2I,EAAY3I,IAClC,IAAK+I,EAAY,EAAGA,EAAYL,EAAeK,IAC3CC,EAAUI,GAAWP,EAAaE,GAAYD,GAAgBK,EAC9DH,GAAWD,EAAYI,EAEvBzZ,EAAKsQ,EAAS0I,EAAgBK,GAAWvL,QAAUwC,EAASiJ,EAAsBD,CAG9F,CA/pBgBK,CAAmB3U,EAAQyT,EAAWzT,OAAQkM,EAAKd,KAAKpL,OAAON,OAAQc,EAAUxF,GAC5EoH,KAAKsP,cACN1W,EAAOoH,KAAK2R,eAAe,CACvBC,cAAeQ,GAAatI,EAAK3C,QAAQvJ,OAAQQ,GACjDyT,WAAY/H,EAAKd,KAAKpL,OAAON,OAC7B1E,KAAMA,OAIW,WAAtBoH,KAAKsQ,gBACZ1S,EAASkM,EAAKd,KAAKpL,OACnBQ,EAAW4B,KAAKwR,gBAChBH,EAAaS,GAAahI,EAAKd,KAAMhJ,KAAKwP,MAAMxG,KAAM5K,MAGlDkT,EAAa,OACbxH,EAAKd,KAAOqI,EAipB5B,SAAyBU,EAAcC,EAAcJ,EAAexT,EAAUxF,GAC1E,IAAIqZ,EAAW/I,EAAQgJ,EACnBL,EAAaE,EAAazU,OAC1B+U,EAAiBjU,EAASd,QAAU,EAExC,IAAK4L,EAAS,EAAGA,EAAS2I,EAAY3I,IAKlC,IAJAgJ,EAAUI,GAAWP,EAAa7I,GAAS8I,GAC3CE,GAAWG,EACXH,GAAWhJ,EAASmJ,EAEfJ,EAAY,EAAGA,EAAYL,EAAeK,IAC3CrZ,EAAKsQ,EAAS0I,EAAgBK,GAAWvL,QAAUwL,EAAUN,EAAgBK,CAGzF,CA9pBgBO,CAAgB5U,EAAQyT,EAAWzT,OAAQkM,EAAK3C,QAAQvJ,OAAON,OAAQc,EAAUxF,GAE5EoH,KAAKsP,cACN1W,EAAOoH,KAAK2R,eAAe,CACvBC,cAAeQ,GAAatI,EAAKd,KAAKpL,OAAQQ,GAC9CyT,WAAY/H,EAAK3C,QAAQvJ,OAAON,OAChC1E,KAAMA,OAMtBoH,KAAKsQ,cAAgB,KAErB,IAAIzS,EAASmC,KAAKyS,WAAW3I,EAAMlR,EAAM0Y,GAGzC,OAFAtR,KAAKwP,MAAQ3R,EAAOiM,KAEbjM,EAAOjF,IAClB,EAEA8Z,UAAW,SAAS9Z,GAChB,IAAIkR,EAAO9J,KAAKE,OAAO4J,KAAKlR,GACxB+Z,EAAU3S,KAAKE,OAAOtH,KAAKA,GAM/B,OAJIoH,KAAKsP,cACLtP,KAAK4P,SAAW+C,GAGb3S,KAAKgR,eAAe2B,EAAS7I,EACxC,EAEA8I,aAAc,SAASzV,EAAOd,EAASwW,GACnC,IAGI1P,EAAWC,EACXtL,EAAMwL,EACND,EACA3E,EACA/C,EACAD,EARA8B,EAAUL,EAAMK,QAChBF,EAASE,EAAQF,OACjBuF,EAAO,CAAErF,QAAS,IAOlBH,EAAM,EAMV,IAJIhB,IACAiB,GAAU,GAGPD,EAAMC,EAAQD,IACjB3B,EAAS8B,EAAQH,GACjB+F,EAAW0P,OAAOpX,EAAO0H,UAEzBtL,EAAO4D,EAAO5D,KACdwL,EAAa5H,EAAO4H,WACpB3H,EAAUD,EAAOC,SAAW7D,EAC5BuL,EAAc3H,EAAO2H,YACrB3E,EAAYhD,EAAOgD,UACnByE,EAAYzH,EAAOyH,UAEf0P,IACAlX,EAAU,MACO,IAAbyH,EACAE,EAAa5H,EAAO5D,KAEpBsL,GAAY,EAGhBC,GAAc,EACdvL,EAAO4G,EAAYyE,EAAYG,GAGnCT,EAAKrF,QAAQO,KAAK,CACdjG,KAAMA,EACNyF,SAAU,GACV5B,QAASA,EACTwH,UAAWA,EACXC,SAAUA,EAAS9J,WACnB+J,YAAaA,EACb3E,UAAWA,EACX4E,WAAauP,EAAyB,GAAbvP,IAWjC,OAPIjH,GACAwG,EAAKrF,QAAQO,KAAK,CACdjG,KAAMuE,EAAQvE,KACdyF,SAAU,KAIXsF,CACX,EAEAkQ,SAAU,SAASC,EAAQC,EAAQ1W,GAC/B,GAAI0W,EAAO3V,OACP,OAAOuB,GAAkBoU,EAAQD,GAAQ7V,MAU7C,IAPA,IACIzB,EACAY,EAGA8G,EALA5F,EAAUwV,EAAOxV,QAIjB0V,GAAS,EAGJ7V,EAAM,EAAGC,EAASE,EAAQF,OAAQD,EAAMC,EAAQD,IAKrD,GAJA3B,EAAS8B,EAAQH,GACjB+F,EAAW0P,OAAOpX,EAAO0H,WAAa,EACtC9G,EAAaC,EAAYc,KAEN,IAAb+F,GAAmB9G,GAAcZ,EAAO5D,OAAS2G,GAAQnC,IAAe,CAC1E4W,GAAS,EACT,KACJ,CAGJ,OAAOA,CACX,EAEAT,WAAY,SAASU,EAAYva,EAAM0Y,GACnC,IAGI8B,EAAYxV,EAHZyV,EAAiBrT,KAAK0R,kBACtB4B,EAActT,KAAKwR,eACnB1H,EAAO9J,KAAK8J,OAGZyJ,EAAgBnB,GAAatI,EAAKd,KAAKpL,OAAQ0V,GAC/CE,EAAgBL,EAAWnK,KAAKpL,OAAON,OAEvCmW,EAAmBrB,GAAatI,EAAK3C,QAAQvJ,OAAQyV,GACrDK,EAAmBP,EAAWhM,QAAQvJ,OAAON,OAE/B,WAAdgU,GACAoC,EAAmBD,EACnB7V,EAASuV,EAAWhM,QAAQvJ,QAG5BhF,EAi2BZ,SAA8BgF,EAAQhF,GAClC,IAAKgF,IAAWA,EAAON,OACnB,OAAO1E,EAGX,IAII2O,EAAaoM,EAAUC,EAAWC,EAJlChW,EAAS,GACTiW,EAAUC,GAAiBnW,GAC3BgU,EAAgBkC,EAAQxW,OACxBuU,EAAamC,KAAKjS,IAAInJ,EAAK0E,OAASsU,EAAe,GAGvD,IAAK+B,EAAW,EAAGA,EAAW9B,EAAY8B,IAEtC,IADAC,EAAYhC,EAAgB+B,EACvBpM,EAAc,EAAGA,EAAcqK,EAAerK,IAC/CsM,EAAYC,EAAQvM,GAAeqM,EACnC/V,EAAO+V,EAAYrM,GAAe3O,EAAKib,IAAc,CAAE9X,MAAO,GAAIG,SAAU,GAAIwK,QAASmN,GAIjG,OAAOhW,CACX,CAr3BmBoW,CADPrW,EAASsW,GAAYf,EAAWhM,QAAQvJ,OAAQyV,GACZza,GAGxC,IAAIub,EAAgBC,GAAYtK,EAAK3C,QAAQvJ,OAAQA,EAAQyV,GAE3C,QAAd/B,GACAkC,EAAgBpB,GAAae,EAAWnK,KAAKpL,OAAQ0V,GACrD1V,EAASuV,EAAWnK,KAAKpL,QAGzBhF,EA+zBZ,SAA2BgF,EAAQhF,GAC/B,IAAKgF,IAAWA,EAAON,OACnB,OAAO1E,EAGX,IAII+a,EAAUpM,EAAa8M,EAAaC,EACpCT,EALAhW,EAAS,GACTiW,EAAUC,GAAiBnW,GAC3BiU,EAAaiC,EAAQxW,OACrBsU,EAAgBoC,KAAKjS,IAAInJ,EAAK0E,OAASuU,EAAY,GAIvD,IAAK8B,EAAW,EAAGA,EAAW9B,EAAY8B,IAGtC,IAFAU,EAAczC,EAAgB+B,EAC9BW,EAAc1C,EAAgBkC,EAAQH,GACjCpM,EAAc,EAAGA,EAAcqK,EAAerK,IAC/CsM,EAAYU,SAASD,EAAc/M,EAAa,IAChD1J,EAAO0W,SAASF,EAAc9M,EAAa,KAAO3O,EAAKib,IAAc,CAAE9X,MAAO,GAAIG,SAAU,GAAIwK,QAASmN,GAIjH,OAAOhW,CACX,CAr1BmB2W,CADP5W,EAASsW,GAAYf,EAAWnK,KAAKpL,OAAQ0V,GACZ1a,GAErC,IAAI6b,EAAaL,GAAYtK,EAAKd,KAAKpL,OAAQA,EAAQ0V,GAKvD,GAHAxJ,EAAK3C,QAAQvJ,OAASuW,EAAcvW,OACpCkM,EAAKd,KAAKpL,OAAS6W,EAAW7W,OAE1B6V,IAAqBrB,GAAatI,EAAK3C,QAAQvJ,OAAQyV,GAAiB,CAExED,EAAae,EAAcjQ,MAAQwQ,GAAcP,EAAcQ,WAAYR,EAAcS,YAAavB,GACtG,IAAIwB,EAASpB,EAAmBC,EAChC9a,EAAOoH,KAAK8U,iBAAiBlc,EAAMwa,EAAYI,EAAeE,EAAkBmB,EACpF,MAAWtB,IAAkBnB,GAAatI,EAAKd,KAAKpL,OAAQ0V,KAExDF,EAAaqB,EAAWvQ,MAAQwQ,GAAcD,EAAWE,WAAYF,EAAWG,YAAatB,GAC7F1a,EAAOoH,KAAK+U,cAAcnc,EAAMwa,EAAYI,EAAeE,IAO/D,OAJmC,IAA/B5J,EAAK3C,QAAQvJ,OAAON,QAA4C,IAA5BwM,EAAKd,KAAKpL,OAAON,SACrD1E,EAAO,IAGJ,CACHkR,KAAMA,EACNlR,KAAMA,EAEd,EAEAkc,iBAAkB,SAASnC,EAASpL,EAAasK,EAAYD,EAAeiD,GACxE,IACIlB,EAAUzP,EAAiB8Q,EAD3Bpc,EAAOoH,KAAKpH,OAAOqc,SACFC,EAAO,EACxB7B,EAAiBW,KAAKjS,IAAI/B,KAAK0R,kBAAkBpU,OAAQ,GAU7D,IARAuU,EAAamC,KAAKjS,IAAI8P,EAAY,GAE9BjZ,EAAK0E,OAAS,IAEd4X,EAAO7B,EACPwB,GAAUxB,GAGTM,EAAW,EAAGA,EAAW9B,EAAY8B,IACtCzP,EAAQqD,EAAeoM,EAAWkB,GAClCG,EAAQrC,EAAQwC,OAAO,EAAGvD,IACpBuD,OAAO,EAAGD,GAChB,GAAGC,OAAOhQ,MAAMvM,EAAM,CAACsL,EAAO,GAAGgB,OAAO8P,IAG5C,OAAOpc,CACX,EAEAmc,cAAe,SAASpC,EAASgB,EAAU9B,EAAYD,GACnD,IACIvU,EAAKuW,EAAWoB,EADhBpc,EAAOoH,KAAKpH,OAAOqc,SAEnB3B,EAAcU,KAAKjS,IAAI/B,KAAKwR,eAAelU,OAAQ,GASvD,IAPAsU,EAAgBoC,KAAKjS,IAAI6P,EAAe,GACpChZ,EAAK0E,OAAS,IAEduU,GAAcyB,EACdX,EAAQwC,OAAO,EAAGvD,EAAgB0B,IAGjCjW,EAAM,EAAGA,EAAMwU,EAAYxU,IAC5B2X,EAAQrC,EAAQwC,OAAO,EAAGvD,GAC1BgC,EAAaD,EAAW/B,EAAkBvU,EAAMuU,EAChD,GAAGuD,OAAOhQ,MAAMvM,EAAM,CAACgb,EAAW,GAAG1O,OAAO8P,IAGhD,OAAOpc,CACX,EAEA8Y,gBAAiB,WACb,IAAItT,EAAW4B,KAAK5B,WAChBiV,EAAiB,GAUrB,MAR4B,YAAxBrT,KAAK6I,iBACyB,IAA1B7I,KAAKmH,UAAU7J,QAERc,EAASd,OAAS,KADzB+V,EAAiBjV,GAMlBiV,CACX,EAEA7B,aAAc,WACV,IAAIpT,EAAW4B,KAAK5B,WAChBkV,EAAc,GAUlB,MAR4B,SAAxBtT,KAAK6I,iBACsB,IAAvB7I,KAAKgJ,OAAO1L,QAELc,EAASd,OAAS,KADzBgW,EAAclV,GAMfkV,CACX,EAEAzC,iBAAkB,SAASjY,EAAMyG,GACzBW,KAAKsP,cACDjQ,IACAW,KAAKkR,aAAe7R,GAExBzG,EAAOoH,KAAKgR,eAAepY,IAG/BoH,KAAKmM,MAAQnM,KAAKoV,SAASxc,GAE3BoH,KAAKqV,QAAU,GACfrV,KAAKsV,UAAUtV,KAAKmM,OAEpBnM,KAAKuV,OAASvV,KAAKmM,MAAM7O,OACzB0C,KAAKwV,eAAiBxV,KAAKuV,OAC3BvV,KAAKwQ,SAASxQ,KAAKmM,MACvB,EAEAvT,KAAM,SAASmD,GAEX,GAAIA,IAAU3D,EAQV,OATO4H,KASKmM,MAPZnM,KAAKG,cAAgBpE,EAAMc,MAAM,GACjCmD,KAAK6Q,iBAAiB9U,EAAO,CACrBoL,QAASnH,KAAKmH,UACd6B,KAAMhJ,KAAKgJ,OACX5K,SAAU4B,KAAK5B,YAK/B,EAEAqT,iBAAkB,SAAS7T,EAAQqV,EAAQ1W,EAAa6B,GACpD,IAMIjB,EAAOsY,EAAWC,EANlBpY,EAASc,EAASd,QAAU,EAC5BD,EAAM,EAENsY,EAAQ,GACRC,EAAU,CAAC,EACX3S,EAAa,EAGjB,GAAKrF,EAAON,OAAZ,CAIA,GAAI0C,KAAKuP,gBAAkB,IAAMvP,KAAK+S,SAASnV,EAAO,GAAIqV,EAAQ1W,GAAc,CAE5E,IADAyD,KAAKuP,eAAiB,EACflS,EAAMC,EAAQD,IACjBsY,EAAM5X,KAAKiC,KAAK4S,aAAahV,EAAO,GAAIQ,EAASf,IAAM,IACvDuY,EAAQvY,GAAOA,EAGnBO,EAAOuX,OAAOhQ,MAAMvH,EAAQ,CAAC,EAAGA,EAAON,QAAQ4H,OAAOyQ,GAAOzQ,OAAOtH,IACpEP,EAAMC,CACV,CAEA,GAAIc,EAASd,OAIT,IAHAoY,EAAOvY,EAAQS,EAAOP,GACtBoY,EAAYtY,EAAMK,QAAQF,OAAS,EAE5BH,GAAO,CAcV,GAbI8F,GAAc3F,IACd2F,EAAa,GAGb9F,EAAMK,QAAQiY,GAAW3d,OAASsG,EAAS6E,GAAYnL,OACvD8F,EAAOuX,OAAO9X,EAAK,EAAG2C,KAAK4S,aAAazV,EAAOiB,EAAS6E,KACxD2S,EAAQvY,GAAOA,GAInB4F,GAAc,EACd9F,EAAQS,EAFRP,GAAO,GAIHC,EAAS2F,KAAgB9F,GAAS0Y,GAAUH,EAAMD,EAAY,KAAOI,GAAU1Y,EAAOsY,EAAY,IAAK,CACvG,KAAOxS,EAAa3F,EAAQ2F,IACxBrF,EAAOuX,OAAO9X,EAAK,EAAG2C,KAAK4S,aAAa8C,EAAMtX,EAAS6E,KACvD2S,EAAQvY,GAAOA,EACfA,GAAO,EAEXF,EAAQS,EAAOP,EACnB,CACAqY,EAAOvY,CACX,CAGJ,OAAOyY,CA3CP,CA4CJ,EAEAE,qBAAsB,SAASjY,EAAQkY,GACnC,KAAOA,EAAS3E,WAAWmD,SAAS1W,EAAOP,OAASyY,EAASnE,cAAe,OAASxZ,GACjF,IAAK,IAAIiF,EAAM,EAAGA,EAAM0Y,EAASnE,cAAevU,IAC5CQ,EAASmY,GAAiBnY,GAIlC,KAAOkY,EAAS5E,cAActT,EAAOP,OAASyY,EAASnE,iBAAmBxZ,GACtEyF,EAASmY,GAAiBnY,GAG9B,OAAOA,CACX,EAEAoY,mBAAoB,SAASpY,EAAQ/B,EAAUia,GAC3C,IAAIG,EAAcH,EAASG,YAE3B,IAAKpa,EACD,OAAOka,GAAiBnY,GAG5B,GAAK/B,EAAS4K,QAAUwP,EAAe,EAGnC,IAFAA,GAAe,EAERA,EAAcpa,EAAS4K,SAAW7I,EAAOP,OAASyY,EAASzY,QAC9DO,EAASmC,KAAK8V,qBAAqBE,GAAiBnY,GAASkY,GAC7DG,GAAe,EAOvB,OAHApa,EAAS4K,QAAU7I,EAAOP,OAC1BO,EAAOA,EAAOP,QAAUxB,EAEjB+B,CACX,EAEA8T,eAAgB,SAASrP,GACrB,IAEIxG,EAEAoa,EACA5Y,EALA1E,EAAO0J,EAAQ1J,KACfsZ,EAAU,EAEVrU,EAAS,GAYb,GARAyE,EAAQ4T,YAAc,EACtB5T,EAAQ6O,cAAgB7O,EAAQ6O,eAAiB,CAAC,EAClD7O,EAAQ8O,WAAa9O,EAAQ8O,YAAc,CAAC,EAC5C9O,EAAQsP,cAAgBtP,EAAQsP,eAAiB,EACjDtP,EAAQuP,WAAavP,EAAQuP,YAAc,EAC3CvP,EAAQhF,OAASgF,EAAQsP,cAAgBtP,EAAQuP,WACjDvU,EAASgF,EAAQhF,OAEb1E,EAAK0E,SAAWA,EAChB,OAAO1E,EAGX,KAAOiF,EAAOP,OAASA,IACnBxB,EAAWlD,EAAKsZ,QAEZgE,EAAcpa,EAAS4K,SAG3B7I,EAASmC,KAAKiW,mBAAmBjW,KAAK8V,qBAAqBjY,EAAQyE,GAAUxG,EAAUwG,GAEvFA,EAAQ4T,YAAcA,EAG1B,OAAOrY,CACX,EAEAoM,SAAU,SAAS3H,EAAS6T,GACxB,IAAIpW,EAAOC,KACPgK,EAAYjK,EAAKiK,UAErB,OAAO7R,EAAEiV,UAAS,SAAStN,GACvBkK,EAAUC,SAASvQ,EAAO,CACtB2Q,QAAS,SAASiD,GACfA,EAAWvN,EAAKG,OAAOjC,MAAMqP,GAExBvN,EAAKwO,oBAAoBjB,KAIzB6I,IACA7I,EAAW6I,EAAU7I,IAEzBxN,EAASsB,QAAQkM,GACrB,EACAE,MAAO,SAASF,EAAUmB,EAAQjB,GAC9B1N,EAAS4O,OAAOpB,GAChBvN,EAAKyN,MAAMF,EAAUmB,EAAQjB,EACjC,GACDlL,GACP,IAAGoL,UAAUrB,MAAK,WACdtM,EAAKoB,QAAQ,eACjB,GACJ,EAEA2M,eAAgB,WACZ,IAAI/N,EAAOC,KAEX,OAAOD,EAAKkK,SAAS,CACjBrR,KAAM,CACF4V,QAAS,iBACTG,aAAc,CACVC,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,WAGlC,SAAS8C,GACR,OAAOvN,EAAKG,OAAO9B,SAASkP,EAChC,GACJ,EAEAS,WAAY,WACR,IAAIhO,EAAOC,KAEX,OAAOD,EAAKkK,SAAS,CACjBrR,KAAM,CACF4V,QAAS,aACTG,aAAc,CACVC,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,WAGlC,SAAS8C,GACR,OAAOvN,EAAKG,OAAO8N,KAAKV,EAC5B,GACJ,EAEAW,iBAAkB,WACd,IAAIlO,EAAOC,KAEX,OAAOD,EAAKkK,SAAS,CACjBrR,KAAM,CACF4V,QAAS,mBACTG,aAAc,CACVC,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,WAGlC,SAAS8C,GACR,OAAOvN,EAAKG,OAAOqC,WAAW+K,EAClC,GACJ,EAEAY,kBAAmB,SAASY,GACxB,IAAI/O,EAAOC,KAEX,OAAOD,EAAKkK,SAAS,CACjBrR,KAAM,CACF4V,QAAS,oBACTG,aAAc,CACVC,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,OACzBuE,oBAAqBD,MAG9B,SAASxB,GACR,OAAOvN,EAAKG,OAAO2K,YAAYyC,EACnC,GACJ,EAEAa,aAAc,SAASa,GACnB,IAAIjP,EAAOC,KAEX,OAAOD,EAAKkK,SAAS,CACjBrR,KAAM,CACF4V,QAAS,eACTG,aAAc,CACVC,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,OACzByE,oBAAqBD,MAG9B,SAAS1B,GACR,OAAOvN,EAAKG,OAAO4K,OAAOwC,EAC9B,GACJ,EAEAc,YAAa,WACT,IAAIrO,EAAOC,KAEX,OAAOD,EAAKkK,SAAS,CACjBrR,KAAM,CACF4V,QAAS,cACTG,aAAc,CACVC,YAAa7O,EAAKiK,UAAUM,cAGrC,SAASgD,GACR,OAAOvN,EAAKG,OAAOyK,MAAM2C,EAC7B,GACJ,EAEAe,eAAgB,WACZ,IAAItO,EAAOC,KAEX,OAAOD,EAAKkK,SAAS,CACjBrR,KAAM,CACF4V,QAAS,oBAEd,SAASlB,GACR,OAAOvN,EAAKG,OAAO0K,SAAS0C,EAChC,GACJ,EAEAgB,cAAe,SAASK,GACpB,IAAI5O,EAAOC,KACPqK,EAAW,SAASsE,GACpB,OAAO,SAASrB,GACZ,OAAOvN,EAAKG,OAAO1C,QAAQ8P,EAAUqB,EACzC,CACJ,CAJc,CAIZA,GAEF,OAAO5O,EAAKkK,SAAS,CACjBrR,KAAM,CACF4V,QAAS,gBACTG,aAAcjV,EAAO,CAClBkV,YAAa7O,EAAKiK,UAAUM,UAC5BuE,SAAU9O,EAAKiK,UAAUQ,QAC1BmE,KAEPtE,EACP,EAEA8C,QAAS,SAASvU,GACVoH,KAAK8P,iBACL9P,KAAKwP,MAAQ,CAAC,EACdxP,KAAKmM,MAAQnM,KAAKoV,SAAS,IAC3BpV,KAAK8P,gBAAiB,EACtB9P,KAAKmB,QAAQhH,IAGjB,IAAImI,EAAUxJ,EAAWmS,GAAGkC,QAAQ3Q,KAAKwD,KAAMpH,GAa/C,OAXA0J,EAAU5I,EAAO,CACb0E,SAAU4B,KAAK5B,WACfyK,aAAc7I,KAAK6I,eACnB1B,QAASnH,KAAKmH,UACd6B,KAAMhJ,KAAKgJ,QACZ1G,GAECtC,KAAKsP,cACLtP,KAAKkR,aAAe5O,GAGjBA,CACX,IAGJ,SAAS2B,GAAYkD,GAEjB,IADA,IAAItJ,EAAS,GACJR,EAAM,EAAGA,EAAM8J,EAAQ7J,OAAQD,IACpCQ,EAAOE,KAAKoJ,EAAQ9J,IAChB8J,EAAQ9J,GAAKE,WACbM,EAASA,EAAOqH,OAAOjB,GAAYkD,EAAQ9J,GAAKE,YAIxD,OAAOM,CACX,CAEA,SAASkG,GAAc5E,EAAOoH,EAAO6P,GACjC,IAAK,IAAI/U,EAAI,EAAGA,EAAIkF,EAAMjJ,OAAQ+D,IAC1BkF,EAAMlF,GAAG9D,UAAYgJ,EAAMlF,GAAG9D,SAASD,QACvCyG,GAAc5E,EAAOoH,EAAMlF,GAAG9D,SAAU6Y,GAG5C7P,EAAM,GAAGjD,YAAcnE,IAG3BoH,EAAQA,EAAMvF,KAAKoV,GACvB,CAEA,SAAStS,GAAayC,EAAO9M,GACzB,IAAK,IAAI4H,EAAI,EAAGA,EAAIkF,EAAMjJ,OAAQ+D,IAAK,CACnC,IAAIgV,EAAc5c,EAAI8M,EAAMlF,GAAGvJ,MAE/B,IAAKK,EAAEsM,cAAc4R,EAAY7O,aAAc,CAE3C,IAAK,IAAI1P,KADTyO,EAAMlF,GAAG9D,SAAW,GACH8Y,EAAY7O,YACzBjB,EAAMlF,GAAG9D,SAASQ,KAAK5F,EAAEuB,OAAO,CAAC,EAAG,CAAE5B,KAAMA,EAAMwL,WAAY7J,EAAI3B,GAAMwL,cAG5EQ,GAAayC,EAAMlF,GAAG9D,SAAU9D,EACpC,CACJ,CACJ,CAEA,SAASuc,GAAiBnY,GAEtB,OADAA,EAAOA,EAAOP,QAAU,CAAEvB,MAAO,GAAIG,SAAU,GAAIwK,QAAS7I,EAAOP,QAC5DO,CACX,CAEA,SAASiU,GAAawE,EAASnY,EAAMC,GACjC,GAAIkY,EAAQ1Y,OAAON,OAAS8U,GAAajU,EAAKP,OAAQQ,GAElD,OAAOD,CAIf,CAkCA,SAASmU,GAAWnV,EAAOoZ,GACvB,OAAO1X,GAAkB0X,EAAYpZ,GAAO+G,KAChD,CAEA,SAASkO,GAAaxU,EAAQQ,GAC1B,IAAKR,EAAON,OACR,OAAO,EAOX,IAJA,IAAIkZ,EAAQ5Y,EAAOf,QACfuH,EAAUoS,EAAMC,QAChB5Y,EAAS,EAENuG,GACCA,EAAQ5G,QACR,GAAGO,KAAKoH,MAAMqR,EAAOpS,EAAQ5G,SACtB4G,EAAQ7G,WACV6G,EAAQ/H,UACTwB,GAAUuG,EAAQ7G,SAASD,QAE/B,GAAGS,KAAKoH,MAAMqR,EAAOpS,EAAQ7G,WAGjC6G,EAAUoS,EAAMC,QAOpB,OAJIrY,EAASd,SACTO,GAAkBO,EAASd,QAGxBO,CACX,CAEA,SAASkO,GAAc5N,GAWnB,OAVKA,IACDA,EAAO,CACHP,OAAQ,KAIXO,EAAKP,SACNO,EAAKP,OAAS,IAGXO,CACX,CAEA,SAASuW,GAAcvX,EAAOyX,EAAaxW,GACvC,IAAKjB,EACD,OAAO,EAYX,IATA,IAAIkV,EAAiB2B,KAAKjS,IAAI3D,EAASd,OAAQ,GAC3CM,EAAST,EAAMK,QAAQX,MAAM,EAAG+X,GAChCxQ,EAAUxG,EAAO6Y,QAKjBC,EAAUrE,EAEPjO,GACCA,EAAQtM,OAASoC,EAGjBwc,GAAYrE,EAAiB,EACtBjO,EAAQ7G,SAEf,GAAGQ,KAAKoH,MAAMvH,EAAQwG,EAAQ7G,WAG9BmZ,IACA,GAAG3Y,KAAKoH,MAAMvH,EAAQwG,EAAQ5G,UAGlC4G,EAAUxG,EAAO6Y,QAGrB,OAAOC,CACX,CAEA,SAAStC,GAAYpB,EAAQC,EAAQ7U,GACjC,IAAK6U,EAAO,GACR,MAAO,CACH0B,WAAY,KACZ/W,OAAQoV,EACR4B,YAAa,EACb1Q,MAAO,GAIf,IAAIrG,EAASgB,GAAkBmU,EAAQC,EAAO,IAE9C,IAAKpV,EAAOV,MACR,MAAO,CACHwX,WAAY,KACZ/W,OAAQqV,EACR2B,YAAa,EACb1Q,MAAO,GAIf,IAAIyS,EAAgB9Y,EAAOV,MAAMK,QAC7BoZ,EAAgB3D,EAAO,GAAGzV,QAC1BoX,GAAe,EAEnB,GAAI+B,EAAcrZ,SAAWsZ,EAActZ,OACvC,MAAO,CACHqX,WAAY,KACZ/W,OAAQqV,EACR2B,YAAa,EACb1Q,MAAO,GAIf,IAAK,IAAI7G,EAAM,EAAGC,EAASqZ,EAAcrZ,OAAQD,EAAMC,EAAQD,KACtDsZ,EAActZ,GAAKhB,SAAWua,EAAcvZ,GAAKE,SAAS,MACvC,GAAhBqX,GAAqBgC,EAAcvZ,GAAKE,SAASD,SACjDsX,EAAcvX,GAGlBsZ,EAActZ,GAAKE,SAAWqZ,EAAcvZ,GAAKE,UAMzD,OAFAa,EAAW4V,KAAKjS,IAAI3D,EAASd,OAAQ,GAE9B,CACHqX,WAAY9W,EAAOV,MACnB+G,MAAOrG,EAAOqG,MAAQ9F,EACtBwW,YAAaA,EACbhX,OAAQoV,EAEhB,CAEA,SAAS6D,GAAYC,EAAOC,GACxB,IACI1Z,EAAKC,EADL0Z,GAAQ,EAMZ,IAHAF,EAAQA,EAAMtZ,QACduZ,EAASA,EAAOvZ,QAEXH,EAAM,EAAGC,EAASwZ,EAAMxZ,OAAQD,EAAMC,EAAQD,IAC3CyZ,EAAMzZ,GAAKhB,SAAW0a,EAAO1Z,GAAKhB,UAItC2a,EAAQA,GAAUvY,GAAQqY,EAAMzZ,MAAUoB,GAAQsY,EAAO1Z,KAG7D,OAAO2Z,CACX,CAEA,SAASnY,GAAkBjB,EAAQqZ,GAC/B,IAAI5Z,EAAKC,EAAQH,EAAOoB,EACpBqW,EAAasC,EAAexb,EADDgb,EAAU,EAGzC,IAAKrZ,EAAM,EAAGC,EAASM,EAAON,OAAQD,EAAMC,EAAQD,IAAO,CAEvD,GAAIwZ,GADJ1Z,EAAQS,EAAOP,GACQ4Z,GACnB,MAAO,CACH9Z,MAAOA,EACP+G,MAAOwS,GAMf,IAFAA,IAEK9B,EAAc,EAAGsC,EAAgB/Z,EAAMK,QAAQF,OAAQsX,EAAcsC,EAAetC,IAErF,KADAlZ,EAASyB,EAAMK,QAAQoX,IACZvY,UAKXqa,IADAnY,EAAQM,GAAkBnD,EAAO6B,SAAU0Z,IAC1B/S,MACb3F,EAAMpB,OACN,MAAO,CACHA,MAAOoB,EAAMpB,MACb+G,MAAOwS,EAIvB,CAEA,MAAO,CACHxS,MAAOwS,EAEf,CAEA,SAASS,GAAW3Z,EAAS/D,GACzB,IAAIiC,EAAQ2F,EAAG+V,EAAK9P,EAAO,GAC3B,IAAKjG,EAAI,EAAG+V,EAAM5Z,EAAQF,OAAQ+D,EAAI+V,EAAK/V,IAGlC5H,EADL6N,IADA5L,EAAS8B,EAAQ6D,IACFvJ,QAEX2B,EAAI6N,GAAQ5L,EAGxB,CAGA,SAAS2b,GAAiBla,EAAO1D,GAC7B,IACI4H,EAAG+V,EAAK1b,EAER4b,EAHA9Z,EAAUL,EAAMK,QACA8J,EAAO,GACvBiQ,EAAa,GAGjB,IAAKlW,EAAI,EAAG+V,EAAM5Z,EAAQF,OAAQ+D,EAAI+V,EAAK/V,IAAK,CAE5C,GADA3F,EAAS8B,EAAQ6D,GACbiW,EAAc,CACd,GAAI7d,EAAI6N,EAAO5L,EAAO5D,MAAO,CAEzBwf,EAAe7d,EADf6N,GAAQ5L,EAAO5D,MAEf,QACJ,CAAO,OAAI2B,EAAI6N,EAAO5L,EAAO4H,YAClB7J,EAAI6N,EAAO5L,EAAO4H,YAClB7J,EAAI8d,EAAa7b,EAAO4H,YACxB7J,EAAI8d,EAAa7b,EAAO4H,YAExB7J,EAAI8d,EAEnB,CAKA,GAHAjQ,GAAQ5L,EAAO5D,OACfwf,EAAe7d,EAAIiC,EAAO4H,gBAGtBgU,EAAe7d,EAAI6N,IAEf,OAAO,KAIXgQ,IACAC,GAAcD,EAAaxf,KAEnC,CAEA,OAAOwf,CACX,CAgBA,SAASE,GAAuBra,EAAO+G,GACnC,KAAIA,EAAQ,GAAZ,CAGA,IAAIxI,EAAS,CACT5D,KAAMoC,EACNmC,SAAS,EACTkB,SAAU,CACNpF,EAAEuB,OAAO,CAAE8D,QAAS,GAAIoW,UAAWzW,EAAMyW,WAAazW,EAAMK,QAAQ0G,MAG5E/G,EAAMK,QAAQ2X,OAAOjR,EAAO,EAAGxI,GAC/ByB,EAAMyW,UAAYxb,CATlB,CAUJ,CAEA,SAAS8b,GAAYtW,EAAQQ,GACzB,GAAIR,EAAON,OAAS,EAChB,MAAO,GAMX,IAJA,IAAIO,EAAS,GACTpE,EAAM,CAAE,EACRge,EAnCR,SAAyBta,EAAOiB,GAC5B,GAAwB,IAApBA,EAASd,OACT,OAAQ,EAKZ,IAFA,IAAIjB,EAAU+B,EAAS,GACnBZ,EAAUL,EAAMK,QACXH,EAAM,EAAG+Z,EAAM5Z,EAAQF,OAAQD,EAAM+Z,EAAK/Z,IAC/C,GAAIG,EAAQH,GAAKvF,MAAQuE,EAAQvE,KAC7B,OAAOuF,CAGnB,CAuBuBqa,CAAgB9Z,EAAO,GAAIQ,GAErCiD,EAAI,EAAGA,EAAIzD,EAAON,OAAQ+D,IAAK,CACpC,IAAIlE,EAAQS,EAAOyD,GAGnBlE,EAAMyW,UAAYvS,EAElBmW,GAAuBra,EAAOsa,GAC9B,IAAIH,EAAeD,GAAiBla,EAAO1D,GAEvC6d,EACIG,EAAe,IAAMH,EAAajb,QAClCib,EAAa/Z,SAASQ,KAAKZ,GAE3Bma,EAAa/Z,SAASQ,KAAKZ,EAAMK,QAAQia,GAAcla,SAAS,IAGpEM,EAAOE,KAAKZ,GAGhBga,GAAWha,EAAMK,QAAS/D,EAC9B,CAEA,OAAOoE,CACX,CAgDA,SAASkW,GAAiBnW,GAMtB,IAJA,IAEIP,EAAKC,EAAQqa,EAAapa,EAAU7B,EAFpCmC,EAAS,GACTV,GAFJS,EAASA,EAAOf,SAEG4Z,QAGZtZ,GAAO,CAOV,IALIA,EAAMyW,YAAcxb,GACpByF,EAAOE,KAAKZ,EAAMyW,WAGtB+D,EAAc,EACTta,EAAM,EAAGC,EAASH,EAAMK,QAAQF,OAAQD,EAAMC,EAAQD,IAEvDE,GADA7B,EAASyB,EAAMK,QAAQH,IACLE,SACd7B,EAAOW,QACP,GAAG8Y,OAAOhQ,MAAMvH,EAAQ,CAAC,EAAG,GAAGsH,OAAO3H,IAEtC,GAAG4X,OAAOhQ,MAAMvH,EAAQ,CAAC+Z,EAAa,GAAGzS,OAAO3H,IAEpDoa,GAAepa,EAASD,OAG5BH,EAAQS,EAAO6Y,OACnB,CAEA,OAAO5Y,CACX,CAgCA,SAAS+Z,GAAkBC,GACvB,IAAI/U,EAAQ+U,EAAWtW,MAAM,KAC7B,OAAIuB,EAAMxF,OAAS,EACRwF,EAAM,GAAK,IAAMA,EAAM,GAE3B+U,CACX,CAEA,SAASC,GAAuBlT,EAAO5D,GACnC,IAEI+W,EAFA1a,EAAMuH,EAAMtH,OAAS,EACrBxF,EAAO8M,EAAMvH,GAajB,OAVA0a,EAaJ,SAAiC/W,EAAMtF,GACnC,IAAK,IAAI2B,EAAM,EAAGC,EAAS0D,EAAK1D,OAAQD,EAAMC,EAAQD,IAClD,GAAwC,IAApC3B,EAAOqB,QAAQiE,EAAK3D,GAAK8B,OACzB,OAAO6B,EAAK3D,GAGpB,OAAO,IACX,CApBqB2a,CAAwBhX,EAAMlJ,GAE3CigB,GAAkBA,EAAezW,IACjCxJ,EAAO,SAAWA,EAAO,aAAeigB,EAAe5Y,MAAQ,iCAAmC4Y,EAAezW,IAAM,IAEvHxJ,GAAQ,YAGZ8M,EAAMvH,GAAOvF,EAEN8M,CACX,CAWA,SAASqT,GAAUrT,GACf,IACIsT,EADAra,EAAS,cAcb,OAXI+G,EAAMtH,OAAS,GACf4a,EAAItT,EAAMpD,MACV3D,GAAUoa,GAAUrT,KAEpB/G,GAAU+G,EAAM6R,QAChByB,EAAItT,EAAMpD,OAGd3D,GAAU,MACVA,GAAUqa,EACVra,GAAU,IAEd,CAEA,SAASsa,GAAiB3a,EAASY,GAC/B,IAAIga,EAAM5a,EAAQX,MAAM,GAMxB,OAJIuB,EAASd,OAAS,GAClB8a,EAAIra,KAAK,IAAMsa,GAAaja,GAAU0G,KAAK,KAAO,KAG/CmT,GAAUG,EACrB,CAEA,SAASC,GAAaja,GAMlB,IALA,IAGI/B,EAHAgB,EAAM,EACNC,EAASc,EAASd,OAClBO,EAAS,GAGNR,EAAMC,EAAQD,IACjBhB,EAAU+B,EAASf,GACnBQ,EAAOE,KAAK1B,EAAQvE,OAASM,EAAciE,EAAQvE,KAAOuE,GAG9D,OAAOwB,CACX,CAEA,SAASd,GAAQjF,EAAMyO,GACnB,IAAIlJ,EAAKC,EAAQ4G,GAAS,EAE1B,IAAK7G,EAAM,EAAGC,EAASiJ,EAAMjJ,OAAQD,EAAMC,EAAQD,IAC/C,GAAIoB,GAAQ8H,EAAMlJ,MAAUvF,EAAM,CAC9BoM,EAAQ7G,EACR,KACJ,CAEJ,OAAO6G,CACX,CAEA,SAASzF,GAAQ3G,GAOb,OANAA,EAAOA,EAAKA,MAAQA,EAEQ,mBAAxBwB,EAASkD,KAAK1E,KACdA,EAAOA,EAAKA,EAAKwF,OAAS,IAGvBxF,CACX,CAEA,SAASqQ,GAAa3K,GAKlB,IAJA,IAAIF,EAASE,EAAQF,OACjBsH,EAAQ,GACRvH,EAAM,EAEHA,EAAMC,EAAQD,IACjBuH,EAAM7G,KAAKP,EAAQH,GAAKvF,KAAK,IAGjC,OAAO8M,CACX,CAEA,SAASwD,GAASxD,EAAOjC,GACrB,IAAI7K,EACAwgB,EAEA9Z,EACAnB,EAAM,EACNC,EAASsH,EAAMtH,OACfib,EAAa5V,EAAUrF,OAI3B,IAFAqF,EAAYA,EAAU9F,MAAM,GAErBQ,EAAMC,EAAQD,IAGjB,IAFAvF,EAAO8M,EAAMvH,GAERmB,EAAI,EAAGA,EAAI+Z,EAAY/Z,IAGxB,GAFA8Z,EAAWV,GAAkBjV,EAAUnE,KAEP,IAA5B1G,EAAKiF,QAAQub,GAAkB,CAC/B3V,EAAUnE,GAAK1G,EACf,KACJ,CAIR,MAAO,CACH8M,MAAOjC,EACPkC,YAAarG,EACbmG,WAAYhC,EAAU9F,MAAM,EAAG2B,EAAI,GAAGsG,KAAK,IAEnD,CAEA,SAASoD,GAAiB1K,GAetB,IAdA,IAGI9B,EAEA8C,EAAGga,EAIH1gB,EACAkX,EAEAzQ,EAZApD,EAAW,GACXsd,EAAQ,GACR5V,EAAO,GAIPxF,EAAM,EACNC,EAASE,EAAQF,OAOdD,EAAMC,EAAQD,IASjB,GAPAvF,GADA4D,EAAS8B,EAAQH,IACHvF,KACdyG,GAAQ,EAEoB,mBAAxBjF,EAASkD,KAAK1E,KACd4D,EAAO5D,KAAOA,EAAO,CAACA,IAGtBA,EAAKwF,OAAS,EACdmb,EAAM1a,KAAKrC,OACR,CAGH,IAFAsT,EAAgB4I,GAAkB9f,EAAK,IAElC0G,EAAI,EAAGga,EAAI3V,EAAKvF,OAAQkB,EAAIga,EAAGha,IAChC,GAA+C,IAA3CqE,EAAKrE,GAAG1G,KAAK,GAAGiF,QAAQiS,GAAsB,CAC9CzQ,GAAQ,EACR,KACJ,CAGCA,GACDsE,EAAK9E,KAAKrC,GAGVA,EAAOkB,QACPzB,EAAS4C,KAAKrC,EAEtB,CAKJ,MAAO,CACHmH,KAAMA,EACN1H,SAJJA,EAAWA,EAAS+J,OAAOuT,GAM/B,CAEA,SAASC,GAAiBlb,EAASY,EAAU4C,GACzC,IAeI6W,EAfArJ,EAAU,GAIVrT,EAAW+M,GAFf1K,EAAUA,GAAW,IAKjBmF,EAAYwF,GAFLhN,EAAS0H,MAGhB8V,EAAoB,GAIpBrb,GAFJnC,EAAWA,EAASA,UAEEmC,OAClBD,EAAM,EAGNuH,EAAQ,GAEZ,GAAIjC,EAAUrF,OAAS,GAAKc,EAASd,OAAS,EAAG,CAG7C,IAFAqb,EAAkB5a,KAAKoa,GAAiBxV,EAAWvE,IAE5Cf,EAAMC,EAAQD,IAEjBuH,EAAQwD,GADRyP,EAAaC,GAAuB3c,EAASkC,GAAKvF,KAAMkJ,GAC3B2B,GAAWiC,MAExC+T,EAAkB5a,KAAKoa,GAAiBvT,EAAOxG,IAGnDoQ,GAAWmK,EAAkB7T,KAAK,IACtC,KAAO,CACH,KAAOzH,EAAMC,EAAQD,IACjBwa,EAAaC,GAAuB3c,EAASkC,GAAKvF,KAAMkJ,GACxD4D,EAAM7G,KAAK8Z,EAAW,IAG1BrJ,GAAW7L,EAAUuC,OAAON,GAAOE,KAAK,IAC5C,CAEA,OAAO0J,CACX,CA1QA/D,GAAkBzG,OAAS,SAAS1B,GAGhC,IAAIsW,GAFJtW,EAAUA,GAAWA,EAAQvE,KAAO,CAAEnF,KAAM0J,GAAYA,IAE5B,CAAC,EACzB1J,EAAOggB,EAAWhgB,KAItB,GAFAggB,EAAWhgB,KAAOA,IAEZggB,aAAsBnO,KAAsBmO,aAAsBvgB,EAAMO,KAAKE,WAC/E,MAAM,IAAIgP,MAAM,2EAGpB,OAAO8Q,aAAsBnO,GAAoBmO,EAAa,IAAInO,GAAkBmO,EACxF,EAEAvJ,GAAgBrL,OAAS,SAAS1B,GAG9B,IAAIsW,GAFJtW,EAAUA,GAAWA,EAAQvE,KAAO,CAAEnF,KAAM0J,GAAYA,IAE5B,CAAC,EACzB1J,EAAOggB,EAAWhgB,KAItB,GAFAggB,EAAWhgB,KAAOA,IAEZggB,aAAsBvJ,KAAoBuJ,aAAsBvgB,EAAMO,KAAKE,WAC7E,MAAM,IAAIgP,MAAM,2EAGpB,OAAO8Q,aAAsBvJ,GAAkBuJ,EAAa,IAAIvJ,GAAgBuJ,EACpF,EAgPA,IAAIC,GAAwB,CACxBC,SAAU,sDACVC,eAAgB,kDAChBC,WAAY,4DACZC,SAAU,6DACVC,GAAI,6CACJC,IAAK,8CAGT,SAASC,GAAoBC,GACzB,IAAI7K,EAAU,GACVzS,EAAQsd,EAAWtd,MACnBoD,EAAQka,EAAWla,MACnBqJ,EAAW6Q,EAAW7Q,SAc1B,MAZgB,MAAZA,GACAgG,GAAW,IACXA,GAAWzS,EACXyS,GAAW,MAEXA,GAAuB,OAAZhG,GAAiC,kBAAZA,EAA+B,IAAM,GACrEgG,GAAW,UACXA,GAAWrP,EAAQ,WACnBqP,GAAWnW,EAAMqJ,OAAOmX,GAAsBrQ,GAAWrJ,EAAOpD,GAChEyS,GAAW,KAGRA,CACX,CAyBA,SAAS8K,GAAiBC,EAAejX,EAASkX,GAC9C,IAAI3b,EAAS,GAEb,GAAIyE,EAAS,CAET,IAAIvG,EACJ,IAAK,IAAInB,KAFTiD,GAAU,IAAM0b,EAAgB,IAEhBjX,EAAS,CACrBvG,EAAQuG,EAAQ1H,GAChB,IAAI6e,EAAW7e,EACX4e,IACAC,EAAWA,EAASC,QAAQ,yCAA0C,OAAOC,cAAcD,QAAQ,KAAM,KAE7G7b,GAAU,IAAM4b,EAAW,IAAM1d,EAAQ,KAAO0d,EAAW,GAC/D,CACA5b,GAAU,KAAO0b,EAAgB,GACrC,MACI1b,GAAU,IAAM0b,EAAgB,KAEpC,OAAO1b,CACX,CAEA,IAAI+b,GAAuB,CACvBxL,YAAa,iBACbC,eAAgB,oBAChBP,eAAgB,oBAChBG,iBAAkB,sBAClBC,kBAAmB,uBACnBC,aAAc,kBACdG,cAAe,mBACfP,WAAY,iBAGZ8L,GAAgB,CAChB3P,KAAM,SAAS5H,GACX,IAAIkM,EAAU,0JAEdA,GAAW,qBAEX,IAAIrH,EAAU7E,EAAQ6E,SAAW,GAC7B6B,EAAO1G,EAAQ0G,MAAQ,GAEvB5K,EAAWkE,EAAQlE,UAAY,GAC/BwK,EAA2C,SAAzBtG,EAAQuG,aAC1B7H,EAAOsB,EAAQtB,MAAQ,GA8C3B,OA5CKmG,EAAQ7J,QAAU0L,EAAK1L,UAAYc,EAASd,QAAWc,EAASd,QAAUsL,KAC3EzB,EAAU6B,EACVA,EAAO,GACPJ,GAAkB,GAGjBzB,EAAQ7J,QAAW0L,EAAK1L,SACzBsL,GAAkB,GAGlBzB,EAAQ7J,OACRkR,GAAWkK,GAAiBvR,EAAUyB,EAA6B,GAAXxK,EAAe4C,GAChE5C,EAASd,SAAWsL,IAC3B4F,GAAW6J,GAAaja,GAAU0G,KAAK,MAG3C0J,GAAW,8EAEPxF,EAAK1L,QAAWsL,GAAmBxK,EAASd,OAAS,KACrDkR,GAAW,gBAEPxF,EAAK1L,OACLkR,GAAWkK,GAAiB1P,EAAMJ,EAAkBxK,EAAW,GAAI4C,GAEnEwN,GAAW6J,GAAaja,GAAU0G,KAAK,KAG3C0J,GAAW,2EAGXlM,EAAQzB,QACR2N,GAAW,SACXA,GAAW,IACXA,GArGZ,SAA0B3N,EAAQ2J,GAC9B,IAAkBpG,EAGd/G,EAHAmR,EAAU,GACVjG,EAAU1H,EAAO0H,QACjBjL,EAASiL,EAAQjL,OAGrB,IAAKD,EAAMC,EAAS,EAAGD,GAAO,EAAGA,IAE7B+G,EAAU,WACVA,GAAWgV,GAAoB7Q,EAAQlL,IACvC+G,GAAW,SAIPoK,EAFAnR,GAAOC,EAAS,EAChB8G,GAAW,UAAYoG,EAAO,IAGpBpG,EAAU,WAAaoK,EAAU,KAInD,OAAOA,CACX,CAgFuBsL,CAAiBxX,EAAQzB,OAAQyB,EAAQiI,WAAWC,MAC/DgE,GAAW,KAEXA,GAAW,UAAYlM,EAAQiI,WAAWC,KAAO,IAG9B,GAAnBpM,EAASd,QAAe6J,EAAQ7J,SAChCkR,GAAW,WAAa6J,GAAaja,GAAU0G,KAAK,KAAO,MAG/D0J,GAAW,4DAA8DlM,EAAQiI,WAAWD,QAAU,uGACvFoP,QAAQ,MAAO,QAClC,EACAzP,SAAU,SAAS3H,GAGf,IAAIkM,EAAU,uIAcd,OAbAA,GAAW,iBAAmBoL,IAH9BtX,EAAUA,GAAW,CAAC,GAGqCkM,UAAYlM,EAAQkM,SAAW,iBAE1FA,GAAW,iBAAmB8K,GAAiB,kBAAmBhX,EAAQqM,cAAc,GAAQ,kBAE5FrM,EAAQiI,YAAcjI,EAAQiI,WAAWD,UACzChI,EAAQyX,WAAa5hB,EAAEuB,OAAO,CAAC,EAAG,CAC9BsgB,QAAS1X,EAAQiI,WAAWD,SAC7BhI,EAAQyX,aAGfvL,GAAW,eAAiB8K,GAAiB,eAAgBhX,EAAQyX,YAAc,gBAEnFvL,GAAW,+BAEf,GAGAyL,GAAgB5hB,EAAMO,KAAKshB,gBAAgBxgB,OAAO,CAClD2I,KAAM,SAASC,GACX,IAAI6X,EAAkB7X,EAEtBA,EAAUtC,KAAKsC,QAAU5I,GAAO,EAAM,CAAC,EAAGsG,KAAKsC,QAASA,GAExDjK,EAAMO,KAAKshB,gBAAgB1d,KAAKwD,KAAMsC,GAElC1I,EAAWugB,EAAgBlQ,UAC3BjK,KAAKiK,SAAWkQ,EAAgBlQ,SACW,iBAA7BkQ,EAAgBlQ,SAC9BjK,KAAKsC,QAAQ2H,SAAW,CACpBmQ,IAAKD,EAAgBlQ,UAEjBkQ,EAAgBlQ,WACxBjK,KAAKsC,QAAQ2H,SAAWjK,KAAKsC,QAAQ4H,KAE7C,EACAmQ,MAAO,SAAS/X,EAAS5F,GAIrB,OAHA4F,EAAQ1J,KAAO0J,EAAQ1J,MAAQ,CAAC,EAChCT,EAAEuB,QAAO,EAAM4I,EAAQ1J,KAAM,CAAE2R,WAAYvK,KAAKsC,QAAQiI,aAEjDlS,EAAMO,KAAKshB,gBAAgBjP,GAAGoP,MAAM7d,KAAKwD,KAAMsC,EAAS5F,EACnE,EACA4F,QAAS,CACL4H,KAAM,CACFoQ,SAAU,OACVC,YAAa,WACb7d,KAAM,QAEVuN,SAAU,CACNqQ,SAAU,OACVC,YAAa,WACb7d,KAAM,QAEV8d,aAAc,SAASlY,EAAS5F,GAC5B,OAAOmd,GAAcnd,GAAM4F,EAAQ5F,EACvC,GAGJuN,SAAU,SAAS3H,GACf,OAAOnK,EAAEsiB,KAAKza,KAAKqa,MAAM/X,EAAS,YACtC,IAGA8I,GAAkB1S,EAAMgB,OAAO,CAC/B2I,KAAM,SAASC,GACXA,EAAUtC,KAAKsC,QAAU5I,GAAO,EAAM,CAAC,EAAGsG,KAAKsC,QAASA,EAC5D,EACA+X,MAAO,SAAS/X,GACZ,OAAOnK,EAAEuB,QAAO,EAAM4I,GAAW,CAAC,EAAG,CAAEiI,WAAYvK,KAAKsC,QAAQiI,YACpE,EACAL,KAAM,SAAS5H,GACX,IACI+H,EACAmD,EAFAzN,EAAOC,KAIP0a,EAAe3a,EAAKsa,MAAM/X,EAAQ1J,KAAMkB,GAE5CuQ,EAAU/H,EAAQ+H,SAAWlS,EAAEwiB,KAC/BnN,EAAQlL,EAAQkL,OAASrV,EAAEwiB,KAEvBrY,EAAQkY,eACRE,EAAe3a,EAAKya,aAAaE,EAAc5gB,IAEnD,MAAM8gB,EAA8C,iBAAtB7a,EAAKuC,QAAQ4H,MAAqBnK,EAAKuC,QAAQ4H,KAAKkQ,IAAMra,EAAKuC,QAAQ4H,KAAO,CAAEkQ,IAAKra,EAAKuC,QAAQ4H,MAEhIlU,UAAU4kB,EAAgBF,GACzBG,KAAK5kB,iBACL4kB,MAAK,SAASxN,GACXhD,EAAQgD,EACZ,IACCyN,OAAM,SAASrN,GAAOD,EAAMC,EAAM,GACvC,EAEAnD,QAAS,SAAS9K,GACd,IAAI8C,EAAUtC,KAAKsC,SAAW,CAAC,EAE/B,GAAI9C,IAAQpH,EACR,OAAQkK,EAAQiI,YAAc,CAAC,GAAGD,QAItC,IAAIC,EAAajI,EAAQiI,YAAc,CAAC,EACxCA,EAAWD,QAAU9K,EAErBQ,KAAKsC,QAAQiI,WAAaA,EAC1BpS,EAAEuB,OAAOsG,KAAKgK,UAAU1H,QAAS,CAAEiI,WAAYA,GACnD,EACAC,KAAM,SAAShL,GACX,IAAI8C,EAAUtC,KAAKsC,SAAW,CAAC,EAE/B,GAAI9C,IAAQpH,EACR,OAAQkK,EAAQiI,YAAc,CAAC,GAAGC,KAGtC,IAAID,EAAajI,EAAQiI,YAAc,CAAC,EACxCA,EAAWC,KAAOhL,EAElBQ,KAAKsC,QAAQiI,WAAaA,EAC1B7Q,GAAO,EAAMsG,KAAKgK,UAAU1H,QAAS,CAAEiI,WAAYA,GACvD,EAEAN,SAAU,SAAS3H,GACf,OAAOpM,cAAc,CAAEkkB,IAAKpa,KAAKsC,QAAQ4H,MAAQ5H,EACrD,IAGJ,SAASyY,GAAQC,GACb,OAAc,MAAVA,EACO,GAIE,mBADF1hB,EAASkD,KAAKwe,GAEd,CAACA,GAGLA,CACX,CAEA,SAASC,GAAc9c,GAWnB,IAVA,IAAIN,EAAS,CAAED,OAAQ,IACnBA,EAASmd,GAAQ1iB,EAAM6G,OAAO,gBAAgB,EAA7B7G,CAAmC8F,IACpD+c,EAAgB7iB,EAAM6G,OAAO,oBAC7Bic,EAAc9iB,EAAM6G,OAAO,kBAC3Bkc,EAAkB/iB,EAAM6G,OAAO,kBAC/Bmc,EAAiBhjB,EAAM6G,OAAO,iBAC9Boc,EAAiBjjB,EAAM6G,OAAO,iCAAiC,GAC/Dqc,EAAkBljB,EAAM6G,OAAO,kBAC/Bsc,EAAmBnjB,EAAM6G,OAAO,+BAA+B,GAE1D7B,EAAM,EAAGA,EAAMO,EAAON,OAAQD,IAAO,CAG1C,IAFA,IAAIG,EAAU,GACV9B,EAASqf,GAAQnd,EAAOP,GAAKoe,QACxBhG,EAAY,EAAGA,EAAY/Z,EAAO4B,OAAQmY,IAC/CjY,EAAQO,KAAK,CACTR,SAAU,GACV5B,QAASuf,EAAcxf,EAAO+Z,IAC9B3d,KAAMqjB,EAAYzf,EAAO+Z,IACzBtS,UAAWiY,EAAgB1f,EAAO+Z,IAClCrS,SAAUiY,EAAe3f,EAAO+Z,IAChCpS,YAAakR,SAAS+G,EAAe5f,EAAO+Z,IAAa,IAAM,EAC/DnS,WAAYkY,EAAiB9f,EAAO+Z,IACpC/W,UAAW6c,EAAgB7f,EAAO+Z,MAI1C5X,EAAOD,OAAOG,KAAK,CAAEP,QAASA,GAClC,CACA,OAAOK,CACX,CAEA,IAAI6d,GAAsB,CACtB/Q,MAAO,CACH7S,KAAMO,EAAM6G,OAAO,sBAAsB,GACzCvD,QAAStD,EAAM6G,OAAO,yBAAyB,GAC/ClH,YAAaK,EAAM6G,OAAO,wBAAwB,GAClDxC,KAAMrE,EAAM6G,OAAO,sBAAsB,IAE7C0L,SAAU,CACN9S,KAAMO,EAAM6G,OAAO,yBAAyB,GAC5ClH,YAAaK,EAAM6G,OAAO,wBAAwB,IAEtDd,SAAU,CACNtG,KAAMO,EAAM6G,OAAO,yBAAyB,GAC5CvD,QAAStD,EAAM6G,OAAO,4BAA4B,GAClDgD,WAAY7J,EAAM6G,OAAO,gCAAgC,GACzDlH,YAAaK,EAAM6G,OAAO,wBAAwB,GAClD+H,WAAY5O,EAAM6G,OAAO,+BAA+B,GACxDyc,UAAWtjB,EAAM6G,OAAO,8BAA8B,GACtD0c,cAAevjB,EAAM6G,OAAO,mCAAmC,GAC/D2c,cAAexjB,EAAM6G,OAAO,kCAAkC,IAElE8O,KAAM,CACFlW,KAAMO,EAAM6G,OAAO,qBAAqB,GACxCvD,QAAStD,EAAM6G,OAAO,wBAAwB,GAC9CnD,MAAO1D,EAAM6G,OAAO,sBAAsB,GAC1C4c,KAAMzjB,EAAM6G,OAAO,qBAAqB,GACxCuP,OAAQpW,EAAM6G,OAAO,uBAAuB,GAC5C6c,MAAO1jB,EAAM6G,OAAO,sBAAsB,GAC1C8c,cAAe3jB,EAAM6G,OAAO,+BAA+B,GAC3D+c,aAAc5jB,EAAM6G,OAAO,8BAA8B,GACzDlH,YAAaK,EAAM6G,OAAO,4BAA4B,GACtDyc,UAAWtjB,EAAM6G,OAAO,8BAA8B,IAE1DqD,WAAY,CACRzK,KAAMO,EAAM6G,OAAO,2BAA2B,GAC9CvD,QAAStD,EAAM6G,OAAO,8BAA8B,GACpDlH,YAAaK,EAAM6G,OAAO,wBAAwB,GAClDgD,WAAY7J,EAAM6G,OAAO,kCAAkC,GAC3D0N,iBAAkBvU,EAAM6G,OAAO,8BAA8B,GAC7DxC,KAAMrE,EAAM6G,OAAO,2BAA2B,IAIlD2L,YAAa,CACT/S,KAAMO,EAAM6G,OAAO,2BAA2B,GAC9CvD,QAAStD,EAAM6G,OAAO,8BAA8B,GACpDlH,YAAaK,EAAM6G,OAAO,wBAAwB,GAClDgD,WAAY7J,EAAM6G,OAAO,kCAAkC,GAC3D6P,oBAAqB1W,EAAM6G,OAAO,kCAAkC,GACpE0c,cAAevjB,EAAM6G,OAAO,qCAAqC,GACjEiR,OAAQ9X,EAAM6G,OAAO,6BAA6B,GAClDgd,cAAe7jB,EAAM6G,OAAO,2BAA2B,IAE3D4L,OAAQ,CACJhT,KAAMO,EAAM6G,OAAO,uBAAuB,GAC1CvD,QAAStD,EAAM6G,OAAO,0BAA0B,GAChDlH,YAAaK,EAAM6G,OAAO,wBAAwB,GAClDgD,WAAY7J,EAAM6G,OAAO,8BAA8B,GACvD6P,oBAAqB1W,EAAM6G,OAAO,kCAAkC,GACpE0c,cAAevjB,EAAM6G,OAAO,iCAAiC,GAC7Did,iBAAkB9jB,EAAM6G,OAAO,oCAAoC,GACnEiR,OAAQ9X,EAAM6G,OAAO,yBAAyB,GAC9C+P,oBAAqB5W,EAAM6G,OAAO,kCAAkC,IAExE1B,QAAS,CACL1F,KAAMO,EAAM6G,OAAO,wBAAwB,GAC3CvD,QAAStD,EAAM6G,OAAO,2BAA2B,GACjDgD,WAAY7J,EAAM6G,OAAO,+BAA+B,GACxD6P,oBAAqB1W,EAAM6G,OAAO,kCAAkC,GACpE+P,oBAAqB5W,EAAM6G,OAAO,kCAAkC,GACpE8N,gBAAiB3U,EAAM6G,OAAO,8BAA8B,GAC5D+N,oBAAqB5U,EAAM6G,OAAO,iCAAiC,KAIvEkd,GAAoB,CAAC,OAAQ,WAAY,QAAS,aAAc,cAAe,SAAU,YAEzFC,GAAiBhkB,EAAMO,KAAK0jB,cAAc5iB,OAAO,CACjD2I,KAAM,SAASC,GACXjK,EAAMO,KAAK0jB,cAAc9f,KAAKwD,KAAMsC,GAEpCtC,KAAKuc,QAAQja,EACjB,EACAia,QAAS,SAASja,GAMd,IALA,IAEIka,EACAC,EAHApf,EAAM,EACNC,EAAS8e,GAAkB9e,OAIxBD,EAAMC,EAAQD,KAEjBof,EAASna,EADTka,EAAaJ,GAAkB/e,MAGjBof,IAAWljB,IACrByG,KAAKwc,GAAcC,EAG/B,EACAxe,MAAO,SAASye,GACZ,IAAI7e,EAASxF,EAAMO,KAAK0jB,cAAcrR,GAAGhN,MAAMye,EAAIhD,QAAQ,kBAAmB,QAC9E,OAAOrhB,EAAM6G,OAAO,wBAAwB,EAArC7G,CAA2CwF,EACtD,EACA8e,OAAQ,SAAS9Z,GACb,IAAI+Z,EAAQvkB,EAAM6G,OAAO,aAAa,EAA1B7G,CAAgCwK,GAC5C,OAAI+Z,EACO,CAAC,CACJC,YAAaxkB,EAAM6G,OAAO,wBAAwB,EAArC7G,CAA2CukB,GACxDE,UAAWzkB,EAAM6G,OAAO,sBAAsB,EAAnC7G,CAAyCukB,KAGrD,IACX,EACA9S,KAAM,SAASjH,GACXA,EAAOxK,EAAM6G,OAAO,kCAAoC,EAAjD7G,CAAuDwK,GAU9D,IARA,IACI1E,EADA2L,EAAOiR,GAAQ1iB,EAAM6G,OAAO,aAAa,EAA1B7G,CAAgCwK,IAG/ChF,EAAS,CACTsJ,QAAS,CAAC,EACV6B,KAAM,CAAC,GAGF3L,EAAM,EAAGA,EAAMyM,EAAKxM,OAAQD,IAGG,gBAFpCc,EAAO2L,EAAKzM,IAEH,SAASwK,gBACThK,EAAOsJ,QAAQvJ,OAGhBC,EAAOmL,KAAOiS,GAAc9c,GAF5BN,EAAOsJ,QAAU8T,GAAc9c,IAO3C,OAAON,CACX,EACAjF,KAAM,SAASiK,GACXA,EAAOxK,EAAM6G,OAAO,kCAAoC,EAAjD7G,CAAuDwK,GAS9D,IAPA,IAAIka,EAAQhC,GAAQ1iB,EAAM6G,OAAO,iBAAiB,EAA9B7G,CAAoCwK,IAEpDhF,EAAS,GACTmf,EAAgB3kB,EAAM6G,OAAO,oBAC7B+d,EAAc5kB,EAAM6G,OAAO,kBAC3Bge,EAAiB7kB,EAAM6G,OAAO,qBAEzB7B,EAAM,EAAGA,EAAM0f,EAAMzf,OAAQD,IAClCQ,EAAOE,KAAK,CACRhC,MAAOkhB,EAAYF,EAAM1f,IACzBnB,SAAUghB,EAAeH,EAAM1f,IAC/BqJ,QAAS6N,SAASyI,EAAcD,EAAM1f,IAAO,MAIrD,OAAOQ,CACX,EACAsf,WAAY,SAASta,EAAM+D,GACvB/D,EAAOxK,EAAM6G,OAAO,mCAAqC,EAAlD7G,CAAwDwK,GAK/D,IAJA,IAAImG,EAAO+R,GAAQ1iB,EAAM6G,OAAO,OAAO,EAApB7G,CAA0BwK,IAEzChF,EAAS,GAEJR,EAAM,EAAGA,EAAM2L,EAAK1L,OAAQD,IAAO,CACxC,IAAI+f,EAAM,CAAC,EACX,IAAK,IAAIxiB,KAAOgM,EACZwW,EAAIxiB,GAAOgM,EAAQhM,GAAKoO,EAAK3L,IAEjCQ,EAAOE,KAAKqf,EAChB,CAEA,OAAOvf,CACX,EACAO,SAAU,SAASyE,GACf,OAAO7C,KAAKmd,WAAWta,EAAM6Y,GAAoBtd,SACrD,EACA4P,KAAM,SAASnL,GACX,OAAO7C,KAAKmd,WAAWta,EAAM6Y,GAAoB1N,KACrD,EACAnD,YAAa,SAAShI,GAClB,OAAO7C,KAAKmd,WAAWta,EAAM6Y,GAAoB7Q,YACrD,EACAC,OAAQ,SAASjI,GACb,OAAO7C,KAAKmd,WAAWta,EAAM6Y,GAAoB5Q,OACrD,EACAvI,WAAY,SAASM,GACjB,OAAO7C,KAAKmd,WAAWta,EAAM6Y,GAAoBnZ,WACrD,EACAoI,MAAO,SAAS9H,GACZ,OAAO7C,KAAKmd,WAAWta,EAAM6Y,GAAoB/Q,MACrD,EACAC,SAAU,SAAS/H,GACf,OAAO7C,KAAKmd,WAAWta,EAAM6Y,GAAoB9Q,SACrD,EACApN,QAAS,SAASqF,GACd,OAAO7C,KAAKmd,WAAWta,EAAM6Y,GAAoBle,QACrD,IAGJ9D,GAAO,EAAMrB,EAAMO,KAAM,CACtByW,gBAAiBA,GACjB5E,kBAAmBA,GACnBwP,cAAeA,GACfoC,eAAgBA,GAChBja,iBAAkBA,GAClBib,WAAY,CACRC,KAAMrD,IAEVsD,QAAS,CACLD,KAAMjB,MAIb,IAcImB,GAAa,SAASC,EAAa3lB,GAGnC,IAFA,IAAI+F,EAAS,GAEJR,EAAM,EAAGC,EAASmgB,EAAYngB,OAAQD,EAAMC,EAAQD,IACrDogB,EAAYpgB,GAAK8B,QAAUrH,GAC3B+F,EAAOE,KAAK0f,EAAYpgB,IAIhC,OAAOQ,CACX,EAEAxF,EAAME,GAAGmlB,mBAAqB7kB,EAAOa,OAAO,CACxC2I,KAAM,SAASsb,EAASrb,GACpB,IAAIvC,EAAOC,KAWX,GATAnH,EAAOoS,GAAG5I,KAAK7F,KAAKuD,EAAM4d,EAASrb,GAEnCvC,EAAK4d,QAAQC,SAAS,mBAEtB7d,EAAK6Y,WAAavgB,EAAMO,KAAKyW,gBAAgBrL,OAAO1B,EAAQsW,YAE5D7Y,EAAK8d,gBAAkB9d,EAAK+d,QAAQ7b,KAAKlC,GACzCA,EAAK6Y,WAAW9B,MAAM/c,EAAQgG,EAAK8d,kBAE9Bvb,EAAQyb,SAAU,CACnB,IAAIC,EAAU,GAEVje,EAAKuC,QAAQ2b,UACbD,EAAU,gDAAgD3lB,EAAME,GAAG6C,KAAK,eAG5E2E,EAAKuC,QAAQyb,SAAYnlB,GACnB,mFAAmFP,EAAM6lB,WAAWtlB,EAAKd,MAAQc,6DAE5EA,EAAKd,MAAQc,+CAEZolB,EALV,gBAOtC,CAEAje,EAAKge,SAAW1lB,EAAM0lB,SAAShe,EAAKuC,QAAQyb,UAC5Che,EAAKoe,cAAgB9lB,EAAM0lB,SAAShe,EAAKuC,QAAQ6b,eAEjDpe,EAAKqe,YAELre,EAAK4d,QAAQU,GAAG,QAAU/jB,EAAI,sBAAuB,SAASmW,GAC1D,IAAIuC,EAAS7a,EAAEsY,EAAEuC,QAAQsL,QAAQ,kBAC7BC,EAASvL,EAAOsL,QAAQ,kBACxBxmB,EAAOkb,EAAOsL,QAAQ,IAAMjmB,EAAMmmB,KAAK,QAAU,KACnCA,KAAKnmB,EAAMmmB,KAAK,SAElC,GAAK1mB,EAIL,GAAIymB,EAAOE,SAAS,oBAChB1e,EAAK2e,OAAO5mB,QAIhB,KAAIkb,EAAOsL,QAAQ,mBAAmBhhB,OAAS,IAI3CyC,EAAKuC,QAAQqc,SAAU,CACvB,IAAIC,EAAgBzmB,EAAEsY,EAAEoO,eAAeP,QAAQ,kBAAkBQ,KAAK,+CAA+CxhB,OAAS,OAAS,MAEvIyC,EAAKiB,KAAK,CACN7B,MAAOrH,EACPwJ,IAAKsd,GAEb,CACJ,KAEItc,EAAQyc,YAAczc,EAAQqc,YAC9B5e,EAAKif,UAAY,IAAIzmB,EAAG0mB,eAAelf,EAAK4d,QAAS,CACjDuB,SAAUnf,EAAKuC,QAAQ4c,SAASF,UAChCne,OAAQ,uBACRke,WAAYzc,EAAQyc,WACpBJ,SAAUrc,EAAQqc,SAClB/F,WAAY7Y,EAAK6Y,cAIzB7Y,EAAK+d,SACT,EAEAxb,QAAS,CACLxK,KAAM,qBACNimB,SAAU,KACVgB,YAAY,EACZJ,UAAU,EACVR,cAAgBvlB,GAAS,wBAAwBA,UACjDumB,QAAS,UACTlB,SAAS,EACTiB,SAAU,CACNE,MAAO,qBAGfC,cAAe,SAASzG,GACpB5Y,KAAK4Y,WAAW0G,OAAOvlB,EAAQiG,KAAK6d,iBACpC7d,KAAK4Y,WAAa5Y,KAAKsC,QAAQsW,WAAaA,EAExC5Y,KAAKgf,WACLhf,KAAKgf,UAAUK,cAAczG,GAEjCA,EAAW9B,MAAM/c,EAAQiG,KAAK6d,iBAE9B7d,KAAK8d,SACT,EAEAM,UAAW,WACP,IAAIre,EAAOC,KAEPD,EAAKuC,QAAQ2b,UACbje,KAAK2e,SAAW3e,KAAK2d,QAAQ4B,cAAc,CACvCC,YAAaxf,KAAKsC,QAAQkd,YAC1BC,KAAM1f,EAAKuC,QAAQmd,KACnB5e,OAAQ,mBACR6e,OAAQ,OACRC,MAAO,SAASlP,GACZA,EAAE3P,KAAKK,QAAQ,SAASA,QAAQ,OACpC,EACAye,OAAQ,SAASnP,GACb,IAAI3Y,EAAO2Y,EAAE3P,KAAK0d,KAAKnmB,EAAMmmB,KAAK,SAElB,WAAZ/N,EAAE8N,OACFxe,EAAK8f,IAAI/nB,GACU,UAAZ2Y,EAAE8N,OACTxe,EAAK2e,OAAO5mB,GACO,QAAZ2Y,EAAE8N,QACTxe,EAAK+f,KAAKhoB,EAAM2Y,EAAEsP,SAE1B,IACDnnB,KAAK,iBAEhB,EAEAonB,OAAQ,SAASpnB,GACb,MAAqB,QAAdA,EAAK8D,MAAkB9D,EAAKyD,OACvC,EAEA4jB,SAAU,SAASrnB,GACf,IAAIsnB,EAA0B,GAAbtnB,EAAK8D,MAAa,eAAgB9D,GAAQoH,KAAKggB,OAAOpnB,GAEvE,GAAIsnB,EACA,MAAgC,aAAzBlgB,KAAKsC,QAAQ6c,QAGxB,GAA6B,aAAzBnf,KAAKsC,QAAQ6c,QACb,OAAOe,EAGX,IAAI3Z,EAAQvG,KAAK4Y,WAAW5Y,KAAKsC,QAAQ6c,WACrCrnB,EAAOc,EAAKgU,kBAAoBhU,EAAKsJ,WACzC,QAAInF,GAAQjF,EAAMyO,IAAU,MAKxBxJ,GAAQjF,EADZyO,EAAQvG,KAAK4Y,WAAoC,YAAzB5Y,KAAKsC,QAAQ6c,QAAwB,OAAS,eAC1C,EAKhC,EAEAU,IAAK,SAAS/nB,GACV,IAAIyO,EAAQvG,KAAK4Y,WAAW5Y,KAAKsC,QAAQ6c,WACrC9d,EAAI,EAIJmX,GAFJ1gB,EAAOqoB,MAAMC,QAAQtoB,GAAQA,EAAK+E,MAAM,GAAK,CAAC/E,IAEjCwF,OAEb,KAAO+D,EAAImX,IAC0B,IAA7Bzb,GAAQjF,EAAKuJ,GAAIkF,KACjBzO,EAAKqd,OAAO9T,EAAG,GACfA,GAAK,EACLmX,GAAK,GAETnX,IAGAvJ,EAAKwF,SACLiJ,EAAQA,EAAMrB,OAAOpN,GACrBkI,KAAK4Y,WAAW5Y,KAAKsC,QAAQ6c,SAAS5Y,GAE9C,EAEAuZ,KAAM,SAAShoB,EAAMoM,GACjB,IAAIqC,EAAQvG,KAAK4Y,WAAW5Y,KAAKsC,QAAQ6c,WACrC9hB,EAAMN,GAAQjF,EAAMyO,GAEpBlJ,GAAO,IACPvF,EAAOyO,EAAM4O,OAAO9X,EAAK,GAAG,GAE5BkJ,EAAM4O,OAAOjR,EAAO,EAAGpM,GAEvBkI,KAAK4Y,WAAW5Y,KAAKsC,QAAQ6c,SAAS5Y,GAE9C,EAEAmY,OAAQ,SAAS5mB,GACb,IAAIyO,EAAQvG,KAAK4Y,WAAW5Y,KAAKsC,QAAQ6c,WACrC9hB,EAAMN,GAAQjF,EAAMyO,GACpB8Z,EAAkBrgB,KAAK4Y,WAAW5X,OAClCH,EAASb,KAAK4Y,WAAW/X,SAEzBxD,GAAO,IACHwD,IACAA,EAAO0H,QAAUiV,GAAW3c,EAAO0H,QAASzQ,GAC5CkI,KAAK4Y,WAAWvQ,QAAQE,QAAU1H,EAAO0H,QACpC1H,EAAO0H,QAAQjL,SAChB0C,KAAK4Y,WAAWvQ,QAAU,OAG9BgY,IACAA,EAAkB7C,GAAW6C,EAAiBvoB,GAC9CkI,KAAK4Y,WAAW0H,MAAQD,GAE5B9Z,EAAM4O,OAAO9X,EAAK,GAClB2C,KAAK4Y,WAAW5Y,KAAKsC,QAAQ6c,SAAS5Y,GAE9C,EAEAvF,KAAM,SAASsH,GACX,IAAIqW,EAAW3e,KAAKsC,QAAQqc,SAExB4B,IAD2B,IAAb5B,GAAqBA,EAAS6B,cACL,QAAblY,EAAKhH,IAE/Bmc,EAAezd,KAAK4Y,WAAW5X,QAAU,GACzCnD,EAAS2f,GAAWC,EAAanV,EAAKnJ,OAEtCohB,GAAY9C,EAAYngB,SAAWO,EAAOP,SAC1CgL,EAAO,MAGPA,GACAzK,EAAOE,KAAKuK,GAGhBtI,KAAK4Y,WAAW5X,KAAKnD,EACzB,EAEAigB,QAAS,WACL,IAIIhd,EAJA2f,EAAO,GACPla,EAAQvG,KAAK4Y,WAAW5Y,KAAKsC,QAAQ6c,WACrC7hB,EAASiJ,EAAMjJ,OACfD,EAAM,EAGV,GAAIC,EACA,KAAOD,EAAMC,EAAQD,IAEjByD,GADAA,EAAOyF,EAAMlJ,IACDvF,OAASM,EAAc,CAAEN,KAAMgJ,GAASA,EAEpD2f,GAAQzgB,KAAK+d,SAASrkB,EAAO,CAAEgnB,SAAU1gB,KAAK2gB,UAAU7f,EAAKhJ,OAASgJ,SAG1E2f,EAAOzgB,KAAKme,cAAcne,KAAKsC,QAAQ4c,SAASE,OAGpDpf,KAAK2d,QAAQ8C,KAAKA,EACtB,EAEArW,QAAS,WACLvR,EAAOoS,GAAGb,QAAQ5N,KAAKwD,MAEvBA,KAAK4Y,WAAW0G,OAAOvlB,EAAQiG,KAAK6d,iBACpC7d,KAAK2d,QAAQiD,IAAItmB,GAEb0F,KAAK2e,UACL3e,KAAK2e,SAASvU,UAGdpK,KAAKgf,WACLhf,KAAKgf,UAAU5U,UAGnBpK,KAAK2d,QAAU,KACf3d,KAAK6d,gBAAkB,IAC3B,EAEA8C,UAAW,SAAS7oB,GAChB,IACIwQ,EA7SG,SAASmV,EAAa3lB,GACjC,IAAK2lB,EACD,OAAO,KAGX,IAAK,IAAIpgB,EAAM,EAAGC,EAASmgB,EAAYngB,OAAQD,EAAMC,EAAQD,IACzD,GAAIogB,EAAYpgB,GAAK8B,QAAUrH,EAC3B,OAAO2lB,EAAYpgB,GAI3B,OAAO,IACX,CAiSmBwjB,CADO7gB,KAAK4Y,WAAW5X,OACDvC,GAAQ3G,IACrCsD,EAAO,GAMX,OAJIkN,IACAlN,EAAO,QAAUkN,EAAKhH,KAGnBlG,CACX,IAGJ/C,EAAME,GAAGuoB,qBAAuBjoB,EAAOa,OAAO,CAC1C2I,KAAM,SAASsb,EAASrb,GACpB,IAAIvC,EAAOC,KAEXnH,EAAOoS,GAAG5I,KAAK7F,KAAKuD,EAAM4d,EAASrb,GAEnCvC,EAAK6Y,WAAavgB,EAAMO,KAAK6R,kBAAkBzG,OAAO1B,EAAQsW,YAE9D7Y,EAAK8d,gBAAkB9d,EAAK+d,QAAQ7b,KAAKlC,GACzCA,EAAK6Y,WAAW9B,MAAM/c,EAAQgG,EAAK8d,iBAEnC9d,EAAKge,SAAW1lB,EAAM0lB,SAAShe,EAAKuC,QAAQyb,UAE5Che,EAAKqe,YAELre,EAAK4d,QAAQU,GAAG,QAAU/jB,EAAI,mCAAmC,SAASmW,GACtE,IACIsQ,EADS5oB,EAAEsY,EAAEuC,QAAQsL,QAAQ,kBACbA,QAAQ,WACxBxmB,EAAOipB,EAAOjC,KAAK,iBAAiBkC,OAEnClpB,IAILiI,EAAK2e,OAAO5mB,GACZipB,EAAOrC,SACP3e,EAAKoB,QAAQ,SAAU,CAAErJ,KAAMA,IACnC,IAEIiI,EAAKuC,QAAQ2e,aACblhB,EAAK4d,QAAQU,GAAG,UAAY/jB,EAAI,WAAW,SAAS4mB,GAChD,IAAIC,EAAOhpB,EAAE+oB,EAAGlO,QACZpY,EAAMsmB,EAAGE,QACTtpB,EAAOqpB,EAAKrC,KAAK,iBAAiBkC,OAEtC,GAAIpmB,IAAQjB,EAAK0nB,QAAUzmB,IAAQjB,EAAK2nB,UAAW,CAC/C,MAAMjN,EAActU,EAAKuC,QAAQif,uBAAyBxhB,EAAKuC,QAAQif,uBAAuBC,SAASzkB,QAAQokB,EAAK,KAAO,EAE3H,GADAA,EAAKrC,KAAK,mCAAmC3d,QAAQ,UAChDpB,EAAKuC,QAAQif,uBACd,OAGJxhB,EAAKuC,QAAQif,uBAAuBE,aAChC1hB,EAAKuC,QAAQif,uBAAuBC,SAASnN,EAAc,GAEnE,MAAO,GAAIzZ,IAAQjB,EAAK+nB,MAAQR,EAAGS,OAC/BR,EAAKrC,KAAK,6CAA6C3d,QAAQ,cAC5D,GAAI+f,EAAGU,SAAWV,EAAGW,SACxB,GAAIjnB,GAAOjB,EAAKmoB,KAAM,CAGlB,GAFA/hB,EAAK+f,KAAKhoB,EAAMkc,KAAKjS,IAAI,EAAGof,EAAKjd,QAAU,KAEtCnE,EAAKuC,QAAQif,uBACd,OAGJxhB,EAAKuC,QAAQif,uBAAuBE,aAChC1hB,EAAK4d,QAAQmB,KAAK,yBACbje,QAAO,CAACkhB,EAAKC,IAAO7pB,EAAE6pB,GAAIhB,QAAUlpB,IACpCwmB,QAAQ,WAAW,GAEhC,MAAO,GAAI1jB,GAAOjB,EAAKsoB,MAAO,CAG1B,GAFAliB,EAAK+f,KAAKhoB,EAAMkc,KAAKlS,IAAIqf,EAAKjd,QAAU,EAAGid,EAAKJ,SAASjC,KAAK,aAAaxhB,OAAS,KAE/EyC,EAAKuC,QAAQif,uBACd,OAGJxhB,EAAKuC,QAAQif,uBAAuBE,aAChC1hB,EAAK4d,QAAQmB,KAAK,yBACbje,QAAO,CAACkhB,EAAKC,IAAO7pB,EAAE6pB,GAAIhB,QAAUlpB,IACpCwmB,QAAQ,WAAW,GAEhC,MAAO,GAAK1jB,GAAOjB,EAAKuoB,IAA8B,QAAxBniB,EAAKuC,QAAQ6c,SACtCvkB,GAAOjB,EAAK+nB,MAAgC,WAAxB3hB,EAAKuC,QAAQ6c,QAAuB,CAEzD,IAAIgD,EAAcpiB,EAAK4e,SAASrc,QAAQkd,YAAY5mB,KAAK,6BACzD,IAAKupB,EACD,OAKJ,GAFApiB,EAAK2e,OAAO5mB,GACZqqB,EAAYtC,IAAI/nB,IACXiI,EAAKuC,QAAQif,uBACd,OAGJxhB,EAAKuC,QAAQif,uBAAuBE,aAChCU,EAAYxE,QAAQmB,KAAK,WAAWpJ,OAAO,GAEnD,CAER,IAGJ3V,EAAKif,UAAY,IAAIzmB,EAAG6pB,iBAAiBriB,EAAK4d,QAAS,CACnDuB,SAAUnf,EAAKuC,QAAQ4c,SAASF,UAChCD,WAAYzc,EAAQyc,WACpBle,OAAQ,4CACR8d,SAAUrc,EAAQqc,SAClB/F,WAAY7Y,EAAK6Y,WACjBuG,QAAS7c,EAAQ6c,UAGrBpf,EAAK+d,SACT,EAEAuE,OAAQ,CAAC,UAET/f,QAAS,CACLxK,KAAM,uBACNimB,SAAU,KACVgB,YAAY,EACZJ,UAAU,EACVQ,QAAS,UACTlB,SAAS,EACTiB,SAAU,CACNE,MAAO,qBAGfC,cAAe,SAASzG,GACpB5Y,KAAK4Y,WAAW0G,OAAOvlB,EAAQiG,KAAK6d,iBACpC7d,KAAK4Y,WAAa5Y,KAAKsC,QAAQsW,WAAaA,EAExC5Y,KAAKgf,WACLhf,KAAKgf,UAAUK,cAAczG,GAEjCA,EAAW9B,MAAM/c,EAAQiG,KAAK6d,iBAE9B7d,KAAK8d,SACT,EAEAwE,YAAa,WACLtiB,KAAKuiB,aAAenqB,IACpB4H,KAAK4Y,WAAW0H,MAAQtgB,KAAKuiB,WAC7BviB,KAAKuiB,WAAanqB,GAGlB4H,KAAKwiB,eAAiBpqB,IACtB4H,KAAK4Y,WAAWvQ,QAAUrI,KAAKwiB,aAC/BxiB,KAAKwiB,aAAepqB,GAGxB4H,KAAK4Y,WAAW,IAAM5Y,KAAKsC,QAAQ6c,SAAoC,aAAzBnf,KAAKsC,QAAQ6c,QAAyB/iB,EAAkB4D,KAAKyiB,aAAe9lB,EAAiBqD,KAAKyiB,YACpJ,EAEAC,eAAgB,WACZ1iB,KAAKuiB,WAAanqB,EAClB4H,KAAKwiB,aAAepqB,EACpB4H,KAAKyiB,YAAcpqB,EAAMsqB,WAAW,GAAI3iB,KAAK4iB,eAC7C5iB,KAAK6iB,SACT,EAEAC,OAAQ,SAASC,EAAUC,GACvB,IAAIjjB,EAAOC,KAEX,IAAK+iB,EACD,OAAOhjB,EAAK0iB,aAAe,GAEtB1iB,EAAK0iB,cAAeO,IACrBjjB,EAAK6iB,cAAgBvqB,EAAMsqB,WAAW,GAAII,IAE9ChjB,EAAK0iB,YAAcpqB,EAAMsqB,WAAW,GAAII,EAEhD,EAEA3E,UAAW,WACP,IAAIre,EAAOC,KAEXA,KAAK2e,SAAW3e,KAAK2d,QAAQ4B,cAAc,CACvCC,YAAaxf,KAAKsC,QAAQkd,YAC1BC,KAAM1f,EAAKuC,QAAQmd,KACnB5e,OAAQ,mBACR6e,OAAQ,OACRC,MAAO,SAASlP,GACZA,EAAE3P,KAAKK,QAAQ,SAAS8hB,MAC5B,EACArD,OAAQ,SAASnP,GACb,IAAI3Y,EAAO2Y,EAAE3P,KAAKge,KAAK,iBAAiBkC,OAExB,WAAZvQ,EAAE8N,OACFxe,EAAK8f,IAAI/nB,GACU,UAAZ2Y,EAAE8N,OACTxe,EAAK2e,OAAO5mB,GACO,QAAZ2Y,EAAE8N,QACTxe,EAAK+f,KAAKhoB,EAAM2Y,EAAEsP,SAE1B,IACDnnB,KAAK,gBACZ,EAEAinB,IAAK,SAAS/nB,GACV,IAAIyO,EAAQvG,KAAK8iB,SACbzhB,EAAI,EAIJmX,GAFJ1gB,EAAOqoB,MAAMC,QAAQtoB,GAAQA,EAAK+E,MAAM,GAAK,CAAC/E,IAEjCwF,OACb,KAAO+D,EAAImX,IAC0B,IAA7Bzb,GAAQjF,EAAKuJ,GAAIkF,KACjBzO,EAAKqd,OAAO9T,EAAG,GACfA,GAAK,EACLmX,GAAK,GAETnX,IAGAvJ,EAAKwF,SACLiJ,EAAQA,EAAMrB,OAAOpN,GACrBkI,KAAK8iB,OAAOvc,GACZvG,KAAK6iB,UAEb,EAEA/C,KAAM,SAAShoB,EAAMoM,GACjB,IAAIqC,EAAQvG,KAAK8iB,SACbzlB,EAAMN,GAAQjF,EAAMyO,GAEpBlJ,GAAO,IACPvF,EAAOyO,EAAM4O,OAAO9X,EAAK,GAAG,GAE5BkJ,EAAM4O,OAAOjR,EAAO,EAAGpM,GAEvBkI,KAAK8iB,OAAOvc,GACZvG,KAAK6iB,UAEb,EAEAnE,OAAQ,SAAS5mB,GACb,IAAIyO,EAAQvG,KAAK8iB,SACbzlB,EAAMN,GAAQjF,EAAMyO,GACpB8Z,EAAkBrgB,KAAK4Y,WAAW5X,OAClCH,EAASb,KAAK4Y,WAAW/X,SAEzBxD,GAAO,IACHwD,IACAA,EAAO0H,QAAUiV,GAAW3c,EAAO0H,QAASzQ,GAC5CkI,KAAKkjB,aAAeljB,KAAK4Y,WAAWvQ,QACpCrI,KAAKkjB,aAAa3a,QAAU1H,EAAO0H,QAC9B1H,EAAO0H,QAAQjL,SAChB0C,KAAKkjB,aAAe,OAGxB7C,IACAA,EAAkB7C,GAAW6C,EAAiBvoB,GAC9CkI,KAAKuiB,WAAalC,GAEtB9Z,EAAM4O,OAAO9X,EAAK,GAClB2C,KAAK8iB,OAAOvc,GACZvG,KAAK6iB,UAEb,EAEAM,YAAa,SAASC,GAEdA,EADOpjB,KAEF2d,QAAQ8C,KAAKzgB,KAAKsC,QAAQ4c,SAASE,OACnCxB,SAAS,0BACTyF,YAAY,eAJVrjB,KAMF2d,QACA0F,YAAY,0BACZzF,SAAS,cAEtB,EAEAiF,QAAS,WACL,IAAItc,EAAQvG,KAAK8iB,UAAY,GAC7B9iB,KAAKmjB,aAAa5c,EAAMjJ,QACpBiJ,EAAMjJ,QACN0C,KAAK2d,QAAQ8C,KAAKzgB,KAAKsjB,aAAa/c,GAE5C,EAEA+c,aAAc,SAAS/c,GACnB,IAAIzF,EACA2f,EAAO,GACPpjB,EAAM,EAGV,GAAIkJ,EAAMjJ,OACN,KAAOD,EAAMkJ,EAAMjJ,OAAQD,IAEvByD,GADAA,EAAOyF,EAAMlJ,IACDvF,OAASM,EAAc,CAAEN,KAAMgJ,GAASA,EAEpD2f,GAAQzgB,KAAK+d,SAAS,CAAEjmB,KAAMgJ,EAAKhJ,KAAMyrB,YAPnC,OAUd,OAAO9C,CACX,EAEA3C,QAAS,WACL,IAAI9d,KAAK4Y,WAAWrL,gBAApB,CAGA,IAAIhH,EAAQvG,KAAK4Y,WAAW5Y,KAAKsC,QAAQ6c,WACzCnf,KAAK8iB,OAAOvc,GAAO,GACnBvG,KAAKmjB,aAAanjB,KAAK8iB,SAASxlB,QAC5BiJ,EAAMjJ,QACN0C,KAAK2d,QAAQ8C,KAAKzgB,KAAKsjB,aAAa/c,GALxC,CAOJ,EAEA6D,QAAS,WACLvR,EAAOoS,GAAGb,QAAQ5N,KAAKwD,MAEvBA,KAAK4Y,WAAW0G,OAAOvlB,EAAQiG,KAAK6d,iBACpC7d,KAAK2d,QAAQiD,IAAItmB,GAEb0F,KAAK2e,UACL3e,KAAK2e,SAASvU,UAGdpK,KAAKgf,WACLhf,KAAKgf,UAAU5U,UAGnBpK,KAAK2d,QAAU,KACf3d,KAAK6d,gBAAkB,IAC3B,IAGJ,IAAI2F,GAA0B3qB,EAAOa,OAAO,CACxC2I,KAAM,SAASsb,EAASrb,GACpB,IAAIvC,EAAOC,KACXnH,EAAOoS,GAAG5I,KAAK7F,KAAKuD,EAAM4d,EAASrb,GACnCvC,EAAK4d,QAAUxlB,EAAEwlB,GAEjB5d,EAAK0jB,WACL1jB,EAAK2jB,eACT,EAEAphB,QAAS,CACLxK,KAAM,0BACNkpB,KAAM,kBACN2C,aAAc,IAGlBvZ,QAAS,WACLpK,KAAK2d,QAAQiD,IAAItmB,EACrB,EAEAspB,WAAY,SAASthB,GAEjBjK,EAAMsqB,WADK3iB,KACWsC,QAASA,GAC/BtC,KAAKqC,KAAKrC,KAAK2d,QAAS3d,KAAKsC,QACjC,EAEAuhB,OAAQ,WACJ,IAIIC,EAJAtF,EAAOnmB,EAAMmmB,KAAK,QAClBuF,EAAU/jB,KAAK2d,QACdW,QAAQ,IAAME,EAAO,oBACrBM,KAAK,IAAMN,EAAO,iBAGvBrmB,EAAE,IAAM6H,KAAKsC,QAAQqhB,cAAcK,YAAY,YAE3CD,EAAQzmB,UACRwmB,EAAQC,EAAQE,uBACVC,mBACNJ,EAAMK,oBAEd,EAEAT,cAAe,WACX1jB,KAAK2d,QAAQU,GAAG,QAAU/jB,EAAI0F,KAAK6jB,OAAO5hB,KAAKjC,MACnD,EAEAyjB,SAAU,WACN,IAAInhB,EAAUtC,KAAKsC,QACnBtC,KAAK2d,QAAQC,SAAS,mCACtB5d,KAAK2d,QAAQ8C,KAAKpoB,EAAMqJ,OAAO,sBAAsBY,EAAQ0e,KAAM3oB,EAAME,GAAG6C,KAAK,SACrF,IAGAgpB,GAAiBvrB,EAAOa,OAAO,CAC/B2I,KAAM,SAASsb,EAASrb,GACpB,IAAIvC,EAAOC,KACXnH,EAAOoS,GAAG5I,KAAK7F,KAAKuD,EAAM4d,EAASrb,GACnCvC,EAAK4d,QAAUxlB,EAAEwlB,GACjB5d,EAAKuC,QAAUA,EAGfvC,EAAKskB,aACT,EAEA/hB,QAAS,CACLxK,KAAM,iBACNwsB,qBAAsB,QAG1BV,WAAY,SAASthB,GAEjBjK,EAAMsqB,WADK3iB,KACWsC,QAASA,GAC/BtC,KAAKqC,KAAKrC,KAAK2d,QAAS3d,KAAKsC,QACjC,EAEA+hB,YAAa,WACT,IACIE,EADAjiB,EAAUtC,KAAKsC,QAInB,OAFAtC,KAAK2d,QAAQ0F,YAAY,qEAEjB/gB,EAAQgiB,sBACZ,IAAK,QAYL,QACIC,EAAY,mBAVhB,IAAK,OACDA,EAAY,qBACZ,MACJ,IAAK,SACDA,EAAY,gBACZ,MACJ,IAAK,MACDA,EAAY,wBAMpBvkB,KAAK2d,QACAC,SAAS,2BACTA,SAAS2G,EAClB,IAGAC,GAAc3rB,EAAOa,OAAO,CAC5B2I,KAAM,SAASsb,EAASrb,GACpB,IAAIvC,EAAOC,KAEXnH,EAAOoS,GAAG5I,KAAK7F,KAAKuD,EAAM4d,EAASrb,GAEnCvC,EAAK0kB,cAEL1kB,EAAK2kB,oBAEL3kB,EAAK4kB,QAAU5kB,EAAK4d,QAAQa,KAAK,OAASnmB,EAAMusB,OAChD7kB,EAAK8kB,WAEL9kB,EAAK+kB,sBAAwB3sB,EAAE,kDAC/B4H,EAAKglB,mBAAqB5sB,EAAE,+CAC5B4H,EAAKilB,gBAAkB7sB,EAAE,0CAEzB4H,EAAKklB,QAAQC,OAAOnlB,EAAK+kB,uBACzB/kB,EAAKklB,QAAQC,OAAOnlB,EAAKglB,oBACzBhlB,EAAKklB,QAAQC,OAAOnlB,EAAKilB,iBAEzBjlB,EAAKolB,eAAiB,IAAIC,GAAkB,CAAErH,SAAU/d,KAAKsC,QAAQ+iB,qBAAsBvb,KAAM,UAAWwb,OAAQvlB,EAAK4kB,UACzH5kB,EAAKwlB,YAAc,IAAIH,GAAkB,CAAErH,SAAU/d,KAAKsC,QAAQkjB,kBAAmB1b,KAAM,OAAQwb,OAAQvlB,EAAK4kB,UAChH5kB,EAAK0lB,gBAAkB,IAAIC,GAAkB,CACzCC,iBAAkB3lB,KAAKsC,QAAQqjB,kBAAoB1pB,EACnD2pB,kBAAmB5lB,KAAKsC,QAAQsjB,mBAAqB/pB,EACrDgqB,iBAAkB7lB,KAAKsC,QAAQujB,kBAAoB7pB,EACnDoC,SAAU4B,KAAK4Y,WAAWnN,UAC1B6Z,OAAQvlB,EAAK4kB,UAGjB5kB,EAAK+lB,cACL/lB,EAAKglB,mBACAlF,IAAI9f,EAAK+kB,uBACTzG,GAAG,QAAS,+BAA+B,WACxC,IAAI0H,EAAS5tB,EAAE6H,MACXsH,EAAOye,EAAOhF,SAASvC,KAAKnmB,EAAMmmB,KAAK,QACvCrjB,EAAW4qB,EAAOC,GAAG,uCACrBC,EAA8D,IAAtDF,EAAOzH,QAAQ,4BAA4BhhB,OACnD4oB,EAAQ5e,EAAK/F,MAAM,KACnB4kB,EAAYhrB,EAAWE,EAAiBX,EAE5C,IAAIqF,EAAKoB,QAAQglB,EAAW,CAAE7e,KAAM4e,EAAO/nB,KAAM8nB,EAAQ,OAAS,YAAlE,CAIA,IAAIG,EAAiB,CACjB1pB,KAAM,wBACN2pB,QAASH,EACTI,KAAML,EAAQlmB,EAAKwlB,YAAYgB,UAAYxmB,EAAKolB,eAAeoB,WAE/DC,EAAcP,EAAQlmB,EAAK6Y,WAAWtN,MAAQvL,EAAK6Y,WAAWvN,SAC9Dob,EAAatwB,eAAeqwB,EAAaJ,GAE7CrmB,EAAK6Y,WAAWrL,iBAAkB,EAClCxN,EAAKolB,eAAeuB,YAAc,CAAC,EACnC3mB,EAAKwlB,YAAYmB,YAAc,CAAC,EAE5BT,EACAlmB,EAAK6Y,WAAW5P,KAAKyd,GAErB1mB,EAAK6Y,WAAWzR,QAAQsf,EAjB5B,CAmBH,IAED1mB,EAAKuC,QAAQqkB,UACb5mB,EAAK6Y,WAAW3M,QAGpBlM,EAAK6mB,QAED7mB,EAAKuC,QAAQ2e,aACblhB,EAAK8mB,2BAGT9mB,EAAK+mB,cAELzuB,EAAM0uB,OAAOhnB,EACjB,EAEAsiB,OAAQ,CACJ7nB,EACAC,EACAC,EACAW,GAGJiH,QAAS,CACLxK,KAAM,cACN6uB,UAAU,EACVK,OAAQ,KACRC,YAAa,KACbtD,aAAc,GACd0B,qBAAsB,KACtBG,kBAAmB,KACnBG,iBAAkB,KAClBC,kBAAmB,KACnBC,iBAAkB,KAClB3G,SAAU,CACNgI,eAAgB,yBAIxB9c,QAAS,WACL,IAAIrK,EAAOC,KACXnH,EAAOoS,GAAGb,QAAQ5N,KAAKuD,GAEnBA,EAAKonB,QACLpnB,EAAKonB,OAAO/c,UAGZrK,EAAKqnB,uBACLjvB,EAAEG,QAAQsoB,IAAI/mB,EAASS,EAAIyF,EAAKqnB,sBAChCrnB,EAAKqnB,qBAAuB,KAEpC,EAEAR,MAAO,WACQ5mB,KACN2d,QAAQa,KAAK,OAAQ,OAC9B,EAEAa,cAAe,SAASzG,GACpB5Y,KAAKsC,QAAQsW,WAAaA,EAE1B5Y,KAAKykB,cAELzkB,KAAK0kB,oBAED1kB,KAAKsC,QAAQqkB,UACb/N,EAAW3M,OAEnB,EAEA6a,YAAa,SAASxkB,GAClB,IAAIvC,EAAOC,KACPqnB,EAAiB,CACbC,KAAM,SACNpI,SAAU,CAAEqI,UAAW,iBAE/BF,EAAiBlvB,EAAEuB,OAAO,CAAC,EAAG2tB,EAAgB/kB,GAE9C,MAAM6kB,EAAShvB,EAAE,eAAeqvB,YAAYH,GAAgBzuB,KAAK,eAEjEmH,EAAKonB,OAASA,EACdpnB,EAAK0nB,iBAAmB9vB,mBAAmBsK,KAAKlC,EACpD,EAGA8mB,yBAA0B,WACtB,IAAI9mB,EAAOC,KAEXD,EAAK2nB,WAAa,IAAItxB,oBAAoB,CAAEuxB,SAAU,IACtD5nB,EAAK2nB,WAAWE,eAAeC,QAAQruB,EAAI,SAASsuB,EAASC,EAAKC,GAC9D,IAAKD,EAAIllB,KACL,OAIJ,IAAIolB,EAAOF,EAAIllB,KAAKqlB,mBACdD,GAAQA,aAAgBE,cAGzBF,EAAKG,QAAQ,yCACdH,EAAOA,EAAKC,oBAEZD,GAAQA,aAAgBE,aAAeF,EAAKG,QAAQ,yCAC/CL,EAAIllB,KAAKwlB,aAAcN,EAAIllB,KAAKwlB,WAAWC,cAAc,uCAC1DL,EAAKM,QAETC,YAAW,KACP,GAAIT,EAAIllB,KAAKwlB,WAAY,CACrB,MAAMI,EAAaV,EAAIllB,KAAKwlB,WAAWC,cAAc,sFACjDG,aAAsBN,cACtBM,EAAWC,aAAa,WAAYC,OAAOZ,EAAIJ,WAC/Cc,EAAWG,QAEnB,IACD,IAEX,EACA7oB,EAAK2nB,WAAW/H,MAAM5f,EAAK4d,QAAQ,IAEnC,MAAMkL,EAAY9oB,EAAK2nB,WAAW5Q,MAE9B+R,GACAA,EAAUH,aAAa,WAAY,IAE3C,EAEAI,qBAAsB,SAAS7D,GAC3B,IAAIllB,EAAOC,KACX,MAAM+oB,EAAgB9D,EAAQ+D,iBAC1B,6CAEEC,EAAiBF,EAAc,GAAU5I,MAAM+I,KAAKH,EAAc,GAAGxrB,UAAU4rB,QACjF,CAACC,EAAKC,IAAUD,GAAwC,OAAjCC,EAAKC,aAAa,YAAuBD,EAAKC,aAAa,WAAa,IAC/F,GAFsC,GAIpCC,EAAgBtE,EAAQ+D,iBAC1B,kCAEEQ,EAAiBvE,EAAQ+D,iBAC3B,kCAEES,EAAkBxE,EAAQ+D,iBAAiB,0BAC3CU,EAAYzE,EAAQqD,cAAc,2BAExCoB,EAAUhB,aAAa,eAAgBa,EAAcjsB,OAAOhE,YAC5DowB,EAAUhB,aAAa,eAAgBO,EAAc3vB,YAErD,MAAMqwB,EAAqBJ,EAAc,GACnCK,EAA6BD,EAA0BxJ,MAAM+I,KAAKS,EAAmBpsB,UACtF9D,KAAIuoB,GAAMA,EAAGsH,aAAa,QAC1BxkB,KAAK,KAF8C,GAGpD6kB,GACAA,EAAmBjB,aACf,YACA,GAAGgB,EAAUJ,aAAa,SAASM,KAI3Cb,EAAcc,SAAQ,CAAC9jB,EAAK7B,KACxB,MAAM4lB,EAAgB/pB,EAAKgqB,aACvB5J,MAAM+I,KAAKO,IACXO,IACI,MAAMC,EAAUD,EAAEV,aAAa,MAAM/nB,MAAM,KAC3C,OAAO0oB,EAAQA,EAAQ3sB,OAAS,MAAQ4G,EAAQ,GAAG5K,UAAU,IAEjE0wB,GAAKA,EAAEV,aAAa,QAGxBvjB,EAAI2iB,aAAa,YAAaoB,EAAchlB,KAAK,KAAK,IAG1D2kB,EAAgBI,SAAQK,IACpB,MAAMD,EAAUC,EAAKZ,aAAa,MAAM/nB,MAAM,KACxC4oB,GAAgBF,EAAQA,EAAQ3sB,OAAS,GACzC8sB,EAAoBrqB,EAAKgqB,aAC3B5J,MAAM+I,KAAKM,IACXQ,IACI,MAAMC,EAAUD,EAAEV,aAAa,MAAM/nB,MAAM,KACrC8oB,GAAsBJ,EAAQA,EAAQ3sB,OAAS,GAC/CgtB,GAAqBN,EAAEV,aAAa,WAO1C,OANwBa,IAAiBE,GAErCC,EAAoB,GACpBD,EAAqBF,GACrBE,EAAqBC,EAAoB,GAAKH,CAEW,IAEjEH,GAAKA,EAAEV,aAAa,QAGxBY,EAAKxB,aAAa,mBAAoB0B,EAAkBtlB,KAAK,KAAK,GAE1E,EAEAilB,aAAc,SAASQ,EAAKC,EAAWC,GACnC,OAAOF,EAAIpB,QACP,CAACC,EAAKC,IAAUmB,EAAUnB,GAAQ,IAAID,EAAKqB,EAAOpB,IAASD,GAC3D,GAER,EAEA3E,YAAa,WACT,IAAI1kB,EAAOC,KACP4Y,EAAa7Y,EAAKuC,QAAQsW,WAE9BA,EAAauH,MAAMC,QAAQxH,GAAc,CAAEhgB,KAAMggB,GAAeA,EAE5D7Y,EAAK6Y,YAAc5Y,KAAK6d,gBACxB9d,EAAK6Y,WAAW0G,OAAOvlB,EAAQgG,EAAK8d,iBACpByB,OAAOrlB,EAAU8F,EAAK2qB,kBACtBpL,OAAOtlB,EAAO+F,EAAK4qB,gBAEnC5qB,EAAK8d,gBAAkB9d,EAAK+d,QAAQ7b,KAAKlC,GACzCA,EAAK2qB,iBAAmB3qB,EAAK6qB,cAAc3oB,KAAKlC,GAChDA,EAAK4qB,cAAgB5qB,EAAK8qB,OAAO5oB,KAAKlC,IAG1CA,EAAK6Y,WAAavgB,EAAMO,KAAK6R,kBAAkBzG,OAAO4U,GAC9B3W,KAAKlI,EAAQgG,EAAK8d,iBAClB5b,KAAKhI,EAAU8F,EAAK2qB,kBACpBzoB,KAAKjI,EAAO+F,EAAK4qB,cAC7C,EAEAG,QAAS,WACL,IA3oJAC,EADAC,EA4oJWhrB,KACNilB,QAAQ,GAAGgG,MAAMC,YAAY,0BAA2B7yB,EAAMqJ,OAAO,SA7oJ1EspB,EAAY,EAEZG,UAAYA,SAASC,iBACrBL,EAAMI,SAASC,cAAc,QAEzBH,MAAMI,QAAU,oEACpBN,EAAIO,UAAY,SAChBH,SAASI,KAAKC,YAAYT,GAE1BC,EAAYD,EAAIU,YAAcV,EAAIW,YAElCP,SAASI,KAAKI,YAAYZ,IAGvBC,IAgoJP,EAEAlF,YAAa,WACT,IAAI/lB,EAAOC,KACP4rB,EAAgB7rB,EAAK+kB,sBACrB+G,EAAa9rB,EAAKglB,mBAEtBhlB,EAAK+qB,UACL/qB,EAAKqnB,qBAAuBrnB,EAAK+qB,QAAQ7oB,KAAKlC,GAE9CA,EAAKilB,gBAAgB8G,QAAO,WACxBzzB,EAAM0zB,WAAWH,EAAe5rB,KAAK+rB,YACrCF,EAAWG,UAAUhsB,KAAKgsB,UAC9B,IAEAH,EAAW5pB,KAAK,iBAAmB3H,EAAK,cAAgBA,EAAIyF,EAAKksB,aAAahqB,KAAKlC,IACnF5H,EAAEG,QAAQ+lB,GAAGxkB,EAASS,EAAIyF,EAAKqnB,qBACnC,EAEA6E,aAAc,SAASxb,GACnB,IAAIA,EAAEmR,QAAN,CAIA,IAAIsK,EAAQ7zB,EAAM8zB,YAAY1b,GAC1Bub,EAAYhsB,KAAKglB,gBAAgBgH,YAEjCE,IACAzb,EAAE2b,iBACFj0B,EAAEsY,EAAEoO,eAAewN,IAAI,QAAU/xB,GAAI,GAErC0F,KAAK+kB,mBAAmBiH,UAAUA,GAAcE,GAChDlsB,KAAKglB,gBAAgBgH,UAAUA,GAAcE,GAVjD,CAYJ,EAEArH,SAAU,WACN,IAAImC,EAAShnB,KAAKsC,QAAQ0kB,OAE1BhnB,KAAKilB,QAAUjlB,KAAK2d,QAAQC,SAAS,eACrC,IAAI8L,EAAYvxB,EAAE,4CAA4C6H,KAAK2kB,mEAAmE3kB,KAAKsC,QAAQ4c,SAASgI,gCAC5JlnB,KAAKilB,QAAQC,OAAOwE,GAEhB1C,GACAhnB,KAAKilB,QAAQqH,IAAI,SAAUtF,EAEnC,EAEAuF,UAAW,SAAS1I,GACZ7jB,KAAKwsB,UACLxsB,KAAKynB,iBAAiB5D,EAAQ,CAAE4I,QAAS,iBAEzCp0B,EAAME,GAAGm0B,SAAS1sB,KAAKilB,QAASpB,EAExC,EAEAgH,OAAQ,WACJ7qB,KAAKusB,WAAU,EACnB,EAEA3B,cAAe,WACX5qB,KAAKusB,WAAU,EACnB,EAEApI,kBAAmB,WACf,IAAIpkB,EAAOC,KACXD,EAAKklB,QAAQqH,IAAI,CACb,wBAAyBj0B,EAAMqJ,OAAO,YAAa3B,EAAKglB,mBAAmBjG,KAAK,sBAAsB,GAAG2M,aACzG,qBAAsBpzB,EAAMqJ,OAAO,YAAa3B,EAAK+kB,sBAAsBhG,KAAK,sBAAsB,GAAG6N,eAEjH,EAEAzI,iBAAkB,WACd,GAAKlkB,KAAKsC,QAAQ2kB,YAAlB,CAGA,IAAI2F,EAAe5sB,KAAKglB,gBAAgBlG,KAAK,SACzC+N,EAAc7sB,KAAK8kB,sBAAsBvnB,SAAS,SAClDuvB,EAAW9sB,KAAK+kB,mBAAmBxnB,SAAS,SAEhDqvB,EAAa/M,IAAIgN,GAAahN,IAAIiN,GAAUhO,KAAK,OAAOiO,MAAM/sB,KAAKsC,QAAQ2kB,YAL3E,CAMJ,EAEAvC,kBAAmB,WACf,IAAIf,EAAe3jB,KAAKsC,QAAQqhB,aAC5BA,GACAxrB,EAAEwrB,GAAcqJ,yBAAyB,gBAAiBhtB,KAAK4Y,WAEvE,EAEAqU,kBAAmB,SAAStP,GAGxB,OAFAA,EAAUxlB,EAAEwlB,GAEL3d,KAAKktB,SAASvP,EAAQzZ,QAASyZ,EAAQoD,OAAO,MAAM7c,QAC/D,EAEAgpB,SAAU,SAAS3lB,EAAaoM,GAC5B,IACIC,EACA9X,EAFAqxB,EAAiBntB,KAAKylB,gBAI1B,OAAIle,GAAe4lB,EAAeC,cAAgB7lB,EAAc,GAC5DoM,GAAYwZ,EAAeE,WAAa1Z,EAAW,EAC5C,MAGXC,EAAYD,EAAWwZ,EAAeC,aAAe7lB,EAG9C,CACH+lB,aAHJxxB,EAAWqxB,EAAeI,KAAK3Z,EAAY,EAAI,EAAIA,IAGzB0Z,YACtBE,SAAU1xB,EAAS0xB,SACnB1xB,SAAUA,EAASlD,MAE3B,EAEAklB,QAAS,WACL,IAAI/d,EAAOC,KAEP4Y,EAAa7Y,EAAK6Y,WACtB,IAAI7Y,EAAKoB,QAAQ3G,EAAa,CAAE+jB,OAAQ,WAAxC,CAIA,IAAIkP,EAAoBp1B,EAAMq1B,iBAAmBr1B,EAAMq1B,iBAAiB71B,GAAK,KACzE81B,EAAyB5tB,EAAKklB,QAAQnG,KAAK,gBAAgBN,KAAK,MA0BpE,GAzBAze,EAAKolB,eAAeyI,UAAUhV,EAAW1J,eACzCnP,EAAK+kB,sBAAsBrE,KAAK1gB,EAAKolB,eAAe0I,SAEpD9tB,EAAKwlB,YAAYqI,UAAUhV,EAAWzJ,YACtCpP,EAAKglB,mBAAmBtE,KAAK1gB,EAAKwlB,YAAYsI,SAE9C9tB,EAAK0lB,gBAAgBqI,iBAAiB,CAClCC,kBAAmBhuB,EAAKolB,eAAe6I,iBACvCC,eAAgBluB,EAAKwlB,YAAYyI,iBACjCE,oBAAqBnuB,EAAKolB,eAAegJ,aACzCC,eAAgBruB,EAAKwlB,YAAY4I,aACjCv1B,KAAMggB,EAAWxJ,QAGrBrP,EAAKilB,gBAAgBvE,KAAK1gB,EAAK0lB,gBAAgBoI,SAG/C9tB,EAAKmkB,mBACLnkB,EAAKokB,oBAELpkB,EAAKwsB,WAAU,GAEfxsB,EAAKoB,QAAQ1G,GACbsF,EAAK+oB,qBAAqB/oB,EAAKklB,QAAQ,IAElCllB,EAAK2nB,WAAV,CAIA,GAAIiG,GAA0B5tB,EAAK4d,QAAQmB,KAAK,IAAI6O,KAA0BrwB,OAAS,EACnFyC,EAAK4d,QAAQmB,KAAK,IAAI6O,KAA0BnP,KAAK,WAAY,SAC9D,CACH,MAAMqK,EAAY9oB,EAAK2nB,WAAW5Q,MAE9B+R,GACAA,EAAUH,aAAa,WAAY,IAE3C,CAEI+E,GAAgE,GAA3CA,EAAkB1wB,QAAQgD,EAAK4kB,UACpD5kB,EAAK2nB,WAAWjG,aAAa1hB,EAAK4d,QAAQmB,KAAK,IAAI2O,KAAqB,GAb5E,CA/BA,CA8CJ,IAGJl1B,EAAG81B,OAAO7K,IACVjrB,EAAG81B,OAAOjK,IACV7rB,EAAG81B,OAAO7J,IAEV,IAAI8J,GAAYz1B,EAAOa,OAAO,CAC1B2I,KAAM,SAASsb,EAASrb,GACpB,IACIisB,EACAC,EAFAzuB,EAAOC,KAIXnH,EAAOoS,GAAG5I,KAAK7F,KAAKuD,EAAM4d,EAASrb,GAEnC9G,EAA2BnD,EAAMo2B,QAAQC,MAAM3uB,EAAK4d,SAAW,iBAAmB,kBAElF5d,EAAK0kB,cAEL1kB,EAAK2kB,oBAEL3kB,EAAK8kB,WACL9kB,EAAK4uB,gBAEL5uB,EAAKolB,eAAiBoJ,EAAgB,IAAIK,GAC1C7uB,EAAKwlB,YAAciJ,EAAa,IAAIK,GACpC9uB,EAAK0lB,gBAAkB,IAAIqJ,GAE3B/uB,EAAKgvB,aAELhvB,EAAK6rB,cACA/L,IAAI9f,EAAK8rB,YACTxN,GAAG,QAAS,+BAA+B,WACxC,IAGI8H,EAHAJ,EAAS5tB,EAAE6H,MACXgvB,EAAUT,EACVhQ,EAAS,eAETjX,EAAOye,EAAOvH,KAAKnmB,EAAMmmB,KAAK,SAC9ByQ,EAAY,CACZ9wB,KAAM,UACNmJ,KAAMtJ,KAAKC,MAAMqJ,IAGjBye,EAAOhF,SAASiF,GAAG,QACnBgJ,EAAUR,EACVjQ,EAAS,YACT0Q,EAAU9wB,KAAO,QAGrB,IAAIhD,EAAW4qB,EAAOC,GAAGzqB,GACrBwa,EAAWiZ,EAAQjZ,SAASzO,GAC5B4nB,EAAUnZ,EAAS5a,WAAa/C,EAEpC+tB,EAAYhrB,EAAWE,EAAiBX,EACxCu0B,EAAUE,eAAiBpZ,EAASqZ,YAAcrZ,EAASxY,SAEvDwC,EAAKoB,QAAQglB,EAAW8I,KAI5BD,EAAQjZ,SAASzO,GAAMnM,UAAYA,EACnC9C,EAAME,GAAG6C,KAAK2qB,EAAO,CAAE3qB,KAAOD,EAAqCK,EAA1BF,KAEpCH,GAAY+zB,EACbnvB,EAAK6Y,WAAW2F,GAAQ0Q,EAAU3nB,MAElCvH,EAAK+d,UAEb,IAEJ/d,EAAK+lB,cAED/lB,EAAKuC,QAAQqkB,UACb5mB,EAAK6Y,WAAW3M,QAGpB5T,EAAM0uB,OAAOhnB,EACjB,EAEAsiB,OAAQ,CACJ7nB,EACAC,EACAC,EACAW,GAGJiH,QAAS,CACLxK,KAAM,YACN6uB,UAAU,EACV0I,aAAa,EACbtQ,YAAY,EACZJ,UAAU,EACVsC,aAAa,EACb+F,OAAQ,KACRC,YAAa,IACbtD,aAAc,GACd0B,qBAAsB,KACtBG,kBAAmB,KACnBG,iBAAkB,KAClBC,kBAAmB,KACnBC,iBAAkB,KAClB3G,SAAU,CACNoQ,cAAe,wBACfC,aAAc,0BACdC,UAAW,0BAInBT,WAAY,WACR,IAAIU,EAAiBzvB,KAAKsC,QAAQ+iB,qBAC9BqK,EAAc1vB,KAAKsC,QAAQkjB,kBAC3BmK,EAAe3vB,KAAKsC,QAAQqjB,iBAC5BC,EAAoB5lB,KAAKsC,QAAQsjB,kBACjCC,EAAmB7lB,KAAKsC,QAAQujB,iBAEpC7lB,KAAKmlB,eAAepH,SAAW1lB,EAAM0lB,SAAS0R,GAAkBh0B,EAAiB,CAAEm0B,eAAgBH,IACnGzvB,KAAKylB,gBAAgBkK,aAAet3B,EAAM0lB,SAAS4R,GAAgB1zB,EAAmB,CAAE2zB,eAAgBD,IACxG3vB,KAAKylB,gBAAgBG,kBAAoBvtB,EAAM0lB,SAAS6H,GAAqB/pB,EAAoB,CAAE+zB,eAAgBhK,IACnH5lB,KAAKylB,gBAAgBI,iBAAmBxtB,EAAM0lB,SAAS8H,GAAoB7pB,EAAmB,CAAE4zB,eAAgB/J,IAChH7lB,KAAKulB,YAAYxH,SAAW1lB,EAAM0lB,SAAS2R,GAAej0B,EAAiB,CAAEm0B,eAAgBF,GACjG,EAEAhL,kBAAmB,WACf,IAAIf,EAAe3jB,KAAKsC,QAAQqhB,aAC5BA,GACAxrB,EAAEwrB,GAAckM,uBAAuB,gBAAiB7vB,KAAK4Y,WAErE,EAEAqU,kBAAmB,SAAStP,GAGxB,OAFAA,EAAUxlB,EAAEwlB,GAEL3d,KAAKktB,SAASvP,EAAQzZ,QAASyZ,EAAQoD,OAAO,MAAM7c,QAC/D,EAEAgpB,SAAU,SAAS3lB,EAAaoM,GAC5B,IAGIC,EAHAuZ,EAAiBntB,KAAKylB,gBACtBqK,EAAa3C,EAAehc,cAAc5J,GAAe,GACzDwoB,EAAU5C,EAAe/b,WAAWuC,GAAY,GAGpD,OAAKmc,GAAeC,GAIpBnc,EAAamc,EAAQ7rB,MAAQipB,EAAe9mB,UAAaypB,EAAW5rB,MAE7D,CACHopB,YAAawC,EAAW3yB,MACxBqwB,SAAUuC,EAAQ5yB,MAClBd,QAASyzB,EAAWzzB,SAAW0zB,EAAQ1zB,QACvCP,SAAUkE,KAAK4Y,WAAWoX,OAAOpc,KAT1B,IAWf,EAEAyL,cAAe,SAASzG,GACpB5Y,KAAKsC,QAAQsW,WAAaA,EAE1B5Y,KAAKykB,cAEDzkB,KAAKiwB,gBACLjwB,KAAKiwB,eAAe5Q,cAAczG,GAGlC5Y,KAAKkwB,YACLlwB,KAAKkwB,WAAW7Q,cAAczG,GAG9B5Y,KAAKmwB,eACLnwB,KAAKmwB,cAAc9Q,cAAczG,GAGrC5Y,KAAK0kB,oBAED1kB,KAAKsC,QAAQqkB,UACb/N,EAAW3M,OAEnB,EAEA2X,WAAY,SAASthB,GACjBzJ,EAAOoS,GAAG2Y,WAAWpnB,KAAKwD,KAAMsC,GAEhCtC,KAAK+uB,YACT,EAEA3kB,QAAS,WACLvR,EAAOoS,GAAGb,QAAQ5N,KAAKwD,MAEvBowB,aAAapwB,KAAKqwB,qBACtB,EAEA5L,YAAa,WACT,IAAI1kB,EAAOC,KACP4Y,EAAa7Y,EAAKuC,QAAQsW,WAE9BA,EAAauH,MAAMC,QAAQxH,GAAc,CAAEhgB,KAAMggB,GAAeA,EAE5D7Y,EAAK6Y,YAAc5Y,KAAK6d,gBACxB9d,EAAK6Y,WAAW0G,OAAOvlB,EAAQgG,EAAK8d,iBACpByB,OAAOnlB,EAAY4F,EAAKuwB,oBACxBhR,OAAOrlB,EAAU8F,EAAK2qB,kBACtBpL,OAAOtlB,EAAO+F,EAAK4qB,gBAEnC5qB,EAAK8d,gBAAkB9d,EAAK+d,QAAQ7b,KAAKlC,GACzCA,EAAK2qB,iBAAmB3qB,EAAK6qB,cAAc3oB,KAAKlC,GAChDA,EAAKuwB,mBAAqBvwB,EAAKwwB,YAAYtuB,KAAKlC,GAChDA,EAAK4qB,cAAgB5qB,EAAK8qB,OAAO5oB,KAAKlC,IAG1CA,EAAK6Y,WAAavgB,EAAMO,KAAKyW,gBAAgBrL,OAAO4U,GAC5B3W,KAAKlI,EAAQgG,EAAK8d,iBAClB5b,KAAKhI,EAAU8F,EAAK2qB,kBACpBzoB,KAAK9H,EAAY4F,EAAKuwB,oBACtBruB,KAAKjI,EAAO+F,EAAK4qB,cAC7C,EAEAE,OAAQ,WACJ7qB,KAAKusB,WAAU,EACnB,EAEA3B,cAAe,WACX5qB,KAAKusB,WAAU,EACnB,EAEAgE,YAAa,WACTvwB,KAAKmlB,eAAeqL,QACpBxwB,KAAKulB,YAAYiL,OACrB,EAEA3L,SAAU,WACN,IAAImC,EAAShnB,KAAKsC,QAAQ0kB,OAE1BhnB,KAAKilB,QAAUjlB,KAAK2d,QAAQC,SAAS,WAEjCoJ,GACAhnB,KAAKilB,QAAQqH,IAAI,SAAUtF,EAEnC,EAEAyJ,eAAgB,WACZzwB,KAAKsvB,cAAgBn3B,EAAEkC,GAAKujB,SAAS,8DAErC5d,KAAKiwB,eAAiBjwB,KAAK0wB,qBAAqB1wB,KAAKsvB,cAAe,CAChEnQ,QAAS,WACTD,SAAU,CACNE,MAAOpf,KAAKsC,QAAQ4c,SAASoQ,gBAGzC,EAEAoB,qBAAsB,SAAS/S,EAASrb,GACpC,IAAIyb,EACA4S,EAAe3wB,KAAKsC,QAYxB,OAVAyb,EAAW,EAAG2C,WAAU5oB,UAClB,gGAAgGO,EAAM6lB,WAAWpmB,6DAE5EA,+DAv+JnD,SAAkB4oB,EAAUpe,EAASquB,GACjC,IAAIhS,EAAWrc,EAAQqc,SACnBI,EAAazc,EAAQyc,WACrBsQ,EAAcsB,EAAatB,YAC3BxxB,EAAS,GAab,OAXI8gB,IACA9gB,GAAU6iB,EAAW,+BAA+BroB,EAAME,GAAG6C,KAAKslB,EAAW,gBAAkB,KAG/F3B,GAAcJ,KACd9gB,GAAU,mDAAmDxF,EAAME,GAAG6C,KAAK,2BAE3Ei0B,IACAxxB,GAAU,gDAAgDxF,EAAME,GAAG6C,KAAK,eAGrEyC,CACX,CAw9JsB+yB,CAASlQ,EAAUpe,EAASquB,GANP,iBAU5B,IAAIt4B,EAAME,GAAGmlB,mBAAmBC,EAASxlB,EAAEuB,OAAO,CACrDkf,WAAY5Y,KAAK4Y,WACjBmF,SAAUA,EACVI,cAAgBvlB,GAAS,yBAAyBA,WAClDqlB,QAASje,KAAKsC,QAAQ+sB,aACvB/sB,GACP,EAEAuuB,oBAAqB,WACjB7wB,KAAKmwB,cAAgBnwB,KAAK0wB,qBAAqB1wB,KAAKuvB,aAAc,CAC9D/P,YAAaxf,KAAKwvB,UAClBrQ,QAAS,UACTJ,WAAY/e,KAAKsC,QAAQyc,WACzBJ,SAAU3e,KAAKsC,QAAQqc,SACvBO,SAAU,CACNE,MAAOpf,KAAKsC,QAAQ4c,SAASqQ,aAC7BvQ,UAAWhf,KAAKsC,QAAQ4c,SAASF,aAIzChf,KAAKkwB,WAAalwB,KAAK0wB,qBAAqB1wB,KAAKwvB,UAAW,CACxDhQ,YAAaxf,KAAKuvB,aAClBpQ,QAAS,OACTJ,WAAY/e,KAAKsC,QAAQyc,WACzBJ,SAAU3e,KAAKsC,QAAQqc,SACvBO,SAAU,CACNE,MAAOpf,KAAKsC,QAAQ4c,SAASsQ,UAC7BxQ,UAAWhf,KAAKsC,QAAQ4c,SAASF,YAG7C,EAEA2P,cAAe,WACX,IAAI5uB,EAAOC,KACP8wB,EAAc34B,EAjyKP,4IAkyKP44B,EAAgBD,EAAYhS,KAAK,uBACjCkS,EAAiBF,EAAYhS,KAAK,kBAClCmS,EAAc94B,EAAEkC,GAAKujB,SAAS,UAElC7d,EAAK0wB,iBACL1wB,EAAKwvB,aAAep3B,EAAEkC,GAAKujB,SAAS,6DAEpC7d,EAAKyvB,UAAYr3B,EAAEkC,GAAKujB,SAAS,0DACjC7d,EAAK6rB,cAAgBzzB,EAAE,sCACE+4B,KAAK,iCAE9BnxB,EAAK6rB,cAAc7K,SAASuL,IAAI,gBAAiBj0B,EAAMo2B,QAAQzD,aAE/DjrB,EAAK8rB,WAAa1zB,EAAE,+BACpB4H,EAAKoxB,QAAUh5B,EAAE,kCAEjB44B,EAAc7L,OAAOnlB,EAAKuvB,eAC1ByB,EAAc7L,OAAOnlB,EAAKyvB,WAC1BuB,EAAc7L,OAAOnlB,EAAK8rB,YAE1BoF,EAAY/L,OAAOnlB,EAAK6rB,cAAc7K,UACtCkQ,EAAY/L,OAAOnlB,EAAKoxB,SAExBH,EAAe9L,OAAOnlB,EAAKwvB,cAC3ByB,EAAe9L,OAAO+L,GAEtBlxB,EAAKklB,QAAQC,OAAO4L,GAEpB/wB,EAAKqxB,kBAAoB,IAAI/4B,EAAMg5B,IAAIC,KAAKvxB,EAAK6rB,cAAc,IAC/D7rB,EAAKwxB,eAAiB,IAAIl5B,EAAMg5B,IAAIC,KAAKvxB,EAAK8rB,WAAW,IACzD9rB,EAAKyxB,YAAc,IAAIn5B,EAAMg5B,IAAIC,KAAKvxB,EAAKoxB,QAAQ,IAEnDpxB,EAAK8wB,qBACT,EAEAtE,UAAW,SAAS1I,GAChBxrB,EAAME,GAAGm0B,SAAS1sB,KAAKilB,QAASpB,EACpC,EAEAiH,QAAS,WACD9qB,KAAKmxB,QAAQ,GAAGM,aAChBzxB,KAAK0xB,oBACL1xB,KAAK2xB,qBACL3xB,KAAKkkB,mBACLlkB,KAAK4xB,oBACL5xB,KAAK6xB,sBAEb,EAEAA,oBAAqB,WACjB,IAAIhF,EAAc7sB,KAAK4rB,cAAcruB,SAAS,SAEzClF,EAAMo2B,QAAQqD,QAAQC,UAI3B3B,aAAapwB,KAAKqwB,sBAElBxD,EAAYP,IAAI,eAAgB,QAEhCtsB,KAAKqwB,qBAAuB7H,YAAW,WACnCqE,EAAYP,IAAI,eAAgB,GACpC,IACJ,EAEAoF,kBAAmB,WACf,IAEI3E,EAFAlB,EAAa7rB,KAAK6rB,WAClBmG,EAAanG,EAAW9K,OAAO,uBAAuBgM,MAAM3yB,GAGhE2yB,EAAQ/Y,KAAKjS,IAAIhJ,EAAWiH,KAAKsvB,eAAgBv2B,EAAWiH,KAAKwvB,YACjEzC,EAAQ/Y,KAAKjS,IAAI8pB,EAAWtuB,SAAS,SAASwvB,QAASA,GAEvDiF,EAAWjF,MAAMA,EACrB,EAEA4E,mBAAoB,WAChB,IAAIM,EAAsBjyB,KAAKsvB,cAActI,OAAO5sB,GAAM4sB,SACtDkL,EAAqBlyB,KAAKuvB,aAAavI,OAAO5sB,GAAM4sB,SACpDmL,EAAkBnyB,KAAKwvB,UAAUxI,OAAO5sB,GAAMg4B,cAC9CC,EAAgBryB,KAAK4rB,cAAc5E,OAAO5sB,GAAMg4B,cAEhDE,EAAUH,EAAkBnyB,KAAKwvB,UAAUxI,SAE3CuL,EAAiBL,EAAqBD,EAAsBC,EAAqBD,EACjFO,EAAkBH,EAAgBF,EAAkBE,EAAgBF,EAExEnyB,KAAKsvB,cAActI,OAAOuL,GAC1BvyB,KAAKuvB,aAAavI,OAAOuL,GACzBvyB,KAAKwvB,UAAUxI,OAAOwL,EAAkBF,GACxCtyB,KAAK4rB,cAAc5E,OAAOwL,EAC9B,EAEAtO,iBAAkB,WACd,IAAI0I,EAAe5sB,KAAKmxB,QAAQrS,KAAK,SACjC+N,EAAc7sB,KAAK4rB,cAAcruB,SAAS,SAI1Ck1B,EAFY7F,EAAarvB,SAAS,YAAYA,WAAWD,OAE3B0C,KAAKsC,QAAQ2kB,YAC3CyL,EAAW1e,KAAK2e,KAAMF,EAAkBzyB,KAAKmxB,QAAQpE,QAAW,KAEhE2F,EAAW,MACXA,EAAW,KAGf9F,EAAa/M,IAAIgN,GAAaP,IAAI,QAASoG,EAAW,KAEtD1yB,KAAK4yB,cAAc/F,EACvB,EAEA+E,kBAAmB,WACf,IAAI7xB,EAAOC,KACPmxB,EAAUpxB,EAAKoxB,QACftF,EAAa9rB,EAAK8rB,WAClBuG,EAAcryB,EAAKklB,QAAQmN,cAC3BpH,EAAY3yB,EAAMo2B,QAAQzD,YAC1B6H,EAAgB1B,EAAQ,GAAGxE,eAAiBwE,EAAQ,GAAG2B,aACvD9L,EAASjnB,EAAKuC,QAAQ0kB,OAE1B,GAAIjnB,EAAKklB,QAAQe,GAAG,YAAa,CAC7B,IAAKoM,IAAgBpL,EAOjB,OANI6L,IACA7H,EAAY,GAGhBmG,EAAQnK,OAAO,aACf6E,EAAW7E,OAAOmK,EAAQnK,SAAWgE,GAIzCoH,GAAen5B,EAAY8G,EAAKwvB,eAChC6C,GAAen5B,EAAY8G,EAAK6rB,cAAc7K,YAEf,EAAZiK,IACfoH,EAA0B,EAAZpH,EAAgB,EACzB6H,IACDT,GAAepH,IAIvBmG,EAAQnK,OAAOoL,GAEXS,IACA7H,EAAY,GAGhBa,EAAW7E,OAAOoL,EAAcpH,EACpC,CACJ,EAEA4H,cAAe,SAAS/F,GACpB,IAAI9sB,EAAOC,KACPkqB,EAAO2C,EAAYtvB,SAAS,SAASA,WAAWuZ,QAAQvZ,WAAWuZ,QAEnE/W,EAAKgzB,WAAa36B,IAClB2H,EAAKgzB,SAAW7I,EAAK1L,KAAK,YAG9B0L,EAAK1L,KAAK,UAAW,GAErB4R,aAAarwB,EAAKizB,gBAElBjzB,EAAKizB,eAAiBxK,YAAW,WAC7B0B,EAAK1L,KAAK,UAAWze,EAAKgzB,UAC1BhzB,EAAKgzB,SAAW36B,CACpB,GACJ,EAEA66B,cAAe,SAAS90B,GACpB,IAAIN,EAAS,GACT+a,EAAa5Y,KAAK4Y,WAClBxa,EAAWwa,EAAWxa,WACtB80B,EAAa90B,EAASd,OAAS,GAAMc,EAAS,IAAMA,EAAS,GAAG1B,KAQpE,OANIkc,EAAW/P,iBAAmB1K,IACI,IAA9Bya,EAAWza,KAAQb,QAAgB41B,KACnCr1B,EAASO,GAIVP,CACX,EAEA0I,MAAO,WACH,MAAO,EACX,EAEAuX,QAAS,WACL,IAUIqV,EACA9tB,EAXAtF,EAAOC,KACP4Y,EAAa7Y,EAAK6Y,WAElB9O,EAAO8O,EAAW9O,OAClB3C,GAAW2C,EAAK3C,SAAW,CAAC,GAAGvJ,QAAU,GACzCoL,GAAQc,EAAKd,MAAQ,CAAC,GAAGpL,QAAU,GAEnC2wB,EAAgBxuB,EAAKolB,eACrBqJ,EAAazuB,EAAKwlB,YAKtB,IAAIxlB,EAAKoB,QAAQ3G,EAAa,CAAE+jB,OAAQ,WAAxC,CA0BA,GAtBAgQ,EAAcnwB,SAAW2B,EAAKkzB,cAr+Kf,WAs+KfzE,EAAWpwB,SAAW2B,EAAKkzB,cAv+Kf,QAy+KZlzB,EAAKqxB,kBAAkBgC,OAAO7E,EAAcV,MAAM1mB,IAClDpH,EAAKwxB,eAAe6B,OAAO5E,EAAWX,MAAM7kB,IAE5CmqB,EAAa,CACTvd,QAAS2Y,EAAc8E,SACvBj1B,SAAUmwB,EAAcnwB,SACxB2X,SAAUwY,EAAcxY,UAG5B1Q,EAAU,CACNuQ,QAAS4Y,EAAW6E,SACpBj1B,SAAUowB,EAAWpwB,SACrB2X,SAAUyY,EAAWzY,UAGzBhW,EAAKyxB,YAAY4B,OAAOrzB,EAAK0lB,gBAAgBoI,MAAMjV,EAAWoX,OAAQmD,EAAY9tB,IAElFtF,EAAK+qB,UAED/qB,EAAKuzB,cACLvzB,EAAKuzB,cAAcC,qBAChB,CACH,IAAID,EAAgBj7B,EAAMi7B,cAAcvzB,EAAKoxB,SAEzCmC,GAAiBA,EAAcE,UAC/BzzB,EAAKuzB,cAAgBA,EAErBA,EAAcE,QAAQvxB,KAAK,UAAU,SAASwO,GAC1CpY,EAAM0zB,WAAWhsB,EAAK6rB,eAAgBnb,EAAEgjB,OAAOC,GAC/C3zB,EAAK8rB,WAAWG,WAAWvb,EAAEgjB,OAAOE,EACxC,IAER,CAEA5zB,EAAKwsB,WAAU,GAEfxsB,EAAKoB,QAAQ1G,EAzCb,CA0CJ,EAEAqrB,YAAa,WACT,IAAI/lB,EAAOC,KACP4rB,EAAgB7rB,EAAK6rB,cACrBC,EAAa9rB,EAAK8rB,WAEtB9rB,EAAKoxB,QAAQ9S,GAAG,UAAU,WACtBhmB,EAAM0zB,WAAWH,EAAe5rB,KAAK+rB,YACrCF,EAAWG,UAAUhsB,KAAKgsB,UAC9B,IAEAH,EAAWxN,GAAG,iBAAmB/jB,EAAK,cAAgBA,EAAIyF,EAAKksB,aAAahqB,KAAKlC,GACrF,EAEAksB,aAAc,SAASxb,GACnB,IAAIA,EAAEmR,QAAN,CAIA,IAAIsK,EAAQ7zB,EAAM8zB,YAAY1b,GAC1Bub,EAAYhsB,KAAKmxB,QAAQnF,YAEzBE,IACAzb,EAAE2b,iBAEFj0B,EAAEsY,EAAEoO,eAAeP,QAAQ,kBAAkB+N,IAAI,QAAU/xB,GAAI,GAE/D0F,KAAK6rB,WAAWG,UAAUA,GAAcE,GACxClsB,KAAKmxB,QAAQnF,UAAUA,GAAcE,GAXzC,CAaJ,IAGAvO,GAAUtlB,EAAMg5B,IAAI1T,QACpBiW,GAAWv7B,EAAMg5B,IAAI5Q,KAErBoT,GAAiB,SAASzwB,EAAUqS,GACrC,MAAO,CACF2Z,YAAa,EACb7xB,SAAU,EACVu2B,WAAY,EACZt2B,QAAS,EACTY,SAAU,EACVgF,SAAUA,EACVkU,aAA4B,IAAd7B,EAEtB,EAEI/X,GAAY,SAASP,EAAO+G,GAI5B,IAHA,IAAIoD,EAAO,GACPjK,EAAM,EAEHA,GAAO6G,EAAO7G,IACjBiK,EAAKvJ,KAAKZ,EAAMK,QAAQH,GAAKvF,MAGjC,OAAOwP,CACX,EAEIuO,GAAY,SAAS1Y,EAAO+G,GAI5B,IAHA,IAAIpM,EAAO,GACPuF,EAAM,EAEHA,GAAO6G,EAAO7G,IACjBvF,GAAQqF,EAAMK,QAAQH,GAAKvF,KAG/B,OAAOA,CACX,EAEI4tB,GAAmBhtB,EAAMgB,OAAO,CAChC2I,KAAM,SAASC,GACXtC,KAAK2lB,iBAAmBttB,EAAM0lB,SAASzb,EAAQqjB,kBAC/C3lB,KAAK4lB,kBAAoBvtB,EAAM0lB,SAASzb,EAAQsjB,mBAChD5lB,KAAK6lB,iBAAmBxtB,EAAM0lB,SAASzb,EAAQujB,kBAC/C7lB,KAAK5B,SAAWkE,EAAQlE,SACxB4B,KAAKslB,OAAShjB,EAAQgjB,OACtBtlB,KAAKutB,KAAO,EAChB,EAEAO,iBAAkB,SAASxrB,GACvBtC,KAAKpH,KAAO0J,EAAQ1J,KACpBoH,KAAK+tB,kBAAoBzrB,EAAQyrB,kBACjC/tB,KAAKiuB,eAAiB3rB,EAAQ2rB,eAC9BjuB,KAAKkuB,oBAAsB5rB,EAAQ4rB,oBACnCluB,KAAKouB,eAAiB9rB,EAAQ8rB,eAC9BpuB,KAAKutB,KAAKjwB,OAAS,CACvB,EAEAy2B,eAAgB,SAAS/xB,GAGrB,IAFA,IAAIye,EAAO,GAEFvc,EAAQ,EAAGA,EAAQlC,EAAOkC,IAC/Buc,GAAQ,QAGZzgB,KAAKg0B,MAAMlV,KAAK,YAAYoG,OAAOzE,EACvC,EAEAwT,eAAgB,SAASr7B,GAKrB,IAJA,IAEImN,EADAwlB,EADOvrB,KACKg0B,MAAMlV,KAAK,SAGlB5a,EAAQ,EAAGA,EAAQtL,EAAK0E,OAAQ4G,IACrC6B,EAAM5N,EAAE,2DACRozB,EAAKrG,OAAOnf,GANL/F,KAOFk0B,aAAanuB,EAAKnN,EAAKsL,GAAQA,GAGxClE,KAAKqtB,UAAYz0B,EAAK0E,MAC1B,EAEA62B,aAAc,SAASjK,EAAM5nB,GAEzB,IAAI8xB,EAEJ,MAAMC,EAAcnK,EAAKoD,YAAY9vB,QAC/B82B,EAAcD,EAAYA,EAAY/2B,OAAS,GAC/CjB,EALO2D,KAKQ5B,UALR4B,KAKyB5B,SAAS0gB,MAAMziB,GAAYA,EAAQvE,OAASw8B,EAAYx8B,OACxFy8B,EAA0B,OAAdrK,EAAKtxB,KAAgBsxB,EAAKtxB,KAAKmD,MAAQmuB,EAAKtxB,KAE1DyD,GAAWA,EAAQK,OACnB03B,EAAc/3B,EAAQK,MAG1B,IAAIqhB,EAAW/d,KAAK2lB,iBACpB,GAAI3lB,KAAK5B,UAAYg2B,GAA6B,KAAdG,EAIhC,OAHKjyB,EAAQxG,WACTwG,EAAQxG,SAAW,CAAEC,MAAO0D,MAAMqT,OAAOyhB,IAAcA,EAAYzhB,OAAOyhB,KAEtEH,GACJ,IAAK,SACHrW,EAAW/d,KAAK4lB,kBAChB,MACF,IAAK,QACH7H,EAAW/d,KAAK6lB,iBAK1B,OAAO9H,EAASzb,EAEpB,EAEA4xB,aAAc,SAASM,EAAOC,EAAS9gB,GAEnC,IADA,IACSzP,EAAQ,EAAGA,EAAQuwB,EAAQ1X,MAAMzf,OAAQ4G,IAAS,CACvD,IAAIgmB,EAAOuK,EAAQ1X,MAAM7Y,GACzB,GAAIgmB,EAAM,CACN,IAAIwK,EAASv8B,EAAE,WAJZ6H,KAI4BslB,eAAe3R,EAAW,KAAKzP,EAAQ,sDAClElE,KAAKiuB,eAAeta,GAAUghB,OAAS30B,KAAK+tB,kBAAkB7pB,GAAOywB,QACrED,EAAO9W,SAAS,qBAGpB8W,EAAOxP,OATJllB,KASgBm0B,aAAajK,EAAM,CAClCpuB,SAAUouB,EAAKtxB,KACf40B,SAAUtD,EAAKsD,SACfF,YAAapD,EAAKoD,eAEtBttB,KAAKutB,KAAKxvB,KAAKmsB,GACfsK,EAAMtP,OAAOwP,EACjB,CACJ,CACJ,EAEA7G,MAAO,WACH,IAAIj1B,EAAOvC,QAAQ2J,KAAKpH,MAAQ,IAAIiE,QAASmD,KAAK+tB,kBAAmB/tB,KAAKiuB,eAAgBjuB,KAAKkuB,oBAAqBluB,KAAKouB,gBACrHruB,EAAOC,KAEPg0B,EAAQ77B,EAAE,mJAQd,OANA4H,EAAKi0B,MAAQA,EACbj0B,EAAKg0B,eAAe/zB,KAAK+tB,kBAAkBzwB,QAC3CyC,EAAKk0B,eAAer7B,GACpBoH,KAAKqtB,UAAYz0B,EAAK0E,OACtB0C,KAAKotB,aAAeptB,KAAK+tB,kBAAkBzwB,OAEpCyC,EAAKi0B,KAChB,IAGA5O,GAAmB1sB,EAAMgB,OAAO,CAChC2I,KAAM,SAASC,GACXtC,KAAKpC,OAAS0E,EAAQ1E,OACtBoC,KAAK8J,KAAOxH,EAAQwH,KACpB9J,KAAKslB,OAAShjB,EAAQgjB,OACtBtlB,KAAK40B,eAAiBv8B,EAAM0lB,SAASpjB,GACrCqF,KAAK0mB,YAAc,CAAC,EAChBpkB,EAAQyb,WACR/d,KAAK+d,SAAW1lB,EAAM0lB,SAASzb,EAAQyb,UAE/C,EAEA6P,UAAW,SAAShwB,GAChBoC,KAAKpC,OAASA,CAClB,EAEAm2B,eAAgB,SAAS/xB,GAGrB,IAFA,IAAIye,EAAO,GAEFvc,EAAQ,EAAGA,EAAQlC,EAAOkC,IAC/Buc,GAAQ,QAGZzgB,KAAKg0B,MAAMlV,KAAK,YAAYoG,OAAOzE,EACvC,EAEAwT,eAAgB,SAASY,GAKrB,IAJA,IAEI9uB,EADAwlB,EADOvrB,KACKg0B,MAAMlV,KAAK,SAGlB5a,EAAQ,EAAGA,EAAQ2wB,EAAiBv3B,OAAQ4G,IACjD6B,EAAM5N,EAAE,gDACRozB,EAAKrG,OAAOnf,GANL/F,KAOFk0B,aAAanuB,EAAK8uB,EAAiB3wB,GAAQA,EAExD,EAEA4wB,eAAgB,SAASnhB,EAAUuW,EAAM6K,GAGjC7K,EAAK/mB,UAAU6xB,MAFH,iBAGZ9K,EAAKvuB,QAAUuuB,EAAKvuB,QAAQge,eAG3B3Z,KAAK0mB,YAAY/S,GAGlB3T,KAAK0mB,YAAY/S,GAAUpW,SAASQ,KAAKmsB,GAFzClqB,KAAK0mB,YAAY/S,GAAY,CAAEpW,SAAU,CAAC2sB,GAAOvM,QAASoX,EAIlE,EAEAb,aAAc,SAASM,EAAOC,EAAS9gB,GAKnC,IAJA,IACI+gB,EACAxK,EAFAnqB,EAAOC,KAIFkE,EAAQ,EAAGA,EAAQuwB,EAAQ1X,MAAMzf,OAAQ4G,IAE9C,GADAgmB,EAAOuK,EAAQ1X,MAAM7Y,GACX,CACNlE,KAAK80B,eAAenhB,EAAUuW,EAAMsK,GACpC,MAAMr5B,EAAW+uB,EAAK3sB,UAAY2sB,EAAK3sB,SAASD,OAAS,EACzDo3B,EAASv8B,EAAE4H,EAAK60B,eAAe,CAC3B/8B,GAAI,GAAGkI,EAAKulB,UAAuB,WAAbvlB,EAAK+J,KAAoB,KAAO,QAAQ6J,EAAW,KAAKzP,EAAQ,IACtFnJ,QAASmvB,EAAK+K,QACdn6B,QAASovB,EAAKgL,QACdt6B,IAAKsvB,EAAK5iB,KAAKxC,KAAK,MAAQolB,EAAKyK,MAAQ,WAAa,IACtD15B,UAAYivB,EAAK3sB,UAAY2sB,EAAK3sB,SAASD,OAAU,KAAO,OAC5DtC,WAAYkvB,EAAK7mB,cAAgB6mB,EAAKyK,MACtCx5B,SAAUA,EAAW,OAAS,QAC9BN,YAAaxC,EAAMqJ,OAAO,yBAA0BwoB,EAAKyK,MAAQ,4BAA8B,GAAsB,IAAlBzK,EAAK9mB,SAAiB,2BAA6B,IACtJlI,KAAmB,WAAb6E,EAAK+J,KAAoB,eAAiB,eAEhD3O,GACAu5B,EAAO9W,SAAS,wBAGpB,MAAMuX,EAAsB,0CAA0CjL,EAAKvuB,iBAE3E+4B,EAAOxP,OAAOnlB,EAAKge,SAAWhe,EAAKge,SAAS,CAAEriB,OAAQwuB,IAAUiL,GAChEX,EAAMtP,OAAOwP,EACjB,CAER,EAEA7G,MAAO,WACH,IAAIvH,EAAOhwB,QAAQ0J,KAAKpC,QAAU,IAAIf,SAClCu4B,EAAwB,WAAbp1B,KAAK8J,KAAoBvT,UAAU+vB,GAAQ9vB,OAAO8vB,GAC7D+O,EAAaD,EAAS,GACtBE,EAAcF,EAAS,GACvBG,EAAUH,EAAS,GACnBI,EAAmBJ,EAAS,GAC5Br1B,EAAOC,KACXD,EAAK01B,MAAQnP,EACbvmB,EAAK21B,SAAWH,EAChBx1B,EAAK41B,aAAeL,EAEpB,IAAItB,EAAQ77B,EAAE,+IAMd,OAJA4H,EAAKi0B,MAAQA,EACbj0B,EAAKg0B,eAA4B,WAAb/zB,KAAK8J,KAAoBwrB,EAAYh4B,OAASk4B,GAClEz1B,EAAKk0B,eAAeoB,GAEbt1B,EAAKi0B,KAChB,EAEAzN,QAAS,WACL,OAAOvmB,KAAKy1B,KAChB,EAEAtH,WAAY,WACR,OAAOnuB,KAAK01B,QAChB,EAEA1H,eAAgB,WACZ,OAAOhuB,KAAK21B,YAChB,IAGA/G,GAAgBl2B,EAAMgB,OAAO,CAC7B2I,KAAM,WACFrC,KAAK5B,SAAW,EAChB4B,KAAK+V,SAAW,CAAC,CACrB,EAEA8X,MAAO,SAASjwB,GACZ,IAAIg4B,EAAQ51B,KAAK61B,OAAOj4B,GACpBk4B,EAAW91B,KAAK+1B,YAEpB,MAAO,CACHpY,GAAQ,QAAS,CAAE4G,UAAWpoB,GAA2B,CAAC25B,EAAUF,IAE5E,EAEApF,MAAO,WACHxwB,KAAK+V,SAAW,CAAC,CACrB,EAEAggB,UAAW,WAKP,IAJA,IAAIz4B,EAAS0C,KAAKg2B,aACdz4B,EAAW,GACXF,EAAM,EAEHA,EAAMC,EAAQD,IACjBE,EAASQ,KAAK4f,GAAQ,MAAO,OAGjC,OAAOA,GAAQ,WAAY,KAAMpgB,EACrC,EAEAs4B,OAAQ,SAASj4B,GACb,IAAIiF,EAAOjF,EAAO,GAelB,OAbAoC,KAAKvG,IAAM,CAAC,EACZuG,KAAKgJ,KAAO,GACZhJ,KAAK9C,UAAY2F,EAEjB7C,KAAKqzB,SAAW,GAEZxwB,GACA7C,KAAKi2B,WAAWpzB,EAAM,GACtB7C,KAAKk2B,cAELl2B,KAAKgJ,KAAKjL,KAAK4f,GAAQ,KAAM,CAAE4G,UAAWpoB,GAAwB,CAAEwhB,GAAQ,KAAM,CAAE4G,UAAWpoB,GAAuB,CAAEy3B,GAAS,eAG9HjW,GAAQ,QAAS,CAAE4G,UAAWpoB,GAAqB6D,KAAKgJ,KACnE,EAEAktB,WAAY,WAWR,IAVA,IAGInwB,EAEAowB,EACAC,EACArZ,EACAmN,EARAlhB,EAAOhJ,KAAKgJ,KACZ6I,EAAa7I,EAAK1L,OAClB4L,EAAS,EAQNA,EAAS2I,EAAY3I,IAGxB,GAAoB,KAFpBnD,EAAMiD,EAAKE,IAEH+rB,QASR,IAHAmB,EAAU,EACVD,GAHApZ,EAAQhX,EAAIxI,UAGQD,OAEb84B,EAAUD,EAAaC,KAC1BlM,EAAOnN,EAAMqZ,IAEJC,WACLnM,EAAK1L,KAAKyW,QAAUlvB,EAAIkvB,QAIxC,EAEAqB,UAAW,SAASvwB,GAKhB,IAJA,IAAIiD,EAAOhJ,KAAKgJ,KACZ1L,EAAS0L,EAAK1L,OACdD,EAAM,EAEHA,EAAMC,GACL0L,EAAK3L,KAAS0I,EADD1I,KAMrB,OAAOA,CACX,EAEA24B,WAAY,WACR,IAAIjZ,EAAQ/c,KAAKgJ,KAAK,GAAKhJ,KAAKgJ,KAAK,GAAGzL,SAAW,GAC/CD,EAASyf,EAAMzf,OACf+I,EAAY,EACZhJ,EAAM,EAEV,GAAIC,EACA,KAAOD,EAAMC,EAAQD,IACjBgJ,GAAa0W,EAAM1f,GAAKmhB,KAAK0W,SAAW,EAQhD,OAJK7uB,IACDA,EAAYrG,KAAK5B,UAGdiI,CACX,EAEAkwB,KAAM,SAASp5B,EAAOsY,EAAW6B,GAC7B,IAIIkf,EACAj5B,EALA+a,EAAWtY,KAAK9C,UAAUM,QAAQiY,GAAW3d,KAC7CsL,EAAWjG,EAAMK,QAAQiY,GAAWrS,SACpCqzB,EAASne,EAAWlV,EACpB3J,EAAMuG,KAAKvG,IAIXsM,EAAMtM,EAAIg9B,GAkCd,OAhCK1wB,GAuBDA,EAAI2wB,UAAW,EAEV3wB,EAAIuR,cAAgBvR,EAAIuR,eAAiBA,IAC1CvR,EAAIuR,aAAeA,EACnBvR,EAAI4wB,UAAY,EAChB5wB,EAAImvB,QAAU,MA3BlBnvB,EAAM4X,GAAQ,KAAM,CAAE4G,UAAWpoB,GAAwB,KAErDmb,aAAeA,EACnBvR,EAAI4wB,UAAY,EAChB5wB,EAAImvB,QAAU,EACdnvB,EAAIkvB,QAAU,EAEdx7B,EAAIg9B,GAAU1wB,GACdywB,EAAY/8B,EAAI6e,GAAYxF,OAAO1P,GAAY,QAG3C7F,EAAWi5B,EAAUj5B,UAER,KAAuD,IAAjDA,EAAS,GAAGihB,KAAK+F,UAAUxnB,QAAQ,SAClDgJ,EAAI2wB,UAAW,EAEf3wB,EAAI2wB,SAAWF,EAAUE,UAIjC12B,KAAKgJ,KAAKmM,OAAOnV,KAAKs2B,UAAUE,GAAa,EAAG,EAAGzwB,IAWhDA,CACX,EAEA0F,UAAW,SAASrN,EAAUjB,EAAOonB,GACjC,IAEIloB,EAFA5C,EAAMuG,KAAKvG,IACXsM,EAAMtM,EAAIm9B,WAGT7wB,IACDA,EAAM4X,GAAQ,KAAM,CAAE4G,UAAWpoB,GAAwB,IACzD1C,EAAIm9B,WAAa7wB,EACjB/F,KAAKgJ,KAAKjL,KAAKgI,IAGnB,IAAK,IAAI1I,EAAM,EAAGC,EAASc,EAASd,OAAQD,EAAMC,EAAQD,IACtDhB,EAAU+B,EAASf,GACnB0I,EAAIxI,SAASQ,KAAKiC,KAAK62B,MAAOtS,GAAa,GAAK,CAACvkB,KAAK82B,SAASz6B,EAASc,IAASd,IAGrF,OAAOiB,CACX,EAEAw5B,SAAU,SAASp7B,EAAQyB,GACvB,OAAOy2B,GAAS5zB,KAAK+d,SAAS,CAC1BriB,OAAQA,EACRyB,MAAOA,KACP,EACR,EAEA05B,MAAO,SAAStS,EAAWhnB,EAAU7B,GACjC,IAAIwuB,EAAOvM,GAAQ,KAAM,CAAE4G,UAAWpoB,EAAqB,IAAMooB,GAAahnB,GAE9E,OADA2sB,EAAKnuB,MAAQL,EAAOC,SAAWD,EAAO5D,KAC/BoyB,CACX,EAEA+L,WAAY,SAAS94B,EAAOsY,EAAW6B,GACnC,IAIIvR,EAAKgxB,EAAUx5B,EAAUy5B,EACzB9M,EAAM+M,EAEN3vB,EAGAyO,EAEAmf,EAZA13B,EAAUL,EAAMK,QAChB9B,EAAS8B,EAAQiY,GACjByhB,EAAa15B,EAAQiY,EAAY,GAIjC0hB,EAAe,GAGf95B,EAAM,EAINs5B,EAAY,EACZS,EAAkB,EAEtB,IAAI17B,EAAOW,QAAX,CAsBA,GAjBAiL,EAAOjP,EAAMoF,UAAUC,GAAUP,EAAOsY,IACxC1P,EAAM/F,KAAKu2B,KAAKp5B,EAAOsY,EAAW6B,GAGlC0f,GADAz5B,EAAW7B,EAAO6B,UACQD,QAE1ByY,EAAW/V,KAAK+V,SAASzO,MAErBtH,KAAK+V,SAASzO,GAAQyO,EAAW8d,GAAe/gB,OAAOpX,EAAO0H,UAAWqS,GACzEM,EAASshB,aAAevkB,OAAO9S,KAAK9C,UAAUM,QAAQiY,GAAWrS,WAGrEpD,KAAKqzB,SAASt1B,KAAK,CACfuJ,KAAMA,EACNnK,MAAOA,IAGPzB,EAAO2H,YAAa,EACM,IAAtB0S,EAAS5a,WACTw7B,EAAY5gB,EAASqZ,YACrBrpB,EAAI4wB,WAAaA,EAEjB5gB,EAASxY,SAAW,EACpBy5B,EAAiB,GAGrB,IAAIM,EAAan/B,EAAE,iBACnBm/B,EAAW9Y,KAAKnmB,EAAMmmB,KAAK,QAASlX,GAEpC6vB,EAAap5B,KAAK1F,EAAMg5B,IAAI5Q,KAAKpoB,EAAME,GAAG6C,KAAKk8B,EAAY,CAAEl8B,KAAM47B,EAAiB17B,EAA0BE,KAA6B,GAC/I,CAQA,GANA27B,EAAap5B,KAAKiC,KAAK82B,SAASp7B,EAAQyB,IACxC+sB,EAAOlqB,KAAK62B,MAAO9wB,EAAI2wB,SAAW,WAAa,GAAKS,EAAcz7B,GAElEqK,EAAIxI,SAASQ,KAAKmsB,GAClBnkB,EAAImvB,SAAW,EAEX8B,EAAgB,CAIhB,IAHAC,EAAUj3B,KAAK62B,MAAM,SAAU,CAAC72B,KAAK82B,SAASp7B,EAAQyB,IAASzB,GAC/DqK,EAAIxI,SAASQ,KAAKk5B,GAEX55B,EAAM25B,EAAgB35B,IACzB05B,EAAW/2B,KAAKi2B,WAAW14B,EAASF,GAAMoY,EAAW/Z,GAGzDw5B,EAAU6B,EAAS7B,QACnByB,EAAYI,EAASJ,UAErBzM,EAAK1L,KAAK0W,QAAUA,EAEpBnf,EAASxY,SAAW23B,EACpBnf,EAASvY,QAAU,EAEnBuI,EAAImvB,SAAWA,EACfnvB,EAAI4wB,WAAaA,EACjB5wB,EAAIkvB,QAAU8B,EAAS9B,QAAU,EAE7BiC,IACIA,EAAW76B,QACX64B,EAAUl1B,KAAKyL,UAAUyrB,EAAW35B,SAAUJ,EAAO,WAGrD+3B,GADA6B,EAAW/2B,KAAKi2B,WAAW94B,EAAOsY,EAAY,IAC3Byf,QAEnBnvB,EAAI4wB,WAAaI,EAASJ,UAC1BS,EAAkBL,EAASJ,WAG/BM,EAAQzY,KAAK0W,QAAUA,EACvBA,GAAW,EAEXnf,EAASvY,SAAW03B,EACpBnvB,EAAImvB,SAAWA,EAEvB,MAAWgC,IACHA,EAAW76B,QACX64B,EAAUl1B,KAAKyL,UAAUyrB,EAAW35B,SAAUJ,IAG9C+3B,GADA6B,EAAW/2B,KAAKi2B,WAAW94B,EAAOsY,EAAY,IAC3Byf,QAEnBnvB,EAAI4wB,WAAaI,EAASJ,UAC1BS,EAAkBL,EAASJ,WAG/B5gB,EAASvY,QAAU03B,EAEfA,EAAU,IACVhL,EAAK1L,KAAK0W,QAAUA,EACpBnvB,EAAImvB,SAAWA,EAAU,IAgBjC,OAZInf,EAAS+d,WAAc/d,EAASvY,QAAU45B,IAC1CrhB,EAAS+d,WAAa/d,EAASvY,QAAU45B,GAG7C75B,EAAWwY,EAASxY,SAAWo5B,EAE3B5gB,EAASqZ,YAAc7xB,IACvBwY,EAASqZ,YAAc7xB,IAG1B05B,GAAW/M,GAAMmM,UAAW,EAEtBtwB,CA5GP,CAFI/F,KAAKyL,UAAU/P,EAAO6B,SAAUJ,EA+GxC,IAGA0xB,GAAan2B,EAAMgB,OAAO,CAC1B2I,KAAM,WACFrC,KAAK+V,SAAW,CAAC,CACrB,EAEA8X,MAAO,SAASjwB,GACZ,IAAIg4B,EAAQ51B,KAAK61B,OAAOj4B,GACpBk4B,EAAW91B,KAAK+1B,YAEpB,MAAO,CACHpY,GAAQ,QAAS,CAAE4G,UAAWpoB,GAAqB,CAAC25B,EAAUF,IAEtE,EAEApF,MAAO,WACHxwB,KAAK+V,SAAW,CAAC,CACrB,EAEAigB,WAAY,WAOR,IANA,IAAIz4B,EAAWyC,KAAKgJ,KAAK,GAAGzL,SACxBD,EAAS,EACTD,EAAM,EAEN6sB,EAAO3sB,EAASF,GAEb6sB,GACH5sB,GAAW4sB,EAAK1L,KAAK0W,SAAW,EAChChL,EAAO3sB,IAAWF,GAGtB,OAAOC,CACX,EAEAy4B,UAAW,WAKP,IAJA,IAAIz4B,EAAS0C,KAAKg2B,aACdz4B,EAAW,GACXF,EAAM,EAEHA,EAAMC,EAAQD,IACjBE,EAASQ,KAAK4f,GAAQ,MAAO,OAGjC,OAAOA,GAAQ,WAAY,KAAMpgB,EACrC,EAEAs4B,OAAQ,SAASj4B,GACb,IAAIiF,EAAOjF,EAAO,GAelB,OAbAoC,KAAK9C,UAAY2F,EACjB7C,KAAKgJ,KAAO,GACZhJ,KAAKvG,IAAM,CAAC,EAEZuG,KAAKqzB,SAAW,GAEZxwB,GACA7C,KAAKi2B,WAAWpzB,EAAM,GACtB7C,KAAKk2B,cAELl2B,KAAKgJ,KAAKjL,KAAK4f,GAAQ,KAAM,CAAE4G,UAAWpoB,GAAwB,CAAEwhB,GAAQ,KAAM,CAAE4G,UAAWpoB,GAAyB,CAAEy3B,GAAS,eAGhIjW,GAAQ,QAAS,CAAE4G,UAAWpoB,GAAqB6D,KAAKgJ,KACnE,EAEAktB,WAAY,WAgBR,IAfA,IASInwB,EACAmkB,EACAqN,EAEAC,EAbAxuB,EAAOhJ,KAAKgJ,KACZ6I,EAAa7I,EAAK1L,OAClB4L,EAAS,EAET1L,EAAUwC,KAAK9C,UAAUM,QACzBi6B,EAAkBj6B,EAAQ,GAAG1F,KAC7Bof,EAAgB1Z,EAAQF,OACxBmY,EAAY,EAKZhc,EAAMuG,KAAKvG,IAGRyP,EAAS2I,EAAY3I,IAGxB,IAFAnD,EAAMiD,EAAKE,GAENuM,EAAY,EAAGA,EAAYyB,EAAezB,IAC3C8hB,EAAav3B,KAAKxC,EAAQiY,GAAW3d,OACrCoyB,EAAOnkB,EAAImvB,QAAQ,MAAQzf,KAEfyU,EAAKgL,QAAUqC,IACvBrN,EAAK1L,KAAK0W,QAAWqC,EAAarN,EAAKgL,QAAW,GAK9DnvB,EAAMtM,EAAIg+B,GACVD,EAAS/9B,EAAIg+B,EAAkB,OAE3B1xB,IACAA,EAAIxI,SAAS,GAAGihB,KAAK+F,UAAYpoB,EAAwB,YAGzDq7B,IACAA,EAAOj6B,SAAS,GAAGihB,KAAK+F,WAAa,YAAcpoB,EAE3D,EAEAo6B,KAAM,SAASh5B,GACX,IAAIwI,EAAM4X,GAAQ,KAAM,CAAE4G,UAAWpoB,GAAwBoB,GAM7D,OALAwI,EAAIkvB,QAAU,EACdlvB,EAAImvB,QAAU,CAAC,EAEfl1B,KAAKgJ,KAAKjL,KAAKgI,GAERA,CACX,EAEA+wB,SAAU,SAASp7B,EAAQyB,GACvB,OAAOy2B,GAAS5zB,KAAK+d,SAAS,CAC1BriB,OAAQA,EACRyB,MAAOA,KACP,EACR,EAEA05B,MAAO,SAAStS,EAAWhnB,EAAU7B,GACjC,IAAIwuB,EAAOvM,GAAQ,KAAM,CAAE4G,UAAWpoB,EAAwB,IAAMooB,GAAahnB,GAEjF,OADA2sB,EAAKnuB,MAAQL,EAAOC,SAAWD,EAAO5D,KAC/BoyB,CACX,EAEA+L,WAAY,SAAS94B,EAAOsY,GACxB,IACInO,EAiBA4iB,EAAM+M,EACNF,EAAUS,EACVzhB,EACAwO,EAGAlnB,EAxBA5D,EAAMuG,KAAKvG,IAGX+D,EAAUL,EAAMK,QAChB9B,EAAS8B,EAAQiY,GACjByhB,EAAa15B,EAAQiY,EAAY,GAEjClY,EAAW7B,EAAO6B,SAClBy5B,EAAiBz5B,EAASD,OAE1B8F,EAAW0P,OAAOpX,EAAO0H,UACzBkV,EAAWtY,KAAK9C,UAAUM,QAAQiY,GAAW3d,KAC7C4/B,EAAYh6B,GAAUP,EAAOsY,EAAY,GAAG3Q,KAAK,IACjDuyB,EAAevkB,OAAO9S,KAAK9C,UAAUM,QAAQiY,GAAWrS,UACxDE,EAAao0B,GAAaL,IAAiBj0B,EAAW,GAAM1H,EAAO4H,YAAc,IACjFyC,EAAMtM,EAAI6J,EAAa,QAAU7J,EAAI6J,GACrC4xB,EAAU9xB,EAAW,EAMrB+zB,EAAe,GAUnB,IANKpxB,GAAOA,EAAI4xB,SACZ5xB,EAAM/F,KAAKu2B,OAEXxwB,EAAI4xB,UAAW,EAGfj8B,EAAOW,QAAS,CAMhB,IALAkoB,EAAYxe,EAAIkxB,QAAU,gBAAkB,GAC5ClxB,EAAIxI,SAASQ,KAAKiC,KAAK62B,MAAMtS,EAAW,CAAEvkB,KAAK82B,SAASv5B,EAAS,GAAIJ,IAAUI,EAAS,KAExFwI,EAAIkvB,QAAU+B,EAET35B,EAAM,EAAGA,EAAM25B,EAAgB35B,IAChC2C,KAAKu2B,KAAK,CAAEv2B,KAAK62B,MAAMtS,EAAW,CAAEvkB,KAAK82B,SAASv5B,EAASF,GAAMF,IAAUI,EAASF,MAGxF,OAAO0I,CACX,CAiBA,GAfAtM,EAAIi+B,EAAYh8B,EAAO5D,MAAQiO,EAE/BuB,EAAOjP,EAAMoF,UAAUC,GAAUP,EAAOsY,KAExCM,EAAW/V,KAAK+V,SAASzO,MAErBtH,KAAK+V,SAASzO,GAAQyO,EAAW8d,GAAezwB,EAAUqS,GAC1DM,EAASshB,aAAeA,GAG5Br3B,KAAKqzB,SAASt1B,KAAK,CACfuJ,KAAMA,EACNnK,MAAOA,IAGPzB,EAAO2H,YAAa,EACM,IAAtB0S,EAAS5a,WACT67B,EAAiB,EACjBjhB,EAASxY,SAAW,GAGxB,IAAI+5B,EAAan/B,EAAE,iBACnBm/B,EAAW9Y,KAAKnmB,EAAMmmB,KAAK,QAASlX,GAEpC6vB,EAAap5B,KAAK1F,EAAMg5B,IAAI5Q,KAAKpoB,EAAME,GAAG6C,KAAKk8B,EAAY,CAAEl8B,KAAM47B,EAAiB17B,EAA0BE,KAA6B,GAC/I,CAeA,GAbA27B,EAAap5B,KAAKiC,KAAK82B,SAASp7B,EAAQyB,IAExConB,EAAYxe,EAAIkxB,UAAYD,EAAiB,gBAAkB,IAC/D9M,EAAOlqB,KAAK62B,MAAMtS,EAAW4S,EAAcz7B,IACtCw5B,QAAUA,EAEfnvB,EAAIxI,SAASQ,KAAKmsB,GAClBnkB,EAAImvB,QAAQ,MAAQzf,GAAayU,IAE5BlqB,KAAKsY,IAAatY,KAAKsY,GAAY4c,KACpCl1B,KAAKsY,GAAY4c,GAGjB8B,EAAgB,CAIhB,IAHAjxB,EAAIkxB,SAAU,EACdlxB,EAAI4xB,UAAW,EAEVt6B,EAAM,EAAGA,EAAM25B,EAAgB35B,IAG5B0I,KAFJgxB,EAAW/2B,KAAKi2B,WAAW14B,EAASF,GAAMoY,MAGtC1P,EAAIkvB,SAAW8B,EAAS9B,SAI5BlvB,EAAIkvB,QAAU,IACd/K,EAAK1L,KAAKyW,QAAUlvB,EAAIkvB,SAG5Blf,EAASxY,SAAWwI,EAAIkvB,SAExBgC,EAAUj3B,KAAK62B,MAAM,gBAAiB,CAAC72B,KAAK82B,SAASp7B,EAAQyB,IAASzB,IAC9Dw5B,QAAUA,GAElBsC,EAASx3B,KAAKu2B,KAAK,CAAEU,KACd/B,QAAQ,MAAQzf,GAAawhB,EACpCO,EAAOP,SAAU,EAEjBx9B,EAAIi+B,EAAYh8B,EAAO5D,KAAO,OAAS0/B,EAEnCN,IACAH,EAAW/2B,KAAKi2B,WAAW94B,EAAOsY,EAAY,GAC9CwhB,EAAQzY,KAAKyW,QAAU8B,EAAS9B,SAGpClvB,EAAIkvB,SAAWuC,EAAOvC,QAEtBlf,EAASvY,QAAUg6B,EAAOvC,OAE9B,MAAWiC,IACPnxB,EAAI4xB,UAAW,EACf33B,KAAKi2B,WAAW94B,EAAOsY,EAAY,IAElCwhB,GAAW/M,GAAM1L,KAAKyW,QAAUlvB,EAAIkvB,QAErClf,EAASvY,QAAUuI,EAAIkvB,SAW3B,OARIlf,EAASqZ,YAAcrZ,EAASxY,WAChCwY,EAASqZ,YAAcrZ,EAASxY,UAGhCwY,EAAS+d,WAAa/d,EAASvY,UAC/BuY,EAAS+d,WAAa/d,EAASvY,SAG5BuI,CACX,IAGA+oB,GAAiBp2B,EAAMgB,OAAO,CAC9B2I,KAAM,WACFrC,KAAKmzB,WAAa,CAAC,EACnBnzB,KAAKqF,QAAU,CAAC,CACpB,EAEAwoB,MAAO,SAASj1B,EAAMu6B,EAAY9tB,GAC9B,IAAInB,EAAQivB,EAAWvd,QAAQ,GAC3BG,EAAWod,EAAWpd,SAAS7R,EAAQA,EAAMoD,KAAOlP,GAExD4H,KAAKmzB,WAAaA,EAClBnzB,KAAKqF,QAAUA,EAEfrF,KAAKpH,KAAOA,EAEZoH,KAAKqG,UAAY0P,EAAWA,EAASqZ,YAAcrZ,EAAS+d,WAAaX,EAAW/0B,SAASd,QAAU,EAElG0C,KAAKqG,YACNrG,KAAKqG,UAAY,GAGrB,IAAIuvB,EAAQ51B,KAAK61B,SACbC,EAAW91B,KAAK+1B,YAEpB,MAAO,CACHpY,GAAQ,QAAS,CAAE4G,UAAWpoB,GAA4B,CAAC25B,EAAUF,IAE7E,EAEAG,UAAW,WACP,IAAIz4B,EAAS0C,KAAKmzB,WAAW/0B,SAASd,QAAU,EAC5CC,EAAW,GACXF,EAAM,EAMV,IAJI2C,KAAKgJ,KAAK,KACV1L,EAAS0C,KAAKgJ,KAAK,GAAGzL,SAASD,QAG5BD,EAAMC,EAAQD,IACjBE,EAASQ,KAAK4f,GAAQ,MAAO,OAGjC,OAAOA,GAAQ,WAAY,KAAMpgB,EACrC,EAEAs4B,OAAQ,WAYJ,OAXA71B,KAAKgJ,KAAO,GAERhJ,KAAKpH,KAAK,IACVoH,KAAKmR,cAAgBnR,KAAKqzB,SAASrzB,KAAKmzB,WAAYnzB,KAAKqG,WACzDrG,KAAKoR,WAAapR,KAAKqzB,SAASrzB,KAAKqF,QAAS2O,KAAK2e,KAAK3yB,KAAKpH,KAAK0E,OAAS0C,KAAKqG,YAEhFrG,KAAKi2B,cAELj2B,KAAKgJ,KAAKjL,KAAK4f,GAAQ,KAAM,CAAE4G,UAAWpoB,GAAwB,CAAEwhB,GAAQ,KAAM,CAAE4G,UAAWpoB,GAAyB,CAAEy3B,GAAS,eAGhIjW,GAAQ,QAAS,CAAE4G,UAAWpoB,GAAqB6D,KAAKgJ,KACnE,EAEAqqB,SAAU,SAASuE,EAAUjD,GACzB,IACIkD,EAMAzzB,EAMAnB,EAGA1F,EACAu6B,EAjBAj6B,EAAS,GAET+X,EAAUgiB,EAAShiB,QACnBG,EAAW6hB,EAAS7hB,SACpB3X,EAAWw5B,EAASx5B,SACpBiU,EAAiBjU,EAASd,QAAU,EAGpC4U,EAAU,EACV6lB,EAAa,EAEb16B,EAAM,EACNC,EAASsY,EAAQtY,OAOrB,IAAKA,EAAQ,CACT,IAAK2F,EAAa,EAAGA,EAAaoP,EAAgBpP,IAC9CpF,EAAOoF,GAAc,CACjBiB,MAAOjB,EACP5G,QAAS+B,EAAS6E,GAClB9F,MAAO,MAIf,OAAOU,CACX,CAEA,KAAOR,EAAMC,EAAQD,IAAO,CAkBxB,GAdAy6B,EAAe,GADfv6B,GADA6G,EAAU2R,GADV8hB,EAAiBjiB,EAAQvY,IACSiK,OACf/J,SAAW6G,EAAQ5G,WAIlCD,GAAY8U,IAGS,IAArBjO,EAAQjJ,UAAsBiJ,EAAQ7G,WAAa6G,EAAQgrB,cAC3D0I,EAAe1zB,EAAQgrB,aAGvBhrB,EAAQkT,cAAgBlT,EAAQhB,WAAagB,EAAQizB,eACrD95B,GAAY,GAGZA,GAAY,EAAG,CACf,IAAK0F,EAAa,EAAGA,EAAaoP,EAAgBpP,IAEzCmB,EAAQ7G,UACAw6B,EAGbl6B,EAAON,EAAWw6B,EAAa90B,GAAc,CACzC1F,SAAUA,EACV2G,MAAOgO,EACP7V,QAAS+B,EAAS6E,GAClB9F,MAAO06B,EAAe16B,OAE1B+U,GAAW,EAGf,KAAOrU,EAAOk6B,KAAgB3/B,GAC1B2/B,GAAc,CAEtB,CAEA,GAAIA,IAAepD,EACf,MAGJziB,GAAW4lB,CACf,CAEA,OAAOj6B,CACX,EAEAo4B,WAAY,WAKR,IAJA,IAAI7kB,EAAapR,KAAKoR,WAClB9T,EAAS8T,EAAW9T,OACpBD,EAAM,EAEHA,EAAMC,EAAQD,IAAO,CACxB,IAAIsW,EAAWvC,EAAW/T,GACtBsW,GACA3T,KAAKgJ,KAAKjL,KAAKiC,KAAKg4B,UAAUrkB,GAEtC,CACJ,EAEAqkB,UAAW,SAASjI,GAYhB,IAXA,IAGID,EAIAmI,EACA/N,EAAMgO,EACN1Z,EAAM1iB,EAAUO,EAThB87B,EAAWpI,EAAQ7rB,MAAQlE,KAAKqG,UAChC8K,EAAgBnR,KAAKmR,cACrB7T,EAAS6T,EAAc7T,OAEvByf,EAAQ,GACR1f,EAAM,EAMHA,EAAMC,EAAQD,KACjByyB,EAAa3e,EAAc9T,MAERjF,IAInBomB,EAAO,CAAE+F,UAAWpoB,GAChB2zB,EAAWvyB,WACXihB,EAAK+F,WAAa,UAGtB2T,EAAc,GACdp8B,EAAWkE,KAAKpH,KAAKu/B,EAAWrI,EAAW5rB,OAC3C7H,EAAUyzB,EAAWzzB,SAAW0zB,EAAQ1zB,QAExC47B,EAAe,CACX3K,YAAawC,EAAW3yB,MACxBqwB,SAAUuC,EAAQ5yB,MAClBd,QAASA,EACTP,SAAUA,GAGS,KAAnBA,EAASC,OAAgBM,GAAWA,EAAQK,OACvB,WAAjBL,EAAQK,KACRw7B,EAAcl4B,KAAK4lB,kBAAkBqS,GACb,UAAjB57B,EAAQK,OACfw7B,EAAcl4B,KAAK6lB,iBAAiBoS,KAIvCC,IACDA,EAAcl4B,KAAK2vB,aAAasI,KAGpC/N,EAAOvM,GAAQ,KAAMa,EAAM,CAAEoV,GAASsE,MACjCn8B,MAAQD,EAASC,MACtBghB,EAAMhf,KAAKmsB,IAQf,OALA1L,EAAO,CAAE+F,UAAWpoB,GAChB4zB,EAAQxyB,WACRihB,EAAK+F,WAAa,kBAGf5G,GAAQ,KAAMa,EAAMzB,EAC/B,IAGJxkB,EAAG81B,OAAOC,IAEVj2B,EAAM+/B,mBAAqB//B,EAAMK,MAAMgB,OAAO,CAC1C2I,KAAM,SAASC,GACXtC,KAAKsC,QAAUA,EAEftC,KAAKq4B,OAAS/1B,EAAQ+1B,OACtBr4B,KAAK4Y,WAAa5Y,KAAKq4B,OAAOzf,UAClC,EAEAvN,SAAU,WACN,IAQIhO,EARAi7B,EAAoBt4B,KAAKq4B,OAAOjH,kBAAkB7zB,SAAS,GAC3Dg7B,EAAiBv4B,KAAKq4B,OAAO9G,eAAeh0B,SAAS,GAErDi7B,EAAqBF,EAAkB/6B,SAAS,GAAGA,SAASD,OAC5Dm7B,EAAkBF,EAAeh7B,SAAS,GAAGA,SAASD,OAEtDyvB,EAAQ/sB,KAAKq4B,OAAO/1B,QAAQ2kB,YAC5BppB,EAAS,GAGb,GAAI46B,GAAmBz4B,KAAK4Y,WAAWhgB,OAAO,GAC1C,IAAKyE,EAAM,EAAGA,EAAMo7B,EAAiBp7B,IACjCQ,EAAOE,KAAK,CACR26B,WAAW,IAKvB,IAAKr7B,EAAM,EAAGA,EAAMm7B,EAAoBn7B,IACpCQ,EAAOE,KAAK,CACR26B,WAAW,EACX3L,MAAOA,IAIf,OAAOlvB,CACX,EAEA86B,OAAQ,SAAS3vB,EAAMtM,EAAMwP,GAUzB,IATA,IAKIiqB,EACApwB,EAAKgX,EACLve,EAAG0rB,EAPHrsB,EAAS,GAETwD,EAAI,EACJ/D,EAAS0L,EAAK1L,OAMX+D,EAAI/D,EAAQ+D,IAAK,CAKpB,IAJA0E,EAAM,GAENowB,GADApZ,EAAQ/T,EAAK3H,GAAG9D,UACID,OAEfkB,EAAI,EAAGA,EAAI23B,EAAa33B,IACzB0rB,EAAOnN,EAAMve,GAEbuH,EAAIhI,KAAK,CACL66B,WAAY,UACZC,MAAO,OACP98B,MAAOmuB,EAAKnuB,MACZm5B,QAAShL,EAAK1L,KAAK0W,SAAW,EAC9BD,QAAS/K,EAAK1L,KAAKyW,SAAW,IAIlC/oB,GACAA,EAASnG,EAAK1E,GAGlBxD,EAAOE,KAAK,CACRgf,MAAOhX,EACPrJ,KAAMA,GAEd,CAEA,OAAOmB,CACX,EAEAyN,MAAO,WACH,IAAIgtB,EAAoBt4B,KAAKq4B,OAAOjH,kBAAkB7zB,SAAS,GAC3Dg7B,EAAiBv4B,KAAKq4B,OAAO9G,eAAeh0B,SAAS,GAErDi7B,EAAqBF,EAAkB/6B,SAAS,GAAGA,SAASD,OAC5Dm7B,EAAkBF,EAAeh7B,SAAS,GAAGA,SAASD,OAEtDu3B,EAAmByD,EAAkB/6B,SAAS,GAAGA,SACjDwrB,EAAgBwP,EAAeh7B,SAAS,GAAGA,SAC3Cu7B,EAAc94B,KAAKq4B,OAAO7G,YAAYj0B,SAAS,GAAGA,SAAS,GAAGA,SAE9Dw7B,EAAa/4B,KAAK24B,OAAO9D,EAAkB,UAE3C4D,GACAM,EAAW,GAAGhc,MAAM5H,OAAO,EAAG,EAAG,CAC7ByjB,WAAY,UACZC,MAAO,OACP98B,MAAO,GACPm5B,QAASuD,EACTxD,QAASJ,EAAiBv3B,SAIlC,IAuBI07B,EAAUh5B,KAAK24B,OAAO5P,EAAe,QAvBtB,SAAShjB,EAAK7B,GAK7B,IAJA,IACIgmB,EAAMnuB,EADNyC,EAAI,EAEJue,EAAQ+b,EAAY50B,GAAO3G,SAExBiB,EAAIg6B,EAAoBh6B,IAC3B0rB,EAAOnN,EAAMve,GACbzC,EAAQ+W,OAAOoX,EAAKnuB,OAEhB0D,MAAM1D,KACNA,EAAQmuB,EAAKnuB,OAGjBgK,EAAIhI,KAAK,CACL66B,WAAY,UACZC,MAAO,OACP98B,MAAOA,EACPm5B,QAAS,EACTD,QAAS,GAGrB,IAIA,OAAO8D,EAAW7zB,OAAO8zB,EAC7B,EAEAC,YAAa,WACT,IAAIX,EAAoBt4B,KAAKq4B,OAAOjH,kBAAkB7zB,SAAS,GAM/D,MAAO,CACH27B,SANiBl5B,KAAKq4B,OAAO9G,eAAeh0B,SAAS,GAEpBA,SAAS,GAAGA,SAASD,OAKtD67B,SAJmBb,EAAkB/6B,SAAS,GAAGA,SAItBD,OAEnC,EAEA87B,WAAY,WACR,MAAMd,EAAoBt4B,KAAKq4B,OAAOlT,eAAe6O,MAAM,GACrDuE,EAAiBv4B,KAAKq4B,OAAO9S,YAAYyO,MAAM,GAE/CwE,EAAqBF,EAAkB/6B,SAAS,GAAGA,SAASD,OAC5Dm7B,EAAkBF,EAAeh7B,SAAS,GAAGA,SAASD,OAEtDyvB,EAAQ/sB,KAAKq4B,OAAO/1B,QAAQ2kB,YAC5BppB,EAAS,GAEf,GAAI46B,GAAmBz4B,KAAK4Y,WAAWhgB,OAAO,GAC1C,IAAK,IAAIyE,EAAM,EAAGA,EAAMo7B,EAAiBp7B,IACrCQ,EAAOE,KAAK,CACR26B,WAAW,IAKvB,IAAK,IAAIr7B,EAAM,EAAGA,EAAMm7B,EAAoBn7B,IACxCQ,EAAOE,KAAK,CACR26B,WAAW,EACX3L,MAAOA,IAIf,OAAOlvB,CACX,EAEAw7B,SAAU,SAASrwB,EAAMtM,EAAMwP,GAC3B,MAAMrO,EAAS,GAETP,EAASg8B,OAAO3/B,KAAKqP,GAAM1L,OAEjC,IAAK,IAAI+D,EAAI,EAAGA,EAAI/D,EAAQ+D,IAAK,CAC7B,MAAM0E,EAAM,GACNgX,EAAQ/T,EAAK3H,GAAG9D,SAChB44B,EAAcpZ,EAAMzf,OAE1B,IAAK,IAAIkB,EAAI,EAAGA,EAAI23B,EAAa33B,IAAK,CAClC,MAAM0rB,EAAOnN,EAAMve,GAEnBuH,EAAIhI,KAAK,CACL66B,WAAY,UACZC,MAAO,OACP98B,MAAOmuB,EAAKvuB,QACZu5B,QAAShL,EAAKgL,SAAW,EACzBD,QAAS/K,EAAK+K,SAAW,GAEjC,CAEI/oB,GACAA,EAASnG,EAAK1E,GAGlBxD,EAAOE,KAAK,CACRgf,MAAOhX,EACPrJ,KAAMA,GAEd,CAEA,OAAOmB,CACX,EAEA07B,QAAS,WACL,MAAMjB,EAAoBt4B,KAAKq4B,OAAOlT,eAAe6O,MAAM,GACrDuE,EAAiBv4B,KAAKq4B,OAAO9S,YAAYyO,MAAM,GAE/CwE,EAAqBF,EAAkB/6B,SAAS,GAAGA,SAASD,OAC5Dm7B,EAAkBF,EAAeh7B,SAAS,GAAGA,SAASD,OAEtDu3B,EAAmB70B,KAAKq4B,OAAOlT,eAAeuB,YAC9CqC,EAAgB/oB,KAAKq4B,OAAO9S,YAAYmB,YACxC8S,EAAex5B,KAAKq4B,OAAO5S,gBAAgB8H,KAE3CwL,EAAa/4B,KAAKq5B,SAASxE,EAAkB,UAE/C4D,GACAM,EAAW,GAAGhc,MAAM5H,OAAO,EAAG,EAAG,CAC7ByjB,WAAY,UACZC,MAAO,OACP98B,MAAO,GACPm5B,QAASuD,EACTxD,QAASqE,OAAO3/B,KAAKk7B,GAAkBv3B,SAI/C,MAwBM07B,EAAUh5B,KAAKq5B,SAAStQ,EAAe,QAxBxB,SAAShjB,EAAK7B,GAC/B,MACMu1B,GAAYv1B,EAAQ,GAAKs0B,EAE/B,IAAK,IAAIh6B,EAHa0F,EAAQs0B,EAGFh6B,EAAIi7B,EAAUj7B,IAAK,CAC3C,MAAM0rB,EAAOsP,EAAah7B,GAEpB+1B,EAA0B,OAAdrK,EAAKtxB,KAAgBsxB,EAAKtxB,KAAKmD,MAAQmuB,EAAKtxB,KAC9D,IAAImD,EAAQ+W,OAAOyhB,GAEf90B,MAAM1D,KACNA,EAAQw4B,GAGZxuB,EAAIhI,KAAK,CACL66B,WAAY,UACZC,MAAO,OACP98B,MAAOA,EACPm5B,QAAS,EACTD,QAAS,GAEjB,CACJ,IAIA,OAAO8D,EAAW7zB,OAAO8zB,EAC7B,EAGAU,cAAe,WACX,MAAMpB,EAAoBt4B,KAAKq4B,OAAOlT,eAAe6O,MAAM,GAM3D,MAAO,CACHkF,SANmBl5B,KAAKq4B,OAAO9S,YAAYyO,MAAM,GAEdz2B,SAAS,GAAGA,SAASD,OAKxD67B,SAJqBb,EAAkB/6B,SAAS,GAAGA,SAASD,OAMpE,EAEAq8B,UAAW,WAGP,IAFa35B,KAEHsC,QAAQs3B,MAAM7a,WACpB,OAAO,KAGX,MAAMuZ,EAAoBt4B,KAAKq4B,OAAOlT,eAAe6O,MAAM,GAGrDyE,EAFiBz4B,KAAKq4B,OAAO9S,YAAYyO,MAAM,GAEdz2B,SAAS,GAAGA,SAASD,OAK5D,MAAO,CACH4rB,KAAMuP,EACNoB,GANuBvB,EAAkB/6B,SAAS,GAAGA,SAASD,QAE3Cm7B,EAAkB,GAM7C,EAGAqB,SAAU,WACN,IAAIpsB,EA6BJ,OAPI1N,KAAK4Y,WAAWoX,OAAO,IACvBtiB,EAAUvV,EAAEiV,YACJhM,UAERsM,EAAU1N,KAAK4Y,WAAW3M,QAGvByB,EAAQmN,KA5BC,WACR,MAAiC,gBAA7B7a,KAAKq4B,OAAO/1B,QAAQxK,KACb,CACHiiC,OAAQ,CAAE,CACN5yB,QAASnH,KAAKo5B,aACdpwB,KAAMhJ,KAAKu5B,UACXS,WAAYh6B,KAAK05B,gBACjB74B,OAAQb,KAAK25B,eAIlB,CACHI,OAAQ,CAAE,CACN5yB,QAASnH,KAAKqL,WACdrC,KAAMhJ,KAAKsL,QACX0uB,WAAYh6B,KAAKi5B,cACjBp4B,OAAQ,OAGpB,EAS0BoB,KAAKjC,MACvC,IAGJ,IAAIi6B,GAAkB,CAClBvgC,OAAQ,SAASwgC,GACdA,EAAM7X,OAAOtkB,KAAK,eAClBm8B,EAAM53B,QAAQs3B,MAAQzhC,EAAEuB,OAAOwgC,EAAM53B,QAAQs3B,MAAO55B,KAAKsC,SACzD43B,EAAMC,YAAcn6B,KAAKm6B,WAC5B,EACA73B,QAAS,CACL83B,SAAU,GACVrb,YAAY,EACZsb,SAAU,eAEdF,YAAa,WACT,IAAIP,EAAQ55B,KAAKsC,QAAQs3B,OAAS,CAAC,EAE/BU,EAAW,IAAIjiC,EAAM+/B,mBAAmB,CACxCC,OAAQr4B,KACR45B,UAGA55B,KAAKusB,YACLvsB,KAAKwsB,WAAY,EACjBxsB,KAAKusB,WAAU,IAuBnB+N,EAASR,WAAWjf,KApBJ,SAAS0f,GAChBv6B,KAAKmB,QAAQ,cAAe,CAAE24B,SAAUS,KAC1B,IAAIliC,EAAMmiC,MAAMC,SAASF,GAE/BG,iBAAiB7f,MAAK,SAAS8f,GACpCtiC,EAAMuiC,OAAO,CACTD,QAASA,EACTN,SAAUE,EAAKF,UAAYT,EAAMS,SACjCD,SAAUR,EAAMQ,SAChBS,WAAYjB,EAAMiB,YAE1B,IAAGC,QAAO,KACF96B,KAAKusB,YACLvsB,KAAKusB,WAAU,GACfvsB,KAAKwsB,WAAY,EACrB,GAGZ,EAEmCvqB,KAAKjC,MAC5C,GAGJ3H,EAAM4hC,gBAAkBA,GAEpB5hC,EAAMmiC,OAASniC,EAAMmiC,MAAMC,UAC3BR,GAAgBvgC,OAAO40B,GAAUyM,WAGjC1iC,EAAMmiC,OAASniC,EAAMmiC,MAAMC,UAC3BR,GAAgBvgC,OAAO8qB,GAAYuW,WAGnC1iC,EAAM2iC,WACN3iC,EAAM2iC,SAASthC,OAAO40B,GAAUyM,WAEhCzM,GAAUrjB,GAAGgwB,SAAW,WACpB,OAAOj7B,KAAKk7B,eAAe,CACvBnO,MAAO/sB,KAAKilB,QAAQ8H,SACrB,CACCoO,WAAYn7B,KAAKsC,QAAQ84B,IAAID,YAErC,GAGA9iC,EAAM2iC,WACN3iC,EAAM2iC,SAASthC,OAAO8qB,GAAYuW,WAElCvW,GAAYuW,UAAUM,WAAahjC,EAAM2iC,SAASM,UAElD9W,GAAYvZ,GAAGqwB,UAAY,WACnBt7B,KAAKusB,YACLvsB,KAAKwsB,WAAY,EACjBxsB,KAAKusB,WAAU,IAEnBvsB,KAAKq7B,aAAaP,QAAO,KACjB96B,KAAKusB,YACLvsB,KAAKusB,WAAU,GACfvsB,KAAKwsB,WAAY,EACrB,GAER,EAEAhI,GAAYvZ,GAAGgwB,SAAW,WACtB,OAAOj7B,KAAKk7B,eAAe,CACvBnO,MAAO/sB,KAAKilB,QAAQ8H,SACrB,CACCoO,WAAYn7B,KAAKsC,QAAQ84B,IAAID,YAErC,GAGJ7iC,OAAOD,MAAMkjC,UAAYjjC,OAAOD,MAAMkjC,WAAa,CAAC,EACpDjjC,OAAOD,MAAMkjC,UAAUC,OAAS,CAC5B/kC,OAAQA,OACRC,oBAAqBA,oBACrBd,iBAAkBA,iBAClBe,iBAAkBA,iBAClBC,cAAeA,cACfC,YAAaA,YACbC,oBAAqBA,oBACrBC,sBAAuBA,sBACvBd,gBAAiBA,gBACjBR,eAAgBA,eAChBuB,mBAAoBA,mBACpBC,2BAA4BA,2BAC5BvB,qBAAsBA,qBACtBwB,kBAAmBA,kBACnBC,aAAcA,aACdC,iBAAkBA,iBAClBpB,UAAWA,UACXE,cAAeA,cACfC,eAAgBA,eAChBL,aAAcA,aACduB,WAAYA,WACZxB,aAAcA,aACdyB,cAAeA,cACfC,SAAUA,SACVC,WAAYA,WACZC,UAAWA,UACXC,QAASA,QACT/B,aAAcA,aACdY,UAAWA,UACXF,OAAQA,OACRG,OAAQA,OACRF,OAAQA,OAGf,CAhnOD,CAgnOGgC,OAAOD,MAAMojC,QAChB,IAAIC,QAAUrjC,aAELT,SAAU8jC","ignoreList":[],"sourcesContent":["import './kendo.dom.js';\nimport './kendo.data.js';\nimport './kendo.icons.js';\nimport './kendo.loader.js';\nimport './kendo.html.loadercontainer.js';\nimport './kendo.sortable.js';\nimport { c as createDataTree, a as createLocalDataState, s as sumAggregate, b as averageAggregate, m as minAggregate, d as maxAggregate, e as countAggregate, f as fetchData, g as createDataState, h as fetchDiscover, i as headersReducer, P as PivotGridNavigation, t as toData, j as toTree, k as toColumns, l as toRows, n as addKPI, o as addMultipleMeasures, p as buildKPIMeasures, q as cloneDataTree, r as compareAxes, u as configuratorReducer, v as createAxisDescriptors, w as createDiscoverBody, x as createFlatSchemaDimensions, y as createRequestBody, z as createTuples, A as discoverCommands, B as mergeTrees, C as parseResponse, D as readData, E as rootFields, F as setFilter, G as setSort } from './kendo.pivotgrid-common.cmn.chunk.js';\nimport { u as useLoaderContainer } from './kendo.loaderContainer.chunk.js';\n\nconst __meta__ = {\n    id: \"pivotgrid\",\n    name: \"PivotGrid\",\n    category: \"web\",\n    description: \"The PivotGrid widget is a data summarization tool.\",\n    depends: [\"dom\", \"data\", \"data.xml\", \"sortable\", \"icons\", \"loader\", \"html.loadercontainer\", \"pivotgrid-common.cmn.chunk\", \"loaderContainer.chunk\"],\n    features: [{\n        id: \"pivotgrid-configurator\",\n        name: \"Configurator\",\n        description: \"The PivotConfigurator widget allows the user to select data slices displayed in PivotGrid\",\n        depends: [ \"pivot.configurator\" ]\n    }, {\n        id: \"pivotgrid-filtering\",\n        name: \"Filtering\",\n        description: \"Support for filtering\",\n        depends: [ \"pivot.fieldmenu\" ]\n    }, {\n        id: \"pivotgrid-excel-export\",\n        name: \"Excel export\",\n        description: \"Export pivot grid data as Excel spreadsheet\",\n        depends: [ \"ooxml\" ]\n    }, {\n        id: \"pivotgrid-pdf-export\",\n        name: \"PDF export\",\n        description: \"Export pivot grid data as PDF\",\n        depends: [ \"pdf\", \"drawing\" ]\n    }, {\n        id: \"mobile-scroller\",\n        name: \"Mobile scroller\",\n        description: \"Support for kinetic scrolling in mobile device\",\n        depends: [ \"mobile.scroller\" ]\n    }]\n};\n\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        encode = kendo.htmlEncode,\n        Class = kendo.Class,\n        Comparer = kendo.data.Comparer,\n        Widget = ui.Widget,\n        DataSource = kendo.data.DataSource,\n        outerWidth = kendo._outerWidth,\n        outerHeight = kendo._outerHeight,\n        normalizeFilter = kendo.data.Query.normalizeFilter,\n        normalizeSort = kendo.data.Query.normalizeSort,\n        toString = {}.toString,\n        identity = function(o) { return o; },\n        map = $.map,\n        extend = $.extend,\n        keys = kendo.keys,\n        isFunction = kendo.isFunction,\n        RESIZE = \"resize\",\n        READ = \"read\",\n        CHANGE = \"change\",\n        ERROR = \"error\",\n        REQUESTSTART = \"requestStart\",\n        PROGRESS = \"progress\",\n        REQUESTEND = \"requestEnd\",\n        MEASURES = \"Measures\",\n        STATERESET = \"stateReset\",\n        AUTO = \"auto\",\n        DIV = \"<div></div>\",\n        NS = \".kendoPivotGrid\",\n        ROW_TOTAL_KEY = \"__row_total__\",\n        DATABINDING = \"dataBinding\",\n        DATABOUND = \"dataBound\",\n        EXPANDMEMBER = \"expandMember\",\n        HEADERTEMPLATE = ({ id, key, headerClass, colspan, rowspan, expandable, iconClass, role, expanded }) => `<th id=\"${id}\" role=\"${role}\" ${expandable ? `aria-expanded=\"${expanded}\"` : ''}  data-key=\"${encode(key)}\" class=\"${encode(headerClass)}\" ${colspan ? 'colspan=\"' + encode(colspan) + '\"' : ''} ${rowspan ? 'rowspan=\"' + encode(rowspan) + '\"' : ''}>` +\n                                    `${expandable ? kendo.ui.icon($('<span role=\"presentation\" class=\"k-pivotgrid-toggle\"></span>'), { icon: `chevron-${encode(iconClass)}` }) : ''}` +\n                                '</th>',\n        COLLAPSEMEMBER = \"collapseMember\",\n        STATE_EXPANDED_ICONNAME = \"caret-alt-down\",\n        STATE_EXPANDED_SELECTOR = `.k-i-${STATE_EXPANDED_ICONNAME},.k-svg-i-${STATE_EXPANDED_ICONNAME}`,\n        STATE_COLLAPSED_ICONNAME = \"caret-alt-right\",\n        HEADER_TEMPLATE = ({ member }) => `<span>${encode(member.caption || member.name)}</span>`,\n        PIVOTGRID_TREND_ICONS_MAP = {\n            \"kpi-trend-decrease\": \"caret-alt-down\",\n            \"kpi-trend-increase\": \"caret-alt-up\",\n            \"kpi-trend-equal\": \"minus\",\n        },\n        KPISTATUS_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: `kpi-status-${dataItem.value > 0 ? \"open\" : dataItem.value < 0 ? \"deny\" : \"hold\"}` }),\n        KPITREND_TEMPLATE = ({ dataItem }) => kendo.ui.icon($(`<span title=\"${encode(dataItem.value)}\"></span>`), { icon: PIVOTGRID_TREND_ICONS_MAP[`kpi-trend-${dataItem.value > 0 ? \"increase\" : dataItem.value < 0 ? \"decrease\" : \"equal\"}`] }),\n        DATACELL_TEMPLATE = ({ dataItem }) => (dataItem ? dataItem.fmtValue || dataItem.value ? `<span class=\"k-pivotgrid-content\">${encode(dataItem.fmtValue || dataItem.value)}</span>` : \"&nbsp;\" : \"&nbsp;\"),\n        LAYOUT_TABLE = '<table class=\"k-pivot-layout\">' +\n                            '<tr>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-rowheaders\"></div>' +\n                                '</td>' +\n                                '<td>' +\n                                    '<div class=\"k-pivot-table\"></div>' +\n                                '</td>' +\n                            '</tr>' +\n                        '</table>';\n        var AXIS_ROWS = \"rows\";\n        var AXIS_COLUMNS = \"columns\";\n\n        var tableStyles = {\n            tableRow: \"k-table-row\",\n            header: \"k-header k-table-th\",\n            headerTable: \"k-grid-header-table k-table k-table-md\",\n            table: \"k-table k-table-md\",\n            contentTable: \"k-grid-table k-table k-table-md\",\n            tbody: \"k-table-tbody\",\n            tableCell: \"k-table-td\"\n        };\n\n    function normalizeMeasures(measure) {\n        var descriptor = typeof measure === \"string\" ? [{ name: measure }] : measure;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: d };\n            }\n            return $.extend(true, d, { name: d.name, type: d.type });\n        });\n    }\n\n    function normalizeMembers(member) {\n        var descriptor = typeof member === \"string\" ? [{ name: [member], expand: false }] : member;\n        var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n        return map(descriptors, function(d) {\n            if (typeof d === \"string\") {\n                return { name: [d], expand: false };\n            }\n            return { name: (toString.call(d.name) === \"[object Array]\" ? d.name.slice() : [d.name]), expand: d.expand };\n        });\n    }\n\n    function normalizeName(name) {\n        if (name.indexOf(\" \") !== -1) {\n            name = '[\"' + name + '\"]';\n        }\n\n        return name;\n    }\n\n    function accumulateMembers(accumulator, rootTuple, tuple, level) {\n        var idx, length;\n        var children;\n        var member;\n\n        if (!tuple) {\n            tuple = rootTuple;\n        }\n\n        if (!level) {\n            level = 0;\n        }\n\n        member = tuple.members[level];\n\n        if (!member || member.measure) { //return if no member or measure\n            return;\n        }\n\n        children = member.children;\n        length = children.length;\n\n        if (tuple === rootTuple) {\n            accumulator[kendo.stringify([member.name])] = !!length;\n        } else if (length) {\n            accumulator[kendo.stringify(buildPath(tuple, level))] = true;\n        }\n\n        if (length) {\n            for (idx = 0; idx < length; idx++) {\n                accumulateMembers(accumulator, rootTuple, children[idx], level);\n            }\n        }\n\n        accumulateMembers(accumulator, rootTuple, tuple, level + 1);\n    }\n\n    function descriptorsForAxes(tuples) {\n        var result = {};\n\n        if (tuples.length) {\n            accumulateMembers(result, tuples[0]);\n        }\n\n        var descriptors = [];\n        for (var k in result) {\n            descriptors.push({ name: JSON.parse(k), expand: result[k] });\n        }\n\n        return descriptors;\n    }\n\n    function addMissingPathMembers(members, axis) {\n        var tuples = axis.tuples || [];\n        var firstTuple = tuples[0];\n\n        if (firstTuple && members.length < firstTuple.members.length) {\n            var tupleMembers = firstTuple.members;\n\n            for (var idx = 0; idx < tupleMembers.length; idx++) {\n                if (tupleMembers[idx].measure) {\n                    continue;\n                }\n\n                var found = false;\n                for (var j = 0; j < members.length; j++) {\n                    if (getName(members[j]).indexOf(tupleMembers[idx].hierarchy) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    members.push({ name: [tupleMembers[idx].name], expand: false }); //calling normalize here to make name from string to array\n                }\n            }\n        }\n    }\n\n    function tupleToDescriptors(tuple) {\n        var result = [];\n        var members = tuple.members;\n\n        for (var idx = 0; idx < members.length; idx++) {\n            if (members[idx].measure) {\n                continue;\n            }\n\n            //make tuple name an array\n            result.push({ name: [members[idx].name], expand: members[idx].children.length > 0 });\n        }\n\n        return result;\n    }\n\n    function descriptorsForMembers(axis, members, measures) {\n        axis = axis || {};\n\n        addMissingPathMembers(members, axis);\n\n        if (measures.length > 1) {\n            members.push({\n                name: MEASURES,\n                measure: true,\n                children: normalizeMembers(measures)\n            });\n        }\n\n        var tupletoSearch = {\n            members: members\n        };\n\n        if (axis.tuples) {\n            var result = findExistingTuple(axis.tuples, tupletoSearch);\n            if (result.tuple) {\n                members = tupleToDescriptors(result.tuple);\n            }\n        }\n\n        return members;\n    }\n\n    function createAggregateGetter(m) {\n        var measureGetter = kendo.getter(m.field, true);\n        return function(aggregatorContext, state) {\n            return m.aggregate(measureGetter(aggregatorContext.dataItem), state, aggregatorContext);\n        };\n    }\n\n    function isNumber(val) {\n        return typeof val === \"number\" && !isNaN(val);\n    }\n\n    function isDate(val) {\n        return val && val.getTime;\n    }\n\n    function getScollWidth() {\n        var scrollbar = 0;\n        var div;\n        if (document && document.createElement) {\n            div = document.createElement('div');\n\n            div.style.cssText = 'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n            div.innerHTML = '&nbsp;';\n            document.body.appendChild(div);\n\n            scrollbar = div.offsetWidth - div.scrollWidth;\n\n            document.body.removeChild(div);\n        }\n\n        return scrollbar;\n    }\n\n    function loadLocalData(data, params, deferred) {\n        const that = this;\n        const originalData = (that.reader.data(data) || []).slice(0);\n        if (originalData && !that._pristineData) {\n            that._pristineData = originalData;\n        }\n        const columnSettings = that._createSettings(params.columnAxes);\n        const rowSettings = that._createSettings(params.rowAxes);\n        const measures = that.measures();\n        const dataTree = createDataTree(originalData, rowSettings, columnSettings, measures, { dataField: \"aggregate\", columnsData: \"columns\" }, that.filter() || []);\n\n        const stateArgs = {\n            dataTree: dataTree,\n            columnSettings: columnSettings,\n            rowSettings: rowSettings,\n            columnAxes: params.columnAxes,\n            rowAxes: params.rowAxes,\n            measures: measures.map(function(item) { return item; }),\n            fields: { dataField: \"aggregate\", columnsData: \"columns\" },\n            sort: flattenSortDescriptors(params.sort || [])\n        };\n\n        that._saveState(createLocalDataState(stateArgs));\n        that.trigger(CHANGE);\n        deferred.resolve();\n    }\n\n    function flattenSortDescriptors(descriptors) {\n        var result = [];\n        for (var i = 0; i < descriptors.length; i++) {\n            result.push({\n                dir: descriptors[i].dir,\n                field: descriptors[i].field.split(\".\").pop()\n            });\n        }\n        return result;\n    }\n\n    function createLocalMeasure(field, key, format, aggregate) {\n        var formatFunc = function(value) { return kendo.format(this.format, value); };\n        var measureMap = {\n            \"sum\": sumAggregate,\n            \"average\": averageAggregate,\n            \"min\": minAggregate,\n            \"max\": maxAggregate,\n            \"count\": countAggregate,\n        };\n        var valueFunc = function(item) { return item[this.field]; };\n        var measure = {\n                value: valueFunc.bind({ field: field }),\n                aggregate: measureMap[aggregate],\n                caption: key,\n                uniqueName: key,\n                type: 2,\n                name: [key]\n            };\n        if (format) {\n            measure.aggregate.format = formatFunc.bind({ format: format });\n        }\n\n        return measure;\n    }\n\n    function getIcons(sortIcon, options, pivotOptions) {\n        var sortable = options.sortable,\n            filterable = options.filterable,\n            reorderable = pivotOptions.reorderable,\n            result = \"\";\n\n        if (sortable) {\n            result += sortIcon ? `<span class=\"k-chip-action\">${kendo.ui.icon(sortIcon + \"-sm\")}</span>` : '';\n        }\n\n        if (filterable || sortable) {\n            result += `<span class=\"k-setting-fieldmenu k-chip-action\">${kendo.ui.icon(\"more-vertical\")}</span>`;\n        }\n        if (reorderable) {\n            result += `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n        }\n\n        return result;\n    }\n\n    var functions = {\n        sum: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator)) {\n                accumulator = value;\n            } else if (isNumber(value)) {\n                accumulator += value;\n            }\n\n            return accumulator;\n        },\n        count: function(value, state) {\n            return (state.accumulator || 0) + 1;\n        },\n        average: {\n            aggregate: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (state.count === undefined$1) {\n                    state.count = 0;\n                }\n\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n\n                if (isNumber(value)) {\n                    state.count++;\n                }\n\n                return accumulator;\n            },\n            result: function(state) {\n                var accumulator = state.accumulator;\n\n                if (isNumber(accumulator)) {\n                    accumulator = accumulator / state.count;\n                }\n\n                return accumulator;\n            }\n        },\n        max: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator < value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        },\n        min: function(value, state) {\n            var accumulator = state.accumulator;\n\n            if (!isNumber(accumulator) && !isDate(accumulator)) {\n                accumulator = value;\n            }\n\n            if (accumulator > value && (isNumber(value) || isDate(value))) {\n                accumulator = value;\n            }\n            return accumulator;\n        }\n    };\n\n    var PivotCubeBuilder = Class.extend({\n        init: function(options) {\n            this.options = extend({}, this.options, options);\n            this.dimensions = this._normalizeDescriptors(\"field\", this.options.dimensions);\n            this.measures = this._normalizeDescriptors(\"name\", this.options.measures);\n        },\n\n        _normalizeDescriptors: function(keyField, descriptors) {\n            descriptors = descriptors || {};\n            var fields = {};\n            var field;\n\n            if (toString.call(descriptors) === \"[object Array]\") {\n                for (var idx = 0, length = descriptors.length; idx < length; idx++) {\n                    field = descriptors[idx];\n                    if (typeof field === \"string\") {\n                        fields[field] = {};\n                    } else if (field[keyField]) {\n                        fields[field[keyField]] = field;\n                    }\n                }\n                descriptors = fields;\n            }\n\n            return descriptors;\n        },\n\n        _rootTuples: function(rootNames, measureAggregators) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var root, name, parts;\n            var measureIdx = 0;\n            var idx;\n\n            var rootNamesLength = rootNames.length;\n            var result = [];\n            var keys = [];\n\n            if (rootNamesLength || measureAggregators.length) {\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n\n                    root = { members: [] };\n\n                    for (idx = 0; idx < rootNamesLength; idx++) {\n                        name = rootNames[idx];\n                        parts = name.split(\"&\");\n\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                            name: name,\n                            levelName: name,\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: parts.length > 1 ? parts[0] : undefined$1,\n                            hierarchy: name\n                        };\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        root.members[root.members.length] = {\n                            children: [],\n                            caption: (measureAggregators[measureIdx]).caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: false,\n                            parentName: undefined$1,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    result[result.length] = root;\n                }\n\n                keys.push(ROW_TOTAL_KEY);\n            }\n\n            return {\n                keys: keys,\n                tuples: result\n            };\n        },\n\n        _sortMap: function(map, sortDescriptors) {\n            var sortedMaps = [];\n            var sortTree = [];\n            var flattenTree = [];\n            var mapItem;\n            var key;\n\n            for (key in map) {\n                if (!map[key].directParentName) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            //if there are no root this means that something is expanding\n            //and we should only sort that part of the tree\n            if (!sortTree.length) {\n                for (key in map) {\n                    sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                }\n            }\n\n            fillSortTree(sortTree, map);\n\n            // fill tree recursive\n            for (var i = 0; i < sortDescriptors.length; i++) {\n                sortItemsTree(sortDescriptors[i].field.split(\".\").pop(), sortTree, Comparer.create({ field: \"name\", dir: sortDescriptors[i].dir }));\n            }\n\n            flattenTree = flatColumns(sortTree);\n\n            //we need to flatten the structure so the tuples can build correctly\n            for (var j = 0; j < flattenTree.length; j++) {\n                mapItem = map[flattenTree[j].name];\n                mapItem.index = j;\n                sortedMaps[j] = mapItem;\n            }\n\n            return sortedMaps;\n        },\n\n        _expandedTuples: function(map, expanded, measureAggregators, sortDescriptors) {\n            var aggregatorsLength = measureAggregators.length || 1;\n            var dimensionsSchema = this.dimensions || [];\n            var measureIdx;\n            var tuple;\n\n            var key;\n            var mapItem;\n            var current;\n            var currentKeys;\n            var accumulator = [];\n            var accumulatorKeys = [];\n            var memberInfo;\n\n            var expandedNames;\n            var parts;\n            var name;\n            var idx;\n\n            if (sortDescriptors && sortDescriptors.length && !$.isEmptyObject(map)) {\n                map = this._sortMap(map, sortDescriptors);\n            }\n\n            for (key in map) {\n                mapItem = map[key];\n                memberInfo = this._findExpandedMember(expanded, mapItem.uniquePath);\n\n                current = accumulator[memberInfo.index] || [];\n                currentKeys = accumulatorKeys[memberInfo.index] || [];\n\n                expandedNames = memberInfo.member.names;\n\n                for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n                    tuple = { members: [] };\n                    for (idx = 0; idx < expandedNames.length; idx++) {\n                        if (idx === memberInfo.member.expandedIdx) {\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: mapItem.value,\n                                name: mapItem.name,\n                                hasChildren: false,\n                                levelNum: 1,\n                                levelName: mapItem.parentName + mapItem.name,\n                                parentName: mapItem.parentName,\n                                hierarchy: mapItem.parentName + mapItem.name\n                            };\n\n                            if (measureIdx === 0) {\n                                currentKeys.push(buildPath(tuple, idx).join(\"\"));\n                            }\n                        } else {\n                            name = expandedNames[idx];\n                            parts = name.split(\"&\");\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                name: name,\n                                levelName: name,\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                hierarchy: name\n                            };\n                        }\n                    }\n\n                    if (aggregatorsLength > 1) {\n                        tuple.members[tuple.members.length] = {\n                            children: [],\n                            caption: measureAggregators[measureIdx].caption,\n                            name: measureAggregators[measureIdx].descriptor.name,\n                            levelName: \"MEASURES\",\n                            levelNum: \"0\",\n                            hasChildren: true,\n                            parentName: undefined$1,\n                            hierarchy: \"MEASURES\"\n                        };\n                    }\n\n                    current[current.length] = tuple;\n                }\n\n                accumulator[memberInfo.index] = current;\n                accumulatorKeys[memberInfo.index] = currentKeys;\n            }\n\n            return {\n                keys: accumulatorKeys,\n                tuples: accumulator\n            };\n        },\n\n        _findExpandedMember: function(members, parentName) {\n            for (var idx = 0; idx < members.length; idx++) {\n                if (members[idx].uniquePath === parentName) {\n                    return {\n                        member: members[idx],\n                        index: idx\n                    };\n                }\n            }\n        },\n\n        _asTuples: function(map, descriptor, measureAggregators, sortDescriptors) {\n            measureAggregators = measureAggregators || [];\n\n            var rootInfo = this._rootTuples(descriptor.root, measureAggregators);\n            var expandedInfo = this._expandedTuples(map, descriptor.expanded, measureAggregators, sortDescriptors);\n\n            return {\n                keys: [].concat.apply(rootInfo.keys, expandedInfo.keys),\n                tuples: [].concat.apply(rootInfo.tuples, expandedInfo.tuples)\n            };\n        },\n\n        _measuresInfo: function(measures, rowAxis) {\n            var idx = 0;\n            var length = measures && measures.length;\n\n            var aggregateNames = [];\n            var resultFuncs = {};\n            var formats = {};\n\n            var descriptors = (this.measures || {});\n            var measure;\n            var name;\n\n            for (; idx < length; idx++) {\n                name = measures[idx].descriptor.name;\n                measure = descriptors[name] || {};\n\n                aggregateNames.push(name);\n\n                if (measure.result) {\n                    resultFuncs[name] = measure.result;\n                }\n\n                if (measure.format) {\n                    formats[name] = measure.format;\n                }\n            }\n\n            return {\n                names: aggregateNames,\n                formats: formats,\n                resultFuncs: resultFuncs,\n                rowAxis: rowAxis\n            };\n        },\n\n        _toDataArray: function(map, measuresInfo, rowKeys, columnKeys) {\n            var result = [];\n\n            var aggregates;\n            var name, i, j, k, n;\n            var row, column, columnKey;\n\n            var rowMeasureNamesLength = 1;\n            var rowMeasureNames = [];\n            var columnMeasureNames;\n\n            var rowLength = rowKeys.length || 1;\n            var columnLength = columnKeys.length || 1;\n\n            if (measuresInfo.rowAxis) {\n                rowMeasureNames = measuresInfo.names;\n                rowMeasureNamesLength = rowMeasureNames.length;\n            } else {\n                columnMeasureNames = measuresInfo.names;\n            }\n\n            for (i = 0; i < rowLength; i++) {\n                row = map[rowKeys[i] || ROW_TOTAL_KEY];\n\n                for (n = 0; n < rowMeasureNamesLength; n++) {\n                    if (measuresInfo.rowAxis) {\n                        columnMeasureNames = [rowMeasureNames[n]];\n                    }\n\n                    for (j = 0; j < columnLength; j++) {\n                        columnKey = columnKeys[j] || ROW_TOTAL_KEY;\n                        column = row.items[columnKey];\n\n                        if (columnKey === ROW_TOTAL_KEY) {\n                            aggregates = row.aggregates;\n                        } else {\n                            aggregates = column ? column.aggregates : {};\n                        }\n\n                        for (k = 0; k < columnMeasureNames.length; k++) {\n                            name = columnMeasureNames[k];\n                            this._addData(result, aggregates[name], measuresInfo.formats[name], measuresInfo.resultFuncs[name]);\n                        }\n                    }\n                }\n            }\n\n            return result;\n        },\n\n        _addData: function(result, value, format, resultFunc) {\n            var fmtValue = \"\";\n            var ordinal;\n\n            if (value) {\n                value = resultFunc ? resultFunc(value) : value.accumulator;\n                fmtValue = format ? kendo.format(format, value) : value;\n            }\n\n            ordinal = result.length;\n\n            result[ordinal] = {\n                ordinal: ordinal,\n                value: value || \"\",\n                fmtValue: fmtValue\n            };\n        },\n\n        _matchDescriptors: function(dataItem, descriptor, getters) {\n            var parts;\n            var parentField;\n            var expectedValue;\n\n            var names = descriptor.names;\n            var idx = descriptor.expandedIdx;\n            var value;\n\n            while (idx > 0) {\n                parts = names[--idx].split(\"&\");\n                if (parts.length > 1) {\n                    parentField = parts[0];\n                    expectedValue = parts[1];\n\n                    value = getters[parentField](dataItem);\n                    value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                    if (value != expectedValue) {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        },\n\n        _calculateAggregate: function(measureAggregators, aggregatorContext, totalItem) {\n            var result = {};\n            var state;\n            var name;\n\n            for (var measureIdx = 0; measureIdx < measureAggregators.length; measureIdx++) {\n                name = measureAggregators[measureIdx].descriptor.name;\n                state = totalItem.aggregates[name] || { };\n                state.accumulator = measureAggregators[measureIdx].aggregator(aggregatorContext, state);\n                result[name] = state;\n            }\n\n            return result;\n        },\n\n        _processColumns: function(measureAggregators, descriptors, getters, columns, aggregatorContext, rowTotal, state, updateColumn) {\n            var value;\n            var descriptor;\n            var column;\n            var totalItem;\n            var key, name, parentName, path;\n            var dataItem = aggregatorContext.dataItem;\n            var idx = 0;\n\n            for (; idx < descriptors.length; idx++) {\n                descriptor = descriptors[idx];\n\n                //checks whether the dataItem is relevant to the descriptors\n                if (!this._matchDescriptors(dataItem, descriptor, getters)) {\n                    continue;\n                }\n\n                path = descriptor.names.slice(0, descriptor.expandedIdx).join(\"\");\n                name = descriptor.names[descriptor.expandedIdx];\n\n\n                value = getters[name](dataItem);\n                value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                parentName = name;\n                name = name + \"&\" + value;\n                key = path + name;\n\n                column = columns[key] || {\n                    index: state.columnIndex,\n                    parentName: parentName,\n                    name: name,\n                    directParentName: path.indexOf(\"&\") !== -1 ? path : \"\",\n                    uniquePath: path + parentName,\n                    childrenMap: {},\n                    value: value\n                };\n\n                if (path && columns[path] && !columns[path].childrenMap[path + parentName + \"&\" + value]) {\n                    columns[path].childrenMap[path + parentName + \"&\" + value] = true;\n                }\n\n                totalItem = rowTotal.items[key] || {\n                    aggregates: {}\n                };\n\n                rowTotal.items[key] = {\n                    index: column.index,\n                    aggregates: this._calculateAggregate(measureAggregators, aggregatorContext, totalItem)\n                };\n\n                if (updateColumn) {\n                    if (!columns[key]) {\n                        state.columnIndex++;\n                    }\n                    columns[key] = column;\n                }\n            }\n        },\n\n        _measureAggregators: function(options) {\n            var measureDescriptors = options.measures || [];\n            var measures = this.measures || {};\n            var aggregators = [];\n            var descriptor, measure, idx, length;\n            var defaultAggregate, aggregate;\n\n            if (measureDescriptors.length) {\n                for (idx = 0, length = measureDescriptors.length; idx < length; idx++) {\n                    descriptor = measureDescriptors[idx];\n                    measure = measures[descriptor.name];\n                    defaultAggregate = null;\n\n                    if (measure) {\n                        aggregate = measure.aggregate;\n                        if (typeof aggregate === \"string\") {\n                            defaultAggregate = functions[aggregate.toLowerCase()];\n\n                            if (!defaultAggregate) {\n                                throw new Error(\"There is no such aggregate function\");\n                            }\n\n                            measure.aggregate = defaultAggregate.aggregate || defaultAggregate;\n                            measure.result = defaultAggregate.result;\n                        }\n\n\n                        aggregators.push({\n                            descriptor: descriptor,\n                            caption: measure.caption,\n                            result: measure.result,\n                            aggregator: createAggregateGetter(measure)\n                        });\n                    }\n                }\n            } else {\n                aggregators.push({\n                    descriptor: { name: \"default\" },\n                    caption: \"default\",\n                    aggregator: function() { return 1; }\n                });\n            }\n\n            return aggregators;\n        },\n\n        _buildGetters: function(names) {\n            var result = {};\n            var parts;\n            var name;\n\n            for (var idx = 0; idx < names.length; idx++) {\n                name = names[idx];\n                parts = name.split(\"&\");\n\n                if (parts.length > 1) {\n                    result[parts[0]] = kendo.getter(parts[0], true);\n                } else {\n                    result[name] = kendo.getter(normalizeName(name), true);\n                }\n            }\n\n            return result;\n        },\n\n        _parseDescriptors: function(descriptors) {\n            var parsedDescriptors = parseDescriptors(descriptors);\n            var rootNames = getRootNames(parsedDescriptors.root);\n            var expanded = parsedDescriptors.expanded;\n            var result = [];\n\n            for (var idx = 0; idx < expanded.length; idx++) {\n                result.push(mapNames(expanded[idx].name, rootNames));\n            }\n\n            return {\n                root: rootNames,\n                expanded: result\n            };\n        },\n\n        _filter: function(data, filter) {\n            if (!filter) {\n                return data;\n            }\n\n            var expr;\n            var idx = 0;\n            var filters = filter.filters;\n\n            for (; idx < filters.length; idx++) {\n                expr = filters[idx];\n\n                if (expr.operator === \"in\") {\n                    filters[idx] = this._normalizeFilter(expr);\n                }\n            }\n\n            return new kendo.data.Query(data).filter(filter).data;\n        },\n\n        _normalizeFilter: function(filter) {\n            var value = filter.value.split(\",\");\n            var result = [];\n\n            if (!value.length) {\n                return value;\n            }\n\n            for (var idx = 0; idx < value.length; idx++) {\n                result.push({\n                    field: filter.field,\n                    operator: \"eq\",\n                    value: value[idx]\n                });\n            }\n\n            return {\n                logic: \"or\",\n                filters: result\n            };\n        },\n\n        process: function(data, options) {\n            data = data || [];\n            options = options || {};\n\n            data = this._filter(data, options.filter);\n\n            var measures = options.measures || [];\n\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n\n            var columnDescriptors = options.columns || [];\n            var rowDescriptors = options.rows || [];\n\n            if (!columnDescriptors.length && rowDescriptors.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columnDescriptors = rowDescriptors;\n                rowDescriptors = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length) {\n                measuresRowAxis = false;\n            }\n\n            if (!columnDescriptors.length && measures.length) {\n                columnDescriptors = normalizeMembers(options.measures);\n            }\n\n            columnDescriptors = this._parseDescriptors(columnDescriptors);\n            rowDescriptors = this._parseDescriptors(rowDescriptors);\n\n            var aggregatedData = {};\n            var columns = {};\n            var rows = {};\n\n            var rowValue;\n            var state = { columnIndex: 0 };\n\n            var measureAggregators = this._measureAggregators(options);\n\n            var columnGetters = this._buildGetters(columnDescriptors.root);\n            var rowGetters = this._buildGetters(rowDescriptors.root);\n\n            var processed = false;\n\n            var expandedColumns = columnDescriptors.expanded;\n            var expandedRows = rowDescriptors.expanded;\n\n            var dataItem;\n            var aggregatorContext;\n            var hasExpandedRows = expandedRows.length !== 0;\n\n            var rowIdx, rowDescriptor, rowName, rowTotal;\n            var key, path, parentName, value;\n            var columnsInfo, rowsInfo;\n            var length = data.length;\n            var idx = 0;\n\n            if (columnDescriptors.root.length || rowDescriptors.root.length) {\n                processed = true;\n\n                for (idx = 0; idx < length; idx++) {\n                    dataItem = data[idx];\n\n                    aggregatorContext = {\n                        dataItem: dataItem,\n                        index: idx\n                    };\n\n                    rowTotal = aggregatedData[ROW_TOTAL_KEY] || {\n                        items: {},\n                        aggregates: {}\n                    };\n\n                    this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, rowTotal, state, !hasExpandedRows);\n\n                    rowTotal.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, rowTotal);\n                    aggregatedData[ROW_TOTAL_KEY] = rowTotal;\n\n                    for (rowIdx = 0; rowIdx < expandedRows.length; rowIdx++) {\n                        rowDescriptor = expandedRows[rowIdx];\n\n                        if (!this._matchDescriptors(dataItem, rowDescriptor, rowGetters)) {\n                            this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, { items: {}, aggregates: {} }, state, true);\n                            continue;\n                        }\n\n                        path = rowDescriptor.names.slice(0, rowDescriptor.expandedIdx).join(\"\");\n                        rowName = rowDescriptor.names[rowDescriptor.expandedIdx];\n\n                        parentName = rowName;\n\n                        rowValue = rowGetters[rowName](dataItem);\n                        rowValue = rowValue !== undefined$1 ? rowValue.toString() : rowValue;\n\n                        rowName = rowName + \"&\" + rowValue;\n                        key = path + rowName;\n\n                        rows[key] = {\n                            uniquePath: path + parentName,\n                            parentName: parentName,\n                            name: rowName,\n                            value: rowValue\n                        };\n\n                        value = aggregatedData[key] || {\n                            items: {},\n                            aggregates: {}\n                        };\n\n                        this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, value, state, true);\n\n                        value.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, value);\n                        aggregatedData[key] = value;\n                    }\n                }\n            }\n\n            if (processed && length) {\n                if (measureAggregators.length > 1 && (!options.columns || !options.columns.length)) {\n                    columnDescriptors = {\n                        root: [],\n                        expanded: []\n                    };\n                }\n\n                columnsInfo = this._asTuples(columns, columnDescriptors, measuresRowAxis ? [] : measureAggregators, options.sort ? options.sort : []);\n                rowsInfo = this._asTuples(rows, rowDescriptors, measuresRowAxis ? measureAggregators : [], options.sort ? options.sort : []);\n\n                columns = columnsInfo.tuples;\n                rows = rowsInfo.tuples;\n\n                aggregatedData = this._toDataArray(aggregatedData, this._measuresInfo(measureAggregators, measuresRowAxis), rowsInfo.keys, columnsInfo.keys);\n            } else {\n                aggregatedData = columns = rows = [];\n            }\n\n            return {\n                axes: {\n                    columns: { tuples: columns },\n                    rows: { tuples: rows }\n                },\n                data: aggregatedData\n            };\n        }\n    });\n\n    var PivotTransport = Class.extend({\n        init: function(options, transport) {\n            this.transport = transport;\n            this.options = transport.options || {};\n\n            if (!this.transport.discover) {\n                if (isFunction(options.discover)) {\n                    this.discover = options.discover;\n                }\n            }\n        },\n        read: function(options) {\n            return this.transport.read(options);\n        },\n        update: function(options) {\n            return this.transport.update(options);\n        },\n        create: function(options) {\n            return this.transport.create(options);\n        },\n        destroy: function(options) {\n            return this.transport.destroy(options);\n        },\n        discover: function(options) {\n            if (this.transport.discover) {\n                return this.transport.discover(options);\n            }\n            options.success({});\n        },\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        }\n    });\n\n    var PivotDataSourceV2 = DataSource.extend({\n        init: function(options) {\n\n            var cube = ((options || {}).schema || {}).cube;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                this.cubeSchema = $.extend(schema, this._cubeSchema(cube));\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                schema: this.cubeSchema\n            }, options));\n\n            var transportOptions = this.options.transport || {};\n\n            if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                this._online = true;\n                this.transport = new XmlaTransportV2(transportOptions);\n            } else {\n                this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n            }\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            var measures = this.cubeSchema ? this.cubeSchema.measures() : this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                this._measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        axes: function() {\n            return {\n                columns: normalizeAxis(this.columns()),\n                rows: normalizeAxis(this.rows())\n            };\n        },\n\n        catalog: function(val) {\n            if (val === undefined$1) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        cube: function(val) {\n            if (val === undefined$1) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._mergeState({});// clears current state\n            this.read();\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        fetch: function(callback) {\n            var that = this;\n            if (this._data === undefined$1 || this._data.length === 0) {\n                var fn = function() {\n                    if (isFunction(callback)) {\n                        callback.call(that);\n                    }\n                };\n\n                return this._query().done(fn);\n            }\n        },\n\n        _createSettings: function(axes) {\n            var settings = [];\n            var key;\n            var dimensions = this.cubeSchema.dimensionsSettings();\n            var displayValueFunc = function(item) { return item[this.key]; };\n            var sortValueFunc = function(value) { return value; };\n            for (var i = 0; i < axes.length; i++) {\n                key = axes[i].name[0];\n                settings.push({\n                    key: key,\n                    displayValue: displayValueFunc.bind({ key: key }),\n                    sortValue: sortValueFunc,\n                    caption: (dimensions[key] || {}).caption || key\n                });\n            }\n            return settings;\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensionsSettings: function() {\n                    return cube.dimensions;\n                },\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                restoreMeasure: function(measures, measure) {\n                    for (var i = 0; i < measures.length; i++) {\n                        if (!measures[i].aggregate) {\n                            measures[i].aggregate = measure.aggregate;\n                            measures[i].value = measure.value;\n                            measures[i].caption = measure.caption;\n                            measures[i].uniqueName = measure.uniqueName;\n                            measures[i].type = 2;\n                        }\n                    }\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push(createLocalMeasure(measures[key].field, key, measures[key].format, measures[key].aggregate));\n                    }\n\n                    return result;\n                },\n                memberType: function(name) {\n                    var getter = kendo.getter(normalizeName(name), true);\n                    var data = this.options.data || this._pristineData || [];\n                    if (!data.length) {\n                        return null;\n                    }\n\n                    return typeof getter(data[0]);\n                }.bind(this),\n                members: function(name) {\n                    var data = this.options.data || this._pristineData || [];\n                    var result = [];\n                    var distinct = {};\n                    var getter;\n                    var value;\n                    var idx = 0;\n\n                    if (name.indexOf(\"[(ALL)]\") !== -1) {\n                        return [\n                            {\n                                caption: cube.dimensions[name.split(\".\")[0]].caption || name,\n                                levelUniqueName: name,\n                                name: name,\n                                childrenCardinality: 1,\n                                uniqueName: name\n                            }\n                        ];\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0 || value === false) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value + \"\",\n                                name: value + \"\",\n                                childrenCardinality: 0,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        read: function(data) {\n            const that = this;\n            const isPrevented = that.trigger(REQUESTSTART, { type: READ });\n            const params = that._params(data);\n            const deferred = $.Deferred();\n            if (!isPrevented) {\n                that.trigger(PROGRESS);\n\n                if (that.options.data) {\n                    loadLocalData.call(that, that.options.data, params, deferred);\n                } else if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                    that.transport.read({\n                        data: params,\n                        success: function(newDataState) {\n                            that._saveState(newDataState);\n                            that.trigger(REQUESTEND, { response: newDataState, type: READ });\n                            that.trigger(CHANGE);\n                            if (that._preventRefresh) {\n                                that._preventRefresh = false;\n                            }\n                            deferred.resolve();\n                        },\n                        error: function(err) {\n                            that.trigger(ERROR, { error: err });\n                        }\n                    });\n                } else {\n                    that.transport.read({\n                        success: function(data) {\n                            loadLocalData.call(that, data, params, deferred);\n                        },\n                        error: function(err) {\n                            that.trigger(ERROR, { error: err });\n                        }\n                    });\n                }\n            }\n            return deferred.promise();\n        },\n\n        _params: function(data) {\n            var that = this;\n            var options = DataSource.fn._params.call(that, data);\n\n            options = extend({\n                columnAxes: JSON.parse(JSON.stringify(that._columns)),\n                rowAxes: JSON.parse(JSON.stringify(that._rows)),\n                measuresAxis: that.measuresAxis(),\n                measureAxes: that._measures\n            }, options);\n\n            if ((this.options.type || \"\").toLowerCase() === \"xmla\") {\n                options.connection = that.options.transport.connection;\n            }\n\n            if (options.filter) {\n                options.filter = normalizeFilter(options.filter);\n                options.filter = (options.filter || {}).filters;\n            }\n\n            if (options.sort) {\n                options.sort = normalizeSort(options.sort);\n            }\n\n            return options;\n        },\n\n        discover: function(options) {\n            const that = this;\n            const transport = that.transport;\n            const isOdata = that.options.type === \"odata\";\n\n            const converters = {\n                \"schemaMeasures\": that.reader.measures,\n                \"schemaKPIs\": that.reader.kpis,\n                \"schemaDimensions\": that.reader.dimensions,\n                \"schemaHierarchies\": that.reader.hierarchies,\n                \"schemaLevels\": that.reader.levels,\n                \"schemaCubes\": that.reader.cubes,\n                \"schemaCatalogs\": that.reader.catalogs,\n                \"schemaMembers\": that.reader.members\n            };\n\n            if (transport.discover && !isOdata) {\n                return transport.discover(options);\n            }\n\n            return $.Deferred(function(deferred) {\n                transport.discover(extend({\n                    success: function(response) {\n                       response = that.reader.parse(response);\n\n                        if (that._handleCustomErrors(response)) {\n                            return;\n                        }\n\n                        if (converters[options.command]) {\n                            response = converters[options.command](response);\n                        }\n                        deferred.resolve(response);\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, options));\n            }).promise().done(function() {\n                that.trigger(\"schemaChange\");\n            });\n        },\n\n        schemaMeasures: function() {\n            const that = this;\n            return that.discover(\n                {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                });\n        },\n\n        schemaKPIs: function() {\n            const that = this;\n            return that.discover(\n                {\n                    command: \"schemaKPIs\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                });\n            },\n\n        schemaDimensions: function() {\n            const that = this;\n            return that.discover(\n                {\n                    command: \"schemaDimensions\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                });\n            },\n\n        schemaHierarchies: function(dimensionName) {\n            const that = this;\n            return that.discover({\n                command: \"schemaHierarchies\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube(),\n                    dimensionUniqueName: dimensionName\n                }\n             });\n         },\n\n        schemaLevels: function(hierarchyName) {\n            const that = this;\n            return that.discover({\n                command: \"schemaLevels\",\n                restrictions: {\n                    catalogName: that.transport.catalog(),\n                    cubeName: that.transport.cube(),\n                    hierarchyUniqueName: hierarchyName\n                }\n            });\n        },\n\n        schemaCubes: function() {\n            const that = this;\n            return that.discover({\n                command: \"schemaCubes\",\n                restrictions: {\n                    catalogName: that.transport.catalog()\n                }\n            });\n        },\n\n\n        schemaCatalogs: function() {\n            const that = this;\n            return that.discover({\n                command: \"schemaCatalogs\"\n            });\n        },\n\n\n        schemaMembers: function(restrictions) {\n            const that = this;\n            return that.discover({\n                command: \"schemaMembers\",\n                restrictions: extend({\n                   catalogName: that.transport.catalog(),\n                   cubeName: that.transport.cube()\n                }, restrictions)\n            });\n        },\n\n        _saveState: function(state) {\n            var that = this;\n\n            that._columnTuples = state.columns;\n            that._rowTuples = state.rows;\n            that._view = that._data = state.data;\n        },\n\n        columns: function(val) {\n            if (val === undefined$1) {\n                return this._columns;\n            }\n\n            this._columns = normalizeMembers(val);\n            this.read();\n        },\n\n        rows: function(val) {\n            if (val === undefined$1) {\n                return this._rows;\n            }\n\n            this._rows = normalizeMembers(val);\n\n            this.read();\n        },\n\n        measures: function(val) {\n            if (val === undefined$1) {\n                return this._measures;\n            }\n\n            this._measures = normalizeMeasures(val);\n\n            this.read();\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            return options;\n        },\n\n        _query: function(options) {\n            var that = this;\n            var params = extend({}, {\n                sort: that.sort(),\n                measuresAxis: that.measuresAxis(),\n                filter: that.filter()\n            }, options);\n            this._mergeState(params);\n\n            return this.read();\n        },\n    });\n\n    var PivotDataSource = DataSource.extend({\n        init: function(options) {\n            var cube = ((options || {}).schema || {}).cube;\n            var measuresAxis = \"columns\";\n            var measures;\n\n            var schema = {\n                axes: identity,\n                cubes: identity,\n                catalogs: identity,\n                measures: identity,\n                dimensions: identity,\n                hierarchies: identity,\n                levels: identity,\n                members: identity\n            };\n\n            if (cube) {\n                schema = $.extend(schema, this._cubeSchema(cube));\n                this.cubeBuilder = new PivotCubeBuilder(cube);\n            }\n\n            DataSource.fn.init.call(this, extend(true, {}, {\n                schema: schema\n            }, options));\n\n            this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n\n            this._columns = normalizeMembers(this.options.columns);\n            this._rows = normalizeMembers(this.options.rows);\n\n            measures = this.options.measures || [];\n\n            if (toString.call(measures) === \"[object Object]\") {\n                measuresAxis = measures.axis || \"columns\";\n                measures = measures.values || [];\n            }\n\n            this._measures = normalizeMeasures(measures);\n            this._measuresAxis = measuresAxis;\n\n            this._skipNormalize = 0;\n            this._axes = {};\n        },\n\n        _cubeSchema: function(cube) {\n            return {\n                dimensions: function() {\n                    var result = [];\n                    var dimensions = cube.dimensions;\n\n                    for (var key in dimensions) {\n                        result.push({\n                            name: key,\n                            caption: dimensions[key].caption || key,\n                            uniqueName: key,\n                            defaultHierarchy: key,\n                            type: 1\n                        });\n                    }\n\n                    if (cube.measures) {\n                        result.push({\n                            name: MEASURES,\n                            caption: MEASURES,\n                            uniqueName: MEASURES,\n                            type: 2\n                        });\n                    }\n\n                    return result;\n                },\n                hierarchies: function() {\n                    return [];\n                },\n                measures: function() {\n                    var result = [];\n                    var measures = cube.measures;\n\n                    for (var key in measures) {\n                        result.push({\n                            name: key,\n                            caption: key,\n                            uniqueName: key,\n                            aggregator: key\n                        });\n                    }\n\n                    return result;\n                },\n                members: function(response, restrictions) {\n                    var name = restrictions.levelUniqueName || restrictions.memberUniqueName;\n                    var schemaData = this.options.schema.data;\n                    var dataGetter = isFunction(schemaData) ? schemaData : kendo.getter(schemaData, true);\n                    var data = (this.options.data && dataGetter(this.options.data)) || this._rawData || [];\n                    var result = [];\n                    var getter;\n                    var value;\n                    var idx = 0;\n                    var distinct = {};\n\n                    if (name) {\n                        name = name.split(\".\")[0];\n                    }\n\n                    if (!restrictions.treeOp) {\n                        result.push({\n                            caption: cube.dimensions[name].caption || name,\n                            childrenCardinality: \"1\",\n                            dimensionUniqueName: name,\n                            hierarchyUniqueName: name,\n                            levelUniqueName: name,\n                            name: name,\n                            uniqueName: name\n                        });\n\n                        return result;\n                    }\n\n                    getter = kendo.getter(normalizeName(name), true);\n\n                    for (; idx < data.length; idx++) {\n                        value = getter(data[idx]);\n                        if ((value || value === 0) && !distinct[value]) {\n                            distinct[value] = true;\n\n                            result.push({\n                                caption: value,\n                                childrenCardinality: \"0\",\n                                dimensionUniqueName: name,\n                                hierarchyUniqueName: name,\n                                levelUniqueName: name,\n                                name: value,\n                                uniqueName: value\n                            });\n                        }\n                    }\n\n                    return result;\n                }.bind(this)\n            };\n        },\n\n        options: {\n            serverSorting: true,\n            serverPaging: true,\n            serverFiltering: true,\n            serverGrouping: true,\n            serverAggregates: true\n        },\n\n        catalog: function(val) {\n            if (val === undefined$1) {\n                return this.transport.catalog();\n            }\n\n            this.transport.catalog(val);\n            this._mergeState({});// clears current state\n            this._axes = {};\n            this.data([]);\n        },\n\n        cube: function(val) {\n            if (val === undefined$1) {\n                return this.transport.cube();\n            }\n\n            this.transport.cube(val);\n            this._axes = {};\n            this._mergeState({});// clears current state\n            this.data([]);\n        },\n\n        axes: function() {\n            return this._axes;\n        },\n\n        columns: function(val) {\n            if (val === undefined$1) {\n                return this._columns;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._columns = normalizeMembers(val);\n            this.query({\n                columns: val,\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        rows: function(val) {\n            if (val === undefined$1) {\n                return this._rows;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this._rows = normalizeMembers(val);\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: val,\n                measures: this.measures(),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measures: function(val) {\n            if (val === undefined$1) {\n                return this._measures;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n\n            this.query({\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: normalizeMeasures(val),\n                sort: this.sort(),\n                filter: this.filter()\n            });\n        },\n\n        measuresAxis: function() {\n            return this._measuresAxis || \"columns\";\n        },\n\n        _expandPath: function(path, axis) {\n            var origin = axis === \"columns\" ? \"columns\" : \"rows\";\n            var other = axis === \"columns\" ? \"rows\" : \"columns\";\n\n            var members = normalizeMembers(path);\n            var memberToExpand = getName(members[members.length - 1]);\n\n            this._lastExpanded = origin;\n\n            members = descriptorsForMembers(this.axes()[origin], members, this.measures());\n\n            for (var idx = 0; idx < members.length; idx++) {\n                var memberName = getName(members[idx]);\n\n                if (memberName === memberToExpand) {\n                    if (members[idx].expand) {\n                        return;\n                    }\n                    members[idx].expand = true;\n                } else {\n                    members[idx].expand = false;\n                }\n            }\n\n            var descriptors = {};\n            descriptors[origin] = members;\n            descriptors[other] = this._descriptorsForAxis(other);\n\n            this._query(descriptors);\n        },\n\n        _descriptorsForAxis: function(axis) {\n            var axes = this.axes();\n            var descriptors = this[axis]() || [];\n\n            if (axes && axes[axis] && axes[axis].tuples && axes[axis].tuples[0]) {\n                descriptors = descriptorsForAxes(axes[axis].tuples || []);\n            }\n            return descriptors;\n        },\n\n        columnsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"columns\");\n        },\n\n        rowsAxisDescriptors: function() {\n            return this._descriptorsForAxis(\"rows\");\n        },\n\n        _process: function(data, e) {\n            this._view = data;\n\n            e = e || {};\n            e.items = e.items || this._view;\n\n            this.trigger(CHANGE, e);\n        },\n\n        _query: function(options) {\n            var that = this;\n\n            if (!options) {\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n            }\n\n            return that.query(extend({}, {\n                page: that.page(),\n                pageSize: that.pageSize(),\n                sort: that.sort(),\n                filter: that.filter(),\n                group: that.group(),\n                aggregate: that.aggregate(),\n                columns: this.columnsAxisDescriptors(),\n                rows: this.rowsAxisDescriptors(),\n                measures: this.measures()\n            }, options));\n        },\n\n        query: function(options) {\n            var state = this._mergeState(options);\n\n            if (this._data.length && this.cubeBuilder) {\n                this._params(state);\n                this._updateLocalData(this._pristineData);\n\n                return $.Deferred().resolve().promise();\n            }\n\n            return this.read(state);\n        },\n\n        _mergeState: function(options) {\n            options = DataSource.fn._mergeState.call(this, options);\n\n            if (options !== undefined$1) {\n                this._measures = normalizeMeasures(options.measures);\n\n                if (options.columns) {\n                    options.columns = normalizeMembers(options.columns);\n                } else if (!options.columns) {\n                    this._columns = [];\n                }\n\n                if (options.rows) {\n                    options.rows = normalizeMembers(options.rows);\n                } else if (!options.rows) {\n                    this._rows = [];\n                }\n            }\n            return options;\n        },\n\n        filter: function(val) {\n            if (val === undefined$1) {\n                return this._filter;\n            }\n\n            this._skipNormalize += 1;\n            this._clearAxesData = true;\n            this._query({ filter: val, page: 1 });\n        },\n\n        expandColumn: function(path) {\n            this._expandPath(path, \"columns\");\n        },\n\n        expandRow: function(path) {\n            this._expandPath(path, \"rows\");\n        },\n\n        success: function(data) {\n            var originalData;\n            if (this.cubeBuilder) {\n                originalData = (this.reader.data(data) || []).slice(0);\n            }\n            DataSource.fn.success.call(this, data);\n            if (originalData) {\n                this._pristineData = originalData;\n            }\n        },\n\n        _processResult: function(data, axes) {\n            if (this.cubeBuilder) {\n                var processedData = this.cubeBuilder.process(data, this._requestData);\n\n                data = processedData.data;\n                axes = processedData.axes;\n            }\n\n            var columnIndexes, rowIndexes;\n            var tuples, resultAxis, measures, axisToSkip;\n            var columnDescriptors = this.columns();\n            var rowDescriptors = this.rows();\n            var hasColumnTuples = axes.columns && axes.columns.tuples;\n\n            if (!columnDescriptors.length && rowDescriptors.length && hasColumnTuples && (this._rowMeasures().length || !this.measures().length)) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            if (!columnDescriptors.length && !rowDescriptors.length && this.measuresAxis() === \"rows\" && hasColumnTuples) {\n                axes = {\n                    columns: {},\n                    rows: axes.columns\n                };\n            }\n\n            this._axes = {\n                columns: normalizeAxis(this._axes.columns),\n                rows: normalizeAxis(this._axes.rows)\n            };\n\n            axes = {\n                columns: normalizeAxis(axes.columns),\n                rows: normalizeAxis(axes.rows)\n            };\n\n            columnIndexes = this._normalizeTuples(axes.columns.tuples, this._axes.columns.tuples, columnDescriptors, this._columnMeasures());\n            rowIndexes = this._normalizeTuples(axes.rows.tuples, this._axes.rows.tuples, rowDescriptors, this._rowMeasures());\n\n            if (this._skipNormalize > 0) {\n                this._skipNormalize -= 1;\n            }\n\n            if (!this.cubeBuilder) {\n                data = this._normalizeData({\n                    columnsLength: axes.columns.tuples.length,\n                    rowsLength: axes.rows.tuples.length,\n                    columnIndexes: columnIndexes,\n                    rowIndexes: rowIndexes,\n                    data: data\n                });\n            }\n\n            if (this._lastExpanded == \"rows\") {\n                tuples = axes.columns.tuples;\n                measures = this._columnMeasures();\n                resultAxis = validateAxis(axes.columns, this._axes.columns, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"columns\";\n                    axes.columns = resultAxis;\n                    adjustDataByColumn(tuples, resultAxis.tuples, axes.rows.tuples.length, measures, data);\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.columns.tuples, measures),\n                            rowsLength: axes.rows.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            } else if (this._lastExpanded == \"columns\") {\n                tuples = axes.rows.tuples;\n                measures = this._rowMeasures();\n                resultAxis = validateAxis(axes.rows, this._axes.rows, measures);\n\n                if (resultAxis) {\n                    axisToSkip = \"rows\";\n                    axes.rows = resultAxis;\n                    adjustDataByRow(tuples, resultAxis.tuples, axes.columns.tuples.length, measures, data);\n\n                    if (!this.cubeBuilder) {\n                        data = this._normalizeData({\n                            columnsLength: membersCount(axes.rows.tuples, measures),\n                            rowsLength: axes.columns.tuples.length,\n                            data: data\n                        });\n                    }\n                }\n            }\n\n            this._lastExpanded = null;\n\n            var result = this._mergeAxes(axes, data, axisToSkip);\n            this._axes = result.axes;\n\n            return result.data;\n        },\n\n        _readData: function(data) {\n            var axes = this.reader.axes(data);\n            var newData = this.reader.data(data);\n\n            if (this.cubeBuilder) {\n                this._rawData = newData;\n            }\n\n            return this._processResult(newData, axes);\n        },\n\n        _createTuple: function(tuple, measure, buildRoot) {\n            var members = tuple.members;\n            var length = members.length;\n            var root = { members: [] };\n            var levelName, levelNum;\n            var name, parentName;\n            var hasChildren;\n            var hierarchy;\n            var caption;\n            var member;\n            var idx = 0;\n\n            if (measure) {\n                length -= 1;\n            }\n\n            for (; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum);\n\n                name = member.name;\n                parentName = member.parentName;\n                caption = member.caption || name;\n                hasChildren = member.hasChildren;\n                hierarchy = member.hierarchy;\n                levelName = member.levelName;\n\n                if (buildRoot) {\n                    caption = \"All\";\n                    if (levelNum === 0) {\n                        parentName = member.name;\n                    } else {\n                        levelNum -= 1;\n                    }\n\n                    hasChildren = true;\n                    name = hierarchy = levelName = parentName;\n                }\n\n                root.members.push({\n                    name: name,\n                    children: [],\n                    caption: caption,\n                    levelName: levelName,\n                    levelNum: levelNum.toString(),\n                    hasChildren: hasChildren,\n                    hierarchy: hierarchy,\n                    parentName: !buildRoot ? parentName : \"\"\n                });\n            }\n\n            if (measure) {\n                root.members.push({\n                    name: measure.name,\n                    children: []\n                });\n            }\n\n            return root;\n        },\n\n        _hasRoot: function(target, source, descriptors) {\n            if (source.length) {\n                return findExistingTuple(source, target).tuple;\n            }\n\n            var members = target.members;\n            var member;\n            var descriptor;\n\n            var isRoot = true;\n            var levelNum;\n\n            for (var idx = 0, length = members.length; idx < length; idx++) {\n                member = members[idx];\n                levelNum = Number(member.levelNum) || 0;\n                descriptor = descriptors[idx];\n\n                if (!(levelNum === 0 || (descriptor && member.name === getName(descriptor)))) {\n                    isRoot = false;\n                    break;\n                }\n            }\n\n            return isRoot;\n        },\n\n        _mergeAxes: function(sourceAxes, data, axisToSkip) {\n            var columnMeasures = this._columnMeasures();\n            var rowMeasures = this._rowMeasures();\n            var axes = this.axes();\n            var startIndex, tuples;\n\n            var oldRowsLength = membersCount(axes.rows.tuples, rowMeasures);\n            var newRowsLength = sourceAxes.rows.tuples.length;\n\n            var oldColumnsLength = membersCount(axes.columns.tuples, columnMeasures);\n            var newColumnsLength = sourceAxes.columns.tuples.length;\n\n            if (axisToSkip == \"columns\") {\n                newColumnsLength = oldColumnsLength;\n                tuples = sourceAxes.columns.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.columns.tuples, columnMeasures);\n                data = prepareDataOnColumns(tuples, data);\n            }\n\n            var mergedColumns = mergeTuples(axes.columns.tuples, tuples, columnMeasures);\n\n            if (axisToSkip == \"rows\") {\n                newRowsLength = membersCount(sourceAxes.rows.tuples, rowMeasures);\n                tuples = sourceAxes.rows.tuples;\n            } else {\n                tuples = parseSource(sourceAxes.rows.tuples, rowMeasures);\n                data = prepareDataOnRows(tuples, data);\n            }\n            var mergedRows = mergeTuples(axes.rows.tuples, tuples, rowMeasures);\n\n            axes.columns.tuples = mergedColumns.tuples;\n            axes.rows.tuples = mergedRows.tuples;\n\n            if (oldColumnsLength !== membersCount(axes.columns.tuples, columnMeasures)) {\n                //columns are expanded\n                startIndex = mergedColumns.index + findDataIndex(mergedColumns.parsedRoot, mergedColumns.memberIndex, columnMeasures);\n                var offset = oldColumnsLength + newColumnsLength;\n                data = this._mergeColumnData(data, startIndex, newRowsLength, newColumnsLength, offset);\n            } else if (oldRowsLength !== membersCount(axes.rows.tuples, rowMeasures)) {\n                //rows are expanded\n                startIndex = mergedRows.index + findDataIndex(mergedRows.parsedRoot, mergedRows.memberIndex, rowMeasures);\n                data = this._mergeRowData(data, startIndex, newRowsLength, newColumnsLength);\n            }\n\n            if (axes.columns.tuples.length === 0 && axes.rows.tuples.length === 0) {\n                data = [];\n            }\n\n            return {\n                axes: axes,\n                data: data\n            };\n        },\n\n        _mergeColumnData: function(newData, columnIndex, rowsLength, columnsLength, offset) {\n            var data = this.data().toJSON();\n            var rowIndex, index, drop = 0, toAdd;\n            var columnMeasures = Math.max(this._columnMeasures().length, 1);\n\n            rowsLength = Math.max(rowsLength, 1);\n\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                drop = columnMeasures;\n                offset -= columnMeasures;\n            }\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                index = columnIndex + (rowIndex * offset);\n                toAdd = newData.splice(0, columnsLength);\n                toAdd.splice(0, drop);\n                [].splice.apply(data, [index, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _mergeRowData: function(newData, rowIndex, rowsLength, columnsLength) {\n            var data = this.data().toJSON();\n            var idx, dataIndex, toAdd;\n            var rowMeasures = Math.max(this._rowMeasures().length, 1);\n\n            columnsLength = Math.max(columnsLength, 1);\n            if (data.length > 0) {\n                //if there is already data, drop the first new data item\n                rowsLength -= rowMeasures;\n                newData.splice(0, columnsLength * rowMeasures);\n            }\n\n            for (idx = 0; idx < rowsLength; idx++) {\n                toAdd = newData.splice(0, columnsLength);\n                dataIndex = (rowIndex * columnsLength) + (idx * columnsLength);\n                [].splice.apply(data, [dataIndex, 0].concat(toAdd));\n            }\n\n            return data;\n        },\n\n        _columnMeasures: function() {\n            var measures = this.measures();\n            var columnMeasures = [];\n\n            if (this.measuresAxis() === \"columns\") {\n                if (this.columns().length === 0) {\n                    columnMeasures = measures;\n                } else if (measures.length > 1) {\n                    columnMeasures = measures;\n                }\n            }\n\n            return columnMeasures;\n        },\n\n        _rowMeasures: function() {\n            var measures = this.measures();\n            var rowMeasures = [];\n\n            if (this.measuresAxis() === \"rows\") {\n                if (this.rows().length === 0) {\n                    rowMeasures = measures;\n                } else if (measures.length > 1) {\n                    rowMeasures = measures;\n                }\n            }\n\n            return rowMeasures;\n        },\n\n        _updateLocalData: function(data, state) {\n            if (this.cubeBuilder) {\n                if (state) {\n                    this._requestData = state;\n                }\n                data = this._processResult(data);\n            }\n\n            this._data = this._observe(data);\n\n            this._ranges = [];\n            this._addRange(this._data);\n\n            this._total = this._data.length;\n            this._pristineTotal = this._total;\n            this._process(this._data);\n        },\n\n        data: function(value) {\n            var that = this;\n            if (value !== undefined$1) {\n                this._pristineData = value.slice(0);\n                this._updateLocalData(value, {\n                        columns: this.columns(),\n                        rows: this.rows(),\n                        measures: this.measures()\n                    });\n            } else {\n                return that._data;\n            }\n        },\n\n        _normalizeTuples: function(tuples, source, descriptors, measures) {\n            var length = measures.length || 1;\n            var idx = 0;\n\n            var roots = [];\n            var indexes = {};\n            var measureIdx = 0;\n            var tuple, memberIdx, last;\n\n            if (!tuples.length) {\n                return;\n            }\n\n            if (this._skipNormalize <= 0 && !this._hasRoot(tuples[0], source, descriptors)) {\n                this._skipNormalize = 0;\n                for (; idx < length; idx++) {\n                    roots.push(this._createTuple(tuples[0], measures[idx], true));\n                    indexes[idx] = idx;\n                }\n\n                tuples.splice.apply(tuples, [0, tuples.length].concat(roots).concat(tuples));\n                idx = length;\n            }\n\n            if (measures.length) {\n                last = tuple = tuples[idx];\n                memberIdx = tuple.members.length - 1;\n\n                while (tuple) {\n                    if (measureIdx >= length) {\n                        measureIdx = 0;\n                    }\n\n                    if (tuple.members[memberIdx].name !== measures[measureIdx].name) {\n                        tuples.splice(idx, 0, this._createTuple(tuple, measures[measureIdx]));\n                        indexes[idx] = idx;\n                    }\n\n                    idx += 1;\n                    measureIdx += 1;\n                    tuple = tuples[idx];\n\n                    if (length > measureIdx && (!tuple || tupleName(last, memberIdx - 1) !== tupleName(tuple, memberIdx - 1))) {\n                        for (; measureIdx < length; measureIdx++) {\n                            tuples.splice(idx, 0, this._createTuple(last, measures[measureIdx]));\n                            indexes[idx] = idx;\n                            idx += 1;\n                        }\n                        tuple = tuples[idx];\n                    }\n                    last = tuple;\n                }\n            }\n\n            return indexes;\n        },\n\n        _addMissingDataItems: function(result, metadata) {\n            while (metadata.rowIndexes[parseInt(result.length / metadata.columnsLength, 10)] !== undefined$1) {\n                for (var idx = 0; idx < metadata.columnsLength; idx++) {\n                    result = addEmptyDataItem(result);\n                }\n            }\n\n            while (metadata.columnIndexes[result.length % metadata.columnsLength] !== undefined$1) {\n                result = addEmptyDataItem(result);\n            }\n\n            return result;\n        },\n\n        _normalizeOrdinals: function(result, dataItem, metadata) {\n            var lastOrdinal = metadata.lastOrdinal;\n\n            if (!dataItem) {\n                return addEmptyDataItem(result);\n            }\n\n            if ((dataItem.ordinal - lastOrdinal) > 1) {\n                lastOrdinal += 1;\n\n                while (lastOrdinal < dataItem.ordinal && result.length < metadata.length) {\n                    result = this._addMissingDataItems(addEmptyDataItem(result), metadata);\n                    lastOrdinal += 1;\n                }\n            }\n\n            dataItem.ordinal = result.length;\n            result[result.length] = dataItem;\n\n            return result;\n        },\n\n        _normalizeData: function(options) {\n            var data = options.data;\n            var dataIdx = 0;\n            var dataItem;\n            var result = [];\n            var lastOrdinal;\n            var length;\n\n            options.lastOrdinal = 0;\n            options.columnIndexes = options.columnIndexes || {};\n            options.rowIndexes = options.rowIndexes || {};\n            options.columnsLength = options.columnsLength || 1;\n            options.rowsLength = options.rowsLength || 1;\n            options.length = options.columnsLength * options.rowsLength;\n            length = options.length;\n\n            if (data.length === length) {\n                return data;\n            }\n\n            while (result.length < length) {\n                dataItem = data[dataIdx++];\n                if (dataItem) {\n                    lastOrdinal = dataItem.ordinal;\n                }\n\n                result = this._normalizeOrdinals(this._addMissingDataItems(result, options), dataItem, options);\n\n                options.lastOrdinal = lastOrdinal;\n            }\n\n            return result;\n        },\n\n        discover: function(options, converter) {\n            var that = this,\n                transport = that.transport;\n\n            return $.Deferred(function(deferred) {\n                transport.discover(extend({\n                    success: function(response) {\n                       response = that.reader.parse(response);\n\n                        if (that._handleCustomErrors(response)) {\n                            return;\n                        }\n\n                        if (converter) {\n                            response = converter(response);\n                        }\n                        deferred.resolve(response);\n                    },\n                    error: function(response, status, error) {\n                        deferred.reject(response);\n                        that.error(response, status, error);\n                    }\n                }, options));\n            }).promise().done(function() {\n                that.trigger(\"schemaChange\");\n            });\n        },\n\n        schemaMeasures: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaMeasures\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.measures(response);\n            });\n        },\n\n        schemaKPIs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaKPIs\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.kpis(response);\n            });\n        },\n\n        schemaDimensions: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaDimensions\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }\n            }, function(response) {\n                return that.reader.dimensions(response);\n            });\n        },\n\n        schemaHierarchies: function(dimensionName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaHierarchies\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        dimensionUniqueName: dimensionName\n                    }\n                }\n            }, function(response) {\n                return that.reader.hierarchies(response);\n            });\n        },\n\n        schemaLevels: function(hierarchyName) {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaLevels\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        hierarchyUniqueName: hierarchyName\n                    }\n                }\n            }, function(response) {\n                return that.reader.levels(response);\n            });\n        },\n\n        schemaCubes: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCubes\",\n                    restrictions: {\n                        catalogName: that.transport.catalog()\n                    }\n                }\n            }, function(response) {\n                return that.reader.cubes(response);\n            });\n        },\n\n        schemaCatalogs: function() {\n            var that = this;\n\n            return that.discover({\n                data: {\n                    command: \"schemaCatalogs\"\n                }\n            }, function(response) {\n                return that.reader.catalogs(response);\n            });\n        },\n\n        schemaMembers: function(restrictions) {\n            var that = this;\n            var success = (function(restrictions) {\n                return function(response) {\n                    return that.reader.members(response, restrictions);\n                };\n            }(restrictions));\n\n            return that.discover({\n                data: {\n                    command: \"schemaMembers\",\n                    restrictions: extend({\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube()\n                   }, restrictions)\n                }\n            }, success);\n        },\n\n        _params: function(data) {\n            if (this._clearAxesData) {\n                this._axes = {};\n                this._data = this._observe([]);\n                this._clearAxesData = false;\n                this.trigger(STATERESET);\n            }\n\n            var options = DataSource.fn._params.call(this, data);\n\n            options = extend({\n                measures: this.measures(),\n                measuresAxis: this.measuresAxis(),\n                columns: this.columns(),\n                rows: this.rows()\n            }, options);\n\n            if (this.cubeBuilder) {\n                this._requestData = options;\n            }\n\n            return options;\n        }\n    });\n\n    function flatColumns(columns) {\n        var result = [];\n        for (var idx = 0; idx < columns.length; idx++) {\n            result.push(columns[idx]);\n            if (columns[idx].children) {\n                result = result.concat(flatColumns(columns[idx].children));\n            }\n        }\n\n        return result;\n    }\n\n    function sortItemsTree(field, items, sortFunction) {\n        for (var i = 0; i < items.length; i++) {\n            if (items[i].children && items[i].children.length) {\n                sortItemsTree(field, items[i].children, sortFunction);\n            }\n        }\n        if (items[0].parentName != field) {\n            return;\n        }\n        items = items.sort(sortFunction);\n    }\n\n    function fillSortTree(items, map) {\n        for (var i = 0; i < items.length; i++) {\n            var currentItem = map[items[i].name];\n\n            if (!$.isEmptyObject(currentItem.childrenMap)) {\n                items[i].children = [];\n                for (var name in currentItem.childrenMap) {\n                    items[i].children.push($.extend({}, { name: name, parentName: map[name].parentName }));\n                }\n\n                fillSortTree(items[i].children, map);\n            }\n        }\n    }\n\n    function addEmptyDataItem(result) {\n        result[result.length] = { value: \"\", fmtValue: \"\", ordinal: result.length };\n        return result;\n    }\n\n    function validateAxis(newAxis, axis, measures) {\n        if (newAxis.tuples.length < membersCount(axis.tuples, measures)) {\n\n            return axis;\n        }\n\n        return;\n    }\n\n    function adjustDataByColumn(sourceTuples, targetTuples, rowsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var columnsLength = sourceTuples.length;\n        var targetColumnsLength = membersCount(targetTuples, measures);\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                dataIdx = tupleIndex(sourceTuples[columnIdx], targetTuples) * measuresLength;\n                dataIdx += columnIdx % measuresLength;\n\n                data[rowIdx * columnsLength + columnIdx].ordinal = rowIdx * targetColumnsLength + dataIdx;\n            }\n        }\n    }\n\n    function adjustDataByRow(sourceTuples, targetTuples, columnsLength, measures, data) {\n        var columnIdx, rowIdx, dataIdx;\n        var rowsLength = sourceTuples.length;\n        var measuresLength = measures.length || 1;\n\n        for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n            dataIdx = tupleIndex(sourceTuples[rowIdx], targetTuples);\n            dataIdx *= measuresLength;\n            dataIdx += rowIdx % measuresLength;\n\n            for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                data[rowIdx * columnsLength + columnIdx].ordinal = dataIdx * columnsLength + columnIdx;\n            }\n        }\n    }\n\n    function tupleIndex(tuple, collection) {\n        return findExistingTuple(collection, tuple).index;\n    }\n\n    function membersCount(tuples, measures) {\n        if (!tuples.length) {\n            return 0;\n        }\n\n        var queue = tuples.slice();\n        var current = queue.shift();\n        var result = 1;\n\n        while (current) {\n            if (current.members) {\n                [].push.apply(queue, current.members);\n            } else if (current.children) {\n                if (!current.measure) {\n                    result += current.children.length;\n                }\n                [].push.apply(queue, current.children);\n            }\n\n            current = queue.shift();\n        }\n\n        if (measures.length) {\n            result = result * measures.length;\n        }\n\n        return result;\n    }\n\n    function normalizeAxis(axis) {\n        if (!axis) {\n            axis = {\n                tuples: []\n            };\n        }\n\n        if (!axis.tuples) {\n            axis.tuples = [];\n        }\n\n        return axis;\n    }\n\n    function findDataIndex(tuple, memberIndex, measures) {\n        if (!tuple) {\n            return 0;\n        }\n\n        var measuresLength = Math.max(measures.length, 1);\n        var tuples = tuple.members.slice(0, memberIndex);\n        var current = tuples.shift();\n\n        //the initial value is equal to the total number of measures\n        //as the measures member is not extracted from the members of the starting tuple\n        //but should be calculated in the final result\n        var counter = measuresLength;\n\n        while (current) {\n            if (current.name === MEASURES) {\n                //subtract 1 as the measures member has been already counted as a single standard member\n                //but we are interested in the total number of measures instead\n                counter += (measuresLength - 1);\n            } else if (current.children) {\n                //is member\n                [].push.apply(tuples, current.children);\n            } else {\n                //is tuple\n                counter ++;\n                [].push.apply(tuples, current.members);\n            }\n\n            current = tuples.shift();\n        }\n\n        return counter;\n    }\n\n    function mergeTuples(target, source, measures) {\n        if (!source[0]) {\n            return {\n                parsedRoot: null,\n                tuples: target,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var result = findExistingTuple(target, source[0]);\n\n        if (!result.tuple) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        var targetMembers = result.tuple.members;\n        var sourceMembers = source[0].members;\n        var memberIndex = -1;\n\n        if (targetMembers.length !== sourceMembers.length) {\n            return {\n                parsedRoot: null,\n                tuples: source,\n                memberIndex: 0,\n                index: 0\n            };\n        }\n\n        for (var idx = 0, length = targetMembers.length; idx < length; idx++) {\n            if (!targetMembers[idx].measure && sourceMembers[idx].children[0]) {\n                if (memberIndex == -1 && sourceMembers[idx].children.length) {\n                    memberIndex = idx;\n                }\n\n                targetMembers[idx].children = sourceMembers[idx].children;\n            }\n        }\n\n        measures = Math.max(measures.length, 1);\n\n        return {\n            parsedRoot: result.tuple,\n            index: result.index * measures,\n            memberIndex: memberIndex,\n            tuples: target\n        };\n    }\n\n    function equalTuples(first, second) {\n        var equal = true;\n        var idx, length;\n\n        first = first.members;\n        second = second.members;\n\n        for (idx = 0, length = first.length; idx < length; idx++) {\n            if (first[idx].measure || second[idx].measure) {\n                continue;\n            }\n\n            equal = equal && (getName(first[idx]) === getName(second[idx]));\n        }\n\n        return equal;\n    }\n\n    function findExistingTuple(tuples, toFind) {\n        var idx, length, tuple, found, counter = 0;\n        var memberIndex, membersLength, member;\n\n        for (idx = 0, length = tuples.length; idx < length; idx++) {\n            tuple = tuples[idx];\n            if (equalTuples(tuple, toFind)) {\n                return {\n                    tuple: tuple,\n                    index: counter\n                };\n            }\n\n            counter ++;\n\n            for (memberIndex = 0, membersLength = tuple.members.length; memberIndex < membersLength; memberIndex++) {\n                member = tuple.members[memberIndex];\n                if (member.measure) {\n                    //counter += member.children.length;\n                    continue;\n                }\n                found = findExistingTuple(member.children, toFind);\n                counter += found.index;\n                if (found.tuple) {\n                    return {\n                        tuple: found.tuple,\n                        index: counter\n                    };\n                }\n            }\n        }\n\n        return {\n            index: counter\n        };\n    }\n\n    function addMembers(members, map) {\n        var member, i, len, path = \"\";\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            path += member.name;\n            if (!map[path]) {\n                map[path] = member;\n            }\n        }\n    }\n\n\n    function findParentMember(tuple, map) {\n        var members = tuple.members;\n        var i, len, member, path = \"\";\n        var parentPath = \"\";\n        var parentMember;\n\n        for (i = 0, len = members.length; i < len; i++) {\n            member = members[i];\n            if (parentMember) {\n                if (map[path + member.name]) {\n                    path += member.name;\n                    parentMember = map[path];\n                    continue;\n                } else if (map[path + member.parentName]) {\n                    return map[path + member.parentName];\n                } else if (map[parentPath + member.parentName]) {\n                    return map[parentPath + member.parentName];\n                } else {\n                    return map[parentPath];\n                }\n            }\n\n            path += member.name;\n            parentMember = map[member.parentName];\n\n            if (!parentMember) {\n                parentMember = map[path];\n                if (!parentMember) {\n                    return null;\n                }\n            }\n\n            if (parentMember) {\n                parentPath += parentMember.name;\n            }\n        }\n\n        return parentMember;\n    }\n\n    function measurePosition(tuple, measures) {\n        if (measures.length === 0) {\n            return -1;\n        }\n\n        var measure = measures[0];\n        var members = tuple.members;\n        for (var idx = 0, len = members.length; idx < len; idx ++) {\n            if (members[idx].name == measure.name) {\n                return idx;\n            }\n        }\n    }\n\n    function normalizeTupleMeasures(tuple, index) {\n        if (index < 0) {\n            return;\n        }\n        var member = {\n            name: MEASURES,\n            measure: true,\n            children: [\n                $.extend({ members: [], dataIndex: tuple.dataIndex }, tuple.members[index])\n            ]\n        };\n        tuple.members.splice(index, 1, member);\n        tuple.dataIndex = undefined$1;\n    }\n\n    function parseSource(tuples, measures) {\n        if (tuples.length < 1) {\n            return [];\n        }\n        var result = [];\n        var map = { };\n        var measureIndex = measurePosition(tuples[0], measures);\n\n        for (var i = 0; i < tuples.length; i++) {\n            var tuple = tuples[i];\n\n            //keep the old data index of the tuple\n            tuple.dataIndex = i;\n\n            normalizeTupleMeasures(tuple, measureIndex);\n            var parentMember = findParentMember(tuple, map);\n\n            if (parentMember) {\n                if (measureIndex < 0 || !parentMember.measure) {\n                    parentMember.children.push(tuple);\n                } else {\n                    parentMember.children.push(tuple.members[measureIndex].children[0]);\n                }\n            } else {\n                result.push(tuple);\n            }\n\n            addMembers(tuple.members, map);\n        }\n\n        return result;\n    }\n\n    function prepareDataOnRows(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var rowsLength = indices.length;\n        var columnsLength = Math.max(data.length / rowsLength, 1);\n        var rowIndex, columnIndex, targetIndex, sourceIndex;\n        var calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            targetIndex = columnsLength * rowIndex;\n            sourceIndex = columnsLength * indices[rowIndex];\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = parseInt(sourceIndex + columnIndex, 10);\n                result[parseInt(targetIndex + columnIndex, 10)] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function prepareDataOnColumns(tuples, data) {\n        if (!tuples || !tuples.length) {\n            return data;\n        }\n\n        var result = [];\n        var indices = buildDataIndices(tuples);\n        var columnsLength = indices.length;\n        var rowsLength = Math.max(data.length / columnsLength, 1);\n        var columnIndex, rowIndex, dataIndex, calcIndex;\n\n        for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n            dataIndex = columnsLength * rowIndex;\n            for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                calcIndex = indices[columnIndex] + dataIndex;\n                result[dataIndex + columnIndex] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n            }\n        }\n\n        return result;\n    }\n\n    function buildDataIndices(tuples) {\n        tuples = tuples.slice();\n        var result = [];\n        var tuple = tuples.shift();\n        var idx, length, spliceIndex, children, member;\n\n        while (tuple) {\n            //required for multiple measures\n            if (tuple.dataIndex !== undefined$1) {\n                result.push(tuple.dataIndex);\n            }\n\n            spliceIndex = 0;\n            for (idx = 0, length = tuple.members.length; idx < length; idx++) {\n                member = tuple.members[idx];\n                children = member.children;\n                if (member.measure) {\n                    [].splice.apply(tuples, [0, 0].concat(children));\n                } else {\n                    [].splice.apply(tuples, [spliceIndex, 0].concat(children));\n                }\n                spliceIndex += children.length;\n            }\n\n            tuple = tuples.shift();\n        }\n\n        return result;\n    }\n\n    PivotDataSourceV2.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSourceV2) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSourceV2 ? dataSource : new PivotDataSourceV2(dataSource);\n    };\n\n    PivotDataSource.create = function(options) {\n        options = options && options.push ? { data: options } : options;\n\n        var dataSource = options || {},\n            data = dataSource.data;\n\n        dataSource.data = data;\n\n        if (!(dataSource instanceof PivotDataSource) && dataSource instanceof kendo.data.DataSource) {\n            throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n        }\n\n        return dataSource instanceof PivotDataSource ? dataSource : new PivotDataSource(dataSource);\n    };\n\n    function baseHierarchyPath(memberName) {\n        var parts = memberName.split(\".\");\n        if (parts.length > 2) {\n            return parts[0] + \".\" + parts[1];\n        }\n        return memberName;\n    }\n\n    function expandMemberDescriptor(names, sort) {\n        var idx = names.length - 1;\n        var name = names[idx];\n        var sortDescriptor;\n\n        sortDescriptor = sortDescriptorForMember(sort, name);\n\n        if (sortDescriptor && sortDescriptor.dir) {\n            name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n        } else {\n            name += \".Children\";\n        }\n\n        names[idx] = name;\n\n        return names;\n    }\n\n    function sortDescriptorForMember(sort, member) {\n        for (var idx = 0, length = sort.length; idx < length; idx++) {\n            if (member.indexOf(sort[idx].field) === 0) {\n                return sort[idx];\n            }\n        }\n        return null;\n    }\n\n    function crossJoin(names) {\n        var result = \"CROSSJOIN({\";\n        var r;\n\n        if (names.length > 2) {\n            r = names.pop();\n            result += crossJoin(names);\n        } else {\n            result += names.shift();\n            r = names.pop();\n        }\n\n        result += \"},{\";\n        result += r;\n        result += \"})\";\n        return result;\n    }\n\n    function crossJoinCommand(members, measures) {\n        var tmp = members.slice(0);\n\n        if (measures.length > 1) {\n            tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n        }\n\n        return crossJoin(tmp);\n    }\n\n    function measureNames(measures) {\n        var idx = 0;\n        var length = measures.length;\n        var result = [];\n        var measure;\n\n        for (; idx < length; idx++) {\n            measure = measures[idx];\n            result.push(measure.name !== undefined$1 ? measure.name : measure);\n        }\n\n        return result;\n    }\n\n    function indexOf(name, items) {\n        var idx, length, index = -1;\n\n        for (idx = 0, length = items.length; idx < length; idx++) {\n            if (getName(items[idx]) === name) {\n                index = idx;\n                break;\n            }\n        }\n        return index;\n    }\n\n    function getName(name) {\n        name = name.name || name;\n\n        if (toString.call(name) === \"[object Array]\") {\n            name = name[name.length - 1];\n        }\n\n        return name;\n    }\n\n    function getRootNames(members) {\n        var length = members.length;\n        var names = [];\n        var idx = 0;\n\n        for (; idx < length; idx++) {\n            names.push(members[idx].name[0]);\n        }\n\n        return names;\n    }\n\n    function mapNames(names, rootNames) {\n        var name;\n        var rootName;\n\n        var j;\n        var idx = 0;\n        var length = names.length;\n        var rootLength = rootNames.length;\n\n        rootNames = rootNames.slice(0);\n\n        for (; idx < length; idx++) {\n            name = names[idx];\n\n            for (j = 0; j < rootLength; j++) {\n                rootName = baseHierarchyPath(rootNames[j]);\n\n                if (name.indexOf(rootName) !== -1) {\n                    rootNames[j] = name;\n                    break;\n                }\n            }\n        }\n\n        return {\n            names: rootNames,\n            expandedIdx: j,\n            uniquePath: rootNames.slice(0, j + 1).join(\"\")\n        };\n    }\n\n    function parseDescriptors(members) {\n        var expanded = [];\n        var child = [];\n        var root = [];\n        var member;\n\n        var j, l;\n        var idx = 0;\n        var length = members.length;\n\n        var name;\n        var hierarchyName;\n\n        var found;\n\n        for (; idx < length; idx++) {\n            member = members[idx];\n            name = member.name;\n            found = false;\n\n            if (toString.call(name) !== \"[object Array]\") {\n                member.name = name = [name];\n            }\n\n            if (name.length > 1) {\n                child.push(member);\n            } else {\n                hierarchyName = baseHierarchyPath(name[0]);\n\n                for (j = 0, l = root.length; j < l; j++) {\n                    if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (!found) {\n                    root.push(member);\n                }\n\n                if (member.expand) {\n                    expanded.push(member);\n                }\n            }\n        }\n\n        expanded = expanded.concat(child);\n\n        return {\n            root: root,\n            expanded: expanded\n        };\n    }\n\n    function serializeMembers(members, measures, sort) {\n        var command = \"\";\n\n        members = members || [];\n\n        var expanded = parseDescriptors(members);\n        var root = expanded.root;\n\n        var rootNames = getRootNames(root);\n        var crossJoinCommands = [];\n\n        expanded = expanded.expanded;\n\n        var length = expanded.length;\n        var idx = 0;\n\n        var memberName;\n        var names = [];\n\n        if (rootNames.length > 1 || measures.length > 1) {\n            crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names = mapNames(memberName, rootNames).names;\n\n                crossJoinCommands.push(crossJoinCommand(names, measures));\n            }\n\n            command += crossJoinCommands.join(\",\");\n        } else {\n            for (; idx < length; idx++) {\n                memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                names.push(memberName[0]); //check if this is ok\n            }\n\n            command += rootNames.concat(names).join(\",\");\n        }\n\n        return command;\n    }\n\n    var filterFunctionFormats = {\n        contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n        doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n        startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n        eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n        neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\"\n    };\n\n    function serializeExpression(expression) {\n        var command = \"\";\n        var value = expression.value;\n        var field = expression.field;\n        var operator = expression.operator;\n\n        if (operator == \"in\") {\n            command += \"{\";\n            command += value;\n            command += \"}\";\n        } else {\n            command += operator == \"neq\" || operator == \"doesnotcontain\" ? \"-\" : \"\";\n            command += \"Filter(\";\n            command += field + \".MEMBERS\";\n            command += kendo.format(filterFunctionFormats[operator], field, value);\n            command += \")\";\n        }\n\n        return command;\n    }\n\n    function serializeFilters(filter, cube) {\n        var command = \"\", current;\n        var filters = filter.filters;\n        var length = filters.length;\n        var idx;\n\n        for (idx = length - 1; idx >= 0; idx--) {\n\n            current = \"SELECT (\";\n            current += serializeExpression(filters[idx]);\n            current += \") ON 0\";\n\n            if (idx == length - 1) {\n                current += \" FROM [\" + cube + \"]\";\n                command = current;\n            } else {\n                command = current + \" FROM ( \" + command + \" )\";\n            }\n        }\n\n        return command;\n    }\n\n    function serializeOptions(parentTagName, options, capitalize) {\n        var result = \"\";\n\n        if (options) {\n            result += \"<\" + parentTagName + \">\";\n            var value;\n            for (var key in options) {\n                value = options[key];\n                let keyToUse = key;\n                if (capitalize) {\n                    keyToUse = keyToUse.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                }\n                result += \"<\" + keyToUse + \">\" + value + \"</\" + keyToUse + \">\";\n            }\n            result += \"</\" + parentTagName + \">\";\n        } else {\n            result += \"<\" + parentTagName + \"/>\";\n        }\n        return result;\n    }\n\n    var xmlaDiscoverCommands = {\n        schemaCubes: \"MDSCHEMA_CUBES\",\n        schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n        schemaMeasures: \"MDSCHEMA_MEASURES\",\n        schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n        schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n        schemaLevels: \"MDSCHEMA_LEVELS\",\n        schemaMembers: \"MDSCHEMA_MEMBERS\",\n        schemaKPIs: \"MDSCHEMA_KPIS\"\n    };\n\n    var convertersMap = {\n        read: function(options) {\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n\n            command += \"SELECT NON EMPTY {\";\n\n            var columns = options.columns || [];\n            var rows = options.rows || [];\n\n            var measures = options.measures || [];\n            var measuresRowAxis = options.measuresAxis === \"rows\";\n            var sort = options.sort || [];\n\n            if (!columns.length && rows.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                columns = rows;\n                rows = [];\n                measuresRowAxis = false;\n            }\n\n            if (!columns.length && !rows.length) {\n                measuresRowAxis = false;\n            }\n\n            if (columns.length) {\n                command += serializeMembers(columns, !measuresRowAxis ? measures : [], sort);\n            } else if (measures.length && !measuresRowAxis) {\n                command += measureNames(measures).join(\",\");\n            }\n\n            command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n\n            if (rows.length || (measuresRowAxis && measures.length > 1)) {\n                command += \", NON EMPTY {\";\n\n                if (rows.length) {\n                    command += serializeMembers(rows, measuresRowAxis ? measures : [], sort);\n                } else {\n                    command += measureNames(measures).join(\",\");\n                }\n\n                command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n            }\n\n            if (options.filter) {\n                command += \" FROM \";\n                command += \"(\";\n                command += serializeFilters(options.filter, options.connection.cube);\n                command += \")\";\n            } else {\n                command += \" FROM [\" + options.connection.cube + \"]\";\n            }\n\n            if (measures.length == 1 && columns.length) {\n                command += \" WHERE (\" + measureNames(measures).join(\",\") + \")\";\n            }\n\n            command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n            return command.replace(/\\&/g, \"&amp;\");\n        },\n        discover: function(options) {\n            options = options || {};\n\n            var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n            command += \"<RequestType>\" + (xmlaDiscoverCommands[options.command] || options.command) + \"</RequestType>\";\n\n            command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n\n            if (options.connection && options.connection.catalog) {\n                options.properties = $.extend({}, {\n                    Catalog: options.connection.catalog\n                }, options.properties);\n            }\n\n            command += \"<Properties>\" + serializeOptions(\"PropertyList\", options.properties) + \"</Properties>\";\n\n            command += '</Discover></Body></Envelope>';\n            return command;\n        }\n    };\n\n    var XmlaTransport = kendo.data.RemoteTransport.extend({\n        init: function(options) {\n            var originalOptions = options;\n\n            options = this.options = extend(true, {}, this.options, options);\n\n            kendo.data.RemoteTransport.call(this, options);\n\n            if (isFunction(originalOptions.discover)) {\n                this.discover = originalOptions.discover;\n            } else if (typeof originalOptions.discover === \"string\") {\n                this.options.discover = {\n                    url: originalOptions.discover\n                };\n            } else if (!originalOptions.discover) {\n                this.options.discover = this.options.read;\n            }\n        },\n        setup: function(options, type) {\n            options.data = options.data || {};\n            $.extend(true, options.data, { connection: this.options.connection });\n\n            return kendo.data.RemoteTransport.fn.setup.call(this, options, type);\n        },\n        options: {\n            read: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            discover: {\n                dataType: \"text\",\n                contentType: \"text/xml\",\n                type: \"POST\"\n            },\n            parameterMap: function(options, type) {\n                return convertersMap[type](options,type);\n            }\n        },\n\n        discover: function(options) {\n            return $.ajax(this.setup(options, \"discover\"));\n        }\n    });\n\n    var XmlaTransportV2 = Class.extend({\n        init: function(options) {\n            options = this.options = extend(true, {}, this.options, options);\n        },\n        setup: function(options) {\n            return $.extend(true, options || {}, { connection: this.options.connection });\n        },\n        read: function(options) {\n            var that = this,\n                success,\n                error;\n\n            var fetchOptions = that.setup(options.data, READ);\n\n            success = options.success || $.noop;\n            error = options.error || $.noop;\n\n            if (options.parameterMap) {\n                fetchOptions = that.parameterMap(fetchOptions, READ);\n            }\n            const requestOptions = typeof that.options.read === \"object\" && that.options.read.url ? that.options.read : { url: that.options.read };\n\n            fetchData(requestOptions, fetchOptions)\n            .then(createDataState)\n            .then(function(newDataState) {\n                success(newDataState);\n            })\n            .catch(function(err) { error(err); });\n        },\n\n        catalog: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).catalog;\n\n            }\n\n            var connection = options.connection || {};\n            connection.catalog = val;\n\n            this.options.connection = connection;\n            $.extend(this.transport.options, { connection: connection });\n        },\n        cube: function(val) {\n            var options = this.options || {};\n\n            if (val === undefined$1) {\n                return (options.connection || {}).cube;\n            }\n\n            var connection = options.connection || {};\n            connection.cube = val;\n\n            this.options.connection = connection;\n            extend(true, this.transport.options, { connection: connection });\n        },\n\n        discover: function(options) {\n            return fetchDiscover({ url: this.options.read }, options);\n        }\n    });\n\n    function asArray(object) {\n        if (object == null) {\n            return [];\n        }\n\n        var type = toString.call(object);\n        if (type !== \"[object Array]\") {\n            return [object];\n        }\n\n        return object;\n    }\n\n    function translateAxis(axis) {\n        var result = { tuples: [] };\n        var tuples = asArray(kendo.getter(\"Tuples.Tuple\", true)(axis));\n        var captionGetter = kendo.getter(\"Caption['#text']\");\n        var unameGetter = kendo.getter(\"UName['#text']\");\n        var levelNameGetter = kendo.getter(\"LName['#text']\");\n        var levelNumGetter = kendo.getter(\"LNum['#text']\");\n        var childrenGetter = kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true);\n        var hierarchyGetter = kendo.getter(\"['@Hierarchy']\");\n        var parentNameGetter = kendo.getter(\"PARENT_UNIQUE_NAME['#text']\", true);\n\n        for (var idx = 0; idx < tuples.length; idx++) {\n            var members = [];\n            var member = asArray(tuples[idx].Member);\n            for (var memberIdx = 0; memberIdx < member.length; memberIdx++) {\n                members.push({\n                    children: [],\n                    caption: captionGetter(member[memberIdx]),\n                    name: unameGetter(member[memberIdx]),\n                    levelName: levelNameGetter(member[memberIdx]),\n                    levelNum: levelNumGetter(member[memberIdx]),\n                    hasChildren: parseInt(childrenGetter(member[memberIdx]), 10) > 0,\n                    parentName: parentNameGetter(member[memberIdx]),\n                    hierarchy: hierarchyGetter(member[memberIdx])\n                });\n            }\n\n            result.tuples.push({ members: members });\n        }\n        return result;\n    }\n\n    var schemaDataReaderMap = {\n        cubes: {\n            name: kendo.getter(\"CUBE_NAME['#text']\", true),\n            caption: kendo.getter(\"CUBE_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            type: kendo.getter(\"CUBE_TYPE['#text']\", true)\n        },\n        catalogs: {\n            name: kendo.getter(\"CATALOG_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true)\n        },\n        measures: {\n            name: kendo.getter(\"MEASURE_NAME['#text']\", true),\n            caption: kendo.getter(\"MEASURE_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEASURE_UNIQUE_NAME['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            aggregator: kendo.getter(\"MEASURE_AGGREGATOR['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"MEASURE_DISPLAY_FOLDER['#text']\", true),\n            defaultFormat: kendo.getter(\"DEFAULT_FORMAT_STRING['#text']\", true)\n        },\n        kpis: {\n            name: kendo.getter(\"KPI_NAME['#text']\", true),\n            caption: kendo.getter(\"KPI_CAPTION['#text']\", true),\n            value: kendo.getter(\"KPI_VALUE['#text']\", true),\n            goal: kendo.getter(\"KPI_GOAL['#text']\", true),\n            status: kendo.getter(\"KPI_STATUS['#text']\", true),\n            trend: kendo.getter(\"KPI_TREND['#text']\", true),\n            statusGraphic: kendo.getter(\"KPI_STATUS_GRAPHIC['#text']\", true),\n            trendGraphic: kendo.getter(\"KPI_TREND_GRAPHIC['#text']\", true),\n            description: kendo.getter(\"KPI_DESCRIPTION['#text']\", true),\n            groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true)\n        },\n        dimensions: {\n            name: kendo.getter(\"DIMENSION_NAME['#text']\", true),\n            caption: kendo.getter(\"DIMENSION_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            defaultHierarchy: kendo.getter(\"DEFAULT_HIERARCHY['#text']\", true),\n            type: kendo.getter(\"DIMENSION_TYPE['#text']\", true)\n//unknown = 0; time = 1; measure = 2; other = 3; quantitative = 5; accounts = 6; customers = 7; products = 8; scenario = 9; utility = 10; currency = 11; rates = 12; channel = 13; promotion = 14; organization = 15; billOfMaterials = 16; geography = 17;\n\n        },\n        hierarchies: {\n            name: kendo.getter(\"HIERARCHY_NAME['#text']\", true),\n            caption: kendo.getter(\"HIERARCHY_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"HIERARCHY_DISPLAY_FOLDER['#text']\", true),\n            origin: kendo.getter(\"HIERARCHY_ORIGIN['#text']\", true),\n            defaultMember: kendo.getter(\"DEFAULT_MEMBER['#text']\", true)\n        },\n        levels: {\n            name: kendo.getter(\"LEVEL_NAME['#text']\", true),\n            caption: kendo.getter(\"LEVEL_CAPTION['#text']\", true),\n            description: kendo.getter(\"DESCRIPTION['#text']\", true),\n            uniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            displayFolder: kendo.getter(\"LEVEL_DISPLAY_FOLDER['#text']\", true),\n            orderingProperty: kendo.getter(\"LEVEL_ORDERING_PROPERTY['#text']\", true),\n            origin: kendo.getter(\"LEVEL_ORIGIN['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true)\n        },\n        members: {\n            name: kendo.getter(\"MEMBER_NAME['#text']\", true),\n            caption: kendo.getter(\"MEMBER_CAPTION['#text']\", true),\n            uniqueName: kendo.getter(\"MEMBER_UNIQUE_NAME['#text']\", true),\n            dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n            hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n            levelUniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n            childrenCardinality: kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true)\n        }\n    };\n\n    var xmlaReaderMethods = [\"axes\", \"catalogs\", \"cubes\", \"dimensions\", \"hierarchies\", \"levels\", \"measures\"];\n\n    var XmlaDataReader = kendo.data.XmlDataReader.extend({\n        init: function(options) {\n            kendo.data.XmlDataReader.call(this, options);\n\n            this._extend(options);\n        },\n        _extend: function(options) {\n            var idx = 0;\n            var length = xmlaReaderMethods.length;\n            var methodName;\n            var option;\n\n            for (; idx < length; idx++) {\n                methodName = xmlaReaderMethods[idx];\n                option = options[methodName];\n\n                if (option && option !== identity) {\n                    this[methodName] = option;\n                }\n            }\n        },\n        parse: function(xml) {\n            var result = kendo.data.XmlDataReader.fn.parse(xml.replace(/<(\\/?)(\\w|-)+:/g, \"<$1\"));\n            return kendo.getter(\"['Envelope']['Body']\", true)(result);\n        },\n        errors: function(root) {\n            var fault = kendo.getter(\"['Fault']\", true)(root);\n            if (fault) {\n                return [{\n                    faultstring: kendo.getter(\"faultstring['#text']\", true)(fault),\n                    faultcode: kendo.getter(\"faultcode['#text']\", true)(fault)\n                }];\n            }\n            return null;\n        },\n        axes: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var axes = asArray(kendo.getter(\"Axes.Axis\", true)(root));\n            var axis;\n\n            var result = {\n                columns: {},\n                rows: {}\n            };\n\n            for (var idx = 0; idx < axes.length; idx++) {\n                axis = axes[idx];\n\n                if (axis[\"@name\"].toLowerCase() !== \"sliceraxis\") {\n                    if (!result.columns.tuples) {\n                        result.columns = translateAxis(axis);\n                    } else {\n                        result.rows = translateAxis(axis);\n                    }\n                }\n            }\n\n            return result;\n        },\n        data: function(root) {\n            root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n            var cells = asArray(kendo.getter(\"CellData.Cell\", true)(root));\n\n            var result = [];\n            var ordinalGetter = kendo.getter(\"['@CellOrdinal']\");\n            var valueGetter = kendo.getter(\"Value['#text']\");\n            var fmtValueGetter = kendo.getter(\"FmtValue['#text']\");\n\n            for (var idx = 0; idx < cells.length; idx++) {\n                result.push({\n                    value: valueGetter(cells[idx]),\n                    fmtValue: fmtValueGetter(cells[idx]),\n                    ordinal: parseInt(ordinalGetter(cells[idx]), 10)\n                });\n            }\n\n            return result;\n        },\n        _mapSchema: function(root, getters) {\n            root = kendo.getter(\"DiscoverResponse[\\\"return\\\"].root\", true)(root);\n            var rows = asArray(kendo.getter(\"row\", true)(root));\n\n            var result = [];\n\n            for (var idx = 0; idx < rows.length; idx++) {\n                var obj = {};\n                for (var key in getters) {\n                    obj[key] = getters[key](rows[idx]);\n                }\n                result.push(obj);\n            }\n\n            return result;\n        },\n        measures: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.measures);\n        },\n        kpis: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.kpis);\n        },\n        hierarchies: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.hierarchies);\n        },\n        levels: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.levels);\n        },\n        dimensions: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.dimensions);\n        },\n        cubes: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.cubes);\n        },\n        catalogs: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.catalogs);\n        },\n        members: function(root) {\n            return this._mapSchema(root, schemaDataReaderMap.members);\n        }\n    });\n\n    extend(true, kendo.data, {\n       PivotDataSource: PivotDataSource,\n       PivotDataSourceV2: PivotDataSourceV2,\n       XmlaTransport: XmlaTransport,\n       XmlaDataReader: XmlaDataReader,\n       PivotCubeBuilder: PivotCubeBuilder,\n       transports: {\n           xmla: XmlaTransport\n       },\n       readers: {\n           xmla: XmlaDataReader\n       }\n    });\n\n    var sortExpr = function(expressions, name) {\n        if (!expressions) {\n            return null;\n        }\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field === name) {\n                return expressions[idx];\n            }\n        }\n\n        return null;\n    };\n\n    var removeExpr = function(expressions, name) {\n        var result = [];\n\n        for (var idx = 0, length = expressions.length; idx < length; idx++) {\n            if (expressions[idx].field !== name) {\n                result.push(expressions[idx]);\n            }\n        }\n\n        return result;\n    };\n\n    kendo.ui.PivotSettingTarget = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.element.addClass(\"k-pivot-setting\");\n\n            that.dataSource = kendo.data.PivotDataSource.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            if (!options.template) {\n                var actions = '';\n\n                if (that.options.enabled) {\n                    actions = `<span class=\"k-setting-delete k-chip-action\">${kendo.ui.icon(\"x\")}</span>`;\n                }\n\n                that.options.template = (data) => ''\n                    + `<span class=\"k-chip k-chip-md k-rounded-md k-chip-solid k-chip-solid-base\" data-${kendo.ns}name=\"${data.name || data}\">`\n                        + '<span class=\"k-chip-content\">'\n                            + `<span class=\"k-chip-text\">${data.name || data}</span>`\n                        + '</span>'\n                        + '<span class=\"k-chip-actions\">' + actions + '</span>'\n                    + '</span>';\n            }\n\n            that.template = kendo.template(that.options.template);\n            that.emptyTemplate = kendo.template(that.options.emptyTemplate);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, '.k-chip, .k-button' , function(e) {\n                var target = $(e.target).closest(\":not(path,svg)\");\n                var action = target.closest('.k-chip-action');\n                var name = target.closest(\"[\" + kendo.attr(\"name\") + \"]\")\n                                 .attr(kendo.attr(\"name\"));\n\n                if (!name) {\n                    return;\n                }\n\n                if (action.hasClass(\"k-setting-delete\")) {\n                    that.remove(name);\n                    return;\n                }\n\n                if (target.closest('.k-chip-actions').length > 0) {\n                    return;\n                }\n\n                if (that.options.sortable) {\n                    var sortDirection = $(e.currentTarget).closest(\":not(path,svg)\").find('.k-i-sort-asc-small,.k-svg-i-sort-asc-small').length ? 'desc' : 'asc';\n\n                    that.sort({\n                        field: name,\n                        dir: sortDirection\n                    });\n                }\n            });\n\n            if (options.filterable || options.sortable) {\n                that.fieldMenu = new ui.PivotFieldMenu(that.element, {\n                    messages: that.options.messages.fieldMenu,\n                    filter: \".k-setting-fieldmenu\",\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    dataSource: that.dataSource\n                });\n            }\n\n            that.refresh();\n        },\n\n        options: {\n            name: \"PivotSettingTarget\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            emptyTemplate: (data) => `<div class='k-empty'>${data}</div>`,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            if (that.options.enabled) {\n                this.sortable = this.element.kendoSortable({\n                    connectWith: this.options.connectWith,\n                    hint: that.options.hint,\n                    filter: \">*:not(.k-empty)\",\n                    cursor: \"move\",\n                    start: function(e) {\n                        e.item.trigger(\"focus\").trigger(\"blur\");\n                    },\n                    change: function(e) {\n                        var name = e.item.attr(kendo.attr(\"name\"));\n\n                        if (e.action == \"receive\") {\n                            that.add(name);\n                        } else if (e.action == \"remove\") {\n                            that.remove(name);\n                        } else if (e.action == \"sort\") {\n                            that.move(name, e.newIndex);\n                        }\n                    }\n                }).data(\"kendoSortable\");\n            }\n        },\n\n        _isKPI: function(data) {\n            return data.type === \"kpi\" || data.measure;\n        },\n\n        validate: function(data) {\n            var isMeasure = (data.type == 2 || \"aggregator\" in data || this._isKPI(data));\n\n            if (isMeasure) {\n                return this.options.setting === \"measures\";\n            }\n\n            if (this.options.setting === \"measures\") {\n                return isMeasure;\n            }\n\n            var items = this.dataSource[this.options.setting]();\n            var name = data.defaultHierarchy || data.uniqueName;\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            items = this.dataSource[this.options.setting === \"columns\" ? \"rows\" : \"columns\"]();\n            if (indexOf(name, items) > -1) {\n                return false;\n            }\n\n            return true;\n        },\n\n        add: function(name) {\n            let items = this.dataSource[this.options.setting]();\n            let i = 0;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            let l = name.length;\n\n            while (i < l) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n                i++;\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        move: function(name, index) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        remove: function(name) {\n            var items = this.dataSource[this.options.setting]();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this.dataSource._filter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this.dataSource._filter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this.dataSource._sort = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this.dataSource[this.options.setting](items);\n            }\n        },\n\n        sort: function(expr) {\n            var sortable = this.options.sortable;\n            var allowUnsort = sortable === true || sortable.allowUnsort;\n            var skipExpr = allowUnsort && expr.dir === \"asc\";\n\n            var expressions = (this.dataSource.sort() || []);\n            var result = removeExpr(expressions, expr.field);\n\n            if (skipExpr && expressions.length !== result.length) {\n                expr = null;\n            }\n\n            if (expr) {\n                result.push(expr);\n            }\n\n            this.dataSource.sort(result);\n        },\n\n        refresh: function() {\n            var html = \"\";\n            var items = this.dataSource[this.options.setting]();\n            var length = items.length;\n            var idx = 0;\n            var item;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined$1 ? { name: item } : item;\n\n                    html += this.template(extend({ sortIcon: this._sortIcon(item.name) }, item));\n                }\n            } else {\n                html = this.emptyTemplate(this.options.messages.empty);\n            }\n\n            this.element.html(html);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        },\n\n        _sortIcon: function(name) {\n            var expressions = this.dataSource.sort();\n            var expr = sortExpr(expressions, getName(name));\n            var icon = \"\";\n\n            if (expr) {\n                icon = \"sort-\" + expr.dir;\n            }\n\n            return icon;\n        }\n    });\n\n    kendo.ui.PivotSettingTargetV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(options.dataSource);\n\n            that._refreshHandler = that.refresh.bind(that);\n            that.dataSource.first(CHANGE, that._refreshHandler);\n\n            that.template = kendo.template(that.options.template);\n\n            that._sortable();\n\n            that.element.on(\"click\" + NS, \".k-i-x-circle,.k-svg-i-x-circle\", function(e) {\n                var target = $(e.target).closest(\":not(path,svg)\");\n                var parent = target.closest(\".k-chip\");\n                var name = parent.find(\".k-chip-label\").text();\n\n                if (!name) {\n                    return;\n                }\n\n                that.remove(name);\n                parent.remove();\n                that.trigger(\"remove\", { name: name });\n            });\n\n            if (that.options.navigatable) {\n                that.element.on(\"keydown\" + NS, \".k-chip\", function(ev) {\n                    var chip = $(ev.target),\n                        key = ev.keyCode,\n                        name = chip.find(\".k-chip-label\").text();\n\n                    if (key === keys.DELETE || key === keys.BACKSPACE) {\n                        const targetIndex = that.options.configuratorNavigation ? that.options.configuratorNavigation.elements.indexOf(chip[0]) : -1;\n                        chip.find(\".k-i-x-circle,.k-svg-i-x-circle\").trigger(\"click\");\n                        if (!that.options.configuratorNavigation) {\n                            return;\n                        }\n\n                        that.options.configuratorNavigation.focusElement(\n                            that.options.configuratorNavigation.elements[targetIndex - 1],\n                        );\n                    } else if (key === keys.DOWN && ev.altKey) {\n                        chip.find(\".k-i-more-vertical,.k-svg-i-more-vertical\").trigger(\"click\");\n                    } else if (ev.ctrlKey && ev.shiftKey) {\n                        if (key == keys.LEFT) {\n                            that.move(name, Math.max(0, chip.index() - 1));\n\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                that.element.find(\".k-chip .k-chip-label\")\n                                    .filter((ind, el) => $(el).text() == name)\n                                    .closest(\".k-chip\")[0]\n                            );\n                        } else if (key == keys.RIGHT) {\n                            that.move(name, Math.min(chip.index() + 1, chip.parent().find(\"> .k-chip\").length - 1));\n\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                that.element.find(\".k-chip .k-chip-label\")\n                                    .filter((ind, el) => $(el).text() == name)\n                                    .closest(\".k-chip\")[0]\n                            );\n                        } else if ((key == keys.UP && that.options.setting == \"rows\") ||\n                            (key == keys.DOWN && that.options.setting == \"columns\")) {\n\n                            let otherTarget = that.sortable.options.connectWith.data(\"kendoPivotSettingTargetV2\");\n                            if (!otherTarget) {\n                                return;\n                            }\n\n                            that.remove(name);\n                            otherTarget.add(name);\n                            if (!that.options.configuratorNavigation) {\n                                return;\n                            }\n\n                            that.options.configuratorNavigation.focusElement(\n                                otherTarget.element.find(\".k-chip\").last()[0]\n                            );\n                        }\n                    }\n                });\n            }\n\n            that.fieldMenu = new ui.PivotFieldMenuV2(that.element, {\n                messages: that.options.messages.fieldMenu,\n                filterable: options.filterable,\n                filter: \".k-i-more-vertical,.k-svg-i-more-vertical\",\n                sortable: options.sortable,\n                dataSource: that.dataSource,\n                setting: options.setting\n            });\n\n            that.refresh();\n        },\n\n        events: [\"remove\"],\n\n        options: {\n            name: \"PivotSettingTargetV2\",\n            template: null,\n            filterable: false,\n            sortable: false,\n            setting: \"columns\",\n            enabled: true,\n            messages: {\n                empty: \"Drop Fields Here\"\n            }\n        },\n        setDataSource: function(dataSource) {\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.dataSource = this.options.dataSource = dataSource;\n\n            if (this.fieldMenu) {\n                this.fieldMenu.setDataSource(dataSource);\n            }\n            dataSource.first(CHANGE, this._refreshHandler);\n\n            this.refresh();\n        },\n\n        _applyState: function() {\n            if (this._sortState !== undefined$1) {\n                this.dataSource._sort = this._sortState;\n                this._sortState = undefined$1;\n            }\n\n            if (this._stateFilter !== undefined$1) {\n                this.dataSource._filter = this._stateFilter;\n                this._stateFilter = undefined$1;\n            }\n\n            this.dataSource[\"_\" + this.options.setting] = this.options.setting === \"measures\" ? normalizeMeasures(this._savedState) : normalizeMembers(this._savedState);\n        },\n\n        _cancelChanges: function() {\n            this._sortState = undefined$1;\n            this._stateFilter = undefined$1;\n            this._savedState = kendo.deepExtend([], this._initialState);\n            this._redraw();\n        },\n\n        _state: function(newState, modifyInit) {\n            var that = this;\n\n            if (!newState) {\n                return that._savedState || [];\n            } else {\n                if (!that._savedState || modifyInit) {\n                    that._initialState = kendo.deepExtend([], newState);\n                }\n                that._savedState = kendo.deepExtend([], newState);\n            }\n        },\n\n        _sortable: function() {\n            var that = this;\n\n            this.sortable = this.element.kendoSortable({\n                connectWith: this.options.connectWith,\n                hint: that.options.hint,\n                filter: \">*:not(.k-empty)\",\n                cursor: \"move\",\n                start: function(e) {\n                    e.item.trigger(\"focus\").blur();\n                },\n                change: function(e) {\n                    var name = e.item.find(\".k-chip-label\").text();\n\n                    if (e.action == \"receive\") {\n                        that.add(name);\n                    } else if (e.action == \"remove\") {\n                        that.remove(name);\n                    } else if (e.action == \"sort\") {\n                        that.move(name, e.newIndex);\n                    }\n                }\n            }).data(\"kendoSortable\");\n        },\n\n        add: function(name) {\n            let items = this._state();\n            let i = 0;\n\n            name = Array.isArray(name) ? name.slice(0) : [name];\n\n            let l = name.length;\n            while (i < l) {\n                if (indexOf(name[i], items) !== -1) {\n                    name.splice(i, 1);\n                    i -= 1;\n                    l -= 1;\n                }\n                i++;\n            }\n\n            if (name.length) {\n                items = items.concat(name);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        move: function(name, index) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n\n            if (idx > -1) {\n                name = items.splice(idx, 1)[0];\n\n                items.splice(index, 0, name);\n\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        remove: function(name) {\n            var items = this._state();\n            var idx = indexOf(name, items);\n            var sortExpressions = this.dataSource.sort();\n            var filter = this.dataSource.filter();\n\n            if (idx > -1) {\n                if (filter) {\n                    filter.filters = removeExpr(filter.filters, name);\n                    this._savedFilter = this.dataSource._filter;\n                    this._savedFilter.filters = filter.filters;\n                    if (!filter.filters.length) {\n                        this._savedFilter = null;\n                    }\n                }\n                if (sortExpressions) {\n                    sortExpressions = removeExpr(sortExpressions, name);\n                    this._sortState = sortExpressions;\n                }\n                items.splice(idx, 1);\n                this._state(items);\n                this._redraw();\n            }\n        },\n\n        _emptyState: function(enable) {\n            var that = this;\n            if (enable) {\n                that.element.html(this.options.messages.empty)\n                    .addClass(\"k-settings-description\")\n                    .removeClass(\"k-chip-list\");\n            } else {\n                that.element\n                    .removeClass(\"k-settings-description\")\n                    .addClass(\"k-chip-list\");\n            }\n        },\n\n        _redraw: function() {\n            var items = this._state() || [];\n            this._emptyState(!items.length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        _targetsHTML: function(items) {\n            var item;\n            var html = \"\";\n            var idx = 0;\n            var enabled = true;\n\n            if (items.length) {\n                for (; idx < items.length; idx++) {\n                    item = items[idx];\n                    item = item.name === undefined$1 ? { name: item } : item;\n\n                    html += this.template({ name: item.name, menuenabled: enabled });\n                }\n            }\n            return html;\n        },\n\n        refresh: function() {\n            if (this.dataSource._preventRefresh) {\n                return;\n            }\n            var items = this.dataSource[this.options.setting]();\n            this._state(items, true);\n            this._emptyState(!this._state().length);\n            if (items.length) {\n                this.element.html(this._targetsHTML(items));\n            }\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            this.dataSource.unbind(CHANGE, this._refreshHandler);\n            this.element.off(NS);\n\n            if (this.sortable) {\n                this.sortable.destroy();\n            }\n\n            if (this.fieldMenu) {\n                this.fieldMenu.destroy();\n            }\n\n            this.element = null;\n            this._refreshHandler = null;\n        }\n    });\n\n    var PivotConfiguratorButton = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n\n            that._element();\n            that._attachEvents();\n        },\n\n        options: {\n            name: \"PivotConfiguratorButton\",\n            text: \"Change settings\",\n            configurator: \"\"\n        },\n\n        destroy: function() {\n            this.element.off(NS);\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        toggle: function() {\n            var attr = kendo.attr(\"role\");\n            var pivotEl = this.element\n                .closest(\"[\" + attr + \"=pivotcontainer]\")\n                .find(\"[\" + attr + \"=pivotgridv2]\");\n            var pivot;\n\n            $(\"#\" + this.options.configurator).toggleClass(\"k-hidden\");\n\n            if (pivotEl.length) {\n                pivot = pivotEl.getKendoPivotGridV2();\n                pivot._setContentWidth();\n                pivot._updateDimensions();\n            }\n        },\n\n        _attachEvents: function() {\n            this.element.on(\"click\" + NS, this.toggle.bind(this));\n        },\n\n        _element: function() {\n            var options = this.options;\n            this.element.addClass(\"k-pivotgrid-configurator-button\");\n            this.element.html(kendo.format(\"<span>{0}{1}</span>\",options.text, kendo.ui.icon('gear')));\n        }\n    });\n\n    var PivotContainer = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            Widget.fn.init.call(that, element, options);\n            that.element = $(element);\n            that.options = options;\n\n\n            that._addClasses();\n        },\n\n        options: {\n            name: \"PivotContainer\",\n            configuratorPosition: \"left\"\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            kendo.deepExtend(that.options, options);\n            this.init(this.element, this.options);\n        },\n\n        _addClasses: function() {\n            var options = this.options;\n            var className;\n            this.element.removeClass(\"k-flex-row k-flex-row-reverse k-flex-column k-flex-column-reverse\");\n\n            switch (options.configuratorPosition) {\n                case \"right\":\n                    className = \"k-flex-row\";\n                    break;\n                case \"left\":\n                    className = \"k-flex-row-reverse\";\n                    break;\n                case \"bottom\":\n                    className = \"k-flex-column\";\n                    break;\n                case \"top\":\n                    className = \"k-flex-column-reverse\";\n                    break;\n                default:\n                    className = \"k-flex-row\";\n            }\n\n            this.element\n                .addClass(\"k-d-flex k-pos-relative\")\n                .addClass(className);\n        }\n    });\n\n    var PivotGridV2 = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._ariaId = that.element.attr(\"id\") || kendo.guid();\n            that._wrapper();\n\n            that._columnHeadersWrapper = $('<div class=\"k-pivotgrid-column-headers\"></div>');\n            that._rowHeadersWrapper = $('<div class=\"k-pivotgrid-row-headers\"></div>');\n            that._contentWrapper = $('<div class=\"k-pivotgrid-values\"></div>');\n\n            that.wrapper.append(that._columnHeadersWrapper);\n            that.wrapper.append(that._rowHeadersWrapper);\n            that.wrapper.append(that._contentWrapper);\n\n            that._columnBuilder = new ColumnRowBuilder( { template: this.options.columnHeaderTemplate, axes: \"columns\", ariaId: that._ariaId });\n            that._rowBuilder = new ColumnRowBuilder( { template: this.options.rowHeaderTemplate, axes: \"rows\", ariaId: that._ariaId });\n            that._contentBuilder = new ContentBuilderV2( {\n                dataCellTemplate: this.options.dataCellTemplate || DATACELL_TEMPLATE,\n                kpiStatusTemplate: this.options.kpiStatusTemplate || KPISTATUS_TEMPLATE,\n                kpiTrendTemplate: this.options.kpiTrendTemplate || KPITREND_TEMPLATE,\n                measures: this.dataSource._measures,\n                ariaId: that._ariaId\n            });\n\n            that._scrollable();\n            that._rowHeadersWrapper\n                .add(that._columnHeadersWrapper)\n                .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                    var button = $(this);\n                    var path = button.parent().attr(kendo.attr(\"key\"));\n                    var expanded = button.is(\".k-i-chevron-up,.k-svg-i-chevron-up\");\n                    var isRow = button.closest(\".k-pivotgrid-row-headers\").length !== 0;\n                    var paths = path.split(\",\");\n                    var eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n\n                    if (that.trigger(eventName, { path: paths, axis: isRow ? \"rows\" : \"columns\" })) {\n                        return;\n                    }\n\n                    var reducerPayLoad = {\n                        type: \"HEADERS_ACTION_TOGGLE\",\n                        payload: paths,\n                        tree: isRow ? that._rowBuilder.getTree() : that._columnBuilder.getTree()\n                    };\n                    var currentAxes = isRow ? that.dataSource._rows : that.dataSource._columns;\n                    var newHeaders = headersReducer(currentAxes, reducerPayLoad);\n\n                    that.dataSource._preventRefresh = true;\n                    that._columnBuilder._exportData = {};\n                    that._rowBuilder._exportData = {};\n\n                    if (isRow) {\n                        that.dataSource.rows(newHeaders);\n                    } else {\n                        that.dataSource.columns(newHeaders);\n                    }\n                 });\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            that._aria();\n\n            if (that.options.navigatable) {\n                that._initPivotGridNavigation();\n            }\n\n            that._initLoader();\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGridV2\",\n            autoBind: true,\n            height: null,\n            columnWidth: null,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null,\n            kpiStatusTemplate: null,\n            kpiTrendTemplate: null,\n            messages: {\n                emptyCellLabel: \"PivotGrid Empty Cell\"\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n            Widget.fn.destroy.call(that);\n\n            if (that.loader) {\n                that.loader.destroy();\n            }\n\n            if (that._windowResizeHandler) {\n                $(window).off(RESIZE + NS, that._windowResizeHandler);\n                that._windowResizeHandler = null;\n            }\n        },\n\n        _aria: function() {\n            var that = this;\n            that.element.attr(\"role\", \"grid\");\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            this._bindConfigurator();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        _initLoader: function(options) {\n            var that = this,\n                defaultOptions = {\n                    size: 'medium',\n                    messages: { exporting: 'Exporting...' }\n            };\n            defaultOptions = $.extend({}, defaultOptions, options);\n\n            const loader = $(\"<div></div>\").kendoLoader(defaultOptions).data(\"kendoLoader\");\n\n            that.loader = loader;\n            that._loaderContainer = useLoaderContainer.bind(that);\n        },\n\n\n        _initPivotGridNavigation: function() {\n            var that = this;\n\n            that.navigation = new PivotGridNavigation({ tabIndex: 0 });\n            that.navigation.keyboardEvents.keydown.o = function(_target, nav, _ev) {\n                if (!nav.root) {\n                    return;\n                }\n                // FIX: ADDED manually to fix an issue where depending on the order of the config element and button\n                // you either can open the configurator with O, or you can close the configurator with ESC\n                let next = nav.root.nextElementSibling;\n                if (!(next && next instanceof HTMLElement)) {\n                    return;\n                }\n                if (!next.matches('div.k-pivotgrid-configurator-button')) {\n                    next = next.nextElementSibling;\n                }\n                if (next && next instanceof HTMLElement && next.matches('div.k-pivotgrid-configurator-button')) {\n                    if (!nav.root.parentNode || nav.root.parentNode.querySelector(\".k-pivotgrid-configurator.k-hidden\")) {\n                        next.click();\n                    }\n                    setTimeout(() => {\n                        if (nav.root.parentNode) {\n                            const confHeader = nav.root.parentNode.querySelector('.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview');\n                            if (confHeader instanceof HTMLElement) {\n                                confHeader.setAttribute('tabindex', String(nav.tabIndex));\n                                confHeader.focus();\n                            }\n                        }\n                    }, 0);\n                }\n            };\n            that.navigation.start(that.element[0]);\n\n            const firstCell = that.navigation.first;\n\n            if (firstCell) {\n                firstCell.setAttribute('tabindex', '0');\n            }\n        },\n\n        _matchAriaAttributes: function(wrapper) {\n            var that = this;\n            const rowHeaderRows = wrapper.querySelectorAll(\n                \".k-pivotgrid-row-headers .k-pivotgrid-row\"\n            );\n            const rowHeaderCols = !rowHeaderRows[0] ? [] : Array.from(rowHeaderRows[0].children).reduce(\n                (acc, curr) => (acc += curr.getAttribute(\"colspan\") !== null ? +curr.getAttribute(\"colspan\") : 1),\n                0\n            );\n            const colHeaderRows = wrapper.querySelectorAll(\n                \".k-pivotgrid-column-headers tr\"\n            );\n            const colHeaderCells = wrapper.querySelectorAll(\n                \".k-pivotgrid-column-headers th\"\n            );\n            const valueTableCells = wrapper.querySelectorAll(\".k-pivotgrid-values td\");\n            const emptyCell = wrapper.querySelector(\".k-pivotgrid-empty-cell\");\n\n            emptyCell.setAttribute(\"aria-rowspan\", colHeaderRows.length.toString());\n            emptyCell.setAttribute(\"aria-colspan\", rowHeaderCols.toString());\n\n            const firstColHeadersRow = colHeaderRows[0];\n            const firstColHeaderRowCellsIds = !firstColHeadersRow ? [] : Array.from(firstColHeadersRow.children)\n                .map(el => el.getAttribute(\"id\"))\n                .join(\" \");\n            if (firstColHeadersRow) {\n                firstColHeadersRow.setAttribute(\n                    \"aria-owns\",\n                    `${emptyCell.getAttribute(\"id\")} ${firstColHeaderRowCellsIds}`\n                );\n            }\n\n            rowHeaderRows.forEach((row, index) => {\n                const valueCellsIds = that.filterAndMap(\n                    Array.from(valueTableCells),\n                    c => {\n                        const idParts = c.getAttribute(\"id\").split(\"-\");\n                        return idParts[idParts.length - 2] === (index + 1).toString();\n                    },\n                    c => c.getAttribute(\"id\")\n                );\n\n                row.setAttribute(\"aria-owns\", valueCellsIds.join(\" \"));\n            });\n\n            valueTableCells.forEach(cell => {\n                const idParts = cell.getAttribute(\"id\").split(\"-\");\n                const cellColIndex = +idParts[idParts.length - 1];\n                const colHeaderCellsIds = that.filterAndMap(\n                    Array.from(colHeaderCells),\n                    c => {\n                        const idParts = c.getAttribute(\"id\").split(\"-\");\n                        const headerCellColIndex = +idParts[idParts.length - 1];\n                        const headerCellColspan = +c.getAttribute(\"colspan\");\n                        const colIndexIsEqual = cellColIndex === headerCellColIndex;\n                        const cellColIndexIsWithinHeaderCellRange =\n                            headerCellColspan > 1 &&\n                            headerCellColIndex < cellColIndex &&\n                            headerCellColIndex + headerCellColspan - 1 >= cellColIndex;\n\n                        return colIndexIsEqual || cellColIndexIsWithinHeaderCellRange;\n                    },\n                    c => c.getAttribute(\"id\")\n                );\n\n                cell.setAttribute(\"aria-describedby\", colHeaderCellsIds.join(\" \"));\n            });\n        },\n\n        filterAndMap: function(arr, predicate, mapper) {\n            return arr.reduce(\n                (acc, curr) => (predicate(curr) ? [...acc, mapper(curr)] : acc),\n                []\n            );\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSourceV2.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _resize: function() {\n            var that = this;\n            that.wrapper[0].style.setProperty('--kendo-scrollbar-width', kendo.format(\"{0}px\", getScollWidth()));\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that._columnHeadersWrapper;\n            var rowsHeader = that._rowHeadersWrapper;\n\n            that._resize();\n            that._windowResizeHandler = that._resize.bind(that);\n\n            that._contentWrapper.scroll(function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.bind(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n            $(window).on(RESIZE + NS, that._windowResizeHandler);\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this._contentWrapper.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                this._rowHeadersWrapper.scrollTop(scrollTop + (-delta));\n                this._contentWrapper.scrollTop(scrollTop + (-delta));\n            }\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-pivotgrid\");\n            var emptyCell = $(`<span class=\"k-pivotgrid-empty-cell\" id=\"${this._ariaId}-empty-cell\" role=\"columnheader\"><span class=\"k-sr-only\">${this.options.messages.emptyCellLabel}</span></span>`);\n            this.wrapper.append(emptyCell);\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _progress: function(toggle) {\n            if (this._isExport) {\n                this._loaderContainer(toggle, { message: \"Exporting...\" });\n            } else {\n                kendo.ui.progress(this.wrapper, toggle);\n            }\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _updateDimensions: function() {\n            var that = this;\n            that.wrapper.css({\n                \"grid-template-columns\": kendo.format(\"{0}px 1fr\", that._rowHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetWidth),\n                \"grid-template-rows\": kendo.format(\"{0}px 1fr\", that._columnHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetHeight),\n            });\n        },\n\n        _setContentWidth: function() {\n            if (!this.options.columnWidth) {\n                return;\n            }\n            var contentTable = this._contentWrapper.find(\"table\");\n            var columnTable = this._columnHeadersWrapper.children(\"table\");\n            var rowTable = this._rowHeadersWrapper.children(\"table\");\n\n            contentTable.add(columnTable).add(rowTable).find(\"col\").width(this.options.columnWidth);\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfiguratorV2(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var dataIndex;\n            var dataItem;\n\n            if (columnIndex >= contentBuilder.columnsCount || columnIndex < 0 ||\n                rowIndex >= contentBuilder.rowsCount || rowIndex < 0) {\n                return null;\n            }\n\n            dataIndex = rowIndex * contentBuilder.columnsCount + columnIndex;\n            dataItem = contentBuilder.hash[dataIndex < 0 ? 0 : dataIndex];\n\n            return {\n                columnTuple: dataItem.columnTuple,\n                rowTuple: dataItem.rowTuple,\n                dataItem: dataItem.data\n            };\n        },\n\n        refresh: function() {\n            var that = this;\n\n            var dataSource = that.dataSource;\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            var lastFocusedCellID = kendo._activeElement() ? kendo._activeElement().id : null;\n            var lastCellIdWithTabIndex = that.wrapper.find(\"[tabindex=0]\").attr(\"id\");\n            that._columnBuilder.setTuples(dataSource._columnTuples);\n            that._columnHeadersWrapper.html(that._columnBuilder.build());\n\n            that._rowBuilder.setTuples(dataSource._rowTuples);\n            that._rowHeadersWrapper.html(that._rowBuilder.build());\n\n            that._contentBuilder.setRowColumnInfo({\n                columnHeaderLeafs: that._columnBuilder.getHeaderLeafs(),\n                rowHeaderLeafs: that._rowBuilder.getHeaderLeafs(),\n                columnHeaderBreadth: that._columnBuilder.getBreadth(),\n                rowHeaderDepth: that._rowBuilder.getBreadth(),\n                data: dataSource._view\n            });\n\n            that._contentWrapper.html(that._contentBuilder.build());\n\n\n            that._setContentWidth();\n            that._updateDimensions();\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n            that._matchAriaAttributes(that.wrapper[0]);\n\n            if (!that.navigation) {\n                return;\n            }\n\n            if (lastCellIdWithTabIndex && that.element.find(`#${lastCellIdWithTabIndex}`).length > 0) {\n                that.element.find(`#${lastCellIdWithTabIndex}`).attr('tabindex', '0');\n            } else {\n                const firstCell = that.navigation.first;\n\n                if (firstCell) {\n                    firstCell.setAttribute('tabindex', '0');\n                }\n            }\n\n            if (lastFocusedCellID && lastFocusedCellID.indexOf(that._ariaId) == 0) {\n                that.navigation.focusElement(that.element.find(`#${lastFocusedCellID}`)[0]);\n            }\n        }\n    });\n\n    ui.plugin(PivotConfiguratorButton);\n    ui.plugin(PivotContainer);\n    ui.plugin(PivotGridV2);\n\n    var PivotGrid = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n            var columnBuilder;\n            var rowBuilder;\n\n            Widget.fn.init.call(that, element, options);\n\n            STATE_COLLAPSED_ICONNAME = kendo.support.isRtl(that.element) ? \"caret-alt-left\" : \"caret-alt-right\";\n\n            that._dataSource();\n\n            that._bindConfigurator();\n\n            that._wrapper();\n            that._createLayout();\n\n            that._columnBuilder = columnBuilder = new ColumnBuilder();\n            that._rowBuilder = rowBuilder = new RowBuilder();\n            that._contentBuilder = new ContentBuilder();\n\n            that._templates();\n\n            that.columnsHeader\n                .add(that.rowsHeader)\n                .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                    var button = $(this);\n                    var builder = columnBuilder;\n                    var action = \"expandColumn\";\n                    var eventName;\n                    var path = button.attr(kendo.attr(\"path\"));\n                    var eventArgs = {\n                        axis: \"columns\",\n                        path: JSON.parse(path)\n                    };\n\n                    if (button.parent().is(\"td\")) {\n                        builder = rowBuilder;\n                        action = \"expandRow\";\n                        eventArgs.axis = \"rows\";\n                    }\n\n                    var expanded = button.is(STATE_EXPANDED_SELECTOR);\n                    var metadata = builder.metadata[path];\n                    var request = metadata.expanded === undefined$1;\n\n                    eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n                    eventArgs.childrenLoaded = metadata.maxChildren > metadata.children;\n\n                    if (that.trigger(eventName, eventArgs)) {\n                        return;\n                    }\n\n                    builder.metadata[path].expanded = !expanded;\n                    kendo.ui.icon(button,{ icon: !expanded ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME });\n\n                    if (!expanded && request) {\n                        that.dataSource[action](eventArgs.path);\n                    } else {\n                        that.refresh();\n                    }\n                });\n\n            that._scrollable();\n\n            if (that.options.autoBind) {\n                that.dataSource.fetch();\n            }\n\n            kendo.notify(that);\n        },\n\n        events: [\n            DATABINDING,\n            DATABOUND,\n            EXPANDMEMBER,\n            COLLAPSEMEMBER\n        ],\n\n        options: {\n            name: \"PivotGrid\",\n            autoBind: true,\n            reorderable: true,\n            filterable: false,\n            sortable: false,\n            navigatable: false,\n            height: null,\n            columnWidth: 100,\n            configurator: \"\",\n            columnHeaderTemplate: null,\n            rowHeaderTemplate: null,\n            dataCellTemplate: null,\n            kpiStatusTemplate: null,\n            kpiTrendTemplate: null,\n            messages: {\n                measureFields: \"Drop Data Fields Here\",\n                columnFields: \"Drop Column Fields Here\",\n                rowFields: \"Drop Rows Fields Here\"\n            }\n        },\n\n        _templates: function() {\n            var columnTemplate = this.options.columnHeaderTemplate;\n            var rowTemplate = this.options.rowHeaderTemplate;\n            var dataTemplate = this.options.dataCellTemplate;\n            var kpiStatusTemplate = this.options.kpiStatusTemplate;\n            var kpiTrendTemplate = this.options.kpiTrendTemplate;\n\n            this._columnBuilder.template = kendo.template(columnTemplate || HEADER_TEMPLATE, { useWithBlock: !!columnTemplate });\n            this._contentBuilder.dataTemplate = kendo.template(dataTemplate || DATACELL_TEMPLATE, { useWithBlock: !!dataTemplate });\n            this._contentBuilder.kpiStatusTemplate = kendo.template(kpiStatusTemplate || KPISTATUS_TEMPLATE, { useWithBlock: !!kpiStatusTemplate });\n            this._contentBuilder.kpiTrendTemplate = kendo.template(kpiTrendTemplate || KPITREND_TEMPLATE, { useWithBlock: !!kpiTrendTemplate });\n            this._rowBuilder.template = kendo.template(rowTemplate || HEADER_TEMPLATE, { useWithBlock: !!rowTemplate });\n        },\n\n        _bindConfigurator: function() {\n            var configurator = this.options.configurator;\n            if (configurator) {\n                $(configurator).kendoPivotConfigurator(\"setDataSource\", this.dataSource);\n            }\n        },\n\n        cellInfoByElement: function(element) {\n            element = $(element);\n\n            return this.cellInfo(element.index(), element.parent(\"tr\").index());\n        },\n\n        cellInfo: function(columnIndex, rowIndex) {\n            var contentBuilder = this._contentBuilder;\n            var columnInfo = contentBuilder.columnIndexes[columnIndex || 0];\n            var rowInfo = contentBuilder.rowIndexes[rowIndex || 0];\n            var dataIndex;\n\n            if (!columnInfo || !rowInfo) {\n                return null;\n            }\n\n            dataIndex = (rowInfo.index * contentBuilder.rowLength) + columnInfo.index;\n\n            return {\n                columnTuple: columnInfo.tuple,\n                rowTuple: rowInfo.tuple,\n                measure: columnInfo.measure || rowInfo.measure,\n                dataItem: this.dataSource.view()[dataIndex]\n            };\n        },\n\n        setDataSource: function(dataSource) {\n            this.options.dataSource = dataSource;\n\n            this._dataSource();\n\n            if (this.measuresTarget) {\n                this.measuresTarget.setDataSource(dataSource);\n            }\n\n            if (this.rowsTarget) {\n                this.rowsTarget.setDataSource(dataSource);\n            }\n\n            if (this.columnsTarget) {\n                this.columnsTarget.setDataSource(dataSource);\n            }\n\n            this._bindConfigurator();\n\n            if (this.options.autoBind) {\n                dataSource.fetch();\n            }\n        },\n\n        setOptions: function(options) {\n            Widget.fn.setOptions.call(this, options);\n\n            this._templates();\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n\n            clearTimeout(this._headerReflowTimeout);\n        },\n\n        _dataSource: function() {\n            var that = this;\n            var dataSource = that.options.dataSource;\n\n            dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n            if (that.dataSource && this._refreshHandler) {\n                that.dataSource.unbind(CHANGE, that._refreshHandler)\n                               .unbind(STATERESET, that._stateResetHandler)\n                               .unbind(PROGRESS, that._progressHandler)\n                               .unbind(ERROR, that._errorHandler);\n            } else {\n                that._refreshHandler = that.refresh.bind(that);\n                that._progressHandler = that._requestStart.bind(that);\n                that._stateResetHandler = that._stateReset.bind(that);\n                that._errorHandler = that._error.bind(that);\n            }\n\n            that.dataSource = kendo.data.PivotDataSource.create(dataSource)\n                                   .bind(CHANGE, that._refreshHandler)\n                                   .bind(PROGRESS, that._progressHandler)\n                                   .bind(STATERESET, that._stateResetHandler)\n                                   .bind(ERROR, that._errorHandler);\n        },\n\n        _error: function() {\n            this._progress(false);\n        },\n\n        _requestStart: function() {\n            this._progress(true);\n        },\n\n        _stateReset: function() {\n            this._columnBuilder.reset();\n            this._rowBuilder.reset();\n        },\n\n        _wrapper: function() {\n            var height = this.options.height;\n\n            this.wrapper = this.element.addClass(\"k-pivot\");\n\n            if (height) {\n                this.wrapper.css(\"height\", height);\n            }\n        },\n\n        _measureFields: function() {\n            this.measureFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-measures\");\n\n            this.measuresTarget = this._createSettingTarget(this.measureFields, {\n                setting: \"measures\",\n                messages: {\n                    empty: this.options.messages.measureFields\n                }\n            });\n        },\n\n        _createSettingTarget: function(element, options) {\n            var template,\n                pivotOptions = this.options;\n\n            template = ({ sortIcon, name }) => ''\n                + `<span class=\"k-chip k-chip-md k-rounded-md k-chip-solid k-chip-solid-base\" tabindex=\"0\" data-${kendo.ns}name=\"${name}\">`\n                    + '<span class=\"k-chip-content\">'\n                        + `<span class=\"k-chip-text\">${name}</span>`\n                    + '</span>'\n                    + '<span class=\"k-chip-actions k-field-actions\">'\n                        + getIcons(sortIcon, options, pivotOptions)\n                    + '</span>'\n                + '</span>';\n\n            return new kendo.ui.PivotSettingTarget(element, $.extend({\n                dataSource: this.dataSource,\n                template: template,\n                emptyTemplate: (data) => `<span class=\"k-empty\">${data}</span>`,\n                enabled: this.options.reorderable\n            }, options));\n        },\n\n        _initSettingTargets: function() {\n            this.columnsTarget = this._createSettingTarget(this.columnFields, {\n                connectWith: this.rowFields,\n                setting: \"columns\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.columnFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n\n            this.rowsTarget = this._createSettingTarget(this.rowFields, {\n                connectWith: this.columnFields,\n                setting: \"rows\",\n                filterable: this.options.filterable,\n                sortable: this.options.sortable,\n                messages: {\n                    empty: this.options.messages.rowFields,\n                    fieldMenu: this.options.messages.fieldMenu\n                }\n            });\n        },\n\n        _createLayout: function() {\n            var that = this;\n            var layoutTable = $(LAYOUT_TABLE);\n            var leftContainer = layoutTable.find(\".k-pivot-rowheaders\");\n            var rightContainer = layoutTable.find(\".k-pivot-table\");\n            var gridWrapper = $(DIV).addClass(\"k-grid\");\n\n            that._measureFields();\n            that.columnFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-columns\");\n\n            that.rowFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-rows\");\n            that.columnsHeader = $('<div class=\"k-grid-header-wrap\" />')\n                                    .wrap('<div class=\"k-grid-header\" />');\n\n            that.columnsHeader.parent().css(\"padding-right\", kendo.support.scrollbar());\n\n            that.rowsHeader = $('<div class=\"k-grid k-alt\"/>');\n            that.content = $('<div class=\"k-grid-content\" />');\n\n            leftContainer.append(that.measureFields);\n            leftContainer.append(that.rowFields);\n            leftContainer.append(that.rowsHeader);\n\n            gridWrapper.append(that.columnsHeader.parent());\n            gridWrapper.append(that.content);\n\n            rightContainer.append(that.columnFields);\n            rightContainer.append(gridWrapper);\n\n            that.wrapper.append(layoutTable);\n\n            that.columnsHeaderTree = new kendo.dom.Tree(that.columnsHeader[0]);\n            that.rowsHeaderTree = new kendo.dom.Tree(that.rowsHeader[0]);\n            that.contentTree = new kendo.dom.Tree(that.content[0]);\n\n            that._initSettingTargets();\n        },\n\n        _progress: function(toggle) {\n            kendo.ui.progress(this.wrapper, toggle);\n        },\n\n        _resize: function() {\n            if (this.content[0].firstChild) {\n                this._setSectionsWidth();\n                this._setSectionsHeight();\n                this._setContentWidth();\n                this._setContentHeight();\n                this._columnHeaderReflow();\n            }\n        },\n\n        _columnHeaderReflow: function() {\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            if (!kendo.support.browser.mozilla) {\n                return;\n            }\n\n            clearTimeout(this._headerReflowTimeout);\n\n            columnTable.css(\"table-layout\", \"auto\");\n\n            this._headerReflowTimeout = setTimeout(function() {\n                columnTable.css(\"table-layout\", \"\");\n            });\n        },\n\n        _setSectionsWidth: function() {\n            var rowsHeader = this.rowsHeader;\n            var leftColumn = rowsHeader.parent(\".k-pivot-rowheaders\").width(AUTO);\n            var width;\n\n            width = Math.max(outerWidth(this.measureFields), outerWidth(this.rowFields));\n            width = Math.max(rowsHeader.children(\"table\").width(), width);\n\n            leftColumn.width(width);\n        },\n\n        _setSectionsHeight: function() {\n            var measureFieldsHeight = this.measureFields.height(AUTO).height();\n            var columnFieldsHeight = this.columnFields.height(AUTO).height();\n            var rowFieldsHeight = this.rowFields.height(AUTO).innerHeight();\n            var columnsHeight = this.columnsHeader.height(AUTO).innerHeight();\n\n            var padding = rowFieldsHeight - this.rowFields.height();\n\n            var firstRowHeight = columnFieldsHeight > measureFieldsHeight ? columnFieldsHeight : measureFieldsHeight;\n            var secondRowHeight = columnsHeight > rowFieldsHeight ? columnsHeight : rowFieldsHeight;\n\n            this.measureFields.height(firstRowHeight);\n            this.columnFields.height(firstRowHeight);\n            this.rowFields.height(secondRowHeight - padding);\n            this.columnsHeader.height(secondRowHeight);\n        },\n\n        _setContentWidth: function() {\n            var contentTable = this.content.find(\"table\");\n            var columnTable = this.columnsHeader.children(\"table\");\n\n            var rowLength = contentTable.children(\"colgroup\").children().length;\n\n            var calculatedWidth = rowLength * this.options.columnWidth;\n            var minWidth = Math.ceil((calculatedWidth / this.content.width()) * 100);\n\n            if (minWidth < 100) {\n                minWidth = 100;\n            }\n\n            contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n\n            this._resetColspan(columnTable);\n        },\n\n        _setContentHeight: function() {\n            var that = this;\n            var content = that.content;\n            var rowsHeader = that.rowsHeader;\n            var innerHeight = that.wrapper.innerHeight();\n            var scrollbar = kendo.support.scrollbar();\n            var skipScrollbar = content[0].offsetHeight === content[0].clientHeight;\n            var height = that.options.height;\n\n            if (that.wrapper.is(\":visible\")) {\n                if (!innerHeight || !height) {\n                    if (skipScrollbar) {\n                        scrollbar = 0;\n                    }\n\n                    content.height(\"auto\");\n                    rowsHeader.height(content.height() - scrollbar);\n                    return;\n                }\n\n                innerHeight -= outerHeight(that.columnFields);\n                innerHeight -= outerHeight(that.columnsHeader.parent());\n\n                if (innerHeight <= scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                    innerHeight = scrollbar * 2 + 1;\n                    if (!skipScrollbar) {\n                        innerHeight += scrollbar;\n                    }\n                }\n\n                content.height(innerHeight);\n\n                if (skipScrollbar) {\n                    scrollbar = 0;\n                }\n\n                rowsHeader.height(innerHeight - scrollbar);\n            }\n        },\n\n        _resetColspan: function(columnTable) {\n            var that = this;\n            var cell = columnTable.children(\"tbody\").children().first().children().first();\n\n            if (that._colspan === undefined$1) {\n                that._colspan = cell.attr(\"colspan\");\n            }\n\n            cell.attr(\"colspan\", 1);\n\n            clearTimeout(that._layoutTimeout);\n\n            that._layoutTimeout = setTimeout(function() {\n                cell.attr(\"colspan\", that._colspan);\n                that._colspan = undefined$1;\n            });\n        },\n\n        _axisMeasures: function(axis) {\n            var result = [];\n            var dataSource = this.dataSource;\n            var measures = dataSource.measures();\n            var hasMeasure = measures.length > 1 || (measures[0] && measures[0].type);\n\n            if (dataSource.measuresAxis() === axis) {\n                if (dataSource[axis]().length === 0 || hasMeasure) {\n                    result = measures;\n                }\n            }\n\n            return result;\n        },\n\n        items: function() {\n            return [];\n        },\n\n        refresh: function() {\n            var that = this;\n            var dataSource = that.dataSource;\n\n            var axes = dataSource.axes();\n            var columns = (axes.columns || {}).tuples || [];\n            var rows = (axes.rows || {}).tuples || [];\n\n            var columnBuilder = that._columnBuilder;\n            var rowBuilder = that._rowBuilder;\n\n            var columnAxis = {};\n            var rowAxis = {};\n\n            if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                return;\n            }\n\n            columnBuilder.measures = that._axisMeasures(AXIS_COLUMNS);\n            rowBuilder.measures = that._axisMeasures(AXIS_ROWS);\n\n            that.columnsHeaderTree.render(columnBuilder.build(columns));\n            that.rowsHeaderTree.render(rowBuilder.build(rows));\n\n            columnAxis = {\n                indexes: columnBuilder._indexes,\n                measures: columnBuilder.measures,\n                metadata: columnBuilder.metadata\n            };\n\n            rowAxis = {\n                indexes: rowBuilder._indexes,\n                measures: rowBuilder.measures,\n                metadata: rowBuilder.metadata\n            };\n\n            that.contentTree.render(that._contentBuilder.build(dataSource.view(), columnAxis, rowAxis));\n\n            that._resize();\n\n            if (that.touchScroller) {\n                that.touchScroller.contentResized();\n            } else {\n                var touchScroller = kendo.touchScroller(that.content);\n\n                if (touchScroller && touchScroller.movable) {\n                    that.touchScroller = touchScroller;\n\n                    touchScroller.movable.bind(\"change\", function(e) {\n                        kendo.scrollLeft(that.columnsHeader, -e.sender.x);\n                        that.rowsHeader.scrollTop(-e.sender.y);\n                    });\n                }\n            }\n\n            that._progress(false);\n\n            that.trigger(DATABOUND);\n        },\n\n        _scrollable: function() {\n            var that = this;\n            var columnsHeader = that.columnsHeader;\n            var rowsHeader = that.rowsHeader;\n\n            that.content.on(\"scroll\", function() {\n                kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                rowsHeader.scrollTop(this.scrollTop);\n            });\n\n            rowsHeader.on(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n        },\n\n        _wheelScroll: function(e) {\n            if (e.ctrlKey) {\n                return;\n            }\n\n            var delta = kendo.wheelDeltaY(e);\n            var scrollTop = this.content.scrollTop();\n\n            if (delta) {\n                e.preventDefault();\n                //In Firefox DOMMouseScroll event cannot be canceled\n                $(e.currentTarget).closest(\":not(path,svg)\").one(\"wheel\" + NS, false);\n\n                this.rowsHeader.scrollTop(scrollTop + (-delta));\n                this.content.scrollTop(scrollTop + (-delta));\n            }\n        }\n    });\n\n    var element = kendo.dom.element;\n    var htmlNode = kendo.dom.html;\n\n    var createMetadata = function(levelNum, memberIdx) {\n       return {\n            maxChildren: 0,\n            children: 0,\n            maxMembers: 0,\n            members: 0,\n            measures: 1,\n            levelNum: levelNum,\n            parentMember: memberIdx !== 0\n        };\n    };\n\n    var buildPath = function(tuple, index) {\n        var path = [];\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            path.push(tuple.members[idx].name);\n        }\n\n        return path;\n    };\n\n    var tupleName = function(tuple, index) {\n        var name = \"\";\n        var idx = 0;\n\n        for (; idx <= index; idx++) {\n            name += tuple.members[idx].name;\n        }\n\n        return name;\n    };\n\n    var ContentBuilderV2 = Class.extend({\n        init: function(options) {\n            this.dataCellTemplate = kendo.template(options.dataCellTemplate);\n            this.kpiStatusTemplate = kendo.template(options.kpiStatusTemplate);\n            this.kpiTrendTemplate = kendo.template(options.kpiTrendTemplate);\n            this.measures = options.measures;\n            this.ariaId = options.ariaId;\n            this.hash = [];\n        },\n\n        setRowColumnInfo: function(options) {\n            this.data = options.data;\n            this.columnHeaderLeafs = options.columnHeaderLeafs;\n            this.rowHeaderLeafs = options.rowHeaderLeafs;\n            this.columnHeaderBreadth = options.columnHeaderBreadth;\n            this.rowHeaderDepth = options.rowHeaderDepth;\n            this.hash.length = 0;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(data) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < data.length; index++) {\n                row = $(`<tr class=\"k-pivotgrid-row\" role='presentation'></tr>`);\n                body.append(row);\n                that.addColumCell(row, data[index], index);\n            }\n\n            this.rowsCount = data.length;\n        },\n\n        _getTemplate: function(cell, options) {\n            const that = this;\n            let measureType;\n\n            const cellMembers = cell.columnTuple.members;\n            const cellMeasure = cellMembers[cellMembers.length - 1];\n            const measure = that.measures && that.measures.find((measure) => measure.name === cellMeasure.name);\n            const cellValue = cell.data !== null ? cell.data.value : cell.data;\n\n            if (measure && measure.type) {\n                measureType = measure.type;\n            }\n\n            let template = this.dataCellTemplate;\n            if (this.measures && measureType && cellValue !== \"\") {\n                if (!options.dataItem) {\n                    options.dataItem = { value: isNaN(Number(cellValue)) ? cellValue : Number(cellValue) };\n                }\n                switch (measureType) {\n                    case \"status\":\n                      template = this.kpiStatusTemplate;\n                      break;\n                    case \"trend\":\n                      template = this.kpiTrendTemplate;\n                      break;\n                  }\n            }\n\n            return template(options);\n\n        },\n\n        addColumCell: function(rowEl, rowItem, rowIndex) {\n            var that = this;\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                var cell = rowItem.cells[index];\n                if (cell) {\n                    var cellEl = $(`<td id=\"${that.ariaId}-cell-${rowIndex + 1}-${index + 1}\" class=\"k-pivotgrid-cell\" role=\"gridcell\"></td>`);\n                    if (this.rowHeaderLeafs[rowIndex].total || this.columnHeaderLeafs[index].total) {\n                        cellEl.addClass(\"k-pivotgrid-total\");\n                    }\n\n                    cellEl.append(that._getTemplate(cell, {\n                        dataItem: cell.data,\n                        rowTuple: cell.rowTuple,\n                        columnTuple: cell.columnTuple\n                    }));\n                    this.hash.push(cell);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var data = toData((this.data || []).slice(), this.columnHeaderLeafs, this.rowHeaderLeafs, this.columnHeaderBreadth, this.rowHeaderDepth);\n            var that = this;\n\n            var table = $(`<table class='k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='k-pivotgrid-tbody' role='presentation'></tbody></table>`);\n\n            that.table = table;\n            that.addColElements(this.columnHeaderLeafs.length);\n            that.addRowElements(data);\n            this.rowsCount = data.length;\n            this.columnsCount = this.columnHeaderLeafs.length;\n\n            return that.table;\n        }\n    });\n\n    var ColumnRowBuilder = Class.extend({\n        init: function(options) {\n            this.tuples = options.tuples;\n            this.axes = options.axes;\n            this.ariaId = options.ariaId;\n            this.headerTemplate = kendo.template(HEADERTEMPLATE);\n            this._exportData = {};\n            if (options.template) {\n                this.template = kendo.template(options.template);\n            }\n        },\n\n        setTuples: function(tuples) {\n            this.tuples = tuples;\n        },\n\n        addColElements: function(count) {\n            var html = \"\";\n\n            for (var index = 0; index < count; index++) {\n                html += \"<col>\";\n            }\n\n            this.table.find(\"colgroup\").append(html);\n        },\n\n        addRowElements: function(columnHeaderRows) {\n            var that = this;\n            var body = that.table.find(\"tbody\");\n            var row;\n\n            for (var index = 0; index < columnHeaderRows.length; index++) {\n                row = $('<tr class=\"k-pivotgrid-row\" role=\"row\"></tr>');\n                body.append(row);\n                that.addColumCell(row, columnHeaderRows[index], index);\n            }\n        },\n\n        _getExportData: function(rowIndex, cell, rowElement) {\n            const pattern = /\\[\\(All\\)\\]/;\n\n            if (cell.levelName.match(pattern)) {\n                cell.caption = cell.caption.toUpperCase();\n            }\n\n            if (!this._exportData[rowIndex]) {\n                this._exportData[rowIndex] = { children: [cell], element: rowElement };\n            } else {\n                this._exportData[rowIndex].children.push(cell);\n            }\n        },\n\n        addColumCell: function(rowEl, rowItem, rowIndex) {\n            var that = this;\n            var cellEl;\n            var cell;\n\n            for (var index = 0; index < rowItem.cells.length; index++) {\n                cell = rowItem.cells[index];\n                if (cell) {\n                    this._getExportData(rowIndex, cell, rowEl);\n                    const expanded = cell.children && cell.children.length > 0;\n                    cellEl = $(that.headerTemplate({\n                        id: `${that.ariaId}-${that.axes == \"columns\" ? \"ch\" : \"rh\"}-${rowIndex + 1}-${index + 1}`,\n                        rowspan: cell.rowSpan,\n                        colspan: cell.colSpan,\n                        key: cell.path.join(\",\") + (cell.total ? '|[TOTAL]' : ''),\n                        iconClass: (cell.children && cell.children.length) ? \"up\" : \"down\",\n                        expandable: cell.hasChildren && !cell.total,\n                        expanded: expanded ? \"true\" : \"false\",\n                        headerClass: kendo.format(\"k-pivotgrid-cell{0}{1}\", cell.total ? \" k-pivotgrid-header-total\" : \"\", cell.levelNum === 0 ? \" k-pivotgrid-header-root\" : \"\"),\n                        role: that.axes == \"columns\" ? \"columnheader\" : \"rowheader\"\n                    }));\n                    if (expanded) {\n                        cellEl.addClass(\"k-pivotgrid-expanded\");\n                    }\n\n                    const defaultCellTemplate = `<span class=\"k-pivotgrid-header-title\">${cell.caption}</span>`;\n\n                    cellEl.append(that.template ? that.template({ member: cell }) : defaultCellTemplate);\n                    rowEl.append(cellEl);\n                }\n            }\n        },\n\n        build: function() {\n            var tree = toTree((this.tuples || []).slice());\n            var treeData = this.axes == \"columns\" ? toColumns(tree) : toRows(tree);\n            var headerRows = treeData[0];\n            var headerLeafs = treeData[1];\n            var breadth = treeData[2];\n            var rowHeaderBreadth = treeData[3];\n            var that = this;\n            that._tree = tree;\n            that._breadth = breadth;\n            that._headerLeafs = headerLeafs;\n\n            var table = $(`<table class='k-pivotgrid-table' role='presentation'><colgroup></colgroup><tbody class='k-pivotgrid-tbody' role='rowgroup'></tbody></table>`);\n\n            that.table = table;\n            that.addColElements(this.axes == \"columns\" ? headerLeafs.length : rowHeaderBreadth);\n            that.addRowElements(headerRows);\n\n            return that.table;\n        },\n\n        getTree: function() {\n            return this._tree;\n        },\n\n        getBreadth: function() {\n            return this._breadth;\n        },\n\n        getHeaderLeafs: function() {\n            return this._headerLeafs;\n        }\n    });\n\n    var ColumnBuilder = Class.extend({\n        init: function() {\n            this.measures = 1;\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.headerTable }, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.map = {};\n            this.rows = [];\n            this.rootTuple = root;\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"th\", { className: tableStyles.header } , [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n            var row;\n\n            var cellsLength;\n            var cellIdx;\n            var cells;\n            var cell;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                if (row.rowSpan === 1) {\n                    continue;\n                }\n\n                cells = row.children;\n\n                cellIdx = 0;\n                cellsLength = cells.length;\n\n                for (; cellIdx < cellsLength; cellIdx++) {\n                    cell = cells[cellIdx];\n\n                    if (cell.tupleAll) {\n                        cell.attr.rowSpan = row.rowSpan;\n                    }\n                }\n            }\n        },\n\n        _rowIndex: function(row) {\n            var rows = this.rows;\n            var length = rows.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                if (rows[idx] === row) {\n                    break;\n                }\n            }\n\n            return idx;\n        },\n\n        _rowLength: function() {\n            var cells = this.rows[0] ? this.rows[0].children : [];\n            var length = cells.length;\n            var rowLength = 0;\n            var idx = 0;\n\n            if (length) {\n                for (; idx < length; idx++) {\n                    rowLength += cells[idx].attr.colSpan || 1;\n                }\n            }\n\n            if (!rowLength) {\n                rowLength = this.measures;\n            }\n\n            return rowLength;\n        },\n\n        _row: function(tuple, memberIdx, parentMember) {\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var levelNum = tuple.members[memberIdx].levelNum;\n            var rowKey = rootName + levelNum;\n            var map = this.map;\n            var parentRow;\n            var children;\n\n            var row = map[rowKey];\n\n            if (!row) {\n                row = element(\"tr\", { className: tableStyles.tableRow }, []);\n\n                row.parentMember = parentMember;\n                row.collapsed = 0;\n                row.colSpan = 0;\n                row.rowSpan = 1;\n\n                map[rowKey] = row;\n                parentRow = map[rootName + (Number(levelNum) - 1)];\n\n                if (parentRow) {\n                    children = parentRow.children;\n\n                    if (children[1] && children[1].attr.className.indexOf(\"k-alt\") === -1) {\n                        row.notFirst = true;\n                    } else {\n                        row.notFirst = parentRow.notFirst;\n                    }\n                }\n\n                this.rows.splice(this._rowIndex(parentRow) + 1, 0, row);\n            } else {\n                row.notFirst = false;\n\n                if (!row.parentMember || row.parentMember !== parentMember) {\n                    row.parentMember = parentMember;\n                    row.collapsed = 0;\n                    row.colSpan = 0;\n                }\n            }\n\n            return row;\n        },\n\n        _measures: function(measures, tuple, className) {\n            var map = this.map;\n            var row = map.measureRow;\n            var measure;\n\n            if (!row) {\n                row = element(\"tr\", { className: tableStyles.tableRow }, []);\n                map.measureRow = row;\n                this.rows.push(row);\n            }\n\n            for (var idx = 0, length = measures.length; idx < length; idx++) {\n                measure = measures[idx];\n                row.children.push(this._cell((className || \"\"), [this._content(measure, tuple)], measure));\n            }\n\n            return length;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }), true);\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"th\", { className: tableStyles.header + \" \" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx, parentMember) {\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var row, childRow, children, childrenLength;\n            var cell, allCell, cellAttr;\n            var cellChildren = [];\n            var path;\n\n            var idx = 0;\n            var metadata;\n\n            var colSpan;\n            var collapsed = 0;\n            var memberCollapsed = 0;\n\n            if (member.measure) {\n                this._measures(member.children, tuple);\n                return;\n            }\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n            row = this._row(tuple, memberIdx, parentMember);\n\n            children = member.children;\n            childrenLength = children.length;\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(Number(member.levelNum), memberIdx);\n                metadata.rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    collapsed = metadata.maxChildren;\n                    row.collapsed += collapsed;\n\n                    metadata.children = 0;\n                    childrenLength = 0;\n                }\n\n                let cellIconEl = $(\"<span></span>\");\n                cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n            cell = this._cell((row.notFirst ? \" k-first\" : \"\"), cellChildren, member);\n\n            row.children.push(cell);\n            row.colSpan += 1;\n\n            if (childrenLength) {\n                allCell = this._cell(\" k-alt\", [this._content(member, tuple)], member);\n                row.children.push(allCell);\n\n                for (; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx, member);\n                }\n\n                colSpan = childRow.colSpan;\n                collapsed = childRow.collapsed;\n\n                cell.attr.colSpan = colSpan;\n\n                metadata.children = colSpan;\n                metadata.members = 1;\n\n                row.colSpan += colSpan;\n                row.collapsed += collapsed;\n                row.rowSpan = childRow.rowSpan + 1;\n\n                if (nextMember) {\n                    if (nextMember.measure) {\n                        colSpan = this._measures(nextMember.children, tuple, \" k-alt\");\n                    } else {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        colSpan = childRow.colSpan;\n\n                        row.collapsed += childRow.collapsed;\n                        memberCollapsed = childRow.collapsed;\n                    }\n\n                    allCell.attr.colSpan = colSpan;\n                    colSpan -= 1;\n\n                    metadata.members += colSpan;\n                    row.colSpan += colSpan;\n                }\n            } else if (nextMember) {\n                if (nextMember.measure) {\n                    colSpan = this._measures(nextMember.children, tuple);\n                } else {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    colSpan = childRow.colSpan;\n\n                    row.collapsed += childRow.collapsed;\n                    memberCollapsed = childRow.collapsed;\n                }\n\n                metadata.members = colSpan;\n\n                if (colSpan > 1) {\n                    cell.attr.colSpan = colSpan;\n                    row.colSpan += colSpan - 1;\n                }\n            }\n\n            if (metadata.maxMembers < (metadata.members + memberCollapsed)) {\n                metadata.maxMembers = metadata.members + memberCollapsed;\n            }\n\n            children = metadata.children + collapsed;\n\n            if (metadata.maxChildren < children) {\n                metadata.maxChildren = children;\n            }\n\n            (allCell || cell).tupleAll = true;\n\n            return row;\n        }\n    });\n\n    var RowBuilder = Class.extend({\n        init: function() {\n            this.metadata = {};\n        },\n\n        build: function(tuples) {\n            var tbody = this._tbody(tuples);\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.table }, [colgroup, tbody])\n            ];\n        },\n\n        reset: function() {\n            this.metadata = {};\n        },\n\n        _rowLength: function() {\n            var children = this.rows[0].children;\n            var length = 0;\n            var idx = 0;\n\n            var cell = children[idx];\n\n            while (cell) {\n                length += (cell.attr.colSpan || 1);\n                cell = children[++idx];\n            }\n\n            return length;\n        },\n\n        _colGroup: function() {\n            var length = this._rowLength();\n            var children = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function(tuples) {\n            var root = tuples[0];\n\n            this.rootTuple = root;\n            this.rows = [];\n            this.map = {};\n\n            this._indexes = [];\n\n            if (root) {\n                this._buildRows(root, 0);\n                this._normalize();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _normalize: function() {\n            var rows = this.rows;\n            var rowsLength = rows.length;\n            var rowIdx = 0;\n\n            var members = this.rootTuple.members;\n            var firstMemberName = members[0].name;\n            var membersLength = members.length;\n            var memberIdx = 0;\n\n            var row;\n            var cell;\n            var maxcolSpan;\n            var map = this.map;\n            var allRow;\n\n            for (; rowIdx < rowsLength; rowIdx++) {\n                row = rows[rowIdx];\n\n                for (memberIdx = 0; memberIdx < membersLength; memberIdx++) {\n                    maxcolSpan = this[members[memberIdx].name];\n                    cell = row.colSpan[\"dim\" + memberIdx];\n\n                    if (cell && cell.colSpan < maxcolSpan) {\n                        cell.attr.colSpan = (maxcolSpan - cell.colSpan) + 1;\n                    }\n                }\n            }\n\n            row = map[firstMemberName];\n            allRow = map[firstMemberName + \"all\"];\n\n            if (row) {\n                row.children[0].attr.className = tableStyles.tableCell + \" k-first\";\n            }\n\n            if (allRow) {\n                allRow.children[0].attr.className += \" k-first \" + tableStyles.tableCell;\n            }\n        },\n\n        _row: function(children) {\n            var row = element(\"tr\", { className: tableStyles.tableRow }, children);\n            row.rowSpan = 1;\n            row.colSpan = {};\n\n            this.rows.push(row);\n\n            return row;\n        },\n\n        _content: function(member, tuple) {\n            return htmlNode(this.template({\n                member: member,\n                tuple: tuple\n            }), true);\n        },\n\n        _cell: function(className, children, member) {\n            var cell = element(\"td\", { className: tableStyles.tableCell + \" \" + className }, children);\n            cell.value = member.caption || member.name;\n            return cell;\n        },\n\n        _buildRows: function(tuple, memberIdx) {\n            var map = this.map;\n            var path;\n\n            var members = tuple.members;\n            var member = members[memberIdx];\n            var nextMember = members[memberIdx + 1];\n\n            var children = member.children;\n            var childrenLength = children.length;\n\n            var levelNum = Number(member.levelNum);\n            var rootName = this.rootTuple.members[memberIdx].name;\n            var tuplePath = buildPath(tuple, memberIdx - 1).join(\"\");\n            var rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n            var parentName = tuplePath + (rootLevelNum === levelNum ? \"\" : (member.parentName || \"\"));\n            var row = map[parentName + \"all\"] || map[parentName];\n            var colSpan = levelNum + 1;\n\n            var cell, allCell;\n            var childRow, allRow;\n            var metadata;\n            var className;\n            var cellChildren = [];\n            var expandIconAttr;\n            var idx;\n\n            if (!row || row.hasChild) {\n                row = this._row();\n            } else {\n                row.hasChild = true;\n            }\n\n            if (member.measure) {\n                className = row.allCell ? \"k-grid-footer\" : \"\";\n                row.children.push(this._cell(className, [ this._content(children[0], tuple) ], children[0]));\n\n                row.rowSpan = childrenLength;\n\n                for (idx = 1; idx < childrenLength; idx++) {\n                    this._row([ this._cell(className, [ this._content(children[idx], tuple) ], children[idx]) ]);\n                }\n\n                return row;\n            }\n\n            map[tuplePath + member.name] = row;\n\n            path = kendo.stringify(buildPath(tuple, memberIdx));\n\n            metadata = this.metadata[path];\n            if (!metadata) {\n                this.metadata[path] = metadata = createMetadata(levelNum, memberIdx);\n                metadata.rootLevelNum = rootLevelNum;\n            }\n\n            this._indexes.push({\n                path: path,\n                tuple: tuple\n            });\n\n            if (member.hasChildren) {\n                if (metadata.expanded === false) {\n                    childrenLength = 0;\n                    metadata.children = 0;\n                }\n\n                let cellIconEl = $(\"<span></span>\");\n                cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME }), true));\n            }\n\n            cellChildren.push(this._content(member, tuple));\n\n            className = row.allCell && !childrenLength ? \"k-grid-footer\" : \"\";\n            cell = this._cell(className, cellChildren, member);\n            cell.colSpan = colSpan;\n\n            row.children.push(cell);\n            row.colSpan[\"dim\" + memberIdx] = cell;\n\n            if (!this[rootName] || this[rootName] < colSpan) {\n                this[rootName] = colSpan;\n            }\n\n            if (childrenLength) {\n                row.allCell = false;\n                row.hasChild = false;\n\n                for (idx = 0; idx < childrenLength; idx++) {\n                    childRow = this._buildRows(children[idx], memberIdx);\n\n                    if (row !== childRow) {\n                        row.rowSpan += childRow.rowSpan;\n                    }\n                }\n\n                if (row.rowSpan > 1) {\n                    cell.attr.rowSpan = row.rowSpan;\n                }\n\n                metadata.children = row.rowSpan;\n\n                allCell = this._cell(\"k-grid-footer\", [this._content(member, tuple)], member);\n                allCell.colSpan = colSpan;\n\n                allRow = this._row([ allCell ]);\n                allRow.colSpan[\"dim\" + memberIdx] = allCell;\n                allRow.allCell = true;\n\n                map[tuplePath + member.name + \"all\"] = allRow;\n\n                if (nextMember) {\n                    childRow = this._buildRows(tuple, memberIdx + 1);\n                    allCell.attr.rowSpan = childRow.rowSpan;\n                }\n\n                row.rowSpan += allRow.rowSpan;\n\n                metadata.members = allRow.rowSpan;\n\n            } else if (nextMember) {\n                row.hasChild = false;\n                this._buildRows(tuple, memberIdx + 1);\n\n                (allCell || cell).attr.rowSpan = row.rowSpan;\n\n                metadata.members = row.rowSpan;\n            }\n\n            if (metadata.maxChildren < metadata.children) {\n                metadata.maxChildren = metadata.children;\n            }\n\n            if (metadata.maxMembers < metadata.members) {\n                metadata.maxMembers = metadata.members;\n            }\n\n            return row;\n        }\n    });\n\n    var ContentBuilder = Class.extend({\n        init: function() {\n            this.columnAxis = {};\n            this.rowAxis = {};\n        },\n\n        build: function(data, columnAxis, rowAxis) {\n            var index = columnAxis.indexes[0];\n            var metadata = columnAxis.metadata[index ? index.path : undefined$1];\n\n            this.columnAxis = columnAxis;\n            this.rowAxis = rowAxis;\n\n            this.data = data;\n\n            this.rowLength = metadata ? metadata.maxChildren + metadata.maxMembers : columnAxis.measures.length || 1;\n\n            if (!this.rowLength) {\n                this.rowLength = 1;\n            }\n\n            var tbody = this._tbody();\n            var colgroup = this._colGroup();\n\n            return [\n                element(\"table\", { className: tableStyles.contentTable }, [colgroup, tbody])\n            ];\n        },\n\n        _colGroup: function() {\n            var length = this.columnAxis.measures.length || 1;\n            var children = [];\n            var idx = 0;\n\n            if (this.rows[0]) {\n                length = this.rows[0].children.length;\n            }\n\n            for (; idx < length; idx++) {\n                children.push(element(\"col\", null));\n            }\n\n            return element(\"colgroup\", null, children);\n        },\n\n        _tbody: function() {\n            this.rows = [];\n\n            if (this.data[0]) {\n                this.columnIndexes = this._indexes(this.columnAxis, this.rowLength);\n                this.rowIndexes = this._indexes(this.rowAxis, Math.ceil(this.data.length / this.rowLength));\n\n                this._buildRows();\n            } else {\n                this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n            }\n\n            return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n        },\n\n        _indexes: function(axisInfo, total) {\n            var result = [];\n            var axisInfoMember;\n            var indexes = axisInfo.indexes;\n            var metadata = axisInfo.metadata;\n            var measures = axisInfo.measures;\n            var measuresLength = measures.length || 1;\n\n            var current;\n            var dataIdx = 0;\n            var firstEmpty = 0;\n\n            var idx = 0;\n            var length = indexes.length;\n            var measureIdx;\n            var index;\n\n            var children;\n            var skipChildren;\n\n            if (!length) {\n                for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                    result[measureIdx] = {\n                        index: measureIdx,\n                        measure: measures[measureIdx],\n                        tuple: null\n                    };\n                }\n\n                return result;\n            }\n\n            for (; idx < length; idx++) {\n                axisInfoMember = indexes[idx];\n                current = metadata[axisInfoMember.path];\n                children = current.children + current.members;\n                skipChildren = 0;\n\n                if (children) {\n                    children -= measuresLength;\n                }\n\n                if (current.expanded === false && current.children !== current.maxChildren) {\n                    skipChildren = current.maxChildren;\n                }\n\n                if (current.parentMember && current.levelNum === current.rootLevelNum) {\n                    children = -1;\n                }\n\n                if (children > -1) {\n                    for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                        index = children + measureIdx;\n                        if (!current.children) {\n                            index += firstEmpty;\n                        }\n\n                        result[children + firstEmpty + measureIdx] = {\n                            children: children,\n                            index: dataIdx,\n                            measure: measures[measureIdx],\n                            tuple: axisInfoMember.tuple\n                        };\n                        dataIdx += 1;\n                    }\n\n                    while (result[firstEmpty] !== undefined$1) {\n                        firstEmpty += 1;\n                    }\n                }\n\n                if (firstEmpty === total) {\n                    break;\n                }\n\n                dataIdx += skipChildren;\n            }\n\n            return result;\n        },\n\n        _buildRows: function() {\n            var rowIndexes = this.rowIndexes;\n            var length = rowIndexes.length;\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                var rowIndex = rowIndexes[idx];\n                if (rowIndex) {\n                    this.rows.push(this._buildRow(rowIndex));\n                }\n            }\n        },\n\n        _buildRow: function(rowInfo) {\n            var startIdx = rowInfo.index * this.rowLength;\n            var columnIndexes = this.columnIndexes;\n            var length = columnIndexes.length;\n            var columnInfo;\n            var cells = [];\n            var idx = 0;\n\n            var templateInfo;\n            var cell, cellContent;\n            var attr, dataItem, measure;\n\n            for (; idx < length; idx++) {\n                columnInfo = columnIndexes[idx];\n\n                if (columnInfo === undefined$1) {\n                    continue;\n                }\n\n                attr = { className: tableStyles.tableCell };\n                if (columnInfo.children) {\n                    attr.className += \" k-alt\";\n                }\n\n                cellContent = \"\";\n                dataItem = this.data[startIdx + columnInfo.index];\n                measure = columnInfo.measure || rowInfo.measure;\n\n                templateInfo = {\n                    columnTuple: columnInfo.tuple,\n                    rowTuple: rowInfo.tuple,\n                    measure: measure,\n                    dataItem: dataItem\n                };\n\n                if (dataItem.value !== \"\" && measure && measure.type) {\n                    if (measure.type === \"status\") {\n                        cellContent = this.kpiStatusTemplate(templateInfo);\n                    } else if (measure.type === \"trend\") {\n                        cellContent = this.kpiTrendTemplate(templateInfo);\n                    }\n                }\n\n                if (!cellContent) {\n                    cellContent = this.dataTemplate(templateInfo);\n                }\n\n                cell = element(\"td\", attr, [ htmlNode(cellContent) ]);\n                cell.value = dataItem.value;\n                cells.push(cell);\n            }\n\n            attr = { className: tableStyles.tableRow };\n            if (rowInfo.children) {\n                attr.className += \" k-grid-footer\";\n            }\n\n            return element(\"tr\", attr, cells);\n        }\n    });\n\n    ui.plugin(PivotGrid);\n\n    kendo.PivotExcelExporter = kendo.Class.extend({\n        init: function(options) {\n            this.options = options;\n\n            this.widget = options.widget;\n            this.dataSource = this.widget.dataSource;\n        },\n\n        _columns: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var width = this.widget.options.columnWidth;\n            var result = [];\n            var idx;\n\n            if (rowHeaderLength && this.dataSource.data()[0]) {\n                for (idx = 0; idx < rowHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: true\n                    });\n                }\n            }\n\n            for (idx = 0; idx < columnHeaderLength; idx++) {\n                result.push({\n                    autoWidth: false,\n                    width: width\n                });\n            }\n\n            return result;\n        },\n\n        _cells: function(rows, type, callback) {\n            var result = [];\n\n            var i = 0;\n            var length = rows.length;\n\n            var cellsLength;\n            var row, cells;\n            var j, cell;\n\n            for (; i < length; i++) {\n                row = [];\n                cells = rows[i].children;\n                cellsLength = cells.length;\n\n                for (j = 0; j < cellsLength; j++) {\n                    cell = cells[j];\n\n                    row.push({\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: cell.value,\n                        colSpan: cell.attr.colSpan || 1,\n                        rowSpan: cell.attr.rowSpan || 1\n                    });\n                }\n\n                if (callback) {\n                    callback(row, i);\n                }\n\n                result.push({\n                    cells: row,\n                    type: type\n                });\n            }\n\n            return result;\n        },\n\n        _rows: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var columnHeaderLength = columnHeaderTable.children[0].children.length;\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n            var rowHeaderRows = rowHeaderTable.children[1].children;\n            var contentRows = this.widget.contentTree.children[0].children[1].children;\n\n            var columnRows = this._cells(columnHeaderRows, \"header\");\n\n            if (rowHeaderLength) {\n                columnRows[0].cells.splice(0, 0, {\n                    background: \"#7a7a7a\",\n                    color: \"#fff\",\n                    value: \"\",\n                    colSpan: rowHeaderLength,\n                    rowSpan: columnHeaderRows.length\n                });\n            }\n\n            var dataCallback = function(row, index) {\n                var j = 0;\n                var cell, value;\n                var cells = contentRows[index].children;\n\n                for (; j < columnHeaderLength; j++) {\n                    cell = cells[j];\n                    value = Number(cell.value);\n\n                    if (isNaN(value)) {\n                        value = cell.value;\n                    }\n\n                    row.push({\n                        background: \"#dfdfdf\",\n                        color: \"#333\",\n                        value: value,\n                        colSpan: 1,\n                        rowSpan: 1\n                    });\n                }\n            };\n\n            var rowRows = this._cells(rowHeaderRows, \"data\", dataCallback);\n\n            return columnRows.concat(rowRows);\n        },\n\n        _freezePane: function() {\n            var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n            var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n            var rowHeaderLength = rowHeaderTable.children[0].children.length;\n            var columnHeaderRows = columnHeaderTable.children[1].children;\n\n            return {\n                colSplit: rowHeaderLength,\n                rowSplit: columnHeaderRows.length\n            };\n        },\n\n        _columnsV2: function() {\n            const columnHeaderTable = this.widget._columnBuilder.table[0];\n            const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n            const columnHeaderLength = columnHeaderTable.children[0].children.length;\n            const rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            const width = this.widget.options.columnWidth;\n            const result = [];\n\n            if (rowHeaderLength && this.dataSource.data()[0]) {\n                for (let idx = 0; idx < rowHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: true\n                    });\n                }\n            }\n\n            for (let idx = 0; idx < columnHeaderLength; idx++) {\n                result.push({\n                    autoWidth: false,\n                    width: width\n                });\n            }\n\n            return result;\n        },\n\n        _cellsV2: function(rows, type, callback) {\n            const result = [];\n\n            const length = Object.keys(rows).length;\n\n            for (let i = 0; i < length; i++) {\n                const row = [];\n                const cells = rows[i].children;\n                const cellsLength = cells.length;\n\n                for (let j = 0; j < cellsLength; j++) {\n                    const cell = cells[j];\n\n                    row.push({\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: cell.caption,\n                        colSpan: cell.colSpan || 1,\n                        rowSpan: cell.rowSpan || 1\n                    });\n                }\n\n                if (callback) {\n                    callback(row, i);\n                }\n\n                result.push({\n                    cells: row,\n                    type: type\n                });\n            }\n\n            return result;\n        },\n\n        _rowsV2: function() {\n            const columnHeaderTable = this.widget._columnBuilder.table[0];\n            const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n            const columnHeaderLength = columnHeaderTable.children[0].children.length;\n            const rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n            const columnHeaderRows = this.widget._columnBuilder._exportData;\n            const rowHeaderRows = this.widget._rowBuilder._exportData;\n            const contentCells = this.widget._contentBuilder.hash;\n\n            const columnRows = this._cellsV2(columnHeaderRows, \"header\");\n\n            if (rowHeaderLength) {\n                columnRows[0].cells.splice(0, 0, {\n                    background: \"#7a7a7a\",\n                    color: \"#fff\",\n                    value: \"\",\n                    colSpan: rowHeaderLength,\n                    rowSpan: Object.keys(columnHeaderRows).length\n                });\n            }\n\n            const dataCallback = function(row, index) {\n                const startingIndex = index * columnHeaderLength;\n                const endIndex = (index + 1) * columnHeaderLength;\n\n                for (let j = startingIndex; j < endIndex; j++) {\n                    const cell = contentCells[j];\n\n                    const cellValue = cell.data !== null ? cell.data.value : cell.data;\n                    let value = Number(cellValue);\n\n                    if (isNaN(value)) {\n                        value = cellValue;\n                    }\n\n                    row.push({\n                        background: \"#dfdfdf\",\n                        color: \"#333\",\n                        value: value,\n                        colSpan: 1,\n                        rowSpan: 1\n                    });\n                }\n            };\n\n            const rowRows = this._cellsV2(rowHeaderRows, \"data\", dataCallback);\n\n            return columnRows.concat(rowRows);\n        },\n\n\n        _freezePaneV2: function() {\n            const columnHeaderTable = this.widget._columnBuilder.table[0];\n            const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n            const rowHeaderLength = rowHeaderTable.children[0].children.length;\n            const columnHeaderRows = columnHeaderTable.children[1].children.length;\n\n            return {\n                colSplit: rowHeaderLength,\n                rowSplit: columnHeaderRows\n            };\n        },\n\n        _filterV2: function() {\n            const that = this;\n\n            if (!that.options.excel.filterable) {\n                return null;\n            }\n\n            const columnHeaderTable = this.widget._columnBuilder.table[0];\n            const rowHeaderTable = this.widget._rowBuilder.table[0];\n\n            const rowHeaderLength = rowHeaderTable.children[0].children.length;\n            const columnHeaderLength = columnHeaderTable.children[0].children.length;\n\n            const additionalRows = rowHeaderLength - 1;\n\n            return {\n                from: rowHeaderLength,\n                to: columnHeaderLength + additionalRows\n            };\n        },\n\n\n        workbook: function() {\n            var promise,\n                resolveFn = function() {\n                    if (this.widget.options.name === \"PivotGridV2\") {\n                        return {\n                            sheets: [ {\n                                columns: this._columnsV2(),\n                                rows: this._rowsV2(),\n                                freezePane: this._freezePaneV2(),\n                                filter: this._filterV2(),\n                            } ]\n                        };\n                    }\n                    return {\n                        sheets: [ {\n                            columns: this._columns(),\n                            rows: this._rows(),\n                            freezePane: this._freezePane(),\n                            filter: null\n                        } ]\n                    };\n                };\n\n            if (this.dataSource.view()[0]) {\n                promise = $.Deferred();\n                promise.resolve();\n            } else {\n                promise = this.dataSource.fetch();\n            }\n\n            return promise.then(resolveFn.bind(this));\n        }\n    });\n\n    var PivotExcelMixin = {\n        extend: function(proto) {\n           proto.events.push(\"excelExport\");\n           proto.options.excel = $.extend(proto.options.excel, this.options);\n           proto.saveAsExcel = this.saveAsExcel;\n        },\n        options: {\n            proxyURL: \"\",\n            filterable: false,\n            fileName: \"Export.xlsx\"\n        },\n        saveAsExcel: function() {\n            var excel = this.options.excel || {};\n\n            var exporter = new kendo.PivotExcelExporter({\n                widget: this,\n                excel\n            });\n\n            if (this._progress) {\n                this._isExport = true;\n                this._progress(true);\n            }\n\n            var resolveFn = function(book) {\n                if (!this.trigger(\"excelExport\", { workbook: book })) {\n                    var workbook = new kendo.ooxml.Workbook(book);\n\n                    workbook.toDataURLAsync().then(function(dataURI) {\n                        kendo.saveAs({\n                            dataURI: dataURI,\n                            fileName: book.fileName || excel.fileName,\n                            proxyURL: excel.proxyURL,\n                            forceProxy: excel.forceProxy\n                        });\n                    }).always(() => {\n                        if (this._progress) {\n                            this._progress(false);\n                            this._isExport = false;\n                        }\n                    });\n                }\n            };\n\n            exporter.workbook().then(resolveFn.bind(this));\n        }\n    };\n\n    kendo.PivotExcelMixin = PivotExcelMixin;\n\n    if (kendo.ooxml && kendo.ooxml.Workbook) {\n        PivotExcelMixin.extend(PivotGrid.prototype);\n    }\n\n    if (kendo.ooxml && kendo.ooxml.Workbook) {\n        PivotExcelMixin.extend(PivotGridV2.prototype);\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGrid.prototype);\n\n        PivotGrid.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n    if (kendo.PDFMixin) {\n        kendo.PDFMixin.extend(PivotGridV2.prototype);\n\n        PivotGridV2.prototype._saveAsPDF = kendo.PDFMixin.saveAsPDF;\n\n        PivotGridV2.fn.saveAsPDF = function() {\n            if (this._progress) {\n                this._isExport = true;\n                this._progress(true);\n            }\n            this._saveAsPDF().always(() => {\n                if (this._progress) {\n                    this._progress(false);\n                    this._isExport = false;\n                }\n            });\n        };\n\n        PivotGridV2.fn._drawPDF = function() {\n            return this._drawPDFShadow({\n                width: this.wrapper.width()\n            }, {\n                avoidLinks: this.options.pdf.avoidLinks\n            });\n        };\n    }\n\n    window.kendo.pivotgrid = window.kendo.pivotgrid || {};\n    window.kendo.pivotgrid.common = {\n        addKPI: addKPI,\n        addMultipleMeasures: addMultipleMeasures,\n        averageAggregate: averageAggregate,\n        buildKPIMeasures: buildKPIMeasures,\n        cloneDataTree: cloneDataTree,\n        compareAxes: compareAxes,\n        configuratorReducer: configuratorReducer,\n        createAxisDescriptors: createAxisDescriptors,\n        createDataState: createDataState,\n        createDataTree: createDataTree,\n        createDiscoverBody: createDiscoverBody,\n        createFlatSchemaDimensions: createFlatSchemaDimensions,\n        createLocalDataState: createLocalDataState,\n        createRequestBody: createRequestBody,\n        createTuples: createTuples,\n        discoverCommands: discoverCommands,\n        fetchData: fetchData,\n        fetchDiscover: fetchDiscover,\n        headersReducer: headersReducer,\n        maxAggregate: maxAggregate,\n        mergeTrees: mergeTrees,\n        minAggregate: minAggregate,\n        parseResponse: parseResponse,\n        readData: readData,\n        rootFields: rootFields,\n        setFilter: setFilter,\n        setSort: setSort,\n        sumAggregate: sumAggregate,\n        toColumns: toColumns,\n        toData: toData,\n        toRows: toRows,\n        toTree: toTree,\n    };\n\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}