@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model Susteni.Models.HelpDesk.HelpDeskModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = Localizer["Helpdesk"];
    ViewData["LogOnOk"] = "2";
    ViewData["Menu"] = "Admin";
}

<script id="event-template" type="text/x-kendo-template">
    <div class="template-container" style="background-color:#:getColor(data)#">
        # if (Image) { #
            <img src="@Url.Content("~/images/#= Image #.svg")" style="height:25px; width: 25px;" />
        # } #
        #: title #
    </div>
</script>

<script>
    function getColor(data) {
        if (data.title === "Ledig") {
          return "green";
        } 
      }
</script>

<style>

    .k-grid td {
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .k-grid table {
        table-layout: fixed;
    }

    table, th {
        margin-left: 0px;
        margin-top: 0px;
    }


    .btn img {
        width: 24px;
        height: 24px;
    }

    .btn {
        padding: 5px;
        background-color: aliceblue;
        border-color: lightgray;
    }

   
    .k-checkbox + .k-checkbox-label, .k-checkbox-label + .k-checkbox {
        margin-left: 6px;
        margin-right: 10px;
    }

    .commandMenuSmal {
        width: 100%;
        text-align: left;
        border: 0px solid;
        background-color: white;
    }

    .commandMenuSmal:hover {
        color: darkred;
    }

    .rapport {
        float: left;
        position: relative;
        width: 180px;
        max-height: 200px;
        margin: 10px 5px 5px 5px;
        padding: 0;
    }

    .rapport img {
        float: left;
        width: 150px;
        max-height: 150px;
        margin-left: 10px;
        margin-bottom: 5px;
        margin-right: 10px;
    }

    .rapport:hover h3 {
        color: darkred;
    }

    .rapport:hover p {
        color: black;
    }

    .k-listview .k-state-selected {
        border: 1px dashed;
        border-color: blue;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
        background-color: white;
        color: black;
    }

    .k-listview .k-state-selected h3 {
        color: black;
    }

    .fixed {
        position: absolute;
        border: 0px solid lightgray;
    }

    #sporsmal .k-liste {
        color: rgb(66, 66, 66);
        border: 1px solid lightgray;
    }

    #sporsmal .k-liste:focus {
        color: rgb(66, 66, 66);
        border: 1px solid lightgray;
    }

    #sporsmal .k-input {
        height: 30px;
    }

    .commandSmal img {
        width: 24px;
        height: 24px;
    }

    .k-fab-text {
        display: none;
    }

    #grdLogg .k-grid td, .k-grid th {
        padding: 8px 12px;
        border-style: solid;
        border-color: inherit;
        outline: 0;
        font-weight: inherit;
        text-align: inherit;
        overflow: visible;
        text-overflow:inherit;
    }

</style>

<form controller="helpdesk" action="Lagre" id="Helpdesk" onsubmit="return false;" method="post" class="mt-3">
    <div id="confirm"></div>

    <div class="container-fluid padding-0">

        <div class="row" id="heading" style="min-height: 70px;">

            <div class="col-2 unselectable">
                <h3>@Localizer["Helpdesk"]</h3>
            </div>


            <div class="col-8">
                <div>

                </div>
            </div>
            
        </div>

        <div class="row" style="border: 1px solid lightgrey; padding: 10px; margin: 5px;">


            <div class="col-lg-5 col-xxl-6" id="funksjoner">

                <div class="row">

                    <div class="col-lg-6">
                        <button type="button" name="ny" class="commandline" onclick="NyTickets()">
                            <img src="~/images/Ny.svg" />
                            @Localizer["New"]
                        </button>

                        <button type="button" name="lagre" class="commandline" onclick="LagreTickets()">
                            <img src="~/images/Lagre.svg" />
                            @Localizer["Save"]
                        </button>

                        <button type="button" name="slette" class="commandline" onclick="slettTickets()">
                            <img src="~/images/Slette.svg" />
                            @Localizer["Remove"]
                        </button>
                    </div>

                    <div class="col-lg-6">
                        @(Html.Kendo().MultiSelect()
                            .Name("Status")
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .Events(e => e.Change("onStatusChange"))
                            .BindTo(new List<SelectListItem>() {
                                new SelectListItem() {
                                Text = Localizer["New"].Value , Value = "0"
                                }, 
                                new SelectListItem() {
                                Text = Localizer["Registered"].Value , Value = "1"
                                }, 
                                new SelectListItem() {
                                Text = Localizer["Started"].Value , Value = "20"
                                }, 
                                new SelectListItem() {
                                Text = Localizer["Wish"].Value , Value = "50"
                                },
                                new SelectListItem() {
                                Text = Localizer["On holde"].Value , Value = "5"
                                },
                                new SelectListItem() {
                                Text = Localizer["Need more info"].Value, Value = "2"
                                },
                                new SelectListItem() {
                                Text = Localizer["No priority"].Value, Value = "3"
                                },
                                new SelectListItem() {
                                Text = Localizer["Must be discussed"].Value, Value = "4"
                                },
                                new SelectListItem() {
                                Text = Localizer["Must watch in teams"].Value, Value = "6"
                                },
                                new SelectListItem() {
                                Text = Localizer["Awaiting approval"].Value, Value = "8"
                                },
                                new SelectListItem() {
                                Text = Localizer["Correction accepted internally"].Value, Value = "9"
                                },
                                new SelectListItem() {
                                Text = Localizer["Correction not accepted"].Value, Value = "15"
                                },
                                new SelectListItem() {
                                Text = Localizer["Correction accepted customer"].Value, Value = "99"
                                }
                            })
                            .HtmlAttributes(new { style="width: 100%;" })
                            .Value(new string[] { "0", "1", "2", "4", "8","15", "20" })
                        )
                    </div>

                </div>

                <div class="row align-items-center" style="display: flex; flex-direction: row; margin-top: 10px;">
                    <Label class="col-2 col-form-label">@Localizer["Software"]</label>
                    <div class="col-lg-4">
                        @(Html.Kendo().DropDownList()
                            .Name("filterProgram")
                            .DataTextField("ProgramNavn")
                            .DataValueField("Id")
                            .Events(e => e.Change("finnProgram"))
                            .DataSource(source => source
                                .Ajax()
                                .Read(read => read.Action("getHelpDeskProgramListe", "HelpDesk"))
                                )                            
                            .Value("2")
                            .HtmlAttributes(new { style="width: 100%;" })
                            )
                    </div>
                    <label class="col-1 col-form-label">Module</label>
                    <div class="col-md-2">
                        <input id="filterModul" class="form-control k-textbox" oninput="finnModul()">
                    </div>
                    <Label class="col-1 col-form-label">@Localizer["Priority"]</label>
                    <div class="col-2">
                        @(Html.Kendo().NumericTextBox<int>()
                            .Name("prioritet")
                            .Format("n0")
                            .Min(-1)
                            .Max(9)
                            .Value(-1)
                            .Events(e => e.Spin("onPriChange"))
                            .HtmlAttributes(new { style = "width: 100%"})
                        )
                    </div>

                    <div class="col-2"></div>
                    <div class="col-lg-10">
                        @(Html.Kendo().RadioGroup()
                            .Name("TypeId")
                            .InputName("TypeId")
                            .Layout(RadioGroupLayout.Horizontal)
                            .Events(e => e.Change("onTypeIdChange"))
                            .Items(i =>
                            {
                                i.Add().Label("All").Value("-1");
                                i.Add().Label("Bug").Value("1");
                                i.Add().Label("Typo").Value("2");
                                i.Add().Label("Change").Value("3");
                                i.Add().Label("Lack").Value("4");
                                i.Add().Label("Wish").Value("9");
                                i.Add().Label("Support").Value("0");
                                i.Add().Label("Coming").Value("7");
                            })
                            )
                    </div>

                    <label class="col-2 col-form-label">Customer</label>
                    <div class="col-3">
                        <input id="filterKunde" class="form-control k-textbox" oninput="finnKunde()">
                    </div>
                    <label class="col-1 col-form-label">Title</label>
                    <div class="col-3">
                        <input id="filterTittel" class="form-control k-textbox" oninput="finnTittel()">
                    </div>
                    <label class="col-1 col-form-label">User</label>
                    <div class="col-2">
                        <input id="filterAv" class="form-control k-textbox" oninput="finnAv()">
                    </div>
                </div>

                <div class="row" style="margin-top: 10px;">
                    <div class="form-group" style="margin-top: 10px;">
                        <h4 id="idTickets">@Localizer["List of tickets"]</h4>

                        @(Html.Kendo().Grid<Susteni.Models.HelpDeskItem>()
                            .Name("ticketsListe")
                            .Columns(columns =>
                                {
                                    columns.Bound(q => q.HelpDeskGuid).Visible(false);
                                    columns.Bound(q => q.TiketId).Title("#").Width(60);
                                    columns.Bound(q => q.ikon).Width(50).ClientTemplate("#if(ikon != null) {# <img src='" + Url.Content("~/images/") + "#:data.ikon#.svg' alt='#: data.ikon#' width='24' height='24' /> #}#").Title("&nbsp");
                                    columns.Bound(q => q.OpprettetDato).Width(90).Format("{0: dd.MM.yyyy}").Title("Created");
                                    columns.Bound(q => q.Ferdig).Width(90).Format("{0: dd.MM.yyyy}").Title("Finish");
                                    columns.Bound(q => q.Modul).Width(120);
                                    columns.Bound(q => q.Tittel).Width(200).Title("Title");
                                    //columns.Bound(q => q.Kunde).Width(130).Title("Customer");
                                    //columns.Bound(q => q.BrukerNavn).Width(130).Title("User");
                                    columns.Bound(q => q.Prioritet).Width(40).Title("¤");
                                    columns.Bound(q => q.StatusTekst).Title("Status").Width(100);
                                })
                            .HtmlAttributes(new { style = "height: calc(100vh - 450px);"})
                            .Scrollable()
                            .Resizable(r => r.Columns(true))
                            .Sortable(x => x.SortMode(GridSortMode.MultipleColumn).AllowUnsort(true))
                            .Selectable(s => s
                                .Mode(GridSelectionMode.Single)
                                .Type(GridSelectionType.Row))
                            .Events(events => events
                                .Change("onTicketChange").DataBound("onDataBound"))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Read(read => read.Action("GetHelpDeskListe", "HelpDesk").Data("filterTickets"))
                            )
                        )
                    </div>
                </div>
            </div>

            <div class="col-lg-7 col-xxl-6">

                <partial name="_HelpDeskInfo" />

            </div>

        </div>

    </div>

</form>


<script id="successTemplate" type="text/x-kendo-template">
    <div class="upload-success">
        <img src="@Url.Content("~/images/emoticon-happy.svg")" style="float:left; height:48px; width:48px; margin-right: 16px;"/>
        <p>#= message #</p>
    </div>
</script>


<script id="errorTemplate" type="text/x-kendo-template">
    <div class="wrong-pass">
        <img src="@Url.Content("~/images/emoticon-sad.svg")" style="float:left; height:48px; width:48px; margin-right: 16px;"/>
        <p>#= message #</p>
    </div>
</script>


@(Html.Kendo().Notification()
    .Name("notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Stacking(NotificationStackingSettings.Down)
    .AutoHideAfter(5000)
    .Templates(t =>
    {
        t.Add().Type("success").ClientTemplateID("successTemplate");
        t.Add().Type("error").ClientTemplateID("errorTemplate");
    })
)

<style>
    
    .k-calendar-monthview .k-calendar-td {
        width: 24px;
        height: 24px;
    }

    .k-calendar-monthview .k-link {
        width: 24px;
        height: 24px;
    }

    .k-calendar-view {
        min-height: 173px;
    }

    .k-calendar {
        background-color: #f8f7f7;
    }
    .k-widget {
        font-size: 12px;
    }


    .k-scheduler-times th {
        border-width: 0 1px 1px 0;
        text-align: left;
    }

    #timeline table, th {
        margin-left: 0px;
        margin-top: 0px;
    }

    .k-scheduler-header, .k-scheduler-view-header {
     padding-inline-end: var(--kendo-scrollbar-width,0px);
    }

    .k-scheduler-footer {
        display: none;
        height: 0;
        padding: 0;
        overflow: hidden;
        }

    .k-scheduler-date-group {
        display: none;
        height: 0;
        padding: 0;
        overflow: hidden;
        }

    .k-event, kendo-scheduler .k-event {
        min-height: 0px; 
        padding-right: 0px;
    }

    #bestillingListe {
        height: 100%;
    }

 
    .btn img {
        width: 24px;
        height: 24px;
    }

    .btn {
        padding: 5px;
    }

    .disabled {
        opacity: 0.5;
        pointer-events: none;
    }


    .ellipsis-overflow {
        text-overflow: ellipsis;
        white-space:nowrap;
    }


    .k-checkbox-label {
        line-height: 28px;
        margin-left: 10px;
    }

    #omAvdode .k-checkbox-label {
        margin-left: 10px;
        padding-top: 30px;
    }

    #omAvdode .k-checkbox {
        margin-top: 5px;
        margin-bottom: 5px;
        margin-left: 10px;
    }

    #tabKremasjon .k-checkbox-label {
        margin-left: 10px;
        line-height: 20px;
    }

    #tabKirkegard .k-checkbox-label {
        margin-left: 10px;
        line-height: 20px;
    }

    #tabSeremoni .k-checkbox-label {
        margin-left: 10px;
        line-height: 20px;
    }

    #tabFaktura .k-checkbox-label {
        margin-left: 10px;
        line-height: 20px;
    }
     
    #soekeFilter .command img {
        width: 32px;
        height: 32px;
    }

    #soekeFilter .command {
        height: 50px;
        font-size: 14px;
        font-weight: normal;
    }

    #dokListe .k-listview {
        background-color: transparent;
        border-color: transparent;
    }

    .folder {
        float: left;
        position: relative;
        margin-right: 10px;
    }


    .folder img {
        width: 32px;
        height: 32px;
        display: block;
        margin-left: auto;
        margin-right: auto;
        margin-top: 2px;
    }

    .folder p {
        padding: 3px 5px 0px 5px;
        font-size: 10px;
        font-weight: normal;
        color: #999;
        text-align: center;
        margin-bottom: 1px;
    }

    .folder:checked {
        font-weight: bold;
        color: red;
    }

    .folder:hover p {
        font-weight: bold;
        color: black;
    }

    div.k-window{
        border: 1px solid lightgray;
    }
</style>

<div id="DialogBildeWindows">
    @(Html.Kendo().Window()
        .Name("dialogBilde")
        .Title(Localizer["Bilde"].Value)
        .Visible(false)
        .Modal(true)
        .Resizable()
        .Draggable()
        )
</div>

<div id="helpdeskNotatdialog">
    @(Html.Kendo().Dialog()
        .Name("dialogHelpDeskLogg")
        .Title("Notat")
        .HtmlAttributes("style= border:1px;")
        .Visible(false)
        .Height(410)
        .Width(1200)
        .Modal(true)        
        .Actions(actions => {
            actions.Add().Text("Avbryt");
            actions.Add().Text("Lagre").Action("lagrehelpdeskNotat").Primary(true);
        })
        .Events(ev => ev.Close("onClose").Open("onOpen"))
    )

    @(Html.Kendo().Dialog()
        .Name("DialogHelpDeskBildeInfo")
        .Title("Bilde informasjon")
        .HtmlAttributes("style= border:1px;")
        .Visible(false)
        .Height(410)
        .Width(1200)
        .Modal(true)        
        .Actions(actions => {
            actions.Add().Text("Avbryt");
            actions.Add().Text("Lagre").Action("lagrehelpdeskBilde").Primary(true);
        })
        .Events(ev => ev.Close("onClose").Open("onOpen"))
    )
</div>

<script id="liste-template" type="text/x-kendo-template">
    <span class="k-state-default" style="font-weight: #:data.BoldTekst#; color:#:data.BoldTekstColor#;">#: data.Navn#</span>
</script>


    @(Html.Kendo().Window()
        .Name("DialogHjelp")
        .Title(Localizer["Hjelp"].Value)
        .Visible(false)
        .Height(800)
        .Width(1200)
        .Modal(true)
        .Draggable()
        )

    @(Html.Kendo().Dialog()
        .Name("DialogHelpDeskBildeInfo")
        .Title("Bilde informasjon")
        .HtmlAttributes("style= border:1px;")
        .Visible(false)
        .Height(410)
        .Width(1200)
        .Modal(true)        
        .Actions(actions => {
            actions.Add().Text("Avbryt");
            actions.Add().Text("Lagre").Action("lagrehelpdeskBilde").Primary(true);
        })
        .Events(ev => ev.Close("onClose").Open("onOpen"))
    )

<script id="hjelp">



    function onClose() {
        $("#showDialogBtn").fadeIn();
        }



    function onOpen() {
        $("#showDialogBtn").fadeOut();
        }

    function showDialogNotatGrav() {
        $.ajax({
            url: "/HelpDesk/DialogHelpDeskLogg",
            method: 'GET',
            success: function (result) {
                $('#dialogHelpDeskLogg').html(result);
                xG = document.getElementById("HelpDeskLogg_HelpDeskGuid");
                xG.value = HelpDeskGuid;
                var popup = $('#dialogHelpDeskLogg').data("kendoDialog");
                popup.open();
                }
            });
        }

    function showDialogBilde() {

        $.ajax({
            url: "/HelpDesk/DialogHelpDeskBilde",
            data: {bildeGuid: HelpDeskBildeGuid},
            method: 'GET',
            success: function (result) {
                $('#dialogBilde').html(result);
                var popup = $('#dialogBilde').data("kendoWindow");
                popup.center().open();
                }
            });
        }

    function showDialogEndreBilde() {
        if (HelpDeskBildeGuid != "") {
            $.ajax({
                url: "/HelpDesk/DialogHelpDeskBildeInfo",
                method: 'GET',
                data: {bildeGuid: HelpDeskBildeGuid},
                success: function (result) {
                    $('#DialogHelpDeskBildeInfo').html(result);
                    var popup = $('#DialogHelpDeskBildeInfo').data("kendoDialog");
                    popup.open();
                    }
                });
            }
        }


    function showDialogEndreNotatGrav() {
        var grdNotat = $("#grdLogg").data("kendoGrid");
        var selectedF = grdNotat.select();
        var selItemF = grdNotat.dataItem(selectedF);
        var HelpDeskLoggGuid = "";

        if (selectedF.length > 0) {
            HelpDeskLoggGuid = selItemF.HelpDeskLoggGuid;
            $.ajax({
                url: "/HelpDesk/DialogHelpDeskLogg",
                method: 'GET',
                success: function (result) {
                    $('#dialogHelpDeskLogg').html(result);

                    $.ajax({
                        url: '@Url.Action("GetHelpDeskLogg", "HelpDesk")',
                        data: { HelpDeskLoggGuid: HelpDeskLoggGuid},
                        type: "GET"
                        }).done(function (result) {
                            $("#dialogHelpDeskLogg").html(result);
                            grdNotat.dataSource.read();
                            var popup = $('#dialogHelpDeskLogg').data("kendoDialog");
                            popup.open();
                        });
                    }
                });
            }
        }

    function lagrehelpdeskNotat() {
        var $this = $('#helpdeskNotat');

        $.ajax({
            type: "POST",
            url: '@Url.Action("LagreHelpDeskLogg", "HelpDesk")',
            data: $this.serialize(),
            dataType: 'json'
        }).done(function (result) {
            if (result.Success) {
                var notification = $("#notification").data("kendoNotification");
                notification.show({title: "Helpdesk", message: "Notatet er lagret"}, "success");
                var grd = $("#grdLogg").data("kendoGrid");
                grd.dataSource.read();
                }
            });
         }

    function lagrehelpdeskBilde() {
        var $this = $('#helpdeskBilde');

        $.ajax({
            type: "POST",
            url: '@Url.Action("LagreHelpDeskBilde", "HelpDesk")',
            data: $this.serialize(),
            dataType: 'json'
        }).done(function (result) {
            console.log(result);
            if (result.Success == true) {
                $("#lvBilder").data("kendoListView").dataSource.read();
                }
            });
         }
     
    function slettNotatGrav() {
        $("#confirm").kendoConfirm({
            title: "Slett",
            content: "Ønsker du å slette dette notatet?",
            messages: {
                okText: "Ja",
                cancel: "Nei"
            }
        }).data("kendoConfirm").result.done(function () {
            $('body').append($('<div id="confirm">'));

            var grdGravNotat = $("#grdLogg").data("kendoGrid");
            var selectedF = grdGravNotat.select();
            var selItemF = grdGravNotat.dataItem(selectedF);
            var HelpDeskLoggGuid = "";
            
            if (selectedF.length > 0) {
                HelpDeskLoggGuid = selItemF.HelpDeskLoggGuid;

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("removeHelpDeskLogg", "HelpDesk")',
                    data: { HelpDeskLoggGuid: HelpDeskLoggGuid },
                }).done(function (result) {
                    grdGravNotat.dataSource.read();
                });

                    }
            }).fail(function () {
            $('body').append($('<div id="confirm">'));
        });
        }


 function slettBilde() {
        $("#confirm").kendoConfirm({
            title: "Slett",
            content: "Ønsker du å slette dette bilde?",
            messages: {
                okText: "Ja",
                cancel: "Nei"
            }
        }).data("kendoConfirm").result.done(function () {
            $('body').append($('<div id="confirm">'));

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("RemoveHelpDeskBilde", "HelpDesk")',
                    data: { HelpDeskBildeGuid: HelpDeskBildeGuid },
                }).done(function (result) {
                    $("#lvBilder").data("kendoListView").dataSource.read();
                });

            }).fail(function () {
            $('body').append($('<div id="confirm">'));
        });
        }


    function showHelp() {
       $.ajax({
            url: '@Url.Action("DialogHjelp", "Hjelp")',
            type: 'GET'
            }).done(function (result) {
                $('#DialogHjelp').html(result);
                var popup = $('#DialogHjelp').data("kendoWindow");
                popup.center().open();
            });
        }

    function hjelpFilter() {
        return {Modul: 13, Skjerm: "Bestilling"}
        }

</script>

<script id="filter">
    var ressursGuid = "";
    var fellesraad = "";
    var currHelpdeskGuid = "";
    var filterModul = "";
    var filterPri = -1;
    var filterAv = "";
    var filterKunde = "";
    var filterTittel = "";
    var filterTypeId = -1;

    var status = "0,1,2,4,8,15,20";
    var filterTekst = "";
    var filterProgram = "Program = '1'";

    function filterFellesraad() {
        return {fellesraad: fellesraad}
        }

    function onKundeChange(e) {
        var selected = this.select();
        var data = this.dataItem(selected);

        if (data != null) {
            fellesraad = data.Fellesraad;

            var grid = $("#HelpDesk_BrukerId").data("kendoDropDownList");
            grid.dataSource.read();
        }
    }

    function onTypeIdChange(e) {
        filterTypeId = e.newValue;

        grid = $("#ticketsListe").data("kendoGrid");
        grid.dataSource.read();
    }

    function finnModul(e) {
        var xM = document.getElementById("filterModul").value;
        if (xM != "") { filterModul = "Modul like '%" + xM + "%'" }
        else { filterModul = "";}

        grid = $("#ticketsListe").data("kendoGrid");
        grid.dataSource.read();
    }

    function finnKunde(e) {
        var xM = document.getElementById("filterKunde").value;
        if (xM != "") { filterKunde = "Fellesraad IN (SELECT Fellesraad FROM SYSTEMINFO WHERE Navn like '%" + xM + "%') " }
        else { filterKunde = "";}

        grid = $("#ticketsListe").data("kendoGrid");
        grid.dataSource.read();
    }

    function finnTittel(e) {
        var xM = document.getElementById("filterTittel").value;
        if (xM != "") { filterKunde = "Tittel like '%" + xM + "%' " }
        else { filterKunde = "";}

        grid = $("#ticketsListe").data("kendoGrid");
        grid.dataSource.read();
    }

    function finnAv(e) {
        var xM = document.getElementById("filterAv").value;
        if (xM != "") { filterAv = "BrukerId = '" + xM + "' " }
        else { filterAv = "";}

        grid = $("#ticketsListe").data("kendoGrid");
        grid.dataSource.read();
    }

    function onStatusChange(e) {
        var listBoxF = $('#Status').data("kendoMultiSelect");
        var value = listBoxF.value();
        
        status = value;
        var grd = $("#ticketsListe").data("kendoGrid");
        grd.dataSource.read();
        }

    function onPriChange() {
        filterPri = document.getElementById("prioritet").value;

        grid = $("#ticketsListe").data("kendoGrid");
        grid.dataSource.read();
        }

    function finnProgram(e) {
        var selected = this.select();
        var data = this.dataItem(selected);
        var lest = data.Id;

        if (lest != "2" && lest != "-1") {
            filterProgram = "Program = '1'";
            }
        else {
            filterProgram = "";
            }

        grid = $("#ticketsListe").data("kendoGrid");
        grid.dataSource.read();
        }

    function filterTickets() {
        filterTekst = "";

        if (status != "") {
            filterTekst = "Status IN (" + status + ")";
        }
        if (filterProgram != "") {
            if (filterTekst != "") { filterTekst += " AND "}
            filterTekst += filterProgram;
        }

        if (filterModul != "") {
            if (filterTekst != "") { filterTekst += " AND "}
            filterTekst += filterModul;
        }

        if (filterKunde != "") {
            if (filterTekst != "") { filterTekst += " AND "}
            filterTekst += filterKunde;
        }

        if (filterAv != "") {
            if (filterTekst != "") { filterTekst += " AND "}
            filterTekst += filterAv;
        }

        if (filterTittel != "") {
            if (filterTekst != "") { filterTekst += " AND "}
            filterTekst += filterTittel;
        }

        if (filterPri > -1 ) {
            if (filterTekst != "") { filterTekst += " AND "}
            filterTekst += "Prioritet = " + filterPri;
        }

        if (filterTypeId >= 0 ) {
            if (filterTekst != "") { filterTekst += " AND "}
            filterTekst += "TypeId = " + filterTypeId;
        }

        return {filterTekst: filterTekst, sortering: "TiketId"}
    }

    function refreshList() {


    }
</script>

<script type="text/javascript">


    function showDialogBegravelse() {
        $.ajax({
            url: '@Url.Action("DialogBestillingNy", "Byraa")',
            type: 'GET'
            }).done(function (result) {
                $('#DialogNyBegravelse').html(result);
                var popup = $('#DialogNyBegravelse').data("kendoWindow");
                popup.center().open();
            });
        }



    function onSorting(arg) {
            alert(arg.sort.field);
            //kendoConsole.log("Sorting on field: " + arg.sort.field + ", direction:" + (arg.sort.dir || "none"));
        }


    function onDataBound(e) {
        var currRowIndex = -1;
        var antall = 0;

        var grid = $("#ticketsListe").data("kendoGrid");

        $("#ticketsListe tbody tr").each(function () {
            var currentRowData = grid.dataItem(this);
            antall++;
            if (currHelpdeskGuid != "" && currHelpdeskGuid == currentRowData.HelpDeskGuid) {
                currRowIndex = this.rowIndex;
                }

            $(this).css("color", currentRowData.Farge);

            if (currentRowData.bold) {
                $(this).css("font-weight", "bold");
            }

        });

        if (currRowIndex >= 0) {
            grid.select("tr:eq(" + ( currRowIndex ) +")");
            grid.content.scrollTop(grid.select().position().top);
            }

        document.getElementById("idTickets").innerHTML="List of tickets [" + antall + "]";
    }
</script>


<script>
    var HelpDeskGuid = "";
    var HelpDeskBildeGuid = "";

    function filterHelpdesk() {
        return {strFilter: "HelpDeskGuid='" + HelpDeskGuid + "'"}
    }

    document.addEventListener('paste', function (evt) {
        // Get the data of clipboard
        const clipboardItems = evt.clipboardData.items;
        const items = [].slice.call(clipboardItems).filter(function (item) {
            // Filter the image items only
            return item.type.indexOf('image') !== -1;
        });
        if (items.length === 0) {
            return;
        }

        const item = items[0];
        // Get the blob of image
        const blob = item.getAsFile();

        var reader = new FileReader();
        reader.readAsDataURL(blob); 
        reader.onloadend = function() {
          var base64data = reader.result;                
          $.ajax({
            type: "POST",
            url: '@Url.Action("LeggTilHelpDeskBilde", "HelpDesk")',
            data: {HelpDeskGuid: HelpDeskGuid, base64Image: base64data},
            dataType: 'json'
        }).done(function (result) {
            if (result.Success) {
                $("#lvBilder").data("kendoListView").dataSource.read();
                }
            else {
                alert(result.Error[0].Description);
            }

        }).fail(function (result) {
            alert('an Error has occurred, please try again');
        });
        }

    });

    function onTicketChange(e) {
        var selected = this.select();
        var data = this.dataItem(selected);

        HelpDeskGuid = data.HelpDeskGuid;
        fellesraad = data.Fellesraad;
        var grid = $("#HelpDesk_BrukerId").data("kendoDropDownList");
        grid.dataSource.read();

        $.ajax({
            url: '@Url.Action("GetHelpDesk", "HelpDesk")',
            data: { HelpDeskGuid: HelpDeskGuid },
            type: "GET"
        }).done(function (result) {
            $("#helpdeskForm").html(result);


        });
    }

    function onBildeChange(e) {
            var selected = this.select();
            var data = this.dataItem(selected);
            HelpDeskBildeGuid = data.HelpDeskBildeGuid;

            $.ajax({
                url: '@Url.Action("GetHelpDeskBilde", "HelpDesk")',
                data: { HelpDeskBildeGuid: HelpDeskBildeGuid },
                type: "GET"
            }).done(function (result) {
                $("#helpdeskbildeForm").html(result);
            });
        }

    function LagreTickets() {
        var grdTickets = $("#ticketsListe").data("kendoGrid");
        var selectedF = grdTickets.select();
        var selItemF = grdTickets.dataItem(selectedF);

        var $this = $('#Helpdesk');
        $.ajax({
            type: "POST",
            url: '@Url.Action("SetHelpDesk", "HelpDesk")',
            data: $this.serialize(),
            dataType: 'json'
        }).done(function (result) {
            if (result.Success == true) {
                currHelpdeskGuid = result.NewGuid;
                HelpDeskGuid = result.NewGuid;

                
                var notification = $("#notification").data("kendoNotification");
                notification.show({title: "Ticket", message: "Saken er endret"}, "success");

                if (result.NewRecord || result.Refresh) {
                    grdTickets.dataSource.read();
                }
                else {
                    var resRow = grdTickets.tbody.find("tr[data-uid='" + selItemF.uid + "']");
                    var resRowData = grdTickets.dataItem(resRow);

                    var xM = document.getElementById("HelpDesk_Modul").value;
                    var xF = $("#HelpDesk_Fellesraad").data("kendoDropDownList").text();
                    var xB = $("#HelpDesk_BrukerId").data("kendoDropDownList").text();

                    resRowData.set("Modul", xM);
                    //resRowData.set("Kunde", xF);
                    //resRowData.set("BrukerNavn", xB);
                }


                }
            else {
                alert(result.Error[0].Message);
            }

        }).fail(function (result) {
            alert('an Error has occurred, please try again');
        });
    }

    function slettTickets() {
        $("#confirm").kendoConfirm({
            title: "Slett",
            content: "Ønsker du å slette denne registreringen?",
            messages: {
                okText: "Ja",
                cancel: "Nei"
            }
        }).data("kendoConfirm").result.done(function () {
            $('body').append($('<div id="confirm">'));

            var grdTicketsList = $("#ticketsListe").data("kendoGrid");
            var selectedF = grdTicketsList.select();
            var selItemF = grdTicketsList.dataItem(selectedF);
            var HelpDeskGuid = "";
            
            if (selectedF.length > 0) {
                HelpDeskGuid = selItemF.HelpDeskGuid;

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("removeHelpDesk", "HelpDesk")',
                    data: { HelpDeskGuid: HelpDeskGuid },
                }).done(function (result) {
                    grdTicketsList.dataSource.read();
                });

                }
        }).fail(function () {
            $('body').append($('<div id="confirm">'));
        });
    }

    function NyTickets(e) {
        $.ajax({
            url: '@Url.Action("NewTickets", "HelpDesk")',
            type: "GET"
        }).done(function (result) {
            $("#helpdeskForm").html(result);
        });
    }
 

</script>

<style>
    div.k-listbox {
        height: 530px;
    }
</style>

<script>

    $('#myTab a').click(function (e) {
        e.preventDefault();
        $(this).tab('show');
    });

    // store the currently selected tab in the hash value
    $("ul.nav-tabs > li > a").on("shown.bs.tab", function (e) {
        var id = $(e.target).attr("href").substr(1);
        window.location.hash = id;
    });

    
    $(window).on("resize", function(){
        $("#ticketsListe").data("kendoGrid").refresh();
        });

</script>