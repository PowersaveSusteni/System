@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer
@model Susteni.Models.Funksjoner.FunctionsModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = Localizer["Fuel savings"];
    ViewData["LogOnOk"] = "2";
    ViewData["Menu"] = "Admin";
}

<script type="text/x-kendo-template" id="tplStandard">
    #if(Standard){#
        <img src="@Url.Content("~/images/")True.svg" alt="Ja" width='24' height='24' />
    #}else{#

    #}#
</script>

<form onsubmit="return false;" class="mt-3">
    <div id="confirm"></div>

    <div class="row" id="heading" style="min-height: 90px;">

        <div class="col-2 unselectable">
            <h2>@Localizer["Ship types"]</h2>
        </div>

        <div class="col-2 infoArea" id="info" style="display: none">
            <p class="unselectable" id="infoTekst">
            </p>
        </div>

    </div>

    <div class="row">

        <div class="col-lg-4">

            <div class="row" style="margin-top: 20px;">
                <div class="col-12">
                    <label>List of ship types</label>
                </div>
                <div class="col-lg-12">
                    <div style="position: relative">
                        @(Html.Kendo().Grid<Susteni.Models.TypeShipItem>()
                            .Name("shipTypeList")
                            .Columns(columns =>
                            {
                                columns.Bound(q => q.ShipTypeGuid).Visible(false);
                                columns.Bound(q => q.Name).Width(400).Title(Localizer["Name"].Value);
                            })
                            .Scrollable()
                            .Events(e => e.Change("onShipTypeChange"))
                            .Selectable(s => s
                                .Mode(GridSelectionMode.Multiple)
                                .Type(GridSelectionType.Row))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Read(read => read.Action("GetTypeShipList", "Functions"))
                                )
                            )

                        @(Html.Kendo().FloatingActionButton()
                            .Name("shipTypeAdd")
                            .ThemeColor(FloatingActionButtonThemeColor.Success)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(10))
                            .Icon("plusIcon")
                            .Events(events => events.Click("addShipType"))
                            .Visible(true)
                            )

                        @(Html.Kendo().FloatingActionButton()
                            .Name("shipTypeEdit")
                            .ThemeColor(FloatingActionButtonThemeColor.Warning)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(50))
                            .Icon("pencilIcon")
                            .Events(events => events.Click("editShipType"))
                            .Visible(false)
                            )

                        @(Html.Kendo().FloatingActionButton()
                            .Name("shipTypeRemove")
                            .ThemeColor(FloatingActionButtonThemeColor.Error)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(90))
                            .Icon("trashIcon")
                            .Events(events => events.Click("removeShipType"))
                            .Visible(false)
                            )

                    </div>
                </div>
            </div>

        </div>

        <div class="col-lg-6">
            <div class="row" style="margin-top: 20px;">
                <div class="col-6">
                    <h5>Generators</h5>
                    <div style="position: relative">
                        @(Html.Kendo().Grid<Susteni.Models.ShipTypeGeneratorsItem>()
                            .Name("shipTypeGeneratorList")
                            .Columns(columns =>
                            {
                                columns.Bound(q => q.GeneratorGuid).Visible(false);
                                columns.Bound(q => q.Standard).Width(90).ClientTemplateId("tplStandard").Title(Localizer["Standard"].Value).Hidden(false);
                                columns.Bound(q => q.Name).Width(400).Title(Localizer["Name"].Value);

                            })
                            .Scrollable()
                            .Events(e => e.Change("onShipTypeGenChange"))
                            .Selectable(s => s
                                .Mode(GridSelectionMode.Multiple)
                                .Type(GridSelectionType.Row))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Read(read => read.Action("GetShipTypeGeneratorsListe", "Functions").Data("filterShipType"))
                                )
                            )


                        @(Html.Kendo().FloatingActionButton()
                            .Name("shipTypeGenAdd")
                            .ThemeColor(FloatingActionButtonThemeColor.Success)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(10))
                            .Icon("plusIcon")
                            .Events(events => events.Click("addShipTypeGen"))
                            .Visible(true)
                            )

                        @(Html.Kendo().FloatingActionButton()
                            .Name("shipTypeGenEdit")
                            .ThemeColor(FloatingActionButtonThemeColor.Warning)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(50))
                            .Icon("pencilIcon")
                            .Events(events => events.Click("editShipTypeGen"))
                            .Visible(false)
                            )

                        @(Html.Kendo().FloatingActionButton()
                            .Name("shipTypeGenRemove")
                            .ThemeColor(FloatingActionButtonThemeColor.Error)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(90))
                            .Icon("trashIcon")
                            .Events(events => events.Click("removeShipTypeGen"))
                            .Visible(false)
                            )

                        @(Html.Kendo().FloatingActionButton()
                            .Name("shipTypeGenDuplicate")
                            .ThemeColor(FloatingActionButtonThemeColor.Info)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(130)) 
                            .Icon("copy") 
                            .Events(events => events.Click("duplicateShipTypeGen")) 
                            .Visible(false) // O botão só será visível quando um gerador for selecionado
                            )

                    </div>
                </div>
                <div class="col-6">
                    <h5>Operation mode</h5>
                    <div style="position: relative">
                        @(Html.Kendo().Grid<Susteni.Models.ShipTypeOperationModesItem>()
                            .Name("shipTypeOperationModeList")
                            .Columns(columns =>
                            {
                                columns.Bound(q => q.Standard).Width(90).ClientTemplateId("tplStandard").Title(Localizer["Standard"].Value).Hidden(false);
                                columns.Bound(q => q.OperationModeGuid).Visible(false);
                                columns.Bound(q => q.Name).Title(Localizer["Name"].Value);
                                columns.Bound(q => q.NumberGenerators).Width(90).Title(Localizer["Gen. req."].Value);
                            })
                            .Scrollable()
                            .Events(e => e.Change("onShipTypeOpeChange"))
                            .Selectable(s => s
                                .Mode(GridSelectionMode.Multiple)
                                .Type(GridSelectionType.Row))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Read(read => read.Action("GetShipTypeOperationModesListe", "Functions").Data("filterShipType"))
                                )
                            )


                        @(Html.Kendo().FloatingActionButton()
                            .Name("shipTypeOpeAdd")
                            .ThemeColor(FloatingActionButtonThemeColor.Success)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(10))
                            .Icon("plusIcon")
                            .Events(events => events.Click("addShipTypeOpe"))
                            .Visible(true)
                            )

                        @(Html.Kendo().FloatingActionButton()
                            .Name("shipTypeOpeEdit")
                            .ThemeColor(FloatingActionButtonThemeColor.Warning)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(50))
                            .Icon("pencilIcon")
                            .Events(events => events.Click("editShipTypeOpe"))
                            .Visible(false)
                            )

                        @(Html.Kendo().FloatingActionButton()
                            .Name("shipTypeOpeRemove")
                            .ThemeColor(FloatingActionButtonThemeColor.Error)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(90))
                            .Icon("trashIcon")
                            .Events(events => events.Click("removeShipTypeOpe"))
                            .Visible(false)
                            )
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>


<script id="successTemplate" type="text/x-kendo-template">
    <div class="upload-success">
        <img src="@Url.Content("~/images/emoticon-happy.svg")" style="float:left; height:48px; width:48px; margin-right: 16px;"/>
        <p>#= message #</p>
    </div>
</script>


<script id="errorTemplate" type="text/x-kendo-template">
    <div class="wrong-pass">
        <img src="@Url.Content("~/images/emoticon-sad.svg")" style="float:left; height:48px; width:48px; margin-right: 16px;"/>
        <p>#= message #</p>
    </div>
</script>


@(Html.Kendo().Notification()
    .Name("notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Stacking(NotificationStackingSettings.Down)
    .AutoHideAfter(5000)
    .Templates(t =>
    {
        t.Add().Type("success").ClientTemplateID("successTemplate");
        t.Add().Type("error").ClientTemplateID("errorTemplate");
    })
)

@(Html.Kendo().Window()
        .Name("DialogSupport")
        .Title(Localizer["Support"].Value)
        .Visible(false)
        .Width(1200)
        .Modal(true)
        .Draggable()
        )

@(Html.Kendo().Window()
    .Name("DialogHjelp")
    .Title(Localizer["Help"].Value)
    .Visible(false)
    .Height(800)
    .Width(1200)
    .Modal(true)
    .Draggable()
    )


@(Html.Kendo().Window()
    .Name("dialogShipType")
    .Title(Localizer["Shiptype"].Value)
    .Visible(false)
    .Width(800)
    .Modal(true)
    .Draggable()
    )


@(Html.Kendo().Window()
    .Name("dialogShipTypeGenerator")
    .Title(Localizer["Generator"].Value)
    .Visible(false)
    .Width(800)
    .Modal(true)
    .Draggable()
    )



@(Html.Kendo().Window()
    .Name("dialogShipTypeOperationMode")
    .Title(Localizer["Shiptype operation mode"].Value)
    .Visible(false)
    .Width(800)
    .Modal(true)
    .Draggable()
    )


<script>
    var shipTypeGuid = "";
    var shipTypeGeneratorGuid = "";
    var shipTypeOperationGuid = "";


    function filterShipType() {
        return { ShipTypeGuid: shipTypeGuid }
    }
</script>

<script>

    function showHelp() {
        $.ajax({
            url: '@Url.Action("DialogHjelp", "Hjelp")',
            type: 'GET'
        }).done(function (result) {
            $('#DialogHjelp').html(result);
            var popup = $('#DialogHjelp').data("kendoWindow");
            popup.center().open();
        });
    }

    function addSupport() {
        $.ajax({
            url: '@Url.Action("DialogSupport", "HelpDesk")',
            type: 'GET'
        }).done(function (result) {
            $('#DialogSupport').html(result);

            xB = document.getElementById("idBilde");

            document.getElementById("HelpDesk_Modul").value = "TypeShip";
            document.getElementById("HelpDesk_Program").value = "2";
            document.getElementById("HelpDesk_Status").value = "1";

            const screenshotTarget = document.body;

            html2canvas(screenshotTarget).then((canvas) => {
                const base64image = canvas.toDataURL("image/png");
                xB.innerHTML = "<img src='" + base64image + "' style='max-height: 260px; max-width: 350px;' alt='Bilde' / >";
                document.getElementById("HelpDesk_byte64String").value = base64image
            });

            var popup = $('#DialogSupport').data("kendoWindow");
            popup.center().open();
        });
    }


    function hjelpFilter() {
        return { Modul: 900, Skjerm: "" }
    }

</script>

<script>

    function saveOperationMode(e) {
        var $this = $('#operationModeForm').serialize();

        $.ajax({
            url: '@Url.Action("SetShipTypeOperationModes", "Functions")',
            type: "PUSH",
            data: $this,
            dataType: 'json'
            })
        .done(function (result) {
            $('#dialogShipTypeOperationMode').data("kendoWindow").close();
            $("#shipTypeOperationModeList").data("kendoGrid").dataSource.read();
            });
    }

    function closeOperationMode() {
        var popup = $('#dialogShipTypeOperationMode').data("kendoWindow");
        popup.close();
    }

</script>

<script>



    function onShipTypeChange(e) {
        var grid = $("#shipTypeList").data("kendoGrid");
        var selected = grid.select();
        var data = grid.dataItem(selected);

        shipTypeGuid = data.ShipTypeGuid;


        $('#shipTypeEdit').getKendoFloatingActionButton().show();
        $('#shipTypeRemove').getKendoFloatingActionButton().show();

        $("#shipTypeGeneratorList").data("kendoGrid").dataSource.read();
        $("#shipTypeOperationModeList").data("kendoGrid").dataSource.read();

    }

    function editShipType() {
        $.ajax({
            url: '@Url.Action("GetTypeShip", "Functions")',
            data: { ShipTypeGuid: shipTypeGuid },
            type: 'GET'
        }).done(function (result) {
            $('#dialogShipType').html(result);
            var popup = $('#dialogShipType').data("kendoWindow");
            popup.center().open();
        });
    }

    function addShipType() {
        $.ajax({
            url: '@Url.Action("GetTypeShip", "Functions")',
            data: { ShipTypeGuid: "" },
            type: 'GET'
        }).done(function (result) {
            $('#dialogShipType').html(result);
            var popup = $('#dialogShipType').data("kendoWindow");
            popup.center().open();
        });
    }


    function onShipTypeGenChange(e) {
        var grid = $("#shipTypeGeneratorList").data("kendoGrid");
        var selected = grid.select();
        var data = grid.dataItem(selected);

        shipTypeGeneratorGuid = data.GeneratorGuid;

        $('#shipTypeGenEdit').getKendoFloatingActionButton().show();
        $('#shipTypeGenRemove').getKendoFloatingActionButton().show();
        $('#shipTypeGenDuplicate').getKendoFloatingActionButton().show(); // Exibe o botão de duplicação
    }


    function editShipTypeGen() {
        $.ajax({
            url: '@Url.Action("GetShipTypeGenerators", "Functions")',
            data: { GeneratorGuid: shipTypeGeneratorGuid },
            type: 'GET'
        }).done(function (result) {
            $('#dialogShipTypeGenerator').html(result);
            var popup = $('#dialogShipTypeGenerator').data("kendoWindow");
            popup.center().open();
        });
    }

    function addShipTypeGen() {
        $.ajax({
            url: '@Url.Action("GetShipTypeGenerators", "Functions")',
            data: { GeneratorGuid: "", ShipTypeGuid: shipTypeGuid },
            type: 'GET'
        }).done(function (result) {
            $('#dialogShipTypeGenerator').html(result);
            var popup = $('#dialogShipTypeGenerator').data("kendoWindow");
            popup.center().open();
        });
    }


    function saveGenerator(e) {
        var $this = $('#generatorsForm').serialize();

        $.ajax({
            url: '@Url.Action("SetShipTypeGenerators", "Functions")',
            type: "PUSH",
            data: $this,
            dataType: 'json'
            })
        .done(function (result) {
            if (result.Success) {
                    $('#dialogShipTypeGenerator').data("kendoWindow").close();
                    $("#shipTypeGeneratorList").data("kendoGrid").dataSource.read();
            }
            else {
                alert(result.Error[0].Message);
            }
            });
        }


    function closeGenerator() {
        $('#dialogShipTypeGenerator').data("kendoWindow").close();
        }

    function onShipTypeOpeChange(e) {
        var grid = $("#shipTypeOperationModeList").data("kendoGrid");
        var selected = grid.select();
        var data = grid.dataItem(selected);

        shipTypeOperationGuid = data.OperationModeGuid;

        $('#shipTypeOpeEdit').getKendoFloatingActionButton().show();
        $('#shipTypeOpeRemove').getKendoFloatingActionButton().show();
    }


    function editShipTypeOpe() {
        $.ajax({
            url: '@Url.Action("ShipTypeOM", "Functions")',
            data: { ShipTypeOMGuid: shipTypeOperationGuid, ShipTypeGuid: shipTypeGuid },
            type: 'GET'
        }).done(function (result) {
            $('#dialogShipTypeOperationMode').html(result);
            var popup = $('#dialogShipTypeOperationMode').data("kendoWindow");
            popup.center().open();
        });
    }

    function addShipTypeOpe() {
        $.ajax({
            url: '@Url.Action("ShipTypeOM", "Functions")',
            data: { ShipTypeOMGuid: shipTypeOperationGuid, ShipTypeGuid: shipTypeGuid },
            type: 'GET'
        }).done(function (result) {
            $('#dialogShipTypeOperationMode').html(result);
            var popup = $('#dialogShipTypeOperationMode').data("kendoWindow");
            popup.center().open();
        });
    }


    function removeShipTypeGen(e) {
        var tittel = "DELETE";
        var nei = "No";
        var content = "<div id='question'>Do you want to remove this shiptype generator</div>";

        $("#confirm").kendoConfirm({
            title: tittel, content: content, messages: { okText: "yes", cancel: nei }
            })
        .data("kendoConfirm").result.done(function () {
            $('body').append($('<div id="confirm">'));

            $.ajax({
                url: '@Url.Action("RemoveShipTypeGenerators", "Functions")',
                type: "GET",
                dataType: "json",
                data: { shipTypeGeneratorGuid: shipTypeGeneratorGuid }
                })
            .done(function (result) {
                $("#shipTypeGeneratorList").data("kendoGrid").dataSource.read();
                });
            })
        .fail(function () {
            $('body').append($('<div id="confirm">'));
            });
        }


    function removeShipType(e) {
        var tittel = "DELETE";
        var nei = "No";
        var content = "<div id='question'>Do you want to remove this shiptype</div>";

        $("#confirm").kendoConfirm({
            title: tittel, content: content, messages: { okText: "yes", cancel: nei }
            })
        .data("kendoConfirm").result.done(function () {
            $('body').append($('<div id="confirm">'));

            $.ajax({
                url: '@Url.Action("RemoveTypeShip", "Functions")',
                type: "GET",
                dataType: "json",
                data: { shipTypeGuid: shipTypeGuid }
                })
            .done(function (result) {
                $("#shipTypeList").data("kendoGrid").dataSource.read();
                });
            })
        .fail(function () {
            $('body').append($('<div id="confirm">'));
            });
        }


    function removeShipTypeOpe(e) {
        var tittel = "DELETE";
        var nei = "No";
        var content = "<div id='question'>Do you want to remove this shiptype</div>";

        $("#confirm").kendoConfirm({
            title: tittel, content: content, messages: { okText: "yes", cancel: nei }
            })
        .data("kendoConfirm").result.done(function () {
            $('body').append($('<div id="confirm">'));

            $.ajax({
                url: '@Url.Action("RemoveShipTypeOperationModes", "Functions")',
                type: "GET",
                dataType: "json",
                    data: { shipTypeOperationGuid: shipTypeOperationGuid }
                })
            .done(function (result) {
                    $("#shipTypeOperationModeList").data("kendoGrid").dataSource.read();
                });
            })
        .fail(function () {
            $('body').append($('<div id="confirm">'));
            });
        }
    
    function duplicateShipTypeGen() {
        if (!shipTypeGeneratorGuid) {
            alert("Please select a generator to duplicate.");
            return;
        }

        $.ajax({
            url: '@Url.Action("DuplicateShipTypeGenerator", "Ship")',
            type: "POST",
            data: { GeneratorGuid: shipTypeGeneratorGuid },
            success: function (response) {
                if (response.success) {
                    alert("Generator duplicated successfully!");
                    $("#shipTypeGeneratorList").data("kendoGrid").dataSource.read(); // Atualiza a lista
                } else {
                    alert("Error duplicating generator: " + response.message);
                }
            },
            error: function (xhr) {
                alert("Error: " + xhr.responseText);
            }
        });
    }


        



</script>
