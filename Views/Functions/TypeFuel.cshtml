@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer
@model Susteni.Models.Funksjoner.FunctionsModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = Localizer["Fuel savings"];
    ViewData["LogOnOk"] = "2";
    ViewData["Menu"] = "Admin";
}

<style>

    .k-fab-text {
        display: none;
    }


    #editor table, th {
        margin-left: 0px;
        margin-top: 0px;
    }

</style>


<form onsubmit="return false;" class="mt-3">
    <div id="confirm"></div>

    <div class="row" id="heading" style="min-height: 90px;">

        <div class="col-2 unselectable">
            <h2>@Localizer["Fuel types"]</h2>
        </div>

        <div class="col-2 infoArea" id="info" style="display: none">
            <p class="unselectable" id="infoTekst">
            </p>
        </div>

    </div>

    <div class="row">

        <div class="col-lg-8">

            <div class="row" style="margin-top: 20px;">
                <div class="col-12">
                    <label>List of fuel types</label>
                </div>
                <div class="col-lg-12">
                    <div style="position: relative">
                        @(Html.Kendo().Grid<Susteni.Models.TypeFuelItem>()
                            .Name("fuelTypeList")
                            .Columns(columns =>
                            {
                                columns.Bound(q => q.FuelTypeGuid).Visible(false);
                                columns.Bound(q => q.Name).Width(400).Title(Localizer["Name"].Value);
                                columns.Bound(q => q.CarbonContent).Format("{0:n3}").Title(Localizer["CarbonContent"].Value).HtmlAttributes(new { style = "text-align: right;" });
                                columns.Bound(q => q.Cf).Format("{0:n4}").Title(Localizer["Cf"].Value).HtmlAttributes(new { style = "text-align: right;" });
                                columns.Bound(q => q.DensityMGO).Format("{0:n3}").Title(Localizer["Density"].Value).HtmlAttributes(new { style = "text-align: right;" });
                                columns.Bound(q => q.Metan).Format("{0:n4}").Title(Localizer["Metan"].Value).HtmlAttributes(new { style = "text-align: right;" });
                                columns.Bound(q => q.Lystgass).Format("{0:n3}").Title(Localizer["Lystgass"].Value).HtmlAttributes(new { style = "text-align: right;" });
                                columns.Bound(q => q.NOx).Format("{0:n8}").Title(Localizer["NOx"].Value).HtmlAttributes(new { style = "text-align: right;" });
                                columns.Bound(q => q.SOx).Format("{0:n8}").Title(Localizer["SOx"].Value).HtmlAttributes(new { style = "text-align: right;" });
                            })
                            .Scrollable()
                            .Events(e => e.Change("onFuelTypeChange"))
                            .Selectable(s => s
                                .Mode(GridSelectionMode.Multiple)
                                .Type(GridSelectionType.Row))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Read(read => read.Action("GetFuelTypeList", "Functions"))
                                )
                            )

                        @(Html.Kendo().FloatingActionButton()
                            .Name("fuelTypeAdd")
                            .ThemeColor(FloatingActionButtonThemeColor.Success)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(10))
                            .Icon("plusIcon")
                            .Events(events => events.Click("addFuelType"))
                            .Visible(true)
                            )

                        @(Html.Kendo().FloatingActionButton()
                            .Name("fuelTypeEdit")
                            .ThemeColor(FloatingActionButtonThemeColor.Warning)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(50))
                            .Icon("pencilIcon")
                            .Events(events => events.Click("editFuelType"))
                            .Visible(false)
                            )

                        @(Html.Kendo().FloatingActionButton()
                            .Name("fuelTypeRemove")
                            .ThemeColor(FloatingActionButtonThemeColor.Error)
                            .Size(FloatingActionButtonSize.Small)
                            .PositionMode(FloatingActionButtonPositionMode.Absolute)
                            .Align(FloatingActionButtonAlign.TopEnd)
                            .AlignOffset(alignOffset => alignOffset.Horizontal(0).Vertical(90))
                            .Icon("trashIcon")
                            .Events(events => events.Click("removeFuelType"))
                            .Visible(false)
                            )

                    </div>
                </div>
            </div>

        </div>

    </div>
</form>


<script id="successTemplate" type="text/x-kendo-template">
    <div class="upload-success">
        <img src="@Url.Content("~/images/emoticon-happy.svg")" style="float:left; height:48px; width:48px; margin-right: 16px;"/>
        <p>#= message #</p>
    </div>
</script>

<script id="errorTemplate" type="text/x-kendo-template">
    <div class="wrong-pass">
        <img src="@Url.Content("~/images/emoticon-sad.svg")" style="float:left; height:48px; width:48px; margin-right: 16px;"/>
        <p>#= message #</p>
    </div>
</script>

@(Html.Kendo().Notification()
    .Name("notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Stacking(NotificationStackingSettings.Down)
    .AutoHideAfter(5000)
    .Templates(t =>
    {
        t.Add().Type("success").ClientTemplateID("successTemplate");
        t.Add().Type("error").ClientTemplateID("errorTemplate");
    })
)


@(Html.Kendo().Window()
        .Name("DialogSupport")
        .Title(Localizer["Support"].Value)
        .Visible(false)
        .Width(1200)
        .Modal(true)
        .Draggable()
        )


@(Html.Kendo().Window()
    .Name("DialogHjelp")
    .Title(Localizer["Help"].Value)
    .Visible(false)
    .Height(800)
    .Width(1200)
    .Modal(true)
    .Draggable()
    )

@(Html.Kendo().Window()
    .Name("dialogFuelType")
    .Title(Localizer["Fueltype"].Value)
    .Visible(false)
    .Width(800)
    .Modal(true)
    .Draggable()
    )

<script id="hjelp">


    function showHelp() {
        $.ajax({
            url: '@Url.Action("DialogHjelp", "Hjelp")',
            type: 'GET'
        }).done(function (result) {
            $('#DialogHjelp').html(result);
            var popup = $('#DialogHjelp').data("kendoWindow");
            popup.center().open();
        });
    }

    function addSupport() {
        $.ajax({
            url: '@Url.Action("DialogSupport", "HelpDesk")',
            type: 'GET'
        }).done(function (result) {
            $('#DialogSupport').html(result);

            xB = document.getElementById("idBilde");

            document.getElementById("HelpDesk_Modul").value = "TypeFuel";
            document.getElementById("HelpDesk_Program").value = "2";
            document.getElementById("HelpDesk_Status").value = "1";

            const screenshotTarget = document.body;

            html2canvas(screenshotTarget).then((canvas) => {
                const base64image = canvas.toDataURL("image/png");
                xB.innerHTML = "<img src='" + base64image + "' style='max-height: 260px; max-width: 350px;' alt='Bilde' / >";
                document.getElementById("HelpDesk_byte64String").value = base64image
            });

            var popup = $('#DialogSupport').data("kendoWindow");
            popup.center().open();
        });
    }


    function hjelpFilter() {
        return { Modul: 900, Skjerm: "" }
    }

</script>


<script>
    var fuelTypeGuid = "";

    function onFuelTypeChange(e) {
        var grid = $("#fuelTypeList").data("kendoGrid");
        var selected = grid.select();
        var data = grid.dataItem(selected);

        fuelTypeGuid = data.FuelTypeGuid;

        var fabFTE = $('#fuelTypeEdit').getKendoFloatingActionButton();
        fabFTE.show();

        var fabFTR = $('#fuelTypeRemove').getKendoFloatingActionButton();
        fabFTR.show();
    }

    function editFuelType() {
        $.ajax({
            url: '@Url.Action("GetTypeFuel", "Functions")',
            data: { FuelTypeGuid: fuelTypeGuid },
            type: 'GET'
        }).done(function (result) {
            $('#dialogFuelType').html(result);

            var cc= document.getElementById("CarbonContent2").value;
            var cf = document.getElementById("Cf2").value;
            var dmgo = document.getElementById("DensityMGO2").value;
            var m = document.getElementById("Metan2").value;
            var lg = document.getElementById("Lystgass2").value;
            var nox = document.getElementById("NOx2").value;
            var sox = document.getElementById("SOx2").value;

            cc = cc.replace(",",".");
            cf = cf.replace(",",".");
            dmgo = dmgo.replace(",",".");
            m = m.replace(",",".");
            lg = lg.replace(",",".");
            nox = nox.replace(",",".");
            sox = sox.replace(",",".");

            $("#TypeFuel_CarbonContent").data("kendoNumericTextBox").value(cc);
            $("#TypeFuel_Cf").data("kendoNumericTextBox").value(cf);
            $("#TypeFuel_DensityMGO").data("kendoNumericTextBox").value(dmgo);
            $("#TypeFuel_Metan").data("kendoNumericTextBox").value(m);
            $("#TypeFuel_Lystgass").data("kendoNumericTextBox").value(lg);
            $("#TypeFuel_NOx").data("kendoNumericTextBox").value(nox);
            $("#TypeFuel_SOx").data("kendoNumericTextBox").value(sox);


            var popup = $('#dialogFuelType').data("kendoWindow");
            popup.center().open();
        });
    }

    function addFuelType() {
        $.ajax({
            url: '@Url.Action("GetTypeFuel", "Functions")',
            data: { FuelTypeGuid: "" },
            type: 'GET'
        }).done(function (result) {
            $('#dialogFuelType').html(result);
            var popup = $('#dialogFuelType').data("kendoWindow");
            popup.center().open();
        });
    }

    function removeFuelType(e) {
        var tittel = "DELETE";
        var nei = "No";
        var content = "<div id='question'>Do you want to remove this fueltype</div>";

        $("#confirm").kendoConfirm({
            title: tittel,
            content: content,
            messages: {
                okText: "yes",
                cancel: nei
            }
        }).data("kendoConfirm").result.done(function () {
            $('body').append($('<div id="confirm">'));

            $.ajax({
                url: '@Url.Action("RemoveTypeFuel", "Functions")',
                type: "GET",
                dataType: "json",
                data: { fuelTypeGuid: fuelTypeGuid }
            }).done(function (result) {
                $("#fuelTypeList").data("kendoGrid").dataSource.read();
            });
        });
    }

</script>
