@using Microsoft.AspNetCore.Mvc.Localization

@inject IViewLocalizer Localizer
@model Susteni.Models.Ship.ShipModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = Localizer["Summary"];
    ViewData["LogOnOk"] = "2";
    ViewData["Menu"] = "Admin";
}

<form onsubmit="return false;" class="mt-3">
    <div id="confirm"></div>
    <input hidden asp-for="Ship.ShipGuid" />

    <div class="row" id="heading" style="min-height: 70px;">

        <div class="col-2 unselectable">
            <h3>@Localizer["Summary"]</h3>
        </div>

        <div class="col-8">

            <div style="display: flex; flex-direction: row;">

                <button class="commandModern" onclick="fuelSavings()">Fuel saving</button>
                <button class="commandModern" onclick="generators()">El production</button>
                <button class="commandModern" onclick="plan()">Investment plan</button>

            </div>

        </div>

        <div class="col-2 infoArea" id="info" style="display: none">
            <p class="unselectable" id="infoTekst">
            </p>
        </div>

    </div>

    <div class="row">

        <div class="col-lg-4">




        </div>

    </div>

    <div class="row" style="margin-top: 10px;">
        <div class="col-4">
            <h5>Summary of savings pr consumers group and totally</h5>
            @(Html.Kendo().Grid<Susteni.Models.ShipOperationSavingItem>()
                .Name("equipmentSavingList")
                .Columns(columns =>
                {
                    columns.Bound(q => q.Name).Title(Localizer["Name"].Value);
                    columns.Bound(q => q.Savings).Title(Localizer["Saving"].Value).ClientFooterTemplate("#=sum#");
                })
                .Height(265)
                .Scrollable()
                .Selectable(s => s
                .Mode(GridSelectionMode.Multiple)
                .Type(GridSelectionType.Row))
                .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("GetShipEquipmentSavingsList", "Ship").Data("filterTypes"))
                .Aggregates(agg => agg.Add(p => p.Savings).Sum())
                )
                )
        </div>

        <div class="col-4">
            <h5>Summary of savings pr operational mode and totally</h5>
            @(Html.Kendo().Grid<Susteni.Models.ShipOperationSavingItem>()
                .Name("operationSavingList")
                .Columns(columns =>
                {
                    columns.Bound(q => q.Name).Title(Localizer["Name"].Value);
                    columns.Bound(q => q.Savings).Title(Localizer["Saving"].Value).ClientFooterTemplate("#=sum#");
                })
                .Height(265)
                .Scrollable()
                .Selectable(s => s
                .Mode(GridSelectionMode.Multiple)
                .Type(GridSelectionType.Row))
                .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("GetShipOperationSavingsList", "Ship").Data("filterTypes"))
                .Aggregates(agg => agg.Add(p => p.Savings).Sum())
                )
                )
        </div>
        <div class="col-4">
            @(Html.Kendo().Grid<Susteni.Models.ShipOperationPowerItem>()
                .Name("powerList")
                .Columns(columns =>
                {
                    columns.Bound(q => q.Name).Title(Localizer["Operation mode"].Value);
                    columns.Bound(q => q.HoursPrYear).Title(Localizer["Hours pr. year"].Value);
                    columns.Bound(q => q.PowerPre).Title(Localizer["Before saving"].Value).ClientFooterTemplate("#=sum#");
                    columns.Bound(q => q.PowerPast).Title(Localizer["After saving"].Value).ClientFooterTemplate("#=sum#");
                })
                .Height(290)
                .Scrollable()
                .Selectable(s => s
                .Mode(GridSelectionMode.Multiple)
                .Type(GridSelectionType.Row))
                .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("GetShipOperationPowerList", "Ship").Data("filterTypes"))
                .Aggregates(agg => agg.Add(p => p.PowerPre).Sum())
                .Aggregates(agg => agg.Add(p => p.PowerPast).Sum())
                )
                )
        </div>
    </div>

</form>

@(Html.Kendo().Window()
    .Name("dialogLastOppBilde")
    .Title(Localizer["Last opp bilde"].Value)
    .HtmlAttributes("style= border:1px;")
    .Visible(false)
    .Width(1000)
    .Modal(true)
    .Draggable()
    )

@(Html.Kendo().Window()
    .Name("dialogEquipment")
    .Title(Localizer["Equipment"].Value)
    .HtmlAttributes("style= border:1px;")
    .Visible(false)
    .Width(600)
    .Modal(true)
    .Draggable()
    )



<script id="idMenu">

    function fuelSavings() {
        shipGuid = document.getElementById("Ship_ShipGuid").value;
        window.location = "../Ship/FuelSavings?shipGuid=" + shipGuid;

    }

    function generators() {
        shipGuid = document.getElementById("Ship_ShipGuid").value;
        window.location = "../Ship/ElProduction?shipGuid=" + shipGuid;
    }

    function summary() {
        shipGuid = document.getElementById("Ship_ShipGuid").value;
        window.location = "../Ship/Summary?shipGuid=" + shipGuid;

    }

    function plan() {
        shipGuid = document.getElementById("Ship_ShipGuid").value;
        window.location = "../Ship/InvestmentPlan?shipGuid=" + shipGuid;
    }

</script>

<script id="shipFunction">
    var equipmentType = 1;
    var shipGuid = "";
    var equipmentGuid = "";

    function filterTypes() {
        shipGuid = document.getElementById("Ship_ShipGuid").value;

        return { shipGuid: shipGuid, equipmentType: equipmentType }
    }

    function filterEquipement() {
        return { equipmentGuid: equipmentGuid, shipGuid: shipGuid }
    }


    function onEquipmentTypesChange(e) {
        var grid = $("#equipmentTypes").data("kendoDropDownList");
        var selected = grid.select();
        var data = grid.dataItem(selected);

        equipmentType = data.Type;

        $("#equipmentList").data("kendoGrid").dataSource.read();
    }


    function onEquipmentChange(e) {
        var grid = $("#equipmentList").data("kendoGrid");
        var selected = grid.select();
        var data = grid.dataItem(selected);

        equipmentGuid = data.EquipmentGuid;

        var fabOME = $('#equipmentEdit').getKendoFloatingActionButton();
        fabOME.show();
        var fabOMR = $('#equipmentRemove').getKendoFloatingActionButton();
        fabOMR.show();

        $("#equipmentModeList").data("kendoGrid").dataSource.read();
    }

    $(document).ready(function () {
        shipGuid = document.getElementById("Ship_ShipGuid").value;
    });

</script>

<script id="operataionModeFunction">

    var operationModeGuid = "";

    function onOperationModeChange(e) {
        var grid = $("#shipOperationmodeList").data("kendoGrid");
        var selected = grid.select();
        var data = grid.dataItem(selected);

        operationModeGuid = data.OperationModeGuid;

        var fabOME = $('#operationModeEdit').getKendoFloatingActionButton();
        fabOME.show();
        var fabOMR = $('#operationModeRemove').getKendoFloatingActionButton();
        fabOMR.show();

    }


    function showDialogEquipment() {
        $.ajax({
            url: '@Url.Action("DialogEquipment", "Ship")',
            data: { shipGuid: shipGuid, equipmentType: equipmentType },
            type: "GET"
        })
            .done(function (result) {
                $('#dialogEquipment').html(result);
                var popup = $('#dialogEquipment').data("kendoWindow");
                popup.center().open();
            });
    }

    function showDialogEquipmentEdit() {
        $.ajax({
            url: '@Url.Action("DialogEquipmentEdit", "Ship")',
            data: { equipmentGuid: equipmentGuid },
            type: "GET"
        })
            .done(function (result) {
                $('#dialogEquipment').html(result);
                var popup = $('#dialogEquipment').data("kendoWindow");
                popup.center().open();
            });
    }


    function saveEquipment() {
        var $this = $('#equipmentForm').serialize();

        $.ajax({
            url: '@Url.Action("SetShipEquipment", "Ship")',
            type: "PUSH",
            data: $this,
            dataType: "json"
        })
            .done(function (result) {
                var popup = $('#dialogEquipment').data("kendoWindow");
                popup.close();
                $("#equipmentList").data("kendoGrid").dataSource.read();
            });
    }


    function closeEquipment() {
        var popup = $('#dialogEquipment').data("kendoWindow");
        popup.close();
    }

    function removeEquipment(e) {
        var tittel = "DELETE";
        var nei = "No";
        var content = "<div id='question'>Do you want to remove this equipment from the list</div>";

        $("#confirm").kendoConfirm({
            title: tittel,
            content: content,
            messages: {
                okText: "yes",
                cancel: nei
            }
        }).data("kendoConfirm").result.done(function () {
            $('body').append($('<div id="confirm">'));

            $.ajax({
                url: '@Url.Action("RemoveShipEquipment", "Ship")',
                type: "GET",
                dataType: "json",
                data: { equipmentGuid: equipmentGuid }
            }).done(function (result) {
                $("#equipmentList").data("kendoGrid").dataSource.read();
            });
        });
    }

    function saveGrid() {
        var grid = $("#equipmentModeList").data("kendoGrid");
        grid.saveChanges();
    }

    function saveOperationMode() {
        var $this = $('#shipForm').serialize();

        $.ajax({
            url: '@Url.Action("SetShipOperationMode", "Ship")',
            type: "PUSH",
            data: $this
        })
            .done(function (result) {
                var popup = $('#dialogOperationMode').data("kendoWindow");
                popup.close();
                $("#shipOperationmodeList").data("kendoGrid").dataSource.read();
            });
    }

    function closeOperationMode() {
        var popup = $('#dialogOperationMode').data("kendoWindow");
        popup.close();
    }

</script>

<script>

    function onEquipmentModeDataBound() {
        $("#operationSavingList").data("kendoGrid").dataSource.read();

        var data = this.dataSource.data();
        $(data).each(function () {
            var Effect = this.HoursPrYear * this.MaxEffect * this.PercentLoad / 100;
            var SavingEffect = this.HoursPrYear * this.MaxEffect * this.PercentSaving / 100;
            this.set("Effect", Effect);
            this.set("Saving", Effect - SavingEffect);
        });


    }

    function onOSLBound() {
        var grid = $("#operationSavingList").data("kendoGrid");

        $.ajax({
            url: '@Url.Action("GetShipOperationModeDataList", "Ship")',
            type: "GET",
            data: { shipGuid: shipGuid }
        }).done(function (result) {
            i = 0;
            for (om of result) {
                i++;
                x = $("#operationSavingList thead [data-field=OperationMode" + i + "]");
                x.html(om.Name);
            }
            for (let j = i + 1; j <= 9; j++) {
                grid.hideColumn(j);
            }

        });
    }


</script>

<script>

    $(document).ready(function () {

        var fbOMA = $("#equipmentAdd").getKendoFloatingActionButton();
        var fbOMR = $("#equipmentRemove").getKendoFloatingActionButton();
        var fbOME = $("#equipmentEdit").getKendoFloatingActionButton();

        $("#equipmentAdd").prop("type", "button");
        $("#equipmentRemove").prop("type", "button");
        $("#equipmentEdit").prop("type", "button");

        fbOMAText = "Add equipment";
        fbOMRText = "Remove equipment";
        fbOMEText = "Edit equipment";

        $("#equipmentAdd").hover(function () {
            fbOMA.text(fbOMAText);
            fbOMA.element.find(".k-fab-text")
                .stop().toggle(200);
        }, function () {
            fbOMA.element.find(".k-fab-text")
                .stop()
                .toggle(200)
                .promise().done(function () {
                    fbOMA.text("");
                });
        });

        $("#equipmentRemove").hover(function () {
            fbOMR.text(fbOMRText);
            fbOMR.element.find(".k-fab-text")
                .stop().toggle(200);
        }, function () {
            fbOMR.element.find(".k-fab-text")
                .stop()
                .toggle(200)
                .promise().done(function () {
                    fbOMR.text("");
                });
        });

        $("#equipmentEdit").hover(function () {
            fbOME.text(fbOMEText);
            fbOME.element.find(".k-fab-text")
                .stop().toggle(200);
        }, function () {
            fbOME.element.find(".k-fab-text")
                .stop()
                .toggle(200)
                .promise().done(function () {
                    fbOME.text("");
                });
        });

    });

</script>