#pragma checksum "C:\Visual Stuido 17\KipWeb5\Views\Gravarkiv\_Gravliste.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ba0d07b7e7a1ec6b98ed7cd262c24ebb936a7438"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Gravarkiv__Gravliste), @"mvc.1.0.view", @"/Views/Gravarkiv/_Gravliste.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Visual Stuido 17\KipWeb5\Views\_ViewImports.cshtml"
using KipWeb5;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Visual Stuido 17\KipWeb5\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Visual Stuido 17\KipWeb5\Views\Gravarkiv\_Gravliste.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ba0d07b7e7a1ec6b98ed7cd262c24ebb936a7438", @"/Views/Gravarkiv/_Gravliste.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ec4a0d041100f1c7f5b87fd2c1f80209d75b00ee", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Gravarkiv__Gravliste : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<KipWeb5.Models.Gravarkiv.GravarkivModel>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral(@"
<script id=""liste-gravsted"" type=""text/x-kendo-template"">
    & nbsp;
</script>


<script>


    function onGravDataBound(e) {
        var currRowIndex = -1;
        var grid = $(""#GravListe"").data(""kendoGrid"");
        $(""#GravListe tbody tr"").each(function () {

            var currentRowData = grid.dataItem(this);

            if (currGravGuid != """" && currGravGuid == currentRowData.Gravlagt_GUID) {
                currRowIndex = this.rowIndex;
            }

            //Read field contains data if this email is readed
            if (currentRowData.Link_GravGUID != """") {
                $(this).css(""background-color"", ""IndianRed"");
                $(this).css(""color"", ""Yellow"");
            }
            else if (currentRowData.Laast == 9) {
                $(this).css(""background-color"", ""MistyRose"");
            }
            else if (currentRowData.Laast > 0) {
                $(this).css(""background-color"", ""LightPink"");
            }
            else if (currentRowDa");
            WriteLiteral(@"ta.Aktiv == false) {
                $(this).css(""background-color"", ""LightGray"");
            }
            else if (currentRowData.Kontakt_GUID == null || currentRowData.Kontakt_GUID == """") {
                $(this).css(""background-color"", ""LightCyan"");
            }
        });

        if (currRowIndex >= 0) {
            grid.select(""tr:eq("" + (currRowIndex) + "")"");
            grid.content.scrollTop(grid.select().position().top);
        }

        currGravGuid = """";

        mergeGridRows(""GravListe"", ""Gravnr"");
    }

    function mergeGridRows(gridId, colTitle) {

        $('#' + gridId + '>.k-grid-content>table').each(function (index, item) {

            var dimension_col = 1;
            var rowspan = 1;
            // First, scan first row of headers for the ""Dimensions"" column.
            $('#' + gridId + '>.k-grid-header>.k-grid-header-wrap>table').find('th').each(function () {
                if ($(this).text() == colTitle) {

                    // first_instance ");
            WriteLiteral(@"holds the first instance of identical td
                    var first_instance = null;

                    $(item).find('tr').each(function () {

                        // find the td of the correct column (determined by the colTitle)
                        var dimension_td = $(this).find('td:nth-child(' + dimension_col + ')');

                        if (first_instance == null) {
                            first_instance = dimension_td;
                            rowspan = 1;
                        } else if (dimension_td.text() == first_instance.text()) {
                            // if current td is identical to the previous
                            // then remove the current td
                            dimension_td.remove();
                            rowspan++;
                            // increment the rowspan attribute of the first instance
                            first_instance.attr('rowspan', rowspan);
                        } else {
                        ");
            WriteLiteral(@"    // this cell is different from the last
                            first_instance = dimension_td;
                            rowspan = 1;
                        }
                    });
                    return;
                }
                dimension_col++;
            });

        });
    }

</script>

<div class=""container-fluid g-0"">

    <div class=""col-12 g-0"">

        ");
#nullable restore
#line 103 "C:\Visual Stuido 17\KipWeb5\Views\Gravarkiv\_Gravliste.cshtml"
    Write(Html.Kendo().Grid<KipWeb5.Models.GravarkivItem>()
            .Name("GravListe")
            .Columns(columns =>
            {
                columns.Bound(q => q.Grav_GUID).Visible(false);
                columns.Bound(q => q.Gravlagt_GUID).Visible(false);
                columns.Bound(q => q.Kontakt_GUID).Visible(false);
                columns.Bound(q => q.Rekke_GUID).Visible(false);
                columns.Bound(q => q.Gravsted_GUID).Visible(false);
                columns.Bound(q => q.MappeGuid).Visible(false);
                columns.Bound(q => q.MappeNavn).Visible(false);
                columns.Bound(q => q.GravNr).Visible(false);
                columns.Bound(q => q.Plassering).Visible(false);
                columns.Bound(q => q.HarHistorikk).Visible(false);
                columns.Bound(q => q.Laast).Width(30).HtmlAttributes(new { style = "padding-left: 5px; background-color:#:data.LaasFarge#;" }).ClientHeaderTemplate("<img src='" + Url.Content("~/images/") + "padlock-filled.svg' width='24' height='24' >").ClientTemplate("#if(Laast>0){ # <img src='" + Url.Content("~/images/") + "padlock-filled.svg' width='24' height='24' > #}#");
                columns.Bound(q => q.NotatLevel).Width(30).HtmlAttributes(new { style = "padding-left: 5px; background-color: white;" }).ClientHeaderTemplate("<img src='" + Url.Content("~/images/") + "notes-text-2.svg' width='24' height='24' >").ClientTemplate("#if(NotatLevel==1){ # <img src='" + Url.Content("~/images/") + "note-text.svg' width='24' height='24' > #}else if(NotatLevel==2){# <img src='" + Url.Content("~/images/") + "note-text-2.svg' width='24' height='24' ># }else if(NotatLevel==3){# <img src='" + Url.Content("~/images/") + "notes-text-2.svg' width='24' height='24' ># } #");
                columns.Bound(q => q.Historiske).Width(30).HtmlAttributes(new { style = "padding-left: 5px; background-color: white;" }).ClientHeaderTemplate("<img src='" + Url.Content("~/images/") + "calendar-2.svg' width='24' height='24' >").ClientTemplate("#if(Historiske==true){ # <img src='" + Url.Content("~/images/") + "calendar-2.svg' width='24' height='24' ># }#");
                columns.Bound(q => q.LegatStatus).Width(30).HtmlAttributes(new { style = "padding-left: 5px; background-color: white;" }).ClientHeaderTemplate("<img src='" + Url.Content("~/images/") + "blomst.svg' width='24' height='24' >").ClientTemplate("#if(LegatStatus==1 || LegatStatus==3){ # <img src='" + Url.Content("~/images/") + "blomst.svg' width='24' height='24' > #}else if(LegatStatus==8){# <img src='" + Url.Content("~/images/") + "blomst–disable.svg' width='24' height='24' ># }else if(LegatStatus==9){# <img src='" + Url.Content("~/images/") + "blomst-cancel.svg' width='24' height='24' ># }#");
                columns.Bound(q => q.GravstedFarge).Width(7).ClientTemplateId("liste-gravsted").HtmlAttributes(new { style = "background-color:#:data.GravstedFarge#" }).Title("&nbsp;");
                columns.Bound(q => q.GravNrId).Width(60).Visible(true).HtmlAttributes(new { style = "padding-left: 5px; background-color: white; color: black;" }).Title(Localizer["Gravnr"].Value);
                columns.Bound(q => q.GravlagtPosIkon).Width(30).Title("&nbsp").HtmlAttributes(new { style = "padding-left: 5px; background-color: white;" }).ClientTemplate("#if(GravlagtPos > 0){ # <img src='" + Url.Content("~/images/") + "#:data.GravlagtPosIkon#.svg' width='24' height='24' > #} #");
                columns.Bound(q => q.Kode).Width(100).Visible(true).Title(Localizer["Kode"].Value);
                columns.Bound(q => q.LopeNr).Width(80).Visible(true).Title(Localizer["Løpenr"].Value).ClientTemplate("#if(LopeNr>0){ # #:data.LopeNr# # }#");
                columns.Bound(q => q.FulltNavn).Visible(true).Title(Localizer["Navn"].Value);
                columns.Bound(q => q.PostNr).Width(60).Visible(true).Title(Localizer["Postnr"].Value);
                columns.Bound(q => q.FDato).Format("{0: dd.MM.yyyy}").Width(100).Visible(true).Title(Localizer["Født"].Value);
                columns.Bound(q => q.DDato).Format("{0: dd.MM.yyyy}").Width(100).Visible(true).Title(Localizer["Død"].Value);
                columns.Bound(q => q.GDato).Format("{0: dd.MM.yyyy}").Width(100).Visible(true).Title(Localizer["Gravlagt"].Value);
                columns.Bound(q => q.ForfallAar).Width(80).Visible(true).Title(Localizer["Forfall år"].Value).HtmlAttributes(new { style = "background-color:#:data.TilbudFarge#;" }).ClientTemplate("#if(ForfallAar>0){ # #:data.ForfallAar# # }#");
                columns.Bound(q => q.Fredningstid).Width(100).Visible(true).Title(Localizer["Fredningstid"].Value).ClientTemplate("#if(Fredningstid>0){ # #:data.Fredningstid# # }#");
            })
            .Scrollable()
            .HtmlAttributes(new { style = "height: calc(70vh);" })
            .Selectable(s => s
                .Mode(GridSelectionMode.Single)
                .Type(GridSelectionType.Row))
            .Events(events => events
                .DataBound("onGravDataBound"))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("getGravarkivListe", "Gravarkiv").Data("filterGravRekke"))
                )
            );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    </div>\r\n</div>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<KipWeb5.Models.Gravarkiv.GravarkivModel> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
