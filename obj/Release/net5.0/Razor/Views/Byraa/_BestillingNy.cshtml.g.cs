#pragma checksum "C:\Visual Stuido 17\KipWeb5\Views\Byraa\_BestillingNy.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bfaf4cf20d6b6557debf33c356f6ea6042ebdf21"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Byraa__BestillingNy), @"mvc.1.0.view", @"/Views/Byraa/_BestillingNy.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Visual Stuido 17\KipWeb5\Views\_ViewImports.cshtml"
using KipWeb5;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Visual Stuido 17\KipWeb5\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Visual Stuido 17\KipWeb5\Views\Byraa\_BestillingNy.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bfaf4cf20d6b6557debf33c356f6ea6042ebdf21", @"/Views/Byraa/_BestillingNy.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ec4a0d041100f1c7f5b87fd2c1f80209d75b00ee", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Byraa__BestillingNy : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<KipWeb5.Models.Bestilling.BestillingModel>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"
<script>
    (function ($, kendo) {
        $.extend(true, kendo.ui.validator, {
            rules: {
                validFellesraad: function (input) {
                    if (input.is(""[name='BestillingNy\\.Fellesraad']"")) {
                        input.attr(""data-validFellesraad-msg"", ""Du må velge gravferdsmyndighet"");

                        if (!input.val()) {
                            return false;
                        }
                    }

                    return true;
                },
                validFornavn: function (input) {
                    if (input.is(""[name='BestillingNy\\.AvlFornavn']"")) {
                        input.attr(""data-validFornavn-msg"", ""Du må fylle inn navnet på personen"");

                        if (!input.val()) {
                            return false;
                        }
                    }

                    return true;
                },
                validDod: function (input) {
                    if (in");
            WriteLiteral(@"put.is(""[name='BestillingNy\\.AvlDod']"")) {
                        input.attr(""data-validDod-msg"", ""Du må angi dødsdato"");

                        if (!input.val()) {
                            return false;
                        }
                    }

                    return true;
                }
            }
        });
    })(jQuery, kendo);
</script>

<div class=""panel with-nav-tabs panel-default"" id=""dataenter"" style=""min-height: 530px;"">

    ");
#nullable restore
#line 50 "C:\Visual Stuido 17\KipWeb5\Views\Byraa\_BestillingNy.cshtml"
Write(Html.Kendo().Wizard()
            .Name("wizard")
            .ValidateForms(v => v.ValidateOnPrevious(false))
            .Events(ev => ev.Done("LagreNyBestilling"))
            .Tag("form")
            .HtmlAttributes(new { autocomplete = "off" })
            .Steps(s =>
            {
                
                s.Add<KipWeb5.Models.Bestilling.BestillingModel>()
                    .Title(Localizer["Om Begravelsen"].Value)
                    .Form(f => f
                    .Items(items => {
                        items.Add()
                            .Id("idFellesraad")
                            .Field(p => p.BestillingNy.Fellesraad)                            
                            .Label(l => l.Text(Localizer["Gravferdsmyndigheten"].Value))
                            .Hint("Velg fra listen gravferdsmyndigheten i kommunen du skal sende denne bestillingen til")
                            .InputHtmlAttributes(new { style = "width: 400px;" })
                            .Editor(e => {
                                e.DropDownList()
                                .DataTextField("Navn")
                                .DataValueField("Fellesraad")
                                .DataSource(source => source
                                    .Ajax()
                                    .Read(read => read.Action("GetByraaFellesraadListe", "Byraa"))
                                    );
                                });
                            })
                        )
                    .Buttons(b =>
                    {
                        b.Next().Text(Localizer["Neste"].Value);
                    });

                s.Add<KipWeb5.Models.Bestilling.BestillingModel>()
                    .Title(Localizer["Avdøde"].Value)
                    .Form(f => f
                        .Validatable(v =>
                        {
                            v.ValidateOnBlur(true);
                            v.ValidationSummary(vs => vs.Enable(false));
                        })
                        .FormData(Model)
                        .Layout("grid")
                        .Grid(g => g.Cols(2).Gutter(20))
                        .Items(items =>
                        {
                            items.AddGroup()
                            .Label(Localizer["Navn"].Value)
                            .Layout("grid")
                            .Grid(g => g.Cols(6).Gutter(10))
                            .Items(items =>
                            {
                                items.Add()
                                    .ColSpan(3)
                                    .Id("wAvlPersonNr")
                                    .Field(p => p.BestillingNy.AvlPersNr)
                                    .Label(l => l.Text(Localizer["Person Id"].Value))
                                    .InputHtmlAttributes(new { style = "width: 150px;" });
                                items.Add()
                                    .ColSpan(3)
                                    .Id("wAvlDod")
                                    .Field(p => p.BestillingNy.AvlDod)
                                    .Label(l => l.Text(Localizer["Dødsdato"].Value))
                                    .InputHtmlAttributes(new { style = "width: 120px;", @class = "nodvendigFelt" })
                                    .Editor(e => e.DatePicker());
                                items.Add()
                                    .ColSpan(6)
                                    .Id("wAvlFornavn")
                                    .Field(p => p.BestillingNy.AvlFornavn)
                                    .Label(l => l.Text(Localizer["Fornavn"].Value))
                                    .InputHtmlAttributes(new { @class = "nodvendigFelt" });
                                items.Add()
                                    .ColSpan(2)
                                    .Field(p => p.BestillingNy.AvlMellomnavn)
                                    .Label(l => l.Text(Localizer["Mellomnavn"].Value));
                                items.Add()
                                    .ColSpan(4)
                                    .Id("wAvlEtternavn")
                                    .Field(p => p.BestillingNy.AvlEtternavn)
                                    .Label(l => l.Text(Localizer["Etternavn"].Value))
                                    .InputHtmlAttributes(new { @class = "nodvendigFelt" });
                                items.Add().ColSpan(0).Id("wAvlKontaktGuid").Field(p => p.BestillingNy.AvlKontaktGuid).Label(l => l.Text(Localizer["Person Guid"].Value));
                            }
                        );

                        items.AddGroup()
                        .Label(Localizer["Adresse"].Value)
                        .Layout("grid")
                        .Grid(g => g.Cols(6).Gutter(10))
                        .Items(items =>
                        {

                            items.Add().ColSpan(6).Id("wAvlAdresse").Field(p => p.BestillingNy.AvlAdresse).Label(l => l.Text("Adresse"));
                            items.Add().ColSpan(2).Id("wAvlPostNr").Field(p => p.BestillingNy.AvlPostNr).Label(l => l.Text(Localizer["Postnummer"].Value));
                            items.Add().ColSpan(4).Id("wAvlPoststed").Field(p => p.BestillingNy.Kommentar).Label(l => l.Text(Localizer["Sted"].Value));
                        }
                        );
                    })

                    )
                    .Buttons(b =>
                    {
                        b.Custom().Text("Hent fra folkeregister").Click("function() {finnMedlemm(1);}");
                        b.Next().Text(Localizer["Neste"].Value);
                        b.Previous().Text(Localizer["Forrige"].Value);
                    });


                s.Add<KipWeb5.Models.Bestilling.BestillingModel>
                    ()
                    .Title(Localizer["Gravferdensansvarling"].Value)
                    .Form(f => f
                    .Layout("grid")
                    .Grid(g => g.Cols(2).Gutter(20))
                    .Items(items =>
                    {
                        items.AddGroup()
                            .Label(Localizer["Navn"].Value)
                            .Layout("grid")
                            .Grid(g => g.Cols(6).Gutter(10))
                            .Items(items =>
                            {
                                items.Add().ColSpan(6).Id("F1PersonNr").Field(p => p.BestillingNy.AnsGFerdPersonNr).Label(l => l.Text(Localizer["Person Id"].Value)).InputHtmlAttributes(new { style = "width: 150px;" });
                                items.Add().ColSpan(6).Id("F1Fornavn").Field(p => p.BestillingNy.AnsFornavn).Label(l => l.Text(Localizer["Fornavn"].Value));
                                items.Add().ColSpan(2).Id("F1Mellomnavn").Field(p => p.BestillingNy.AnsMellomnavn).Label(l => l.Text(Localizer["Mellomnavn"].Value));
                                items.Add().ColSpan(4).Id("F1Etternavn").Field(p => p.BestillingNy.AnsSlektsnavn).Label(l => l.Text(Localizer["Etternavn"].Value));
                                items.Add().ColSpan(6).Id("F1KontaktGuid").Field(p => p.BestillingNy.AnsGFerdKontaktGuid).Label(l => l.Text(Localizer["Person Id"].Value)).InputHtmlAttributes(new { style = "width: 150px;" });
                            }
                            );

                        items.AddGroup()
                        .Label(Localizer["Adresse"].Value)
                        .Layout("grid")
                        .Grid(g => g.Cols(6).Gutter(10))
                        .Items(items =>
                        {
                            items.Add().ColSpan(6).Id("F1Adresse").Field(p => p.BestillingNy.AnsAdresse).Label(l => l.Text(Localizer["Adresse"].Value));
                            items.Add().ColSpan(2).Id("F1Postnr").Field(p => p.BestillingNy.AnsPostnr).Label(l => l.Text(Localizer["Postnummer"].Value));
                            items.Add().ColSpan(4).Id("F1Poststed").Field(p => p.BestillingNy.AnsSted).Label(l => l.Text(Localizer["Sted"].Value));
                            items.Add().ColSpan(3).Id("F1Epost").Field(p => p.BestillingNy.AnsEpost).Label(l => l.Text(Localizer["E-post"].Value));
                            items.Add().ColSpan(3).Id("F1Mobil").Field(p => p.BestillingNy.AnsMobil).Label(l => l.Text(Localizer["Mobil"].Value));

                        });
                    })
                    )
                    .Buttons(b =>
                    {
                b.Custom().Text("Hent fra folkeregister").Click("function() {finnMedlemm(2);}");
                        b.Previous().Text(Localizer["Forrige"].Value);
                        b.Done().Text(Localizer["Opprett"].Value);

                    });



            })
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n</div>");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<KipWeb5.Models.Bestilling.BestillingModel> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
