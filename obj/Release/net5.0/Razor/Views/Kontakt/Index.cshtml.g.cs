#pragma checksum "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "28effa6d29d3a2877635a451839583006a83be3f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Kontakt_Index), @"mvc.1.0.view", @"/Views/Kontakt/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Visual Stuido 17\KipWeb5\Views\_ViewImports.cshtml"
using KipWeb5;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Visual Stuido 17\KipWeb5\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"28effa6d29d3a2877635a451839583006a83be3f", @"/Views/Kontakt/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ec4a0d041100f1c7f5b87fd2c1f80209d75b00ee", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Kontakt_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<KipWeb5.Models.Kontakt.KontaktModel>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/mail-front-filled-ok-filled.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/invoice.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Ny.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Lagre.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Slette.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Laser.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/button-remove.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/find.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/find-cancel-filled.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/filter.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_KontaktFull", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("Lagre"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("KontaktForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onsubmit", new global::Microsoft.AspNetCore.Html.HtmlString("return false;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("mt-3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 6 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
  
    ViewData["Title"] = Localizer["Kontakter"];
    ViewData["LogOnOk"] = "2";
    ViewData["Menu"] = "GP";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<script type=\"text/x-kendo-tmpl\" id=\"template2\">\r\n    <div class=\"folder\">\r\n        <img src=\"");
#nullable restore
#line 15 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Content("~/images/#: icon#.svg"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""" />
        <p>#:fileTittel#</p>
    </div>
</script>


<script src=""https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.2.2/pdf.js""></script>


<style>

    .panel-body {
        padding-bottom: 0px;
    }

    #kontaktListe {
        height: 100%;
    }

    #ReskontroListe {
        height: 100%;
    }

    div.k-listbox {
        height: 530px;
        }

    #heading .btn img {
        width: 48px;
        height: 48px;
        margin-bottom: 20px;
        float: left;
        margin-right: 5px;
        }

    #filterMeny .btn img {
        width: 16px;
        height: 16px;
        float: left;
        margin-right: 5px;
        margin-bottom: 0px;
        }

    .disabled {
        opacity: 0.5;
        pointer-events: none;
    }


    .k-fab-text {
        display: none;
    }

    .k-checkbox-label {
        margin-right: 15px;
    }

    .btn img {
        width: 24px;
        height: 24px;
    }

    .btn {
        padding: 5px;
        ");
            WriteLiteral(@"background-color: aliceblue;
        border-color: lightgray;
    }


    .table > tbody > tr > td {
        padding-left: 1px;
        padding-top: 3px;
        margin: 6px 3px 3px 0px;
        border: 0px;
        vertical-align: text-bottom;
    }

    .ellipsis-overflow {
        text-overflow: ellipsis;
        white-space:nowrap;
    }


    .k-checkbox-label {
        line-height: 28px;
        margin-left: 10px;
    }

    #soekeFilter .command img {
        width: 32px;
        height: 32px;
    }

    #soekeFilter .command {
        height: 50px;
        font-size: 14px;
        font-weight: normal;
    }

    #dokListe .k-listview {
        background-color: transparent;
        border-color: transparent;
    }

    .folder {
        float: left;
        position: relative;
        margin-right: 10px;
    }

    .folder img {
        width: 32px;
        height: 32px;
        display: block;
        margin-left: auto;
        margin-right: auto;
 ");
            WriteLiteral(@"       margin-top: 2px;
    }

    .folder p {
        padding: 3px 5px 0px 5px;
        font-size: 10px;
        font-weight: normal;
        color: #999;
        text-align: center;
        margin-bottom: 1px;
    }

    .folder:checked {
        font-weight: bold;
        color: red;
    }

    .folder:hover p {
        font-weight: bold;
        color: black;
    }

    div.k-window{
        border: 1px solid lightgray;
    }
</style>


");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "28effa6d29d3a2877635a451839583006a83be3f12495", async() => {
                WriteLiteral("\r\n    <div id=\"confirm\"></div>\r\n\r\n    <div class=\"container-fluid padding-0\">\r\n\r\n        <div class=\"form-group row\" id=\"heading\">\r\n\r\n            <div class=\"col-2 unselectable\">\r\n                <h3>");
#nullable restore
#line 167 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
               Write(Localizer["Kontakt"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</h3>
            </div>

            <div class=""col-8"">
                <div style=""display: flex; flex-direction: row;"">

                    <button disabled type=""button"" id=""idVaskAdresse"" class=""command"" onclick=""vaskAdresse()"" style=""width: 200px; margin-right: 7px;"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "28effa6d29d3a2877635a451839583006a83be3f13516", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
#nullable restore
#line 175 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                   Write(Localizer["Vask adresse"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                        <p>Vask adressen og oppdater skjermbilde</p>
                    </button>

                    <button disabled type=""button"" id=""idFaktura"" class=""command"" onclick=""showNyFaktura()"" style=""width: 200px; margin-right: 7px;"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "28effa6d29d3a2877635a451839583006a83be3f15144", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
#nullable restore
#line 181 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                   Write(Localizer["Faktura"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                        <p>Fakturer valgte kontakt</p>
                    </button>

                </div>
            </div>

            <div class=""col-2"">
                <div id=""infoLagring""></div>
            </div>

        </div>

        <div class=""row"" style=""border: 1px solid lightgrey; padding: 10px; margin: 5px;"">

            <div class=""col-4"">
                <div class=""row"">

                    <div class=""col-6"" style=""display: flex; flex-direction: row;"">
                        
                        <div>
                            <button type=""button"" name=""nyMappe"" onclick=""nyKontakt()"" class=""commandline"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "28effa6d29d3a2877635a451839583006a83be3f17204", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <figcaption>Ny</figcaption>
                            </button>
                        </div>

                        <div>
                            <button type=""button"" class=""commandline"" onclick=""lagreKontakt()"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "28effa6d29d3a2877635a451839583006a83be3f18590", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <figcaption>Lagre</figcaption>
                            </button>
                        </div>

                        <div>
                            <button type=""button"" style=""display: none"" name=""mappeEndre"" id=""mappeEndre"" class=""commandline"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "28effa6d29d3a2877635a451839583006a83be3f20014", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                Slette
                            </button>
                        </div>

                        <div>
                            <button type=""button"" name=""utskrift"" id=""utskrift"" onclick=""showDialogRapporter()"" class=""commandline"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "28effa6d29d3a2877635a451839583006a83be3f21420", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                Utskrift
                            </button>
                        </div>

                    </div>

                    <div class=""col-6"">
                        <div class=""row"">
                            <div class=""col-12"" style=""margin-top: 10px;"">
                                Vis søkefelt

                                ");
#nullable restore
#line 236 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                            Write(Html.Kendo().Switch()
                                    .Name("switch")
                                    .HtmlAttributes(new {style = "margin-left: 10px;"})
                                    .Messages(c => c.Checked("Ja").Unchecked("Nei"))
                                    .Events(e => e.Change("filterfelt"))
                                    );

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                            </div>
                        </div>

                        <div class=""row align-items-center"" style=""margin-top: 10px;"">
                            <div class=""col-12"" style=""display: flex; flex-direction: row;"">
                                <input id=""SNavn"" Class=""form-control sokeFelt"" oninput=""visKontakt()"" placeholder=""søk etter ..."" style=""width: calc(100% - 30px)"">
                                <button type=""button"" class=""commandInline"" onclick=""clearKunde()"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "28effa6d29d3a2877635a451839583006a83be3f24052", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                </button>
                            </div>
                                    
                        </div>

                    </div>

                </div>

                <div id=""soekeFilter"" style=""display: none;"">
                    <div class=""panel"" style=""padding: 10px; margin-top: 10px; background-color: transparent;"">
                        <h6>Filter</h6>

                        <div class=""row"">
                            <div class=""col-9"">

                                <div class=""row"">
                                    <label class=""col-2 col-form-label""></label>
                                    <div class=""col-10"">
                                    ");
#nullable restore
#line 269 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                                Write(Html.Kendo().RadioGroup()
                                        .Name("rgKontaktype")
                                        .Layout(RadioGroupLayout.Horizontal)
                                        .Items(i =>
                                            {
                                            i.Add().Label("Festere").Value("0");
                                            i.Add().Label("Personer").Value("1");
                                            i.Add().Label("Firma").Value("2");
                                            })
                                        .Value("1")
                                        );

#line default
#line hidden
#nullable disable
                WriteLiteral(@"    
                                    </div>                                    
                                </div>

                            </div>

                            <div class=""col-3"">
                                <button type=""button"" class=""commandFunk"" onclick=""finnKontakt()"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "28effa6d29d3a2877635a451839583006a83be3f27131", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    Start søk\r\n                                </button>\r\n\r\n                                <button type=\"button\" class=\"commandFunk\" onclick=\"clearStell()\">\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "28effa6d29d3a2877635a451839583006a83be3f28459", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    Fjern søk
                                </button>
                            </div>

                       </div>
                    </div>
                </div>

                <div class=""form-group"" style=""margin-top: 10px;"" id=""idKontaktListe"">
                    <div class=""row"">
                        <div class=""d-flex"">
                            <h4 class=""me-auto align-self-end unselectable"">");
#nullable restore
#line 304 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                                                                       Write(Localizer["Liste over kontakter"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</h4>

                            <div class=""align-items-end"">
                                <div class=""dropdown"">
                                    <button class=""btn dropdown-toggle"" type=""button"" id=""dropdownMenuButton1"" data-bs-toggle=""dropdown"" aria-expanded=""false"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "28effa6d29d3a2877635a451839583006a83be3f30645", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
#nullable restore
#line 310 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                                   Write(Localizer["Vis i listen"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                    </button>\r\n                                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                                        <li><button class=\"dropdown-item\" type=\"button\"");
                BeginWriteAttribute("onclick", " onclick=\"", 10379, "\"", 10389, 0);
                EndWriteAttribute();
                WriteLiteral(">");
#nullable restore
#line 313 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                                                                                              Write(Localizer["Alle"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("</button></li>\r\n                                        <li><button class=\"dropdown-item\" type=\"button\"");
                BeginWriteAttribute("onclick", " onclick=\"", 10512, "\"", 10522, 0);
                EndWriteAttribute();
                WriteLiteral(">");
#nullable restore
#line 314 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                                                                                              Write(Localizer["Doble kontakter"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("</button></li>\r\n                                        <li><button class=\"dropdown-item\" type=\"button\"");
                BeginWriteAttribute("onclick", " onclick=\"", 10656, "\"", 10666, 0);
                EndWriteAttribute();
                WriteLiteral(">");
#nullable restore
#line 315 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                                                                                              Write(Localizer["Doble personnummer"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("</button></li>\r\n                                        <li><button class=\"dropdown-item\" type=\"button\"");
                BeginWriteAttribute("onclick", " onclick=\"", 10803, "\"", 10813, 0);
                EndWriteAttribute();
                WriteLiteral(">");
#nullable restore
#line 316 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                                                                                              Write(Localizer["Uten postnummer"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</button></li>
                                    </ul>
                                </div>
                            </div>

 
                        </div>
                    </div>
                    
                    

                    ");
#nullable restore
#line 327 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                Write(Html.Kendo().Grid<KipWeb5.Models.KontaktItem>()
                        .Name("kontaktListe")
                        .Columns(columns =>
                        {
                            columns.Bound(q => q.KontaktGuid).Visible(false);
                            columns.Bound(q => q.PersonNr).Width(150).Title(Localizer["Personnr/Orgnr."].Value);
                            columns.Bound(q => q.FulltNavn).Title(Localizer["Navn"].Value);
                            columns.Bound(q => q.PostNr).Width(70).Title(Localizer["Postnr"].Value);
                        })
                        .Scrollable()
                        .HtmlAttributes(new { style = "height: calc(100vh - 360px);"})
                        .Events(e => e.Change("onKontaktChange"))
                        .Selectable(s => s
                            .Mode(GridSelectionMode.Single)
                            .Type(GridSelectionType.Row))
                        .DataSource(dataSource => dataSource
                            .Ajax()
                            .Read(read => read.Action("GetKontaktListe", "Kontakt").Data("filterKontaktliste"))
                            )
                        );

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"col-md-8\">\r\n\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "28effa6d29d3a2877635a451839583006a83be3f36239", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_10.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_14.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n<script id=\"successTemplate\" type=\"text/x-kendo-template\">\r\n    <div class=\"upload-success\">\r\n        <img src=\"");
#nullable restore
#line 366 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Content("~/images/True.svg"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\" style=\"float:left; height:48px; width:48px; margin-right: 16px;\"/>\r\n        <p>#= message #</p>\r\n    </div>\r\n</script>\r\n\r\n<script id=\"infoTemplate\" type=\"text/x-kendo-template\">\r\n    <div class=\"new-mail\">\r\n        <img src=\"");
#nullable restore
#line 373 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Content("~/images/button-info.svg"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\" style=\"float:left; height:48px; width:48px; margin-right: 16px;\"/>\r\n        <p>#= message #</p>\r\n    </div>\r\n</script>\r\n\r\n<script id=\"errorTemplate\" type=\"text/x-kendo-template\">\r\n    <div class=\"wrong-pass\">\r\n        <img src=\"");
#nullable restore
#line 380 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Content("~/images/warning-sign-filled.svg"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\" style=\"float:left; height:48px; width:48px; margin-right: 16px;\"/>\r\n        <p>#= message #</p>\r\n    </div>\r\n</script>\r\n\r\n\r\n\r\n");
#nullable restore
#line 387 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Notification()
    .Name("notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Stacking(NotificationStackingSettings.Down)
    .AutoHideAfter(5000)
    .Templates(t =>
    {
        t.Add().Type("success").ClientTemplateID("successTemplate");
        t.Add().Type("error").ClientTemplateID("errorTemplate");
        t.Add().Type("info").ClientTemplateID("infoTemplate");
    })
);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n    <div id=\"dialogFakturaWindow\">\r\n        ");
#nullable restore
#line 401 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
    Write(Html.Kendo().Window()
            .Name("dialogFaktura")
            .Title("Faktura")
            .HtmlAttributes("style= border:1px;")
            .Visible(false)
            .Width(1400)
            .Modal(true)
            .Draggable()
            .Events(e => e.Close("friskoppFakturaliste"))
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    </div>\r\n\r\n<div id=\"dialogSkrivbrevWindow\">\r\n    ");
#nullable restore
#line 414 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogSkrivbrev")
        .Title("Writer")
        .Visible(false)
        .Height(850)
        .Width(1300)
        .Modal(false)
        .Draggable()
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogWriterWindow\">\r\n    ");
#nullable restore
#line 426 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogWriter")
        .Title(Localizer["Text Writer"].Value)
        .HtmlAttributes(new {style = "border:1px; padding: 0px;"})
        .Visible(false)
        .Height(850)
        .Width(1300)
        .Modal(true)
        .Draggable(true)
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogVisPDFWindow\">\r\n    ");
#nullable restore
#line 439 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogVisPDF")
        .Title(Localizer["Dokument"].Value)
        .HtmlAttributes("style= border:1px;")
        .Visible(false)
        .Height(1000)
        .Width(1600)
        .Modal(true)
        .Draggable()
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogLastOppFilerWindows\">\r\n    ");
#nullable restore
#line 452 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogLastOppFiler")
        .Title("Last opp filer")
        .HtmlAttributes("style= border:1px;")
        .Visible(false)
        .Height(500)
        .Width(1000)
        .Modal(true)
        .Draggable()
        .Actions(actions => actions
            .Close()
        )
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogMailWindow\">\r\n    ");
#nullable restore
#line 468 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogMail")
        .Title("Arkiver epost")
        .HtmlAttributes("style= border:1px;")
        .Visible(false)
        .Height(800)
        .Width(1400)
        .Modal(true)
        .Draggable()
        .Actions(actions => actions
            .Close()
        )
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogOkonomiWindow\">\r\n    ");
#nullable restore
#line 484 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogOkonomi")
        .Title("Økonomi")
        .HtmlAttributes("style= border:1px;")
        .Visible(false)
        .Height(640)
        .Width(1400)
        .Modal(true)
        .Draggable()
        .Actions(actions => actions
            .Close()
        )
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n\r\n<div id=\"dialogFinnPersonWindow\">\r\n    ");
#nullable restore
#line 501 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogFinnPerson")
        .Title("Personsøk")
        .Visible(false)
        .Height(700)
        .Width(1200)
        .Modal(true)
        .Draggable()
        .Events(events => events
            .Close("closeFinnPerson"))
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"DialogKontaktWindow\">\r\n    ");
#nullable restore
#line 515 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("DialogKontakt")
        .Title(Localizer["Kontaktinformasjon"].Value)
        .Visible(false)
        .Height(743)
        .Width(600)
        .Modal(true)
        .Draggable()
        //.Events(e => e .Activate("Avtale_Open"))
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogRapporterWindow\">\r\n    ");
#nullable restore
#line 528 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogRapporter")
        .Title("Utskrift")
        .Visible(false)
        .Height(740)
        .Width(1200)
        .Modal(true)
        .Draggable()
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n    ");
#nullable restore
#line 539 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Window()
            .Name("dialogFakturaLinje")
            .Title("Fakturalinje")
            .HtmlAttributes("style= border:1px;")
            .Visible(false)
            .Height(500)
            .Width(1400)
            .Modal(true)
            .Draggable()
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n    ");
#nullable restore
#line 550 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Dialog()
            .Name("dialogTjenesteregister")
            .Title("Tjenester")
            .Content(
                Html.Kendo().Grid<KipWeb5.Models.TjenesteItem>()
                .Name("grdTjenester")
                .Columns(columns =>
                {
                    columns.Select().Width(65);
                    columns.Bound(e => e.TjenesteNr).Width(100);
                    columns.Bound(e => e.Tittel).Width(150);
                    columns.Bound(e => e.Tekst);
                    columns.Bound(e => e.PrisPrUMVA).Width(100).Format("{0:n2}").Title("Pris u/mva").HtmlAttributes(new { style = "text-align: right;" }); ;
                })
                .Height(450)
                .Scrollable()
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Read(read => read
                    .Action("GetTjenesteListe", "Grunnregister").Data("AlleAktive")
                    )
                )
                //.Events(ev => ev.DataBound("treeViewDataBound").Check("treeViewCheck"))
                .ToHtmlString()
                )
            .Width(1000)
            .Height(600)
            .Modal(false)
            .Visible(false)
            .Actions(actions =>
            {
                actions.Add().Text("Avbryt");
                actions.Add().Text("Velg").Action("onTjenesteActionOK").Primary(true);
            })
            .Events(ev => ev.Close("onClose").Open("onOpen"))
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n\r\n<script id=\"liste-template\" type=\"text/x-kendo-template\">\r\n    <span class=\"k-state-default\" style=\"font-weight: #:data.BoldTekst#; color:#:data.BoldTekstColor#;\">#: data.Navn#</span>\r\n</script>\r\n\r\n\r\n    ");
#nullable restore
#line 593 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("DialogHjelp")
        .Title(Localizer["Hjelp"].Value)
        .Visible(false)
        .Height(800)
        .Width(1200)
        .Modal(true)
        .Draggable()
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<script id=\"hjelp\">\r\n\r\n    function showHelp() {\r\n       $.ajax({\r\n            url: \'");
#nullable restore
#line 607 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Action("DialogHjelp", "Hjelp"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: 'GET'
            }).done(function (result) {
                $('#DialogHjelp').html(result);
                var popup = $('#DialogHjelp').data(""kendoWindow"");
                popup.center().open();
            });
        }

    function hjelpFilter() {
        return {Modul: 400, Skjerm: ""Kontakt""}
        }

</script>

<script id=""Sakspart"">
          
    function addSakspart() {
        var listBoxF = $(""#kontaktGrid"").data(""kendoGrid"");
        var selectedF = listBoxF.select();
        var selItemF = listBoxF.dataItem(selectedF);
        
        xMG = document.getElementById(""EngrafoDokument_mappeGuid"");

        if (selectedF.length > 0) {
            kontaktGuid = selItemF.KontaktGuid;

            $.ajax({
                url: '");
#nullable restore
#line 635 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                 Write(Url.Action("AddFolderPart", "Engrafo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: {mappeGuid: xMG.value, kontaktGuid: selItemF.KontaktGuid, rolle: rolle},
                type: ""POST""
                }).done(function (result) {
                    var grd = $(""#lvParter"").data(""kendoGrid"");
                    grd.dataSource.read();
                });
            };
        }


    function nySakspart(e) {
        rolle = e;

        $.ajax({
            url: ""/Funksjoner/DialogFinnPerson"",
            data: {SearchFrom: 0},
            method: 'GET',
            success: function (result) {
                $('#dialogNySakspart').html(result);
                var popup = $('#dialogNySakspart').data(""kendoWindow"");
                popup.center().open();
            }
        });
    }

</script>

<script id=""faktura"">

    function onFaktLinjeChange(e) {
        xS = document.getElementById(""slettFakturalinje"");
        xS.disabled = false;

        xE = document.getElementById(""endreFakturalinje"");
        xE.disabled = false;
 ");
            WriteLiteral(@"       }

    function onFakturalinjeBound(e) {
      var prisUMVA = 0;
      var prisMMVA = 0;
      var prisMVA = 0;

      var grid = $(""#Fakturalinjer"").data(""kendoGrid"");
      var xPmMVA = $(""#Faktura_PrisMMVA"").data(""kendoNumericTextBox"");
      var xPuMVA = $(""#Faktura_PrisUMVA"").data(""kendoNumericTextBox"");
      var xMVA = $(""#Faktura_MVA"").data(""kendoNumericTextBox"");

      $(""#Fakturalinjer tbody tr"").each(function () {
            var currentRowData = grid.dataItem(this);
            prisUMVA += currentRowData.PrisUMVA;
            prisMMVA += currentRowData.PrisMMVA;
            prisMVA += currentRowData.MVA;
        });

        xPmMVA.value(prisMMVA);
        xPuMVA.value(prisUMVA);
        xMVA.value(prisMVA);
    }

    function filterFaktura() {
        var faktNr = 0;
        var kontoNr = 0;
        
        xFaktNr = document.getElementById(""Faktura_FaktNr"");
        faktNr = xFaktNr.value;

        xKontoNr = document.getElementById(""Faktura_KontoNr"");
 ");
            WriteLiteral(@"       kontoNr = xKontoNr.value;

        if(kontoNr == null) {
            kontoNr = """";
        }

        if (faktNr == """") {
            faktNr = 0;
        }

        return { faktNr: faktNr, kontoNr: kontoNr}
    }

    function AlleAktive(e) {
        return { filter: ""Aktiv<>0"" }
        }

    function showDialogFakturalinje() {
        var grdTjenester = $(""#grdTjenester"").data(""kendoGrid"");
        grdTjenester.dataSource.read();
        $('#dialogTjenesteregister').data(""kendoDialog"").open();
    }

    function onTjenesteActionOK(e) {
        var faktNr = 0;
        var kontoNr = 0;
        
        xFaktNr = document.getElementById(""Faktura_FaktNr"");
        faktNr = xFaktNr.value;

        xKontoNr = document.getElementById(""Faktura_KontoNr"");
        kontoNr = xKontoNr.value;

        var grid = $(""#grdTjenester"").data(""kendoGrid"");
        var selected = [];

        //get all selected rows (those which have the checkbox checked)
        grid.select().each");
            WriteLiteral(@"(function () {
            selected.push(grid.dataItem(this));
        });

        var nodes = """";
        for (var i = 0; i < selected.length; i++) {
            nodes += selected[i].TjenesteNr + "";"";
        }

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 751 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Action("LagreFakturaLinjeListe", "Faktura"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { faktNr: faktNr, kontoNr: kontoNr, tjenester: nodes },
            dataType: 'json'
        }).done(function (result) {
            grdFaktLinje = $(""#Fakturalinjer"").data(""kendoGrid"");
            grdFaktLinje.dataSource.read();
        });

    }

    function showEndreFakturalinje() {
        var grdFaktLinje = $(""#Fakturalinjer"").data(""kendoGrid"");
        var selectedF = grdFaktLinje.select();
        var selItemF = grdFaktLinje.dataItem(selectedF);
        var FaktLinjeGuid = """";

        if (selectedF.length > 0) {
            FaktLinjeGuid = selItemF.FakturaLinje_GUID;

            $.ajax({
                url: ""/Faktura/DialogFakturaLinje"",
                method: 'GET',
                success: function (result) {
                    $(""#dialogFakturaLinje"").html(result);
                    $.ajax({
                        url: '");
#nullable restore
#line 776 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                         Write(Url.Action("GetFakturaLinje", "Faktura"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                        data: { FakturaLinjeGuid: FaktLinjeGuid},
                        type: ""GET""
                        }).done(function (result) {
                            $(""#dialogFakturaLinje"").html(result);

                            xUtsk = document.getElementById(""Faktura_UtskDato"");

                            if (xUtsk.value != """") {

                                var faktNr = $(""#FakturaLinje_TjenesteNr"").data(""kendoNumericTextBox"");
                                faktNr.readonly();

                                document.getElementById(""FakturaLinje_VareTekst"").readOnly = true;
                                document.getElementById(""FakturaLinje_VareHedder"").readOnly = true;

                                var antall = $(""#FakturaLinje_Antall"").data(""kendoNumericTextBox"");
                                antall.readonly();

                                var pris = $(""#FakturaLinje_PrisPrUMVA"").data(""kendoNumericTextBox"");
                                p");
            WriteLiteral(@"ris.readonly();
                            }

                            var popup = $('#dialogFakturaLinje').data(""kendoWindow"");
                            popup.center().open();
                        });
                }
            });
        }
    }

    $(document).on('submit', '#frmFakturaLinje', function (e) {
        e.preventDefault();

        var $this = $(this);
        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 813 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Action("LagreFakturaLinje", "Faktura"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: $this.serialize(),
            dataType: 'json'
        }).done(function (result) {
            if (result == true) {
                var grdFaktLinje = $(""#Fakturalinjer"").data(""kendoGrid"");
                grdFaktLinje.dataSource.read();
                var popup = $('#dialogFakturaLinje').data(""kendoWindow"");
                popup.close();
                document.getElementById('infoLagring').innerHTML = ""<img src='");
#nullable restore
#line 822 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                                                                         Write(Url.Content("~/images/"));

#line default
#line hidden
#nullable disable
            WriteLiteral("database-save.png\' />");
#nullable restore
#line 822 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                                                                                                                       Write(Localizer["Lagret"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                $('#infoLagring').fadeIn(800).delay(100).fadeOut(800);
            }
        }).fail(function (result) {
            alert('an Error has occurred, please try again');
        });
     });

    
    $(document).on('submit', '#formFaktura', function (e) {
        e.preventDefault();
        var $this = $(this);
        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 836 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Action("LagreFaktura", "Faktura"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: $this.serialize(),
            dataType: 'json'
        }).done(function (result) {
            
            if (result.Result == true) {
                
                if (result.NewRecord == true) {
                    xFaktNr = $(""#Faktura_FaktNr"").data(""kendoNumericTextBox"");
                    xFaktNr.value(result.NewGuid);
                    xFaktNr.refresh;

                }
                
                var xKontoNr = $(""#Faktura_KontoNr"").data(""kendoDropDownList"");
                xKontoNr.readonly();

                document.getElementById('infoLagring').innerHTML = ""<img src='");
#nullable restore
#line 853 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                                                                         Write(Url.Content("~/images/"));

#line default
#line hidden
#nullable disable
            WriteLiteral("database-save.png\' />");
#nullable restore
#line 853 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                                                                                                                       Write(Localizer["Lagret"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@""";
                $('#infoLagring').fadeIn(800).delay(100).fadeOut(800);

                xFL = document.getElementById(""nyFakturalinje"");
                xFL.disabled = false;

            }
            else {
                alert(result.ErrorText);
            }

        }).fail(function (result) {
            alert('Kunne ikke lagre fakturaen');
        });
    });

     function slettLinje() {
         $(""#confirm"").kendoConfirm({
            title: ""Slett"",
            content: ""Ønsker du å slette valgte fakturalinje?"",
            messages: {
                okText: ""Ja"",
                cancel: ""Nei""
            }
            }).data(""kendoConfirm"").result.done(function () {
                $('body').append($('<div id=""confirm"">'));
                var grdFaktLinje = $(""#Fakturalinjer"").data(""kendoGrid"");
                var selectedF = grdFaktLinje.select();
                var selItemF = grdFaktLinje.dataItem(selectedF);
                var FaktLinjeGuid = """";

      ");
            WriteLiteral("          if (selectedF.length > 0) {\r\n                    FaktLinjeGuid = selItemF.FakturaLinje_GUID;\r\n \r\n                    $.ajax({\r\n                        url: \'");
#nullable restore
#line 888 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                         Write(Url.Action("removeFakturaLinje", "Faktura"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                        data: { FakturaLinjeGuid: FaktLinjeGuid},
                        type: ""POST""
                        }).done(function (result) {
                            grdFaktLinje.dataSource.read();
                        });
                    }
            });
    }

    function showFaktura() {
        var grdFaktura = $(""#ReskontroListe"").data(""kendoGrid"");
        var selectedF = grdFaktura.select();
        var selItemF = grdFaktura.dataItem(selectedF);

        if (selectedF.length > 0) {
            var faktNr = 0;
            var kontoNr = 0;

            faktNr = selItemF.FaktNr;
            kontoNr = selItemF.KontoNr;

            $.ajax({
                url: ""/Faktura/DialogFaktura"",
                method: 'GET',
                success: function (result) {
                    $('#dialogFaktura').html(result);
                    $.ajax({
                        url: '");
#nullable restore
#line 916 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                         Write(Url.Action("getFaktura", "Faktura"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                        data: { faktNr: faktNr, kontoNr: kontoNr },
                        type: ""GET""
                    }).done(function (result) {
                        $(""#dialogFaktura"").html(result);
                        var popup = $('#dialogFaktura').data(""kendoWindow"");
                        popup.center().open();

                        var xKontoNr = $(""#Faktura_KontoNr"").data(""kendoDropDownList"");
                        xKontoNr.readonly();

                        xUtsk = document.getElementById(""Faktura_UtskDato"");
                        xKredittert = document.getElementById(""Faktura_KredittertDato"");
                        if (xUtsk.value != """") {
                            btnLagre = document.getElementById(""faktLagre"");
                            btnLagre.style.display = ""none"";
                            btnEndreK = document.getElementById(""endreKontakt"");
                            btnEndreK.style.display = ""none"";
                            btnFinnK =");
            WriteLiteral(@" document.getElementById(""finnKontakt"");
                            btnFinnK.style.display = ""none"";

                            btnFlNy = document.getElementById(""nyFakturalinje"");
                            btnFlNy.style.display = ""none"";


                            btnFlSlett = document.getElementById(""slettFakturalinje"");
                            btnFlSlett.style.display = ""none"";

                            var faktDato = $(""#Faktura_FaktDato"").data(""kendoDatePicker"");
                            faktDato.readonly();

                            var forfDato = $(""#Faktura_ForfDato"").data(""kendoDatePicker"");
                            forfDato.readonly();
                        }
                        else {
                            btnFlNy = document.getElementById(""nyFakturalinje"");
                            btnFlNy.disabled = false;
                        }

                        if (xKredittert.value != """") {
                            btnKred = document.get");
            WriteLiteral(@"ElementById(""faktkrediter"");
                            btnKred.style.display = ""none"";
                            btnKredKopi = document.getElementById(""faktKopierKrediter"");
                            btnKredKopi.style.display = ""none"";
                        }
                    });
                }
            });
        }
    }
</script>

<script id=""dialogbokser"">

    function showNyFaktura() {
        faktNr = 0;
        $.ajax({
            url: ""/Faktura/DialogFaktura"",
            method: 'GET',
            success: function (result) {
                $('#dialogFaktura').html(result);
                var today = new Date();
                var nextDay = new Date(new Date().getTime()+(14*24*60*60*1000));
                var dato = today.toLocaleDateString('de-DE', { year: ""numeric"", month: ""2-digit"", day: ""2-digit"" });
                var forfall = nextDay.toLocaleDateString('de-DE', { year: ""numeric"", month: ""2-digit"", day: ""2-digit"" });
                faktDato = $(");
            WriteLiteral(@"""#Faktura_FaktDato"").data(""kendoDatePicker"");
                faktDato.value(dato);
                ForfDato = $(""#Faktura_ForfDato"").data(""kendoDatePicker"");
                ForfDato.value(forfall);

                xFKG = document.getElementById(""Faktura_Kontakt_GUID"");
                xKG = document.getElementById(""Kontakt_KontaktGuid"");
                xFGN = document.getElementById(""Faktura_Navn"");
                xKNF = document.getElementById(""Kontakt_Fornavn"").value;
                xKNM = document.getElementById(""Kontakt_Mellomnavn"").value;
                xKNE = document.getElementById(""Kontakt_Etternavn"").value;
                if (xKNM != """") { xKNF += "" "" + xKNM; }
                if (xKNE != """") { xKNF += "" "" + xKNE; }

                xFGN.value = xKNF;
                xFKG.value = xKG.value;

                btnKrediter = document.getElementById(""faktkrediter"");
                btnKopier = document.getElementById(""faktKopier"");
                btnKrediterKopier = document.ge");
            WriteLiteral(@"tElementById(""faktKopierKrediter"");

                btnKrediter.disabled = true;
                btnKopier.disabled = true;
                btnKrediterKopier.disabled = true;

                var popup = $('#dialogFaktura').data(""kendoWindow"");
                popup.center().open();
            }
        });
        }


    function showDialogTrekkFond() {
        $.ajax({
            url: ""/Stell/DialogTrekkFond"",
            method: 'GET',
            success: function (result) {
                $('#dialogTrekkFond').html(result);
                var popup = $('#dialogTrekkFond').data(""kendoWindow"");
                popup.center().open();
            }
        });
    }

    function showDialogLastOppFiler() {
        $.ajax({
            url: ""/Mail/DialogLastOppFiler"",
            method: 'GET',
            success: function (result) {
                $('#dialogLastOppFiler').html(result);
            }
        });
        var popup = $('#dialogLastOppFiler').data(""kendoW");
            WriteLiteral(@"indow"");

        popup.center().open();
    }

    function showDialogMail() {
        $.ajax({
            url: ""/Mail/DialogEpost"",
            method: 'GET',
            success: function (result) {
                $('#dialogMail').html(result);
            }
        });
        var popup = $('#dialogMail').data(""kendoWindow"");

        popup.center().open();
    }

    function showDialogOkonomiNy() {
        $.ajax({
            url: ""/Stell/DialogOkonomi"",
            method: 'GET',
            success: function (result) {
                $('#dialogOkonomi').html(result);
                x = document.getElementById(""StellOkonomi_StellAvtale_GUID"");
                x.value = stellAvtaleGuid;
                var popup = $('#dialogOkonomi').data(""kendoWindow"");
                popup.center().open();
            }
        });
    }

    function showDialogStellTjenester() {
        $.ajax({
            url: ""/Stell/DialogStellTjeneste"",
            method: 'GET',
       ");
            WriteLiteral(@"     success: function (result) {
                $('#StellTjenesteWindow').html(result);
                var popup = $('#StellTjenesteWindow').data(""kendoWindow"");
                popup.center().open();
            }
        });

    }

    function showDialogStellGraver() {
        $.ajax({
            url: ""/Stell/DialogStellGraver"",
            method: 'GET',
            success: function (result) {
                $('#StellGraverWindow').html(result);
            }
        });
        var popup = $('#StellGraverWindow').data(""kendoWindow"");

        popup.center().open();
    }

    function showDialogFinnPerson(e) {
        $.ajax({
            url: ""/Funksjoner/DialogFinnPerson"",
            data: { SearchFrom: 0 },
            method: 'GET',
            success: function (result) {
                $('#dialogFinnPerson').html(result);
            }
        });
        var popup = $('#dialogFinnPerson').data(""kendoWindow"");
        popup.center().open();
    }

    fun");
            WriteLiteral(@"ction showDialogOkonomiEndre() {
        var listBoxF = $(""#stellokonomiListe"").data(""kendoGrid"");
        var selectedF = listBoxF.select();
        var selItemF = listBoxF.dataItem(selectedF);
        var stellInnholdGuid = """";

        if (selectedF.length > 0) {
            stellInnholdGuid = selItemF.Innskudd_GUID;

            $.ajax({
                url: ""/Stell/DialogOkonomiEndre"",
                method: 'GET',
                success: function (result) {
                    $('#dialogOkonomiEndre').html(result);

                    $.ajax({
                        url: '");
#nullable restore
#line 1120 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                         Write(Url.Action("GetStellOkonomi", "Stell"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                        data: { InnskuddGuid: stellInnholdGuid},
                        type: ""POST""
                        }).done(function (result) {
                            $('#dialogOkonomiEndre').html(result);
                        });

                    var popup = $('#dialogOkonomiEndre').data(""kendoWindow"");
                    popup.center().open();
                }
            });
        }
    }

    function showDialogRapporter() {
        var grid = $(""#stellavtaleListe"").data(""kendoGrid"").dataSource.data();
        var stellavtaler = """";
        var totalNumber = grid.length;
        for (var i = 0; i < totalNumber; i++)
        {
            stellavtaler = stellavtaler + grid[i].StellavtaleGuid + "":"";
        }

        $.ajax({
            url: ""/Rapport/DialogRapportListe"",
            method: 'GET',
            success: function (result) {
                $('#dialogRapporter').html(result);

                xM = document.getElementById(""RapportVerdi");
            WriteLiteral(@"er_MasterNavn"");
                xV = document.getElementById(""RapportVerdier_MasterVerdier"");
                xM.value = ""StellAvtale_GUID"";
                xV.value = stellavtaler;
            }
        });
        var popup = $('#dialogRapporter').data(""kendoWindow"");
        popup.center().open();
    }

    function showDialogRenter() {
        $.ajax({
            url: ""/Stell/DialogStellRenter"",
            method: 'GET',
            success: function (result) {
                $('#dialogRenter').html(result);
                var popup = $('#dialogRenter').data(""kendoWindow"");
                popup.center().open();
            }
        });
    }

    function showDialogStyrkingFond() {
        $.ajax({
            url: ""/Stell/DialogStellTilbud"",
            method: 'GET',
            success: function (result) {
                $('#dialogTilbud').html(result);
                var popup = $('#dialogTilbud').data(""kendoWindow"");
                popup.center().open();
     ");
            WriteLiteral(@"       }
        });
    }

    function showDialogRedigerbrev() {
            var lvDocument = $(""#documents"").data(""kendoListView"");
            var selF = lvDocument.select();
            var selIF = lvDocument.dataItem(selF);

            if (typeof selIF != 'undefined') {
                dokumentObjektGuid = selIF.DokumentObjekt_GUID;
                format = selIF.Format;
            }

            if (dokumentObjektGuid != """") {

                if (format == "".pdf"") {
                    $.ajax({
                        url: ""/Engrafo/DialogVisPDF"",
                        method: 'GET',
                        success: function (result) {
                            $('#dialogVisPDF').html(result);
                            var popup = $('#dialogVisPDF').data(""kendoWindow"");
                            popup.center().open();

                            var pdfViewer = $(""#pdfViewer"").data(""kendoPDFViewer"");
                            if (!pdfViewer) {
                  ");
            WriteLiteral(@"              pdfViewer = $(""#pdfViewer"").kendoPDFViewer({
                                    pdfjsProcessing: {
                                        file: """"
                                    },
                                    width: ""100%"",
                                    height: ""100%""
                                }).data(""kendoPDFViewer"");
                            }
                            var pdfHandlerUrl = ""/Engrafo/getDocumentViewPDF?dokumentObjectGuid="" + dokumentObjektGuid;

                            // Make the PDFViewer load the designated file.
                            pdfViewer.fromFile(pdfHandlerUrl);

                        }
                    });
                }
                else {
                    if (typeof TXTextControl !== 'undefined')
                        TXTextControl.removeFromDom();

                    $.ajax({
                        type: ""GET"",
                        url: '");
#nullable restore
#line 1228 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                         Write(Url.Action("DialogEditor", "Engrafo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    }).done(function (result) {
                        $('#dialogWriter').html(result);
                        var xD = document.getElementById(""dokumentGuid"");
                        xD.value = dokumentObjektGuid;
                        var popup = $('#dialogWriter').data(""kendoWindow"");
                        popup.center().open();                   
                        });
                    }
                }
            }

    function showDialogWriter() {
            $.ajax({
                url: ""/Engrafo/DialogEditor"",
                method: 'GET',
                success: function (result) {
                    $('#dialogWriter').html(result);
                }
            });

            var popup = $('#dialogWriter').data(""kendoWindow"");
            popup.center().open();
        }

    function showDialogSkrivbrev() {
        xBMG = document.getElementById(""StellAvtale_Mappe_GUID"")
        xBBG = document.getElementById(""StellAvtale_Stella");
            WriteLiteral(@"vtaleGuid"")

        if (xBMG.value == """") {
            $.ajax({
                url: ""/Stell/exeStellavtaleSaksmappe"",
                method: 'GET',
                data: {stellavtaleGuid: xBBG.value},
                success: function (resultInfo) {
                    if (resultInfo.Result == true ) {
                        mappeGuid = resultInfo.NewGuid;
                        mappeNavn = resultInfo.InfoText;
                        var xDoc = document.getElementById(""tabDokumenterId"");
                        xDoc.innerHTML = ""Dokumenter ["" + resultInfo.InfoText + ""]"";

                        xBMG.value = resultInfo.NewGuid;
                        $.ajax({
                            url: ""/Rapport/DialogSkrivbrevListe"",
                            method: 'GET',
                            success: function (result) {
                                $('#dialogSkrivbrev').html(result);
                                xEMG = document.getElementById(""EngrafoDokument_mappeGuid"");
");
            WriteLiteral(@"                                xED = document.getElementById(""EngrafoDokument_DefaultvalueSet"");
                                xEMV = document.getElementById(""EngrafoDokument_MasterVerdier"");
                                xEMN = document.getElementById(""EngrafoDokument_MasterNavn"");

                                xI1 = document.getElementById(""Info"");
                                xI1.innerHTML = ""Engrafo"";

                                xI2 = document.getElementById(""Info2"");
                                xI2.innerHTML = mappeNavn + "" - "" + resultInfo.Report;

                                xEMG.value = xBMG.value;
                                xED.value = ""SAdokUt"";
                                xEMV.value = xBBG.value;
                                xEMN.value =""Stellavtale_GUID""

                                var popup = $('#dialogSkrivbrev').data(""kendoWindow"");
                                popup.center().open();
                            }
                    ");
            WriteLiteral(@"    });
                    }

                }
            });
        }
        else {
            $.ajax({
                url: ""/Engrafo/GetMappeInfo"",
                method: 'GET',
                data: {mappeGuid: xBMG.value},
                success: function (resultInfo) {
                    $.ajax({
                        url: ""/Rapport/DialogSkrivbrevListe"",
                        method: 'GET',
                        success: function (result) {
                            $('#dialogSkrivbrev').html(result);
                            xEMG = document.getElementById(""EngrafoDokument_mappeGuid"");
                            xED = document.getElementById(""EngrafoDokument_DefaultvalueSet"");
                            xEMV = document.getElementById(""EngrafoDokument_MasterVerdier"");
                            xEMN = document.getElementById(""EngrafoDokument_MasterNavn"");

                            xI1 = document.getElementById(""Info"");
                            xI1.inne");
            WriteLiteral(@"rHTML = ""Engrafo"";

                            xI2 = document.getElementById(""Info2"");
                            xI2.innerHTML = resultInfo.SaksAar + ""/"" + resultInfo.SaksSekvensNummer + "" - "" + resultInfo.Tittel;

                            xEMG.value = xBMG.value;
                            xED.value = ""BGdokUt"";
                            xEMV.value = xBBG.value;
                            xEMN.value =""Bestilling_GUID""

                            var popup = $('#dialogSkrivbrev').data(""kendoWindow"");
                            popup.center().open();
                        }
                    });                
                
                }
            });
        }
    }

    function testPNr() {
        var x = document.getElementById(""Kontakt_PersonNr"");
        var xFN = document.getElementById(""Kontakt_Fornavn"");
        if (testPersNr(x.value) == -1) {
            x.style.color = ""red"";
        }
        else {
            x.style.color = ""black"";

      ");
            WriteLiteral("      if (x.value.length == 11 && xFN.value == \"\") {\r\n                $.ajax({\r\n                    url: \'");
#nullable restore
#line 1348 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                     Write(Url.Action("FinnKontakt", "Kontakt"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: { personNr: x.value, viewString: ""_KontaktFull"" },
                    type: ""GET""
                }).done(function (result) {
                    $(""#kontaktFullForm"").html(result);
                    clickHookupErDod();
                    xPN = document.getElementById(""Kontakt_PersonNr"").value;
                    btnVA = document.getElementById(""idVaskAdresse"");
                    btnF = document.getElementById(""idFaktura"");
                    btnF.disabled = false;

                    if (xPN.length == 11) {
                        btnVA.disabled = false;
                    }
                    else
                    {
                        btnVA.disabled = true;
                    }

                    ErDod = document.getElementById(""Kontakt_ErDod"").checked
                    bkg = document.getElementById(""tabKontaktinformasjon"");
                    bkgtab = document.getElementById(""idTabKontakt"");

                    if (ErDod) {
    ");
            WriteLiteral(@"                    bkg.style.backgroundColor = ""lightpink"";
                        bkgtab.style.backgroundColor = ""lightpink"";
                    }
                    else {
                        bkg.style.backgroundColor = """";
                        bkgtab.style.backgroundColor = """";
                    }
                });
            }

        }
    }


</script>

<script id=""filter"">
    var sqlFilter = """";
    var filterStatus = ""Status<=2"";
    var filterType = """";
    var resultatId = 0;
    var canSearching = true;
    var skjerm = ""Stell"";
    var kategori = """";
    var vis = """";
    var registreringGuid = """";
    var stellType = 0;
    var Aar = 2022;
    var antall = 100;
    var stringFilter = """";
    var sortering = """";
    var KontaktGuid = """";

    function filterfelt(e) {
        x = document.getElementById(""soekeFilter"");
        grid = $(""#kontaktListe"").data(""kendoGrid"");

        if (e.checked) {
            x.style.display = ""block"";
       ");
            WriteLiteral(@"     xG = document.getElementById(""kontaktListe"");
            xG.style = ""height: calc(100vh - 533px);""
        }
        else {
            x.style.display = ""none"";
            xG = document.getElementById(""kontaktListe"");
            xG.style = ""height: calc(100vh - 360px);""
        }
        grid.refresh();
    }

    function filterKontaktliste() {        
        return {antall: antall, stringFilter: stringFilter, sortering: sortering}
    }

    function filterKontakt() {
        return {KontaktGuid: KontaktGuid}
    }

    function SetStatus(e) {
        filterStatus = e;
        grd = $(""#stellavtaleListe"").data(""kendoGrid"");
        grd.dataSource.read();
    }

    function skjermFilter() {
        return { skjerm: skjerm, kategori: kategori }
    }

    
    function filterTG() {
        filterTekst = ""TjenesteGruppe='GS' AND Tekst like '%rente%'"";
       return {filterTekst: filterTekst}
    }

    function SetType(e) {
        filterType = e;
        grd = $");
            WriteLiteral(@"(""#stellavtaleListe"").data(""kendoGrid"");
        grd.dataSource.read();
    }

    function stellFilter() {
        sqlFilter = filterStatus;
        if (filterType != """" && sqlFilter != """") {
            sqlFilter += "" AND "" + filterType;
        }
        else if (filterType != """") {
            sqlFilter = filterType;
        }

        if (stringfilter != """") {
            if (sqlFilter != """") {
                sqlFilter += "" AND "" + stringfilter;
            }
            else {
                sqlFilter = stringfilter;
            }
        }

        return { filterTekst: sqlFilter }
    }

    function statusFilter() {
        var ddl = $(""#StellAvtale_Status"").data(""kendoDropDownList"");
        var selectedS = ddl.select();
        var selItemS = ddl.dataItem(selectedS);
        var Status = 0;

        if (typeof selItemS != 'undefined') {
            Status = selItemS.Value;
        }

        return { Status: Status }
    }

    function filterSok(e) {
      ");
            WriteLiteral(@"  return {
            resultatId: resultatId
        }
    }

    function filterStellGuid() {
        return { stellGuid: stellGuid }
    }

    function filterAvtale() {
        return { stellAvtaleGuid: stellAvtaleGuid }
    }

    function filterMail() {
        return { mailId: mailId }
    }

    function filterTjeneste() {
        var filterTR = ""T.TjenesteGruppe='GS'"";
        return { filterTekst: filterTR }
    }

    function filterEngrafo() {
        xSA = document.getElementById(""StellAvtale_StellavtaleGuid"");
        xMG = document.getElementById(""StellAvtale_Mappe_GUID"");
        return { KontaktGuid: """", EksternGuid: xSA.value, MappeGuid: xMG.value }
    }

    function filterBank() {
        return {BankId: BankId}
    }


    function filterRegistrering() {
        return { registreringGuid: registreringGuid }
    }

    function filterCaseId() {
        xKG = document.getElementById(""Kontakt_KontaktGuid"");
        filter = ""Registrering_GUID IN (SELEC");
            WriteLiteral(@"T Registrering_GUID FROM N5_KORRESPONDANSEPART WHERE Kontakt_GUID='"" + xKG.value + ""')""

        return { mappeGuid: filter, filterTekst: """" }
        }

</script>

<script id=""events"">
    var mappeGuid = """";
    var mailId = """";
    var stellAvtaleGuid = """";
    var stellGuid = """";
    var gravGuid = """";
    var BankId = """";

    function onClose() {
        $(""#showDialogBtn"").fadeIn();
    }

    function onOpen() {
        $(""#showDialogBtn"").fadeOut();
    }


    function friskoppFakturaliste() {
        var grdFakturaliste = $(""#ReskontroListe"").data(""kendoGrid"");
        grdFakturaliste.dataSource.read();
    }

    function onJournalChange(e) {
        var selected = this.select();
        var data = this.dataItem(selected);
        registreringGuid = data.Registrering_GUID;

        var lvDocument = $(""#documents"").data(""kendoListView"");
        lvDocument.dataSource.read();
    }

    function onDocumentChange(e) {
        var selected = this.select();
     ");
            WriteLiteral(@"   var data = this.dataItem(selected);
        registreringGuid = data.RegistreringGuid;

        btnSD = document.getElementById(""visDokument"");
        btnSD.disabled = false;
    }

    function onKontaktChange(e) {
        var selected = this.select();
        var data = this.dataItem(selected);

        KontaktGuid = data.KontaktGuid;

        $.ajax({
            url: '");
#nullable restore
#line 1580 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Action("GetKontakt", "Kontakt"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { kontaktGuid: KontaktGuid, viewString: ""_KontaktFull"" },
            type: ""GET""
        }).done(function (result) {
            $(""#kontaktFullForm"").html(result);
            clickHookupErDod();
            xPN = document.getElementById(""Kontakt_PersonNr"").value;
            btnVA = document.getElementById(""idVaskAdresse"");
            btnF = document.getElementById(""idFaktura"");
            btnF.disabled = false;

            if (xPN.length == 11) {
                btnVA.disabled = false;
            }
            else
            {
                btnVA.disabled = true;
            }

            ErDod = document.getElementById(""Kontakt_ErDod"").checked
            bkg = document.getElementById(""tabKontaktinformasjon"");
            bkgtab = document.getElementById(""idTabKontakt"");

            if (ErDod) {
                bkg.style.backgroundColor = ""lightpink"";
                bkgtab.style.backgroundColor = ""lightpink"";
            }
            else {
   ");
            WriteLiteral(@"             bkg.style.backgroundColor = """";
                bkgtab.style.backgroundColor = """";
            }
        });
    }

    function onBankChange(e) {
        var selected = this.select();
        var data = this.dataItem(selected);

        BankId = data.BankId;

        var ddl = $(""#StellListe"").data(""kendoGrid"");
        ddl.dataSource.read();
    }

    function onDataBound(e) {
        var grid = $(""#stellavtaleListe"").data(""kendoGrid"");

        $(""#stellavtaleListe tbody tr"").each(function () {
            var currentRowData = grid.dataItem(this);
            //Read field contains data if this email is readed
            if (currentRowData.Farge != ""white"") {
                $(this).css(""background-color"", currentRowData.Farge)
            }
        });
    }

</script>

<script id=""funksjoner"">

    function findPoststed(e) {
        if (e == ""Bosted"") {
            var x = document.getElementById(""Kontakt_BostedPostNr"").value;
            var xSted = docum");
            WriteLiteral(@"ent.getElementById(""Kontakt_BostedSted"");
        }
        else {
            var x = document.getElementById(""Kontakt_PostNr"").value;
            var xSted = document.getElementById(""Kontakt_Sted"");
        }

        if (x.length == 4) {
            $.ajax({
                url: '");
#nullable restore
#line 1652 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                 Write(Url.Action("GetPostSted", "Funksjoner"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { postNr: x },
                type: ""GET""
            }).done(function (result) {
                xSted.value = result.Sted;
            });
        }
        else {
            xSted.value = """";
            xKommuneNr.value = """";
        };
    }

    function nyKontakt() {
        KontaktGuid = """";
        $.ajax({
            url: '");
#nullable restore
#line 1668 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Action("NyKontakt", "Kontakt"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""GET""
        }).always(function (result) {
            $(""#kontaktFullForm"").html(result);

        });
    }

    function showDialogRedigerbrev() {
        var lvDocument = $(""#documents"").data(""kendoListView"");
        var selF = lvDocument.select();
        var selIF = lvDocument.dataItem(selF);

        if (typeof selIF != 'undefined') {
            dokumentObjektGuid = selIF.DokumentObjekt_GUID;
            format = selIF.Format;
        }

        if (dokumentObjektGuid != """") {

            if (format == "".pdf"") {
                $.ajax({
                    url: ""/Engrafo/DialogVisPDF"",
                    method: 'GET',
                    success: function (result) {
                        $('#dialogVisPDF').html(result);
                        var popup = $('#dialogVisPDF').data(""kendoWindow"");
                        popup.center().open();

                        var pdfViewer = $(""#pdfViewer"").data(""kendoPDFViewer"");
                        ");
            WriteLiteral(@"if (!pdfViewer) {
                            pdfViewer = $(""#pdfViewer"").kendoPDFViewer({
                                pdfjsProcessing: {
                                    file: """"
                                },
                                width: ""100%"",
                                height: ""100%""
                            }).data(""kendoPDFViewer"");
                        }
                        var pdfHandlerUrl = ""/Engrafo/getDocumentViewPDF?dokumentObjectGuid="" + dokumentObjektGuid;

                        // Make the PDFViewer load the designated file.
                        pdfViewer.fromFile(pdfHandlerUrl);

                    }
                });
            }
            else {
                if (typeof TXTextControl !== 'undefined')
                    TXTextControl.removeFromDom();

                $.ajax({
                    type: ""GET"",
                    url: '");
#nullable restore
#line 1721 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                     Write(Url.Action("DialogEditor", "Engrafo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                }).done(function (result) {
                    $('#dialogSkrivbrev').html(result);
                    var xD = document.getElementById(""dokumentGuid"");
                    xD.value = dokumentObjektGuid;
                    var popup = $('#dialogSkrivbrev').data(""kendoWindow"");
                    popup.center().open();                   
                    });
                }
            }
        }

    function vaskAdresse() {
        $.ajax({
            url: '");
#nullable restore
#line 1735 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Action("VaksAdressse", "Funksjoner"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n            data: { kontaktGuid: KontaktGuid},\r\n            type: \"GET\"\r\n        }).done(function (result) {\r\n            $.ajax({\r\n                url: \'");
#nullable restore
#line 1740 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                 Write(Url.Action("GetKontakt", "Kontakt"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { kontaktGuid: KontaktGuid, viewString: ""_KontaktFull"" },
                type: ""GET""
            }).done(function (result) {
                $(""#kontaktFullForm"").html(result);

                var notification = $(""#lagreNotification"").data(""kendoNotification"");
                notification.show({title: ""Folkeregister"", message: ""Kontaktinformasjon er oppdatert fra folkeregisteret""}, ""info"");

                xPN = document.getElementById(""Kontakt_PersonNr"").value;
                btnVA = document.getElementById(""idVaskAdresse"");
                btnF = document.getElementById(""idFaktura"");
                btnF.disabled = false;

                if (xPN.length == 11) {
                    btnVA.disabled = false;
                }
                else
                {
                    btnVA.disabled = true;
                }
            });
        });
    }

    function visKontakt() {
        fv = document.getElementById(""SNavn"").value;
        ds = $(");
            WriteLiteral(@"""#kontaktListe"").data(""kendoGrid"").dataSource;
        if (fv.length > 3) {
            finnKontakt();
            }
        else {
            ds.filter({ logic: ""or"", filters: [{ field: ""FulltNavn"", operator: ""contains"", value: fv }] });
            }
        }

    function clearKunde() {
        fv = document.getElementById(""SNavn"").value;
        ds = $(""#kontaktListe"").data(""kendoGrid"").dataSource;
        if (fv.length > 3) {
            document.getElementById(""SNavn"").value = """";
            finnKontakt();
            }
        else {
            document.getElementById(""SNavn"").value = """";
            }
        ds.filter({});
    }

  function finnKontakt() {
        stringFilter = """";
        var kontaktType = $(""#rgKontaktype"").data(""kendoRadioGroup"");
        var Navn = document.getElementById(""SNavn"").value;

        if (Navn.indexOf("","") >= 0) {
            var navnArr = Navn.split(',')
            if (navnArr[0] != """") {
                stringFilter += "" (Fornavn ");
            WriteLiteral(@"like '"" + navnArr[0] + ""%')"";
            }
            if (navnArr[1] != """") {
                if (stringFilter != """") { stringFilter += "" AND ""; }
                stringFilter += "" (Etternavn like '"" + navnArr[1] + ""%')"";
            }            
        }
        else {
            stringFilter = ""FulltNavn like '"" + Navn + ""%'"";
        }

        if (kontaktType._value == ""0"") {
            if (stringFilter != """") { stringFilter += "" AND "";}
            stringFilter += "" KontaktGuid IN (SELECT Kontakt_GUID FROM GRAVSTED WHERE Fellesraad='AktivFellesraad')"";
        }
        else if (kontaktType._value == ""2"") {
            if (stringFilter != """") { stringFilter += "" AND "";}
            stringFilter += "" TypeKunde = 1"";
        }
        
        var grid = $(""#kontaktListe"").data(""kendoGrid"");
        grid.dataSource.read();
    }

    function clearStell() {
        stringfilter = """";
        
        var datoFra = document.getElementById(""PeriodeFra"");
        datoFra.valu");
            WriteLiteral(@"e = """";
        var datoTil = document.getElementById(""PeriodeTil"");
        datoTil.value = """";
        var Navn = document.getElementById(""SNavn"").value;
        Navn.value = """";

        var Nr = document.getElementById(""SNr"").value;
        Nr.value = """";

        var grid = $(""#stellavtaleListe"").data(""kendoGrid"");
        grid.dataSource.read();
    }

    function endreKontakt() {
        x = document.getElementById(""StellAvtale_KontaktGuid"")

        $.ajax({
            url: '");
#nullable restore
#line 1842 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Action("DialogKontakt", "Kontakt"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n            type: \'GET\'\r\n            }).done(function (result) {\r\n                $(\'#DialogKontakt\').html(result);\r\n                $.ajax({\r\n                    url: \'");
#nullable restore
#line 1847 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                     Write(Url.Action("GetKontakt", "Kontakt"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: { kontaktGuid: x.value},
                    type: ""GET""
                    }).done(function (result) {
                        $(""#DialogKontakt"").html(result);

                        var popup = $('#DialogKontakt').data(""kendoWindow"");
                        popup.center().open();
                    });
            });
        }

    function closeFinnPerson() {
        var listBoxF = $(""#kontaktGrid"").data(""kendoGrid"");
        var selectedF = listBoxF.select();
        var selItemF = listBoxF.dataItem(selectedF);
        var ressursGuid = """";

        if (selectedF.length > 0) {
            kontaktGuid = selItemF.KontaktGuid;

            $.ajax({
                url: '");
#nullable restore
#line 1869 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                 Write(Url.Action("KopiKontaktFraResultat", "Funksjoner"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { kontaktGuid: selItemF.KontaktGuid},
                type: ""POST""
                }).done(function (result) {
                    kontaktGuid = result.NewGuid;
                    var KontaktGuid = document.getElementById(""StellAvtale_KontaktGuid"");
                    var ansNavn = document.getElementById(""StellAvtale_Kontakt"");

                    kNavn = selItemF.Fornavn + "" "" + selItemF.Etternavn;

                    KontaktGuid.value = kontaktGuid;
                    ansNavn.value = kNavn;
                });


        };
    }

    function finnPerson() {
        if (canSearching == true) {
            var $this = $('#finnperson').serialize();
            canSearching = false;
            var listBoxF = $(""#kontaktGrid"").data(""kendoGrid"");

            $.ajax({
                type: ""GET"",
                url: '");
#nullable restore
#line 1895 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                 Write(Url.Action("CreateKontaktListe", "Funksjoner"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: $this,
                dataType: 'json'
            }).done(function (result) {
                canSearching = true;
                if (result > 0) {
                    resultatId = result;
                    listBoxF.dataSource.read();
                }
            }).always(function () {
                canSearching = true;
            });
        }
    }


    function Fakturer() {
        var stellType = $(""#StellAvtale_StellType"").data(""kendoRadioGroup"");
        var stellAvtaleGuid = document.getElementById(""StellAvtale_StellavtaleGuid"").value;

        if (stellType._value == ""0"") {
            $.ajax({
                url: '");
#nullable restore
#line 1917 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                 Write(Url.Action("FakturerFond", "Stell"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: {StellAvtaleGuid: stellAvtaleGuid},
                type: ""POST""
            }).done(function (result) {
                if (result.Result == true) {
                    alert(""Faktura nummer "" + result.NewGuid + "" er opprettet"");
                }

            }).fail(function (result) {
                alert('an Error has occurred, please try again');
            });
        }
        else {
            $.ajax({
                url: '");
#nullable restore
#line 1931 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                 Write(Url.Action("FakturerÅrsstell", "Stell"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: {StellAvtaleGuid: stellAvtaleGuid},
                type: ""POST""
            }).done(function (result) {
                if (result.Result == true) {
                    alert(""Faktura nummer "" + result.NewGuid + "" er opprettet"");
                }
            }).fail(function (result) {
                alert('an Error has occurred, please try again');
            });
        }
    }

    function Progress() {
        var pA = document.getElementById(""ProgressAntall"")

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 1949 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Action("Fremdrift", "Faktura"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { tittel: ""Rentefordeling""},
            dataType: 'json'
        }).done(function (result) {
            pA.value = result.Antall;
            $(""#Fremdrift"").data(""kendoProgressBar"").value(result.Fremdrift);
        });
    }
</script>

<script type=""text/x-kendo-tmpl"" id=""document"">
    <div class=""sms"">
        <img src=""");
#nullable restore
#line 1961 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Content("~/images/social-telegram-filled.svg"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"""/>
        <p>#:Name#</p>
    </div>
</script>

<script id=""mail"">
    var mailId = """";
    var mappeGuid = """";

    function filterMail() {
        return { mailId: mailId }
    }

    function filterMappe() {
        return { mappeGuid: mappeGuid }
    }


    function onMailFolderChange(e) {
        var tree = $('#Mapper').data('kendoTreeView');
        var dataItem = tree.dataItem(e.node);
        mappeGuid = dataItem.id;

        var listBox = $(""#MailListe"").data(""kendoGrid"");
        listBox.refresh();
        listBox.dataSource.read();
    }

    function onMailItemChange(e) {
        var selected = this.select();
        var data = this.dataItem(selected);

        mailId = data.Id;

        var listBox = $(""#Body"").data(""kendoEditor"");
        listBox.body.innerHTML = data.Body;

        var lvDoc = $(""#emailAttachments"").data(""kendoGrid"");
        lvDoc.dataSource.read();
    }

</script>

<script type=""text/javascript"">

    $(document).ready(function ");
            WriteLiteral(@"() {
        clickHookupErDod();
        });

    function clickHookupErDod() {
         $(""#Kontakt_ErDod"").click(function () {
            bkg = document.getElementById(""tabKontaktinformasjon"");
            bkgtab = document.getElementById(""idTabKontakt"");

            if (this.checked) {
                bkg.style.backgroundColor = ""lightpink"";
                bkgtab.style.backgroundColor = ""lightpink"";
            }
            else {
                bkg.style.backgroundColor = """";
                bkgtab.style.backgroundColor = """";
            }
        });
    }

    function onSermStedChange(e) {
            var selected = this.select();
            var data = this.dataItem(selected);

            var bestillingGuid = data.BestillingGuid;

            $.ajax({
                url: '");
#nullable restore
#line 2033 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
                 Write(Url.Action("GetBestilling", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { bestillingGuid: bestillingGuid },
                type: ""GET""
            }).done(function (result) {

            });
        }

    function onSorting(arg) {
            alert(arg.sort.field);
            //kendoConsole.log(""Sorting on field: "" + arg.sort.field + "", direction:"" + (arg.sort.dir || ""none""));
        }

</script>

<script id=""lagre"">

    $(document).bind('keydown', function (e) {
        if (e.ctrlKey && (e.which == 70)) {
            e.preventDefault();
            finnKontakt();
        }
        else if (e.ctrlKey && (e.which == 68)) {
            e.preventDefault();
            clearStell();
        }
    });

    function lagreKontakt(e) {
        var grdKontakt = $(""#kontaktListe"").data(""kendoGrid"");

        var $this = $('#KontaktForm');

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 2068 "C:\Visual Stuido 17\KipWeb5\Views\Kontakt\Index.cshtml"
             Write(Url.Action("LagreKontakt", "Kontakt"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: $this.serialize(),
            dataType: 'json'
        }).done(function (result) {
            if (result.Result == true) {
                var notification = $(""#notification"").data(""kendoNotification"");
                notification.show({title: ""Bestilling"", message: ""Bestillingen er lagret""}, ""success"");

                if (result.NewRecord == true) {
                    grdKontakt.dataSource.read();
                }
                else {
                    var selectedF = grdKontakt.select();
                    var selItemF = grdKontakt.dataItem(selectedF);
                    var PersonNr = document.getElementById(""Kontakt_PersonNr"").value;
                    var Navn = document.getElementById(""Kontakt_Fornavn"").value;
                    var Mellomnavn = document.getElementById(""Kontakt_Mellomnavn"").value;
                    var Etternavn = document.getElementById(""Kontakt_Etternavn"").value;
                    if (Mellomnavn.length > 0) { Navn += "" "" + Mel");
            WriteLiteral(@"lomnavn;}
                    Navn += "" "" + Etternavn;
                    selItemF.set(""PersonNr"", PersonNr);
                    selItemF.set(""FulltNavn"", Navn);
                    grdKontakt.select(selectedF);
                }
            }
        });
    }


    $(window).on(""resize"", function () {
        $(""#kontaktListe"").data(""kendoGrid"").refresh();
    });
</script>


");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<KipWeb5.Models.Kontakt.KontaktModel> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
