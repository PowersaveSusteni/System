{"version":3,"file":"kendo.captcha.js","names":["__meta__","id","name","category","description","depends","$","kendo","window","Widget","ui","extend","ajax","isFunction","NS","DOT","CLICK","CHANGE","REQUEST_START","REQUEST_END","ERROR","Captcha","init","element","options","that","this","fn","call","_captchaField","dataCaptchaField","_valueField","attr","_captchaIdField","dataCaptchaIdField","_wrapper","_idInput","_captchaImage","audioButton","resetButton","_buttons","captcha","captchaId","_resetHandler","validateOnBlur","on","_validationHandler","ev","_isValid","trigger","value","val","originalEvent","notify","events","handler","audioHandler","validationHandler","volumeControl","messages","reset","audio","imageAlt","success","destroy","textbox","off","_audioEnded","styles","wrapper","inputWrapper","imageWrapper","cssText","style","css","kendoTextBox","clearButton","data","_inputWrapper","wrap","parent","prepend","captchaImage","find","append","_tabindex","_attachImageErrorHandler","one","type","nameAttr","idInput","ns","after","buttonsWrapper","_audioButton","_resetButton","button","iconButton","icon","resetIcon","iconClass","bind","audioIcon","_audioHandler","focusResetButton","deferred","Deferred","_resetCaptcha","_toggleSuccessMessage","_progress","_callHandler","done","fail","args","reject","promise","console","error","msg","_playAudio","_validate","_error","requestEnd","_requestEnd","url","cache","jqXHR","textStatus","errorThrown","resolve","_canPlayWav","audioElement","Audio","volume","_audioVolume","_showVolumeControl","play","volumeControlWrapper","volumeControlElm","_isRtl","width","kendoSlider","min","max","smallStep","largeStep","orientation","showButtons","tickPlacement","tooltip","enabled","change","document","activeElement","is","remove","pause","_canPlayAudio","canPlayType","replace","toggle","idAttr","successMessage","removeAttr","htmlEncode","_toggleButtons","prop","toggleClass","loading","disabled","_toggleSkeleton","skeleton","height","before","support","isRtl","getCaptchaId","toJSON","obj","validate","isValid","enable","readonly","speak","plugin","buttonIcon","hidden","jQuery","kendo$1"],"sources":["kendo.captcha.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.core.js';\nimport './kendo.slider.js';\nimport './kendo.textbox.js';\nimport './kendo.skeletoncontainer.js';\nimport './kendo.icons.js';\n\nconst __meta__ = {\n        id: \"captcha\",\n        name: \"Captcha\",\n        category: \"web\",\n        description: \"The Captcha widget displays captcha validation image and an input so that user case be validated against captcha value.\",\n        depends: [\"core\", \"slider\", \"textbox\", \"skeletoncontainer\", \"icons\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            extend = $.extend,\n            ajax = $.ajax,\n            isFunction = kendo.isFunction,\n\n            STRING = \"string\",\n\n            DOT = \".\",\n            NS = DOT + \"kendoCaptcha\",\n\n            CLICK = \"click\",\n            BLUR = \"blur\",\n\n            CHANGE = \"change\",\n            REQUEST_START = \"requestStart\",\n            REQUEST_END = \"requestEnd\",\n            ERROR = \"error\";\n\n        var CaptchaStyles = {\n            wrapper: \"k-captcha\",\n            textbox: \"k-textbox\",\n            button: \"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\",\n            buttonIcon: \"k-button-icon\",\n            iconButton: \"k-icon-button\",\n            resetIcon: \"arrow-rotate-cw\",\n            audioIcon: \"volume-up\",\n            disabled: \"k-disabled\",\n            inputWrapper: \"k-captcha-input k-vstack\",\n            imageWrapper: \"k-captcha-image-wrap k-hstack\",\n            captchaImage: \"k-captcha-image\",\n            buttonsWrapper: \"k-captcha-image-controls k-vstack\",\n            volumeControlWrapper: \"k-captcha-volume-control k-vstack k-pos-absolute\",\n            hidden: \"k-hidden\",\n            success: \"k-captcha-validation-message k-text-success\",\n            loading: \"k-captcha-loading\"\n        };\n\n        var Captcha = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._captchaField = that.options.dataCaptchaField;\n                that._valueField = that.element.attr(\"name\") || \"captcha\";\n                that._captchaIdField = that.options.dataCaptchaIdField;\n\n                that._wrapper();\n                that._idInput();\n                that._captchaImage();\n\n                if (that.options.audioButton || that.options.resetButton) {\n                    that._buttons();\n\n                }\n\n                if (!that.options.captcha || !that.options.captchaId) {\n                    that._resetHandler();\n                }\n\n                if (that.options.validateOnBlur) {\n                    that.element.on(BLUR + NS, function() {\n                        that._validationHandler();\n                    });\n                }\n\n                that.element.on(CHANGE + NS, function(ev) {\n                    delete that._isValid;\n                    that.trigger(CHANGE, { value: that.element.val(), originalEvent: ev });\n                });\n\n                kendo.notify(that);\n            },\n\n            events: [\n                CHANGE,\n                REQUEST_START,\n                REQUEST_END,\n                ERROR\n            ],\n\n            options: {\n                name: \"Captcha\",\n                dataCaptchaField: \"captcha\",\n                dataCaptchaIdField: \"captchaId\",\n                captchaId: \"\",\n                captcha: null,\n                handler: null,\n                audioHandler: null,\n                validationHandler: null,\n                validateOnBlur: false,\n                resetButton: true,\n                audioButton: true,\n                volumeControl: true,\n                messages: {\n                    reset: \"Reset captcha\",\n                    audio: \"Speak captcha\",\n                    imageAlt: \"Type the Captcha code from the image\",\n                    success: \"Verification successful\"\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.textbox.destroy();\n\n                if (that.resetButton) {\n                    that.resetButton.off(NS);\n                }\n\n                if (that.audioButton) {\n                    that.audioButton.off(NS);\n                }\n\n                that.element.off(NS);\n\n                // Just in case, destroy slider.\n                that._audioEnded();\n\n                Widget.fn.destroy.call(that);\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    styles = Captcha.styles,\n                    wrapper = \"<div class='\" + styles.wrapper + \"'><div class='\" + styles.inputWrapper + \"'></div></div>\",\n                    imageWrapper = \"<div class='\" + styles.imageWrapper + \"'></div>\",\n                    cssText = that.element[0].style.cssText;\n\n                that.element.css(\"width\", \"auto\");\n                that.element.css(\"height\", \"auto\");\n                that.textbox = that.element.kendoTextBox({ clearButton: true }).data(\"kendoTextBox\");\n                that._inputWrapper = that.textbox.wrapper;\n                that.wrapper = that._inputWrapper.wrap(wrapper).parent().parent();\n                that.wrapper[0].style.cssText = cssText;\n                that.imageWrapper = $(imageWrapper);\n                that.wrapper.prepend(that.imageWrapper);\n            },\n\n            _captchaImage: function() {\n                var that = this,\n                    options = that.options,\n                    messages = options.messages,\n                    styles = Captcha.styles;\n\n\n                that.captchaImage = $(\"<div class=\\\"\" + styles.captchaImage + \"\\\">\" +\n                                        \"<img alt=\\\"\" + messages.imageAlt + \"\\\" src= \\\"\" + (options.captcha || \"\") + \"\\\"/>\" +\n                                    \"</div>\").find(\"img\");\n\n                that.imageWrapper.append(that.captchaImage.parent());\n\n                that._tabindex(that.captchaImage);\n\n                that._attachImageErrorHandler();\n            },\n\n            _attachImageErrorHandler: function() {\n                var that = this;\n\n                that.captchaImage.off(\"error\");\n                that.captchaImage.one(\"error\", function(ev) {\n                    that.trigger(ERROR, { type: \"image\", originalEvent: ev });\n                });\n            },\n\n            _idInput: function() {\n                var that = this,\n                    options = that.options,\n                    nameAttr = that._captchaIdField;\n\n                that.idInput = $(\"<input type=\\\"hidden\\\" name=\\\"\" + nameAttr + \"\\\" value=\\\"\" + options.captchaId + \"\\\" data-\" + kendo.ns + \"stop=\\\"true\\\" />\");\n                that._inputWrapper.after(that.idInput);\n            },\n\n            _buttons: function() {\n                var that = this,\n                    styles = Captcha.styles;\n\n                that.buttonsWrapper = $(\"<div class=\\\"\" + styles.buttonsWrapper + \"\\\"></div>\");\n                that.imageWrapper.append(that.buttonsWrapper);\n\n                if (that.options.audioButton) {\n                    that._audioButton();\n                }\n\n                if (that.options.resetButton) {\n                    that._resetButton();\n                }\n            },\n\n            _resetButton: function() {\n                var that = this,\n                    messages = that.options.messages,\n                    styles = Captcha.styles;\n\n                that.resetButton = $(\"<button type=\\\"button\\\" title=\\\"\" + messages.reset + \"\\\" class=\\\"\" + styles.button + \" \" + styles.iconButton + \"\\\">\" +\n                                        kendo.ui.icon({ icon: styles.resetIcon, iconClass: \"k-button-icon\" }) +\n                                    \"</button>\");\n\n                that.buttonsWrapper.append(that.resetButton);\n\n                that.resetButton.on(CLICK + NS, that._resetHandler.bind(that, true));\n            },\n\n            _audioButton: function() {\n                var that = this,\n                    messages = that.options.messages,\n                    styles = Captcha.styles;\n\n                that.audioButton = $(\"<button type=\\\"button\\\" title=\\\"\" + messages.audio + \"\\\" class=\\\"\" + styles.button + \" \" + styles.iconButton + \"\\\">\" +\n                                        kendo.ui.icon({ icon: styles.audioIcon, iconClass: \"k-button-icon\" }) +\n                                    \"</button>\");\n\n                that.buttonsWrapper.append(that.audioButton);\n\n                that.audioButton.on(CLICK + NS, that._audioHandler.bind(that));\n            },\n\n            _resetHandler: function(focusResetButton) {\n                var that = this,\n                    handler = that.options.handler,\n                    deferred = $.Deferred(),\n                    success = that._resetCaptcha.bind(that, deferred);\n\n                delete that._isValid;\n                that._toggleSuccessMessage(false);\n                that._audioEnded();\n                that._progress(true);\n\n                if (!handler) {\n                    window.console.error(\"Captcha's handler option is not defined!\");\n                    deferred.reject({ msg: \"Captcha's handler option is not defined!\", error: \"handler_not_defined\" });\n                    that._progress(false);\n                    return deferred.promise();\n                }\n\n                that._callHandler(\"reset\", handler, success)\n                    .done(function() {\n                        if (focusResetButton) {\n                            that.resetButton.trigger(\"focus\");\n                        }\n                    })\n                    .fail(function(args) {\n                        that._progress(false);\n                        deferred.reject(args);\n                    });\n                return deferred.promise();\n            },\n\n            _audioHandler: function() {\n                var that = this,\n                    handler = that.options.audioHandler,\n                    deferred = $.Deferred(),\n                    success = that._playAudio.bind(that, deferred),\n                    data = {};\n\n                data[that._captchaIdField] = that.idInput.val();\n\n                if (!handler) {\n                    window.console.error(\"Captcha's audioHandler option is not defined!\");\n                    deferred.reject({ msg: \"Captcha's audioHandler option is not defined!\", error: \"handler_not_defined\" });\n                    return deferred.promise();\n                }\n\n                that._callHandler(\"audio\", handler, success, data).fail(deferred.reject);\n                return deferred.promise();\n            },\n\n            _validationHandler: function() {\n                var that = this,\n                    handler = that.options.validationHandler,\n                    deferred = $.Deferred(),\n                    success = that._validate.bind(that, deferred),\n                    data = {};\n\n                delete that._isValid;\n\n                data[that._captchaIdField] = that.idInput.val();\n                data[that._valueField] = that.element.val();\n\n                if (!handler) {\n                    window.console.error(\"Captcha's validationHandler option is not defined!\");\n                    deferred.reject({ msg: \"Captcha's validationHandler option is not defined!\", error: \"handler_not_defined\" });\n                    return deferred.promise();\n                }\n\n                that._callHandler(\"validation\", handler, success, data).fail(deferred.reject);\n                return deferred.promise();\n            },\n\n            _callHandler: function(type, handler, success, data) {\n                var that = this,\n                    error = that._error.bind(that, type),\n                    requestEnd = that._requestEnd.bind(that, type),\n                    args;\n\n                if (isFunction(handler)) {\n                    handler({ success: success, data: data });\n                    return $.Deferred().promise();\n                } else {\n                    args = typeof handler === STRING ? { url: handler, cache: false } : extend({}, handler);\n                    args.success = success;\n                    args.data = extend({}, data, args.data);\n\n                    if (!that.trigger(REQUEST_START, { type: type, data: data })) {\n                        return ajax(args).done(requestEnd).fail(error);\n                    }\n                }\n            },\n\n            _requestEnd: function(type, data) {\n                var that = this;\n                that.trigger(REQUEST_END, { type: type, data: data });\n            },\n\n            _error: function(type, jqXHR, textStatus, errorThrown) {\n                var that = this;\n                that.trigger(ERROR, { type: type, jqXHR: jqXHR, textStatus: textStatus, errorThrown: errorThrown });\n            },\n\n            _resetCaptcha: function(deferred, data) {\n                var that = this,\n                    id = data[that._captchaIdField],\n                    captcha = data[that._captchaField];\n\n                that.idInput.val(id);\n                that.captchaImage.attr(\"src\", captcha || \"\");\n\n                that.captchaImage.off(\"load\");\n                that.captchaImage.one(\"load\", function() {\n                    that._progress(false);\n                });\n\n                that._attachImageErrorHandler();\n\n                deferred.resolve(data);\n            },\n\n            _playAudio: function(deferred, data) {\n                var that = this;\n\n                if (that._canPlayWav()) {\n                    if (that.audioElement) {\n                        return;\n                    }\n\n                    that.audioElement = new Audio(data);\n                    that.audioElement.volume = that._audioVolume || that.audioElement.volume;\n\n                    if (that.options.volumeControl) {\n                        $(that.audioElement).on(\"loadeddata\" + NS, function() {\n                            that._showVolumeControl(that.audioElement.volume);\n                        });\n                    }\n\n                    $(that.audioElement).on(\"ended\" + NS + \" error\" + NS, that._audioEnded.bind(that, deferred));\n\n                    that.audioElement.play();\n                }\n            },\n\n            _showVolumeControl: function(volume) {\n                var that = this,\n                    styles = Captcha.styles,\n                    volumeControlWrapper = $(\"<div class=\\\"\" + styles.volumeControlWrapper + \"\\\"></div>\");\n\n                if (that.volumeControl) {\n                    return;\n                }\n\n                that.volumeControlElm = $(\"<input />\");\n                that.volumeControlWrapper = volumeControlWrapper.append(that.volumeControlElm);\n                that.imageWrapper.append(volumeControlWrapper);\n                that.volumeControlWrapper.css(that._isRtl() ? \"right\" : \"left\", that.wrapper.width());\n\n                that.volumeControl = that.volumeControlElm.kendoSlider({\n                    min: 0,\n                    max: 1,\n                    smallStep: 0.1,\n                    largeStep: 0.5,\n                    orientation: \"vertical\",\n                    showButtons: false,\n                    tickPlacement: \"none\",\n                    value: volume,\n                    tooltip: {\n                        enabled: false\n                    },\n                    change: function(ev) {\n                        that._audioVolume = that.audioElement.volume = ev.value;\n                    }\n                }).data(\"kendoSlider\");\n            },\n\n            _audioEnded: function(deferred) {\n                var that = this;\n\n                if ($(document.activeElement).is(\"a.k-draghandle\")) {\n                    that.audioButton.trigger(\"focus\");\n                }\n\n                if (that.volumeControl) {\n                    that.volumeControl.destroy();\n                    that.volumeControl.wrapper.remove();\n                    delete that.volumeControl;\n                    that.volumeControlElm.remove();\n                    that.volumeControlWrapper.remove();\n                    delete that.volumeControlElm;\n                    delete that.volumeControlWrapper;\n                }\n\n                if (that.audioElement) {\n                    that.audioElement.pause();\n                }\n\n                $(that.audioElement).off(NS);\n                $(that.audioElement).remove();\n                delete that.audioElement;\n\n                if (deferred && deferred.resolve) {\n                    deferred.resolve();\n                }\n            },\n\n            _canPlayWav: function() {\n                var that = this,\n                    audio;\n\n                if (that._canPlayAudio) {\n                    return that._canPlayAudio;\n                }\n\n                audio = new Audio();\n                that._canPlayAudio = audio.canPlayType(\"audio/wav\").replace(/no/gi, \"\") !== \"\";\n\n                return that._canPlayAudio;\n            },\n\n            _validate: function(deferred, data) {\n                var that = this;\n                that._isValid = data;\n                that._toggleSuccessMessage(that._isValid);\n                deferred.resolve(data);\n            },\n\n            _toggleSuccessMessage: function(toggle) {\n                var that = this,\n                    idAttr = (that.element.attr(\"id\") || that.element.attr(\"name\")) + \"-success\",\n                    messages = that.options.messages;\n\n                $(that.successMessage).remove();\n                that.element.removeAttr(\"aria-describedby\");\n\n                if (toggle) {\n                    that.successMessage = $(\"<span id=\\\"\" + idAttr + \"\\\" class=\\\"\" + Captcha.styles.success + \"\\\">\" + kendo.htmlEncode(messages.success) + \"</span>\");\n                    that._inputWrapper.after(that.successMessage);\n                    that.element.attr(\"aria-describedby\", idAttr);\n                }\n            },\n\n            _toggleButtons: function(toggle) {\n                var that = this;\n\n                if (that.resetButton) {\n                    that.resetButton.prop(\"disabled\", !toggle);\n                }\n\n                if (that.audioButton) {\n                    that.audioButton.prop(\"disabled\", !toggle);\n                }\n            },\n\n            _progress: function(toggle) {\n                var that = this;\n\n                that.wrapper.toggleClass(Captcha.styles.loading, toggle);\n                that._inputWrapper.toggleClass(Captcha.styles.disabled, toggle);\n                that._toggleButtons(!toggle);\n                that._toggleSkeleton(toggle);\n            },\n\n            _toggleSkeleton: function(toggle) {\n                var that = this;\n\n                if (that.skeleton) {\n                    that.skeleton.remove();\n                }\n\n                if (toggle) {\n                    that.skeleton = $(\"<span class='k-skeleton k-skeleton-rect k-skeleton-pulse'></span>\").css({\n                        width: \"100%\",\n                        height: \"100%\"\n                    });\n                    that.captchaImage.before(that.skeleton);\n                }\n            },\n\n            _isRtl: function() {\n                return kendo.support.isRtl(this.wrapper);\n            },\n\n            value: function() {\n                return this.element.val();\n            },\n\n            getCaptchaId: function() {\n                return this.idInput.val();\n            },\n\n            toJSON: function() {\n                var that = this,\n                    obj = {};\n\n                obj[that._valueField] = that.value();\n                obj[that._captchaIdField] = that.getCaptchaId();\n\n                return obj;\n            },\n\n            validate: function() {\n                return this._validationHandler();\n            },\n\n            isValid: function() {\n                return this._isValid;\n            },\n\n            enable: function(toggle) {\n                var that = this;\n\n                toggle = toggle !== false;\n\n                that._toggleButtons(toggle);\n\n                that.textbox.enable(toggle);\n\n                if (toggle) {\n                    that.captchaImage.removeAttr(\"tabIndex\");\n                    that._tabindex(that.captchaImage);\n                } else {\n                    that.captchaImage.attr(\"tabIndex\", \"-1\");\n                }\n\n                that.captchaImage.toggleClass(Captcha.styles.disabled, !toggle);\n                that.wrapper.toggleClass(Captcha.styles.disabled, !toggle);\n            },\n\n            readonly: function(toggle) {\n                var that = this;\n\n                toggle = toggle !== false;\n\n                if (that.resetButton) {\n                    that.resetButton.prop(\"disabled\", toggle);\n                }\n\n                that.textbox.readonly(toggle);\n            },\n\n            speak: function() {\n                return this._audioHandler();\n            },\n\n            reset: function() {\n                return this._resetHandler();\n            }\n        });\n\n        kendo.ui.plugin(Captcha);\n\n        extend(true, Captcha, { styles: CaptchaStyles });\n\n    })(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}