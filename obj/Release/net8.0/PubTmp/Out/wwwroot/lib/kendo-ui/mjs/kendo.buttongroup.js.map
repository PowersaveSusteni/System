{"version":3,"file":"kendo.buttongroup.js","names":["__meta__","id","name","category","description","depends","$","kendo","window","ui","Widget","ToggleButton","Button","keys","NS","KBUTTON","SELECTED","DISABLED","SELECT","ARIA_DISABLED","DOT","NONE","SINGLE","MULTIPLE","FOCUS","ButtonGroup","extend","init","element","options","that","this","fn","call","wrapper","selectedIndices","_buttons","_renderItems","items","fillMode","addClass","EMPTY","attr","_enable","enable","enabled","forEach","b","selection","select","index","_attachEvents","events","preventKeyNav","size","rounded","themeColor","badge","item","value","badgeEl","button","isNaN","find","getKendoToggleButton","getKendoButton","validValue","_badge","text","htmlEncode","destroy","empty","remove","current","off","each","i","el","component","toggleClass","focused","hasClass","is","removeAttr","trigger","nodeType","length","idx","toggle","_toggleIndex","_resetIndexes","_addButton","command","togglable","selected","btn","bind","_select","on","_keyDown","e","buttonGroup","focusableItems","focusedElement","currentIndex","isRtl","support","keyCode","LEFT","RIGHT","eq","preventDefault","_decorateButtons","buttons","groupOptions","children","image","disabled","attrValue","icon","push","encoded","url","html","attributes","appendTo","indices","target","indexOf","splice","plugin","jQuery","kendo$1"],"sources":["kendo.buttongroup.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.core.js';\nimport './kendo.togglebutton.js';\nimport './kendo.button.js';\n\nconst __meta__ = {\n    id: \"buttongroup\",\n    name: \"ButtonGroup\",\n    category: \"web\",\n    description: \"The Kendo ButtonGroup widget is a linear set of grouped buttons.\",\n    depends: [ \"core\", \"togglebutton\", \"button\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo;\n    var ui = kendo.ui;\n    var Widget = ui.Widget;\n    var ToggleButton = ui.ToggleButton;\n    var Button = ui.Button;\n    var keys = kendo.keys;\n    var NS = \".kendoButtonGroup\";\n    var KBUTTONGROUP = \"k-button-group k-button-group-\";\n    var KBUTTON = \"k-button\";\n    var SELECTED = \"k-selected\";\n    var DISABLED = \"k-disabled\";\n    var KFOCUS = \"k-focus\";\n    var SELECT = \"select\";\n    var KEYDOWN = \"keydown\";\n    var ARIA_DISABLED = \"aria-disabled\";\n    var EMPTY = \" \";\n    var DOT = \".\";\n    var NONE = \"none\";\n    var SINGLE = \"single\";\n    var MULTIPLE = \"multiple\";\n    var TOGGLE = \"toggle\";\n    var FOCUS = \"focus\";\n\n    var ButtonGroup = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that.wrapper = that.element;\n\n            that.selectedIndices = [];\n\n            that._buttons = that._renderItems(that.options.items);\n            const fillMode = options && options.fillMode ? options.fillMode : 'solid';\n            that.element\n                .addClass(EMPTY + KBUTTONGROUP + fillMode)\n                .attr(\"role\", \"group\");\n\n            that._enable = true;\n\n            if (!that.options.enable || !that.options.enabled) {\n                that._enable = false;\n                that.element\n                        .attr(ARIA_DISABLED, true)\n                        .addClass(DISABLED);\n\n                that._buttons.forEach((b) => {\n                    b.enable(false);\n                });\n            }\n\n            if (that.options.selection !== NONE) {\n                that.select(that.options.index);\n            }\n\n            that._attachEvents();\n        },\n\n        events: [\n            SELECT\n        ],\n\n        options: {\n            name: \"ButtonGroup\",\n            selection: SINGLE,\n            index: -1,\n            enable: true,\n            enabled: true,\n            preventKeyNav: false,\n            size: \"medium\",\n            rounded: \"medium\",\n            fillMode: \"solid\",\n            themeColor: \"base\"\n        },\n\n        badge: function(item, value) {\n            var that = this,\n                element = that.element,\n                button = !isNaN(item) ? that._buttons[item] : element.find(item).getKendoToggleButton() || element.find(item).getKendoButton(),\n                validValue = value || value === 0,\n                badge, badgeEl;\n\n            if (!button) {\n                return;\n            }\n\n            badge = button.badge;\n\n            if (!badge && validValue) {\n                button._badge({ text: kendo.htmlEncode(value) });\n                return kendo.htmlEncode(value);\n            }\n\n            if (validValue) {\n                badge.text(kendo.htmlEncode(value));\n            } else if (value === false) {\n                button.badge = null;\n                badgeEl = badge.element;\n                badge.destroy();\n                badgeEl.empty().remove();\n                return;\n            }\n\n            return badge ? badge.text() : null;\n        },\n\n        current: function() {\n            return this.element.find(DOT + SELECTED);\n        },\n\n        destroy: function() {\n            var that = this;\n\n            that.element.off(NS);\n\n            that.element.find(DOT + KBUTTON).each(function(i, el) {\n                var component = $(el).getKendoToggleButton() || $(el).getKendoButton();\n\n                if (component) {\n                    component.destroy();\n                }\n            });\n\n            Widget.fn.destroy.call(that);\n        },\n\n        enable: function(enable) {\n            if (typeof enable == \"undefined\") {\n                enable = true;\n            }\n\n            this.element\n                    .attr(ARIA_DISABLED, !enable)\n                    .toggleClass(DISABLED, !enable);\n\n            this._buttons.forEach((b) => {\n                var focused = b.element.hasClass(KFOCUS) || b.element.is(\":focus\");\n\n                b.enable(enable);\n\n                if (focused) {\n                    b.element.removeAttr(\"disabled\").addClass(\"k-focus\").trigger(\"focus\");\n                }\n            });\n\n            this._enable = this.options.enable = enable;\n        },\n\n        select: function(el) {\n            var that = this,\n                button,\n                index = -1;\n\n            if (this.options.selection === NONE || el === undefined$1 || el === -1) {\n                return;\n            }\n\n            if (typeof el === \"number\") {\n                index = el;\n            } else if (el.nodeType) {\n                el = $(el);\n                index = el.index();\n            } else {\n                index = el.index();\n            }\n\n            button = that._buttons[index];\n\n            if (!button) {\n                return;\n            }\n\n            if (that.options.selection === MULTIPLE) {\n                if (el.length > 1) {\n                    el.each((i, element) => {\n                        var idx = $(element).index();\n\n                        that._buttons[idx].toggle();\n                        that._toggleIndex(idx);\n                    });\n                } else {\n                    that._buttons[index].toggle();\n                    that._toggleIndex(index);\n                }\n            } else {\n                that._resetIndexes(index);\n            }\n        },\n\n        _addButton: function(el, options) {\n            if (this.options.selection === NONE || (options.command && !options.togglable)) {\n                delete options.selected;\n\n                return new Button(el, options);\n            } else {\n                var btn = new ToggleButton(el, options);\n\n                btn.bind(TOGGLE, this._select.bind(this, el));\n\n                return btn;\n            }\n        },\n\n        _attachEvents: function() {\n            if (!this.options.preventKeyNav) {\n                this.element.on(KEYDOWN + NS, this._keyDown.bind(this));\n            }\n        },\n\n        _keyDown: function(e) {\n            var that = this,\n                buttonGroup = $(that.element),\n                focusableItems = buttonGroup.find(DOT + KBUTTON),\n                focusedElement = buttonGroup.find(\":focus\"),\n                currentIndex = focusableItems.index(focusedElement),\n                isRtl = kendo.support.isRtl(that.element),\n                itemToFocus;\n\n            if ((e.keyCode === keys.LEFT && !isRtl) || (e.keyCode === keys.RIGHT && isRtl)) {\n                itemToFocus = currentIndex === 0 ? focusableItems.eq(focusableItems.length - 1) : $(focusableItems[currentIndex - 1]);\n                itemToFocus.trigger(FOCUS);\n                e.preventDefault();\n            } else if ((e.keyCode === keys.LEFT && isRtl) || (e.keyCode === keys.RIGHT && !isRtl)) {\n                itemToFocus = currentIndex + 1 === focusableItems.length ? focusableItems.eq(0) : $(focusableItems[currentIndex + 1]);\n                itemToFocus.trigger(FOCUS);\n                e.preventDefault();\n            }\n        },\n\n        _decorateButtons: function(buttons) {\n            if (buttons.length) {\n                $(buttons[0].element).addClass(\"k-group-start\");\n                $(buttons[buttons.length - 1].element).addClass(\"k-group-end\");\n            }\n        },\n\n        _renderItems: function(items) {\n            var that = this,\n                groupOptions = that.options,\n                children = that.element.children(),\n                buttons = [];\n\n            if (children.length > 0) {\n                children.each(function(index) {\n                    var el = $(this),\n                        image = el.find(\"img\").addClass(\"k-image\"),\n                        disabled = el.is(\"[disabled]\") || el.hasClass(DISABLED),\n                        options = {\n                            badge: kendo.attrValue(el, \"badge\"),\n                            icon: !image[0] ? kendo.attrValue(el, \"icon\") : null,\n                            disabled: disabled,\n                            selected: !disabled ? el.is(DOT + SELECTED) : false,\n                            size: groupOptions.size,\n                            rounded: groupOptions.rounded,\n                            fillMode: groupOptions.fillMode,\n                            themeColor: groupOptions.themeColor\n                        };\n\n                    buttons.push(that._addButton(el, options));\n\n                    if (options.selected) {\n                        that.selectedIndices.push(index);\n                    }\n                });\n            }\n\n            if (!items) {\n                that._decorateButtons(buttons);\n                return buttons;\n            }\n\n            items.forEach(function(item, index) {\n                var text = item.text ? item.encoded === false ? item.text : kendo.htmlEncode(item.text) : \"\",\n                    el = item.url ? $(\"<a href=\" + item.url + \">\") : $(\"<button>\");\n\n                el.html(text);\n\n                if (item.attributes) {\n                    el.attr(item.attributes);\n                }\n\n                item = $.extend({}, item, {\n                    size: groupOptions.size,\n                    rounded: groupOptions.rounded,\n                    fillMode: groupOptions.fillMode,\n                    themeColor: groupOptions.themeColor\n                });\n\n                el.appendTo(that.element);\n                buttons.push(that._addButton(el, item));\n\n                if (item.selected) {\n                    that.selectedIndices.push(index);\n                }\n            });\n\n            that._decorateButtons(buttons);\n\n            return buttons;\n        },\n\n        _resetIndexes: function(index) {\n            this.selectedIndices = [];\n            this._buttons.forEach((b) => {\n                b.toggle(false);\n            });\n\n            this._buttons[index].toggle(true);\n            this.selectedIndices.push(index);\n        },\n\n        _select: function(button) {\n            var selection = this.options.selection,\n                index = button.index();\n\n            if (!this._enable || button.is(DOT + DISABLED)) {\n                return;\n            }\n\n            if (selection === MULTIPLE) {\n                this._toggleIndex(index);\n            } else if (selection === SINGLE) {\n                this._resetIndexes(index);\n            }\n\n            this.trigger(SELECT, { indices: this.selectedIndices, target: button });\n        },\n\n        _toggleIndex: function(index) {\n            if (this.selectedIndices.indexOf(index) === -1) {\n                this.selectedIndices.push(index);\n            } else {\n                this.selectedIndices.splice(this.selectedIndices.indexOf(index), 1);\n            }\n        }\n    });\n\n    ui.plugin(ButtonGroup);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}