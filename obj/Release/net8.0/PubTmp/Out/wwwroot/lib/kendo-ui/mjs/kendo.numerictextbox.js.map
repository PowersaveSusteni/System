{"version":3,"file":"kendo.numerictextbox.js","names":["addInputPrefixSuffixContainers","__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","caret","keys","html","ui","Widget","activeElement","_activeElement","extractFormat","_extractFormat","parse","parseFloat","placeholderSupported","support","placeholder","getCulture","CHANGE","DISABLED","READONLY","INPUT","SPIN","ns","HOVEREVENTS","FOCUSED","HOVER","FOCUS","POINT","SELECTED","STATEDISABLED","STATEINVALID","ARIA_DISABLED","INTEGER_REGEXP","NULL","isPlainObject","extend","NumericTextBox","init","element","options","min","max","step","value","inputType","that","this","isStep","fn","call","on","_focusout","bind","attr","_parse","_initialOptions","_reset","_wrapper","_arrows","_validation","_input","mobileOS","_text","browser","edge","one","_focusin","selectValue","_click","factor","format","val","enable","is","parents","readonly","_label","_ariaLabel","_applyCssClasses","widget","wrapper","prefixInsertBefore","suffixInsertAfter","_validationIcon","floatingLabel","refresh","notify","decimals","autoAdjust","restrictDecimals","round","culture","spinners","selectOnFocus","upArrowText","downArrowText","label","size","fillMode","rounded","prefixOptions","separator","suffixOptions","events","_editable","disable","text","add","off","_toggleText","_upArrowEventHandler","unbind","_downArrowEventHandler","_inputLabel","addClass","removeClass","_toggleHover","prop","e","preventDefault","_spin","_upArrow","_downArrow","_keydown","_keyup","_paste","_inputHandler","focus","setOptions","_placeholder","destroy","_arrowsWrap","remove","_floatingLabelContainer","unwrap","Boolean","_value","_form","_resetHandler","_option","_adjust","_update","_old","arrows","_release","clearTimeout","_spinning","siblings","buttonHtml","appendTo","wrapAll","parent","toggle","eq","UserEvents","release","icon","iconClass","insertAfter","_blur","_change","_focusing","setTimeout","result","groupRegExp","extractRegExp","input","target","idx","substring","_format","group","caretPosition","RegExp","exec","replace","length","indexOf","select","_getFactorValue","_typing","trigger","_culture","_removeInvalidState","numberFormat","toLowerCase","currency","percent","show","accessKey","find","first","insertBefore","setAttribute","type","title","tabIndex","style","cssText","className","role","autocomplete","key","keyCode","NUMPAD_DOT","_numPadDot","DOWN","UP","ENTER","TAB","_cachedCaret","_step","decimalSeparator","minInvalid","charAt","_isPasted","toString","_numericRegex","test","_oldText","_blinkInvalidState","_addInvalidState","_invalidStateTimeout","precision","fractionRule","_separator","_oldPrecision","_floatRegExp","option","timeout","originalValue","toFixed","currentTarget","toggleClass","removeAttr","_round","truncate","isNotNull","floating","labelText","content","wrap","FloatingLabel","isFunction","guid","DOMElement","hide","width","css","formId","form","closest","direction","dir","renderButton","shape","parts","split","join","cssProperties","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","kendo$1"],"sources":["kendo.numerictextbox.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.core.js';\nimport './kendo.userevents.js';\nimport './kendo.floatinglabel.js';\nimport './kendo.html.button.js';\nimport './kendo.icons.js';\nimport { a as addInputPrefixSuffixContainers } from './kendo.prefix-suffix-containers.chunk.js';\n\nconst __meta__ = {\n    id: \"numerictextbox\",\n    name: \"NumericTextBox\",\n    category: \"web\",\n    description: \"The NumericTextBox widget can format and display numeric, percentage or currency textbox.\",\n    depends: [\"core\", \"userevents\", \"floatinglabel\", \"html.button\", \"icons\", \"prefix-suffix-containers.chunk\"]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        caret = kendo.caret,\n        keys = kendo.keys,\n        html = kendo.html,\n        ui = kendo.ui,\n        Widget = ui.Widget,\n        activeElement = kendo._activeElement,\n        extractFormat = kendo._extractFormat,\n        parse = kendo.parseFloat,\n        placeholderSupported = kendo.support.placeholder,\n        getCulture = kendo.getCulture,\n        CHANGE = \"change\",\n        DISABLED = \"disabled\",\n        READONLY = \"readonly\",\n        INPUT = \"k-input-inner\",\n        SPIN = \"spin\",\n        ns = \".kendoNumericTextBox\",\n        TOUCHEND = \"touchend\",\n        MOUSELEAVE = \"mouseleave\" + ns,\n        HOVEREVENTS = \"mouseenter\" + ns + \" \" + MOUSELEAVE,\n        FOCUSED = \"k-focus\",\n        HOVER = \"k-hover\",\n        FOCUS = \"focus\",\n        POINT = \".\",\n        SYMBOL = \"symbol\",\n        CLASS_ICON = \"k-icon\",\n        LABELCLASSES = \"k-label k-input-label\",\n        FLOATINGLABELCLASS = \"k-floating-label\",\n        SELECTED = \"k-selected\",\n        STATEDISABLED = \"k-disabled\",\n        STATEINVALID = \"k-invalid\",\n        ARIA_DISABLED = \"aria-disabled\",\n        INTEGER_REGEXP = /^(-)?(\\d*)$/,\n        NULL = null,\n        isPlainObject = $.isPlainObject,\n        extend = $.extend;\n\n    var NumericTextBox = Widget.extend({\n         init: function(element, options) {\n             var that = this,\n             isStep = options && options.step !== undefined$1,\n             min, max, step, value, disabled;\n             var inputType;\n\n             Widget.fn.init.call(that, element, options);\n\n             options = that.options;\n             element = that.element\n                           .on(\"focusout\" + ns, that._focusout.bind(that))\n                           .attr(\"role\", \"spinbutton\");\n\n             options.placeholder = options.placeholder || element.attr(\"placeholder\");\n\n             min = that.min(element.attr(\"min\"));\n             max = that.max(element.attr(\"max\"));\n             step = that._parse(element.attr(\"step\"));\n\n             if (options.min === NULL && min !== NULL) {\n                 options.min = min;\n             }\n\n             if (options.max === NULL && max !== NULL) {\n                 options.max = max;\n             }\n\n             if (!isStep && step !== NULL) {\n                 options.step = step;\n             }\n\n             that._initialOptions = extend({}, options);\n\n             inputType = element.attr(\"type\");\n\n             that._reset();\n             that._wrapper();\n             that._arrows();\n             that._validation();\n             that._input();\n\n             if (!kendo.support.mobileOS) {\n                 that._text.on(FOCUS + ns, that._click.bind(that));\n             } else {\n                 that._text.on(TOUCHEND + ns + \" \" + FOCUS + ns, function() {\n                     if (kendo.support.browser.edge) {\n                         that._text.one(FOCUS + ns, function() {\n                            that._focusin();\n                         });\n                     } else {\n                        that._focusin();\n                     }\n                     that.selectValue();\n                 });\n             }\n\n             element.attr(\"aria-valuemin\", options.min !== NULL ? options.min * options.factor : options.min)\n                    .attr(\"aria-valuemax\", options.max !== NULL ? options.max * options.factor : options.max);\n\n             options.format = extractFormat(options.format);\n\n             value = options.value;\n\n             if (value == NULL) {\n                 if (inputType == \"number\") {\n                    value = parseFloat(element.val());\n                 } else {\n                     value = element.val();\n                 }\n             }\n\n             that.value(value);\n\n             disabled = !options.enable || element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n\n             if (disabled) {\n                 that.enable(false);\n             } else {\n                 that.readonly(element.is(\"[readonly]\"));\n             }\n\n             that._label();\n             that._ariaLabel(that._text);\n             that._applyCssClasses();\n\n             addInputPrefixSuffixContainers({ widget: that, wrapper: that.wrapper, options: that.options, prefixInsertBefore: that._text, suffixInsertAfter: that._validationIcon });\n             if (that.floatingLabel) {\n                 that.floatingLabel.refresh();\n             }\n\n             kendo.notify(that);\n         },\n\n        options: {\n            name: \"NumericTextBox\",\n            decimals: NULL,\n            autoAdjust: true,\n            enable: true,\n            restrictDecimals: false,\n            min: NULL,\n            max: NULL,\n            value: NULL,\n            step: 1,\n            round: true,\n            culture: \"\",\n            format: \"n\",\n            spinners: true,\n            placeholder: \"\",\n            selectOnFocus: false,\n            factor: 1,\n            upArrowText: \"Increase value\",\n            downArrowText: \"Decrease value\",\n            label: null,\n            size: \"medium\",\n            fillMode: \"solid\",\n            rounded: \"medium\",\n            prefixOptions: {\n                separator: true\n            },\n            suffixOptions: {\n                separator: true\n            }\n        },\n        events: [\n            CHANGE,\n            SPIN\n        ],\n\n        _editable: function(options) {\n            var that = this,\n                element = that.element,\n                disable = options.disable,\n                readonly = options.readonly,\n                text = that._text.add(element),\n                wrapper = that.wrapper.off(HOVEREVENTS);\n\n            that._toggleText(true);\n\n            that._upArrowEventHandler.unbind(\"press\");\n            that._downArrowEventHandler.unbind(\"press\");\n            element\n                .off(\"keydown\" + ns)\n                .off(\"keyup\" + ns)\n                .off(\"input\" + ns)\n                .off(\"paste\" + ns);\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n            }\n\n            if (!readonly && !disable) {\n                wrapper\n                    .removeClass(STATEDISABLED)\n                    .on(HOVEREVENTS, that._toggleHover);\n\n                text.prop(DISABLED, false)\n                    .prop(READONLY, false)\n                    .attr(ARIA_DISABLED, false);\n\n                that._upArrowEventHandler.bind(\"press\", function(e) {\n                    e.preventDefault();\n                    that._spin(1);\n                    that._upArrow.addClass(SELECTED);\n                });\n\n                that._downArrowEventHandler.bind(\"press\", function(e) {\n                    e.preventDefault();\n                    that._spin(-1);\n                    that._downArrow.addClass(SELECTED);\n                });\n\n                that.element\n                    .on(\"keydown\" + ns, that._keydown.bind(that))\n                    .on(\"keyup\" + ns, that._keyup.bind(that))\n                    .on(\"paste\" + ns, that._paste.bind(that))\n                    .on(\"input\" + ns, that._inputHandler.bind(that));\n\n                if (that._inputLabel) {\n                    that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                }\n\n            } else {\n                wrapper\n                    .addClass(disable ? STATEDISABLED : \"\")\n                    .removeClass(disable ? \"\" : STATEDISABLED);\n\n                text.attr(DISABLED, disable)\n                    .attr(READONLY, readonly)\n                    .attr(ARIA_DISABLED, disable);\n            }\n        },\n\n        readonly: function(readonly) {\n            var that = this;\n\n            this._editable({\n                readonly: readonly === undefined$1 ? true : readonly,\n                disable: false\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n            }\n        },\n\n        enable: function(enable) {\n            var that = this;\n\n            this._editable({\n                readonly: false,\n                disable: !(enable = enable === undefined$1 ? true : enable)\n            });\n\n            if (that.floatingLabel) {\n                that.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n            }\n        },\n\n        setOptions: function(options) {\n            var that = this;\n            Widget.fn.setOptions.call(that, options);\n\n            that._text.prop(\"placeholder\", that.options.placeholder);\n            that._placeholder(that.options.placeholder);\n            that.element.attr({\n                \"aria-valuemin\": that.options.min !== NULL ? that.options.min * that.options.factor : that.options.min,\n                \"aria-valuemax\": that.options.max !== NULL ? that.options.max * that.options.factor : that.options.max\n            });\n\n            that.options.format = extractFormat(that.options.format);\n            that._upArrowEventHandler.destroy();\n            that._upArrowEventHandler = null;\n            that._downArrowEventHandler.destroy();\n            that._downArrowEventHandler = null;\n            that._arrowsWrap.remove();\n            that._arrows();\n\n            that._applyCssClasses();\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n                that._inputLabel.remove();\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                    if (that._floatingLabelContainer) {\n                        that.wrapper.unwrap();\n                    }\n                }\n            }\n\n            that._label();\n\n            if (options.enable !== undefined$1 || options.readonly !== undefined$1) {\n                that._editable({\n                    readonly: options.readonly,\n                    disable: !options.enable\n                });\n            } else {\n                that._editable({\n                    readonly: that.element.attr(\"readonly\") !== undefined$1 ? Boolean(that.element.attr(\"readonly\")) : that.options.readonly,\n                    disable: that.element.attr(\"disabled\") !== undefined$1 ? Boolean(that.element.attr(\"disabled\")) : !that.options.enable\n                });\n            }\n\n            if (options.value !== undefined$1) {\n                that.value(options.value);\n            } else if (that._value !== undefined$1) {\n                that.value(that._value);\n            }\n        },\n\n        destroy: function() {\n            var that = this;\n\n            if (that._inputLabel) {\n                that._inputLabel.off(ns);\n\n                if (that.floatingLabel) {\n                    that.floatingLabel.destroy();\n                }\n            }\n\n            that.element\n                .add(that._text)\n                .add(that._upArrow)\n                .add(that._downArrow)\n                .off(ns);\n\n            that._upArrowEventHandler.destroy();\n            that._downArrowEventHandler.destroy();\n\n            if (that._form) {\n                that._form.off(\"reset\", that._resetHandler);\n            }\n\n            Widget.fn.destroy.call(that);\n        },\n\n        min: function(value) {\n            return this._option(\"min\", value);\n        },\n\n        max: function(value) {\n            return this._option(\"max\", value);\n        },\n\n        step: function(value) {\n            return this._option(\"step\", value);\n        },\n\n        value: function(value) {\n            var that = this, adjusted;\n\n            if (value === undefined$1) {\n                return that._value;\n            }\n\n            value = that._parse(value);\n            adjusted = that._adjust(value);\n\n            if (value !== adjusted) {\n                value = NULL;\n            }\n\n            that._update(value);\n            that._old = that._value;\n\n            if (that.floatingLabel) {\n                that.floatingLabel.refresh();\n            }\n        },\n\n        focus: function() {\n            this._focusin();\n            this.selectValue();\n        },\n\n        _adjust: function(value) {\n            let that = this,\n                options = that.options,\n                min = options.min,\n                max = options.max,\n                autoAdjust = options.autoAdjust;\n\n            if (value === NULL || !autoAdjust) {\n                return value;\n            }\n\n            if (min !== NULL && value < min) {\n                value = min;\n            } else if (max !== NULL && value > max) {\n                value = max;\n            }\n\n            return value;\n        },\n\n        _arrows: function() {\n            var that = this,\n            arrows,\n            _release = function() {\n                clearTimeout( that._spinning );\n                arrows.removeClass(SELECTED);\n            },\n            options = that.options,\n            spinners = options.spinners,\n            element = that.element;\n\n            arrows = element.siblings(\".k-icon-button\");\n\n            if (!arrows[0]) {\n                arrows = $(buttonHtml(\"increase\", options.upArrowText, options) + buttonHtml(\"decrease\", options.downArrowText, options))\n                        .appendTo(that.wrapper);\n\n                that._arrowsWrap = arrows.wrapAll('<span class=\"k-input-spinner k-spin-button\"/>').parent();\n            }\n\n            if (!spinners) {\n                arrows.parent().toggle(spinners);\n            }\n\n            that._upArrow = arrows.eq(0);\n            that._upArrowEventHandler = new kendo.UserEvents(that._upArrow, { release: _release });\n            that._downArrow = arrows.eq(1);\n            that._downArrowEventHandler = new kendo.UserEvents(that._downArrow, { release: _release });\n        },\n\n        _validation: function() {\n            var that = this;\n            var element = that.element;\n\n            that._validationIcon = $(kendo.ui.icon({ icon: \"exclamation-circle\", iconClass: \"k-input-validation-icon k-hidden\" })).insertAfter(element);\n        },\n\n        _blur: function() {\n            var that = this;\n\n            that._toggleText(true);\n\n            that._change(that.element.val());\n        },\n\n        _click: function(e) {\n            var that = this;\n\n            clearTimeout(that._focusing);\n            that._focusing = setTimeout(function() {\n                var input = e.target,\n                    idx = caret(input)[0],\n                    value = input.value.substring(0, idx),\n                    format = that._format(that.options.format),\n                    group = format[\",\"],\n                    result, groupRegExp, extractRegExp,\n                    caretPosition = 0;\n\n                if (group) {\n                    groupRegExp = new RegExp(\"\\\\\" + group, \"g\");\n                    extractRegExp = new RegExp(\"(-)?(\" + format[SYMBOL] + \")?([\\\\d\\\\\" + group + \"]+)(\\\\\" + format[POINT] + \")?(\\\\d+)?\");\n                }\n\n                if (extractRegExp) {\n                    result = extractRegExp.exec(value);\n                }\n\n                if (result) {\n                    caretPosition = result[0].replace(groupRegExp, \"\").length;\n\n                    if (value.indexOf(\"(\") != -1 && that._value < 0) {\n                        caretPosition++;\n                    }\n                }\n\n                that._focusin();\n\n                caret(that.element[0], caretPosition);\n                that.selectValue();\n            });\n        },\n\n        selectValue: function() {\n            if (this.options.selectOnFocus) {\n                this.element[0].select();\n            }\n        },\n\n        _getFactorValue: function(value) {\n            var that = this,\n                factor = that.options.factor;\n\n            if (factor && factor !== 1) {\n                value = kendo.parseFloat(value);\n                if (value !== null) {\n                    value = value / factor;\n                }\n            }\n\n            return value;\n        },\n\n        _change: function(value) {\n            var that = this;\n\n            value = that._getFactorValue(value);\n            that._update(value);\n            value = that._value;\n\n            if (that._old != value) {\n                that._old = value;\n\n                if (!that._typing) {\n                    // trigger the DOM change event so any subscriber gets notified\n                    that.element.trigger(CHANGE);\n                }\n\n                that.trigger(CHANGE);\n            }\n\n            that._typing = false;\n        },\n\n        _culture: function(culture) {\n            return culture || getCulture(this.options.culture);\n        },\n\n        _focusin: function() {\n            var that = this;\n            that.wrapper.addClass(FOCUSED);\n            that._toggleText(false);\n            that.element[0].focus();\n        },\n\n        _focusout: function() {\n            var that = this;\n\n            clearTimeout(that._focusing);\n            that.wrapper.removeClass(FOCUSED).removeClass(HOVER);\n            that._blur();\n            that._removeInvalidState();\n        },\n\n        _format: function(format, culture) {\n            var numberFormat = this._culture(culture).numberFormat;\n\n            format = format.toLowerCase();\n\n            if (format.indexOf(\"c\") > -1) {\n                numberFormat = numberFormat.currency;\n            } else if (format.indexOf(\"p\") > -1) {\n                numberFormat = numberFormat.percent;\n            }\n\n            return numberFormat;\n        },\n\n        _input: function() {\n            var that = this,\n                options = that.options,\n                element = that.element.addClass(INPUT).show()[0],\n                accessKey = element.accessKey,\n                wrapper = that.wrapper,\n                inputs = wrapper.find(POINT + INPUT),\n                text;\n\n            text = inputs.first();\n\n            if (text.length < 2) {\n                text = $('<input type=\"text\"/>')\n                        .attr(kendo.attr(\"validate\"), \"false\")\n                        .insertBefore(element);\n            }\n\n            try {\n                element.setAttribute(\"type\", \"text\");\n            } catch (e) {\n                element.type = \"text\";\n            }\n\n            text[0].title = element.title;\n            text[0].tabIndex = element.tabIndex;\n            text[0].style.cssText = element.style.cssText;\n            text.prop(\"placeholder\", options.placeholder);\n\n            if (accessKey) {\n                text.attr(\"accesskey\", accessKey);\n                element.accessKey = \"\";\n            }\n\n\n            that._text = text.addClass(element.className)\n                             .attr({\n                                 \"role\": \"spinbutton\",\n                                 \"aria-valuemin\": options.min !== NULL ? options.min * options.factor : options.min,\n                                 \"aria-valuemax\": options.max !== NULL ? options.max * options.factor : options.max,\n                                 \"autocomplete\": \"off\"\n                             });\n        },\n\n        _keydown: function(e) {\n            var that = this,\n                key = e.keyCode;\n\n            if (key === keys.NUMPAD_DOT) {\n                that._numPadDot = true;\n            }\n\n            if (key == keys.DOWN) {\n                that._step(-1);\n                return;\n            } else if (key == keys.UP) {\n                that._step(1);\n                return;\n            } else if (key == keys.ENTER) {\n                that._change(that.element.val());\n                return;\n            }\n\n            if (key != keys.TAB) {\n                that._typing = true;\n            }\n            that._cachedCaret = caret(that.element);\n        },\n\n        _keyup: function() {\n            this._removeInvalidState();\n        },\n\n        _inputHandler: function() {\n            var element = this.element;\n            var value = element.val();\n            var min = this.options.min;\n            var numberFormat = this._format(this.options.format);\n            var decimalSeparator = numberFormat[POINT];\n            var minInvalid = (min !== null && min >= 0 && value.charAt(0) === \"-\");\n\n            if (this._numPadDot && decimalSeparator !== POINT) {\n                value = value.replace(POINT, decimalSeparator);\n                this.element.val(value);\n                this._numPadDot = false;\n            }\n\n            if (this._isPasted && this._parse(value)) {\n                value = this._parse(value)\n                    .toString()\n                    .replace(POINT, numberFormat[POINT]);\n            }\n\n            if (this._numericRegex(numberFormat).test(value) && !minInvalid) {\n                this._oldText = value;\n            } else {\n                this._blinkInvalidState();\n                this.element.val(this._oldText);\n                if (this._cachedCaret) {\n                    caret(element, this._cachedCaret[0]);\n                    this._cachedCaret = null;\n                }\n            }\n\n            this._isPasted = false;\n        },\n\n        _blinkInvalidState: function() {\n            var that = this;\n\n            that._addInvalidState();\n            clearTimeout(that._invalidStateTimeout);\n            that._invalidStateTimeout = setTimeout(that._removeInvalidState.bind(that), 100);\n        },\n\n        _addInvalidState: function() {\n            var that = this;\n\n            that.wrapper.addClass(STATEINVALID);\n            that._validationIcon.removeClass('k-hidden');\n        },\n\n        _removeInvalidState: function() {\n            var that = this;\n\n            that.wrapper.removeClass(STATEINVALID);\n            that._validationIcon.addClass('k-hidden');\n            that._invalidStateTimeout = null;\n        },\n\n        _numericRegex: function(numberFormat) {\n            var that = this;\n            var separator = numberFormat[POINT];\n            var precision = that.options.decimals;\n            var fractionRule = \"*\";\n\n            if (separator === POINT) {\n                separator = \"\\\\\" + separator;\n            }\n\n            if (precision === NULL) {\n                precision = numberFormat.decimals;\n            }\n\n            if (precision === 0 && that.options.restrictDecimals) {\n                return INTEGER_REGEXP;\n            }\n\n            if (that.options.restrictDecimals) {\n                fractionRule = \"{0,\" + precision + \"}\";\n            }\n\n            if (that._separator !== separator || that._oldPrecision !== precision) {\n                that._separator = separator;\n                that._floatRegExp = new RegExp(\"^(-)?(((\\\\d+(\" + separator + \"\\\\d\" + fractionRule + \")?)|(\" + separator + \"\\\\d\" + fractionRule + \")))?$\");\n                that._oldPrecision = precision;\n            }\n\n            return that._floatRegExp;\n        },\n\n        _paste: function(e) {\n            var that = this;\n            var element = e.target;\n            var value = element.value;\n            var numberFormat = that._format(that.options.format);\n\n            that._isPasted = true;\n\n           setTimeout(function() {\n                var result = that._parse(element.value);\n\n                if (result === NULL) {\n                    that._update(value);\n                } else {\n                    element.value = result.toString().replace(POINT, numberFormat[POINT]);\n                    if (that._adjust(result) !== result || !that._numericRegex(numberFormat).test(element.value)) {\n                        value = that._getFactorValue(element.value);\n                        that._update(value);\n                    }\n                }\n            });\n        },\n\n        _option: function(option, value) {\n            var that = this,\n                element = that.element,\n                options = that.options;\n\n            if (value === undefined$1) {\n                return options[option];\n            }\n\n            value = that._parse(value);\n\n            if (!value && option === \"step\") {\n                return;\n            }\n\n            options[option] = value;\n            element\n                .add(that._text)\n                .attr(\"aria-value\" + option, value);\n\n            element.attr(option, value);\n        },\n\n        _spin: function(step, timeout) {\n            var that = this;\n\n            timeout = timeout || 500;\n\n            clearTimeout( that._spinning );\n            that._spinning = setTimeout(function() {\n                that._spin(step, 50);\n            }, timeout );\n\n            that._step(step);\n        },\n\n        _step: function(step) {\n            var that = this,\n                element = that.element,\n                originalValue = that._value,\n                value = that._parse(element.val()) || 0,\n                precision = that.options.decimals || 2;\n\n            if (activeElement() != element[0]) {\n                that._focusin();\n            }\n\n            if (that.options.factor && value) {\n                value = value / that.options.factor;\n            }\n\n            value = +(value + that.options.step * step).toFixed(precision);\n            value = that._adjust(value);\n            that._update(value);\n            that._typing = false;\n\n            if (originalValue !== value) {\n                that.trigger(SPIN);\n            }\n        },\n\n        _toggleHover: function(e) {\n            $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n        },\n\n        _toggleText: function(toggle) {\n            var that = this;\n\n            that._text.toggle(toggle);\n            if (toggle) {\n                that._text.removeAttr(\"aria-hidden\");\n            } else {\n                that._text.attr(\"aria-hidden\", \"true\");\n            }\n            that.element.toggle(!toggle);\n        },\n\n        _parse: function(value, culture) {\n            return parse(value, this._culture(culture), this.options.format);\n        },\n\n        _round: function(value, precision) {\n            var rounder = this.options.round ? kendo._round : truncate;\n\n            return rounder(value, precision);\n        },\n\n        _update: function(value) {\n            var that = this,\n                options = that.options,\n                factor = options.factor,\n                format = options.format,\n                decimals = options.decimals,\n                culture = that._culture(),\n                numberFormat = that._format(format, culture),\n                originalValue,\n                isNotNull;\n\n            if (decimals === NULL) {\n                decimals = numberFormat.decimals;\n            }\n\n            value = that._parse(value, culture);\n\n            isNotNull = value !== NULL;\n\n            if (isNotNull) {\n                value = parseFloat(that._round(value, decimals), 10);\n            }\n\n            that._value = value = that._adjust(value);\n            that._placeholder(kendo.toString(value, format, culture));\n\n            if (isNotNull) {\n                if (factor) {\n                    value = parseFloat(that._round(value * factor, decimals), 10);\n                }\n                value = value.toString();\n                if (value.indexOf(\"e\") !== -1) {\n                    value = that._round(+value, decimals);\n                }\n                originalValue = value;\n                value = value.replace(POINT, numberFormat[POINT]);\n            } else {\n                value = null;\n                originalValue = null;\n            }\n\n            that.element.val(value);\n            that._oldText = value;\n            that.element.add(that._text).attr(\"aria-valuenow\", originalValue);\n        },\n\n        _placeholder: function(value) {\n            var input = this._text;\n\n            input.val(value);\n            if (!placeholderSupported && !value) {\n                input.val(this.options.placeholder);\n            }\n\n            input.attr(\"title\", this.element.attr(\"title\") || input.val());\n        },\n\n        _label: function() {\n            var that = this;\n            var element = that.element;\n            var options = that.options;\n            var id = element.attr(\"id\");\n            var floating;\n            var labelText;\n\n            if (options.label !== null) {\n                floating = isPlainObject(options.label) ? options.label.floating : false;\n                labelText = isPlainObject(options.label) ? options.label.content : options.label;\n\n                if (floating) {\n                    that._floatingLabelContainer = that.wrapper.wrap(\"<span></span>\").parent();\n                    that.floatingLabel = new kendo.ui.FloatingLabel(that._floatingLabelContainer, { widget: that });\n                }\n\n                if (kendo.isFunction(labelText)) {\n                    labelText = labelText.call(that);\n                }\n\n                if (!labelText) {\n                    labelText = \"\";\n                }\n\n                if (!id) {\n                    id = options.name + \"_\" + kendo.guid();\n                    element.attr(\"id\", id);\n                }\n\n                that._inputLabel = $(\"<label class='\" + (floating ? FLOATINGLABELCLASS : LABELCLASSES) + \"' for='\" + id + \"'>\" + labelText + \"</label>'\")[floating ? \"insertAfter\" : \"insertBefore\"](that.wrapper);\n\n                if ((that.element.attr(\"disabled\") === undefined$1) && (that.element.attr(\"readonly\") === undefined$1)) {\n                    that._inputLabel.on(\"click\" + ns, that.focus.bind(that));\n                }\n            }\n        },\n\n        _wrapper: function() {\n            var that = this,\n                element = that.element,\n                DOMElement = element[0],\n                wrapper;\n\n            wrapper = element.parents(\".k-numerictextbox\");\n\n            if (!wrapper.is(\"span.k-numerictextbox\")) {\n                wrapper = element.hide().wrap(\"<span/>\").parent();\n            }\n\n            wrapper[0].style.cssText = DOMElement.style.cssText;\n            DOMElement.style.width = \"\";\n            that.wrapper = wrapper.addClass(\"k-numerictextbox k-input\")\n                                  .addClass(DOMElement.className)\n                                  .removeClass('input-validation-error')\n                                  .css(\"display\", \"\");\n        },\n\n        _reset: function() {\n            var that = this,\n                element = that.element,\n                formId = element.attr(\"form\"),\n                form = formId ? $(\"#\" + formId) : element.closest(\"form\");\n\n            if (form[0]) {\n                that._resetHandler = function() {\n                    setTimeout(function() {\n                        that.value(element[0].value);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    });\n                };\n\n                that._form = form.on(\"reset\", that._resetHandler);\n            }\n        }\n    });\n\n    kendo.cssProperties.registerPrefix(\"NumericTextBox\", \"k-input-\");\n\n    kendo.cssProperties.registerValues(\"NumericTextBox\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    function buttonHtml(direction, text, options) {\n        var className = direction === \"increase\" ? \"caret-alt-up\" : \"caret-alt-down\";\n        var dir = direction === \"increase\" ? \"increase\" : \"decrease\";\n\n        return html.renderButton('<button role=\"button\" tabindex=\"-1\" unselectable=\"on\" class=\"k-spinner-' + dir + '\" aria-label=\"' + text + '\" title=\"' + text + '\"></button>', extend({}, options, {\n            icon: className,\n            shape: null,\n            rounded: null\n        }));\n    }\n\n    function truncate(value, precision) {\n        var parts = parseFloat(value, 10).toString().split(POINT);\n\n        if (parts[1]) {\n            parts[1] = parts[1].substring(0, precision);\n        }\n\n        return parts.join(POINT);\n\n    }\n\n    ui.plugin(NumericTextBox);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}