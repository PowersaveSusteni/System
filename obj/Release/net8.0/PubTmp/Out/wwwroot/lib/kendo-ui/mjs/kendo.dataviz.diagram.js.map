{"version":3,"file":"kendo.dataviz.diagram.js","names":["$","kendo","window","diagram","dataviz","deepExtend","isArray","Array","Utils","isNearZero","num","Math","abs","isDefined","obj","isUndefined","isObject","Object","has","key","hasOwnProperty","call","isString","prototype","toString","isBoolean","isType","type","isNumber","isNaN","parseFloat","isFinite","isEmpty","length","simpleExtend","destination","source","name","initArray","size","value","array","i","serializePoints","points","res","p","push","x","y","join","deserializePoints","s","v","split","Point","parseInt","randomInteger","lower","upper","floor","random","DFT","el","func","childNodes","item","this","getMatrixAngle","m","d","atan2","b","PI","getMatrixScaling","sqrt","a","c","sign","number","findAngle","center","end","start","sngXComp","sngYComp","atan","findRadian","forEach","arr","iterator","thisRef","any","predicate","remove","what","ax","indexOf","splice","contains","inArray","fold","list","acc","context","initial","arguments","find","result","index","first","constraint","insert","element","position","all","clear","bisort","sortfunc","sort","n","addRange","range","apply","Easing","pos","cos","Ticker","Class","extend","init","adapters","target","tick","interval","duration","lastTime","handlers","_this","transition","timerDelegate","onTimerEvent","addAdapter","onComplete","handler","removeHandler","grep","h","trigger","caller","onStep","seekTo","to","seekFromTo","from","max","min","Date","getTime","intervalId","setInterval","stop","clearInterval","play","origin","initState","reverse","propagate","update","now","timePassed","movement","ui","Range","step","Infinity","j","k","rangeIntegerScale","jQuery","geometry","isFunction","map","ExtendedPoint","constructor","super","clone","plus","minus","offset","times","normalize","lengthSquared","middleOf","q","toPolar","useDegrees","factor","halfpi","len","Polar","isOnLine","temp","o1","u1","r1","Rect","inflate","r2","union","height","width","parse","str","xy","slice","PathDefiner","left","right","point","dx","dy","r","x1","y1","x2","y2","top","bottom","topLeft","topRight","bottomLeft","bottomRight","equals","rect","rotatedBounds","angle","rotatedPoints","tl","tr","br","bl","rotate","delimiter","scale","scaleX","scaleY","staicPoint","adornerCenter","thisCenter","delta","scaled","zoom","overlaps","rectBottomRight","Size","intersectLine","start1","end1","start2","end2","isSegment","tangensdiff","Empty","toRect","empty","fromPoints","Intersect","lines","segments","rectWithLine","rects","rect1","rect2","intersect","reverseAngle","RectAlign","container","align","content","alignment","alignValues","toLowerCase","_singleAlign","_align","_left","_center","_right","stretch","_stretch","_top","middle","_middle","_bottom","alignCalc","Matrix","e","f","applyRect","fromSVGMatrix","vm","fromMatrixVector","fromList","translation","unit","rotation","sin","scaling","parts","nums","trim","substr","MatrixVector","fromMatrix","randomId","chars","charAt","round","Geometry","_distanceToLineSquared","d2","pt1","pt2","vx","vy","dot","distanceToLine","distanceToPolyline","minimum","Number","MAX_VALUE","p1","p2","HashTable","_buckets","add","_createGetBucket","get","_bucketExists","set","containsKey","hashId","_hash","hashes","_hashes","hash","bucket","ht","_hashString","_objectHashId","charCodeAt","id","_hashId","Dictionary","Observable","dictionary","fn","_hashTable","entry","Error","forEachValue","forEachKey","keys","Queue","_tail","_head","enqueue","next","dequeue","current","Set","resource","kv","toArray","Node","shape","links","outgoing","incoming","weight","associatedShape","bounds","data","shortForm","isVirtual","isIsolated","isLinkedTo","node","that","link","getComplement","getChildren","children","getParents","parents","copy","balance","owner","adjacentTo","removeLink","hasLinkTo","degree","incidentWith","getLinksWith","getNeighbors","neighbors","Link","connection","sourceFound","targetFound","associatedConnection","getCommonNode","isBridging","v1","v2","getNodes","changeSource","changeTarget","changesNodes","w","oldSource","oldTarget","directTo","createReverseEdge","reversed","Graph","idOrDiagram","nodes","_nodeMap","_root","_hasCachedRelationships","cacheRelationships","forceRebuild","assignLevels","startNode","visited","level","child","root","found","getConnectedComponents","componentIndex","setItemIndices","componentId","_collectConnectedNodes","components","addNodeAndOutgoings","setIds","nodeIndex","nextId","calcBounds","getSpanningTree","tree","remaining","_addNode","levelCount","pop","ni","cn","newLink","addLink","treeLevels","takeRandomNode","excludedNodes","incidenceLessThan","pool","isHealthy","hasNode","sourceOrLink","addExistingLink","foundSource","getNode","addNode","foundTarget","removeAllLinks","hasLink","t","linkOrId","nodeOrId","_removeNode","removeNode","areConnected","n1","n2","layoutRect","newNode","newLinks","saveMapping","save","nodeMap","linkMap","nOriginal","nCopy","linkOriginal","linkCopy","linearize","addIds","depthFirstTraversal","action","foundNode","_dftIterator","breadthFirstTraversal","queue","_stronglyConnectedComponents","excludeSingleItems","indices","lowLinks","connected","stack","component","findCycles","isAcyclic","isSubGraph","other","otherArray","thisArray","makeAcyclic","oneNode","rev","N","intensityCatalog","flowIntensity","catalogEqualIntensity","intensity","sourceStack","targetStack","targets","li","targetLink","unshift","sources","si","sourceLink","ri","ril","u","concat","vertexOrder","kk","reversedEdges","Predefined","EightGraph","Mindmap","ThreeGraph","BinaryTree","levels","createBalancedTree","Linear","Tree","siblingsCount","Forest","trees","createBalancedForest","Workflow","Grid","g","previous","graphString","previousLink","graph","part","lin","_addShape","kendoDiagram","shapeDefaults","radius","fill","undoable","addShape","_addConnection","options","connect","createDiagramFromGraph","doLayout","randomSize","clientWidth","clientHeight","opt","color","gli","sourceShape","targetShape","SpringLayout","layoutGraph","limitToView","shi","news","counter","lastAdded","parent","treeCount","createRandomConnectedGraph","nodeCount","maxIncidence","isTree","poolNode","randomAdditions","randomDiagram","shapeCount","normalVariable","mean","deviation","log","undefined$1","drawing","defined","util","TRANSPARENT","Markers","none","arrowStart","filledCircle","arrowEnd","START","END","WIDTH","HEIGHT","diffNumericOptions","fields","field","elementOptions","hasChanges","Scale","toMatrix","format","invert","Translation","toMatrixVector","Length","Rotation","ZERO","create","values","CompositeTransform","translate","transform","render","visual","_transform","_renderTransform","rotateMatrix","scaleMatrix","translatePoint","AutoSizeableMixin","_setScale","originWidth","_originWidth","originHeight","_originHeight","_setTranslate","_initSize","autoSize","_measure","_updateSize","_diffNumericOptions","Element","_originSize","visible","drawingContainer","redraw","drawingElement","matrix","_hover","force","_measured","box","_boundingBox","startPoint","rawBBox","VisualBase","normalizeDrawingOptions","stroke","opacity","_fill","getColor","_stroke","show","hover","strokeOptions","dashType","fillOptions","gradient","GradientClass","RadialGradient","LinearGradient","TextBlock","_textColor","_font","_initText","fontSize","fontFamily","Text","text","font","fontOptions","fontStyle","fontWeight","sizeChanged","textOptions","Rectangle","_initPath","_setPosition","_drawPath","Path","closed","sizeOptions","sizeOptionsOrDefault","elements","createSegment","MarkerBase","anchor","createElement","_transformToPath","path","transformCopy","CircleMarker","Circle","positionMarker","targetSegment","ArrowMarker","xDiff","yDiff","_linePoints","deg","endPoint","controlOut","nextSegment","controlIn","prevSegment","MarkerPathMixin","_getPath","MultiPath","paths","_normalizeMarkerOptions","startCap","endCap","_removeMarker","marker","_markers","_createMarkers","_createMarker","markerType","append","_positionMarker","_capMap","_redrawMarker","pathChange","pathOptions","cap","pathCapType","optionsCap","created","_redrawMarkers","Group","_createElements","_setData","multipath","Line","Polyline","_updatePath","_pointsDiffer","currentPoints","differ","Image","_initImage","src","_rect","_childrenChange","_remove","removeAt","toFront","visuals","toBack","_reorderChildren","toIndex","group","drawingChildren","fixedPosition","boundingBox","childBoundingBox","_includeInBBox","clippedBBox","Layout","toDrawingRect","drawingRect","reflow","_initCircle","circleOptions","move","_circle","setRadius","Canvas","surface","Surface","_translate","_viewBox","viewBox","setSize","draw","insertBefore","destroy","clearHtml","drawingOptions","Color","toHex","Segment","Movable","Cursors","arrow","grip","cross","select","south","east","west","north","rowresize","colresize","HIT_TEST_DISTANCE","AUTO","TOP","RIGHT","LEFT","BOTTOM","DRAG_START","DRAG","DRAG_END","ITEMBOUNDSCHANGE","ROTATED","TARGET","HANDLE_NAMES","PositionAdapter","layoutState","froms","tos","subjects","getShapeById","LayoutUndoUnit","initialState","finalState","animate","_initialState","_finalState","title","undo","setState","redo","state","conn","ticker","CompositeUnit","units","undoUnit","ConnectionEditUnit","redoSource","redoTarget","_redoSource","_redoTarget","_undoSource","_undoTarget","_updateConnector","updateModel","ConnectionEditUndoUnit","undoSource","undoTarget","DeleteConnectionUnit","targetConnector","DeleteShapeUnit","TransformUnit","shapes","undoStates","adorner","redoStates","layout","refreshBounds","refresh","AddConnectionUnit","AddShapeUnit","deselect","PanUndoUnit","initialPosition","finalPosition","finalPos","pan","RotateUnit","undoRotates","redoRotates","redoAngle","_angle","_innerBounds","_initialize","ToFrontUnit","items","initialIndices","_toIndex","ToBackUnit","UndoRedoService","bind","events","capacity","begin","composite","cancel","commit","execute","_restart","addCompositeItem","count","EmptyTool","toolService","tryActivate","getCursor","ScrollerTool","tool","friction","support","mobileOS","canvas","scroller","scrollable","kendoMobileScroller","velocityMultiplier","mousewheelScrolling","scroll","_move","movableCanvas","virtualScroll","dimension","makeVirtual","virtualSize","dimensions","disable","meta","pannable","enabled","ctrlKey","noMeta","hoveredItem","hoveredAdorner","_hoveredConnector","enable","args","scrollPos","scrollLeft","scrollTop","_storePan","moveTo","_pan","PointerTool","selectSingle","handle","_hitTest","_resizingAdorner","isDragHandle","connections","undoRedoService","_getCursor","SelectionTool","selectable","multiple","selector","isSelected","selectArea","ConnectionTool","connector","_createConnection","_c","canDrag","connectionHandle","_connectionManipulation","_removeHover","activeConnection","_cachedTouchTarget","cachedTouchTarget","sourceConnector","Shape","getConnector","_syncConnectionChanges","_connectorsAdorner","ConnectionEditTool","isActive","handleName","testKey","toUpperCase","ToolService","tools","activeTool","_updateHoveredItem","_activateTool","_updateCursor","focus","suspendTracking","updateHovered","resumeTracking","keyDown","metaKey","altKey","toRemove","_triggerRemove","_syncChanges","_destroyToolBar","_discardNewConnection","selectAll","cut","paste","wheel","z","zoomRate","zoomOptions","zoomMin","zoomMax","setTool","addToSelection","newConnection","cursor","css","disabledShape","isNew","hit","_visible","selectedConnections","_selectedItems","Connection","_hitTestItems","_hitTestElements","shapeHit","connectionHit","idx","connectors","hitTestShapeConnectors","mainLayer","ConnectionRouterBase","LinearConnectionRouter","hitTest","getBounds","allPoints","PolylineRouter","route","CascadingRouter","SAME_SIDE_DISTANCE_RATIO","routePoints","_connectorPoints","_floatingPoints","_resolvedSourceConnector","_resolvedTargetConnector","sourcePoint","targetPoint","_connectorSides","axis","boundsPoint","secondarySign","_connectorSide","sideDistance","minSide","side","shapeBounds","sides","MAX_NUM","_sameSideDistance","pointX","pointY","sourceConnectorSide","targetConnectorSide","deltaX","deltaY","sameSideDistance","shiftX","shiftY","cascadeStartHorizontal","_startHorizontal","sourceSide","AdornerBase","_adorners","ConnectionEditAdorner","_ts","sp","tp","spVisual","handles","epVisual","_initialSource","_initialTarget","ts","radiusX","radiusY","sourcePointDistance","distanceTo","targetPointDistance","sourceHandle","targetHandle","modelToLayer","ConnectorsAdorner","_refreshHandler","ctr","_clearVisual","ConnectorVisual","_keepCachedTouchTarget","visualChildren","childrenCount","unbind","each","ResizingAdorner","_manipulating","_initSelection","_createHandles","selected","_internalChange","_rotatedHandler","_resizable","editable","resize","_handleOptions","_bounds","handleBounds","handlesCount","_getHandleBounds","_rotationOffset","_startAngle","_rotates","_positions","initialRotates","initialStates","handleOptions","_sp","_cp","_lp","shapeStates","visibleHandles","currentAngle","dragging","newBounds","staticPoint","dtl","dbr","changed","_truncateAngle","_rotating","shouldSnap","thr","_truncateDistance","hitToOppositeSide","_displaceBounds","newCenter","minWidth","minHeight","oldBounds","states","_truncatePositionToGuides","ruler","truncatePositionToGuides","_truncateSizeToGuides","truncateSizeToGuides","snap","snapOptions","snapAngle","snapSize","drag","_diffStates","_syncShapeChanges","rotationThumb","thumb","_rotationThumbBounds","Selector","_ep","_adorn","visualBounds","modelToView","relative","_visualBounds","shiftKey","HyperTree","EPSILON","DEG_TO_RAD","LayoutBase","defaultOptions","subtype","roots","nodeDistance","iterations","horizontalSeparation","verticalSeparation","underneathVerticalTopOffset","underneathHorizontalOffset","underneathVerticalSeparation","grid","offsetX","offsetY","componentSpacingX","componentSpacingY","layerSeparation","layeredIterations","startRadialAngle","endRadialAngle","radialSeparation","radialFirstLevelSeparation","keepComponentsInOneRadialLayout","ignoreContainers","layoutContainerChildren","ignoreInvisible","animateTransitions","gridLayoutComponents","maxWidth","startX","resultLinkSet","resultNodeSet","moveToOffset","boundingRect","currentHeight","currentWidth","deltax","deltay","nodeBounds","newpoints","pt","currentHorizontalOffset","transferOptions","DiagramToHyperTreeAdapter","shapeMap","edges","edgeMap","finalNodes","finalLinks","ignoredConnections","ignoredShapes","hyperMap","hyperTree","finalGraph","convert","_renormalizeShapes","_renormalizeConnections","l","mapConnection","mapShape","getEdge","listToRoot","containerGraph","parentContainer","firstNonIgnorableContainer","isContainer","_isIgnorableItem","isContainerConnection","isDescendantOf","scope","containers","isIgnorableItem","isCollapsed","_isVisible","_isTop","isShapeMapped","leastCommonAncestor","al","xa","xb","_isCollapsed","sink","sourceNode","sinkNode","areConnectedAlready","newEdge","finalNodeSet","LayoutState","initialTemperature","temperature","guessBounds","_expectedBounds","refineStage","_repulsion","_attraction","_shake","rho","alpha","_InverseSquareForce","wn","hn","wm","hm","pow","_SquareForce","distance","squareSize","area","ceil","TreeLayoutProcessor","treeGraph","layoutSwitch","layoutLeft","setChildrenDirection","setChildrenLayout","TreeDirection","measure","Width","arrange","layoutRight","layoutUp","up","layoutDown","down","treeDirection","layoutRadialTree","previousRoot","startAngle","endAngle","maxDepth","calculateAngularWidth","radialLayout","Angle","tipOverTree","startFromLevel","aw","diameter","sectorAngle","sortChildren","basevalue","pl","nl","normalizeAngle","col","deltaTheta","deltaThetaHalf","parentSector","fraction","sorted","childNode","cp","childAngleFraction","setPolarLocation","BoundingRectangle","direction","includeStart","rootDirection","rootLayout","childrenLayout","givenSize","shapeWidth","shapeHeight","AngleToParent","SectorAngle","pp","childrenwidth","selfLocation","single","male","female","leftcount","tipOverTreeStartLevel","TreeLayout","adapter","layoutComponents","getTree","getTreeForRoot","LayeredLayout","_initRuntimeProperties","layer","downstreamLinkCount","upstreamLinkCount","uBaryCenter","dBaryCenter","upstreamPriority","downstreamPriority","gridPosition","_prepare","targetLayer","layerMap","layerCount","shift","sortedNodes","o2","o1layer","o2layer","minLayer","layers","linksTo","_dummify","_optimizeCrossings","_swapPairs","arrangeNodes","_moveThingsAround","_dedummify","setMinDist","minDist","layerIndex","minDistances","getMinDist","dist","i1","i2","placeLeftToRight","leftClasses","leftPos","classNodes","placeLeft","POSITIVE_INFINITY","rightSibling","nodeLeftClass","D","upNodes","downNodes","neighbor","intDiv","placeRightToLeft","rightClasses","rightPos","placeRight","NEGATIVE_INFINITY","leftSibling","nodeRightClass","_getLeftWing","leftWing","computeClasses","_getRightWing","rightWing","wingPair","currentWing","wing","ndsinl","_nodesInLink","vnode","wings","classIndex","_isVerticalLayout","_isHorizontalLayout","_isIncreasingLayout","_gridPositionComparer","dest","currentNode","currDown","downNode","order","placed","sequenceStart","virtualStartIndex","_firstVirtualNode","virtualStart","sequence","_sequencer","virtualEnd","nextVirtualNode","virtualEndIndex","adjustDirections","ctx","fromLayerIndex","layerIncrement","maximumHeight","MIN_VALUE","prevBridge","prevBridgeTarget","nextBridge","nextBridgeTarget","getNeighborOnLayer","clayer","j1","j2","dir","_sequenceSingle","combineSequences","pair","leftHeap","_positionDescendingComparer","rightHeap","_positionAscendingComparer","leftRes","rightRes","leftClass","_getComposite","rightClass","it","layoutLayer","gridPos","iconsidered","considered","n1Priority","n2Priority","nodeGridPos","nodeBaryCenter","calcBaryCenter","nodePriority","moveRight","moveLeft","calcDownData","calcUpData","priority","rightNode","rightNodePriority","leftNode","leftNodePriority","mapVirtualNode","nodeToLinkMap","linkToNodeMap","addLinkBetweenLayers","upLayer","downLayer","o","oLayer","dLayer","oPos","dPos","depthOfDumminess","dedum","prevLink","moves","iter","optimizeLayerCrossings","sum","total","presorted","n1BaryCenter","n2BaryCenter","compareByIndex","compareValue","inode","maxIterations","downwards","secondPass","hasSwapped","calcCrossings","memCrossings","crossBefore","countLinksCrossingBetweenTwoLayers","node1","node2","node1GridPos","node2GridPos","crossAfter","ulayer","dlayer","link1","link2","n11","n12","n21","n22","l1","l2","crossings","n11gp","n12gp","numerator","denominator","graphOrNodes","capture","diagramOrGraphOrNodes","GraphAdapter","geom","Widget","outerWidth","_outerWidth","outerHeight","_outerHeight","HierarchicalDataSource","isPlainObject","math","NS","CASCADING","CHANGE","CLICK","ERROR","MAXINT","SELECT","ITEMROTATE","PAN","ZOOM_START","ZOOM_END","NONE","TRANSFORMED","MOUSEWHEEL_NS","BUTTON_TEMPLATE","className","icon","themeColor","html","renderButton","DefaultConnectors","getPosition","defaultButtons","imageClass","isAutoConnector","closestConnector","resCtr","minimumDistance","indicesOfItems","extra","defaults","DiagramElement","dataItem","_template","serializable","serialize","json","_content","contentOptions","_contentVisual","_updateContentVisual","_createContentVisual","template","elementTemplate","paramName","_canSelect","toJSON","Connector","shapeId","tempStr","updateOptionsFromModel","createShapeVisual","updateBounds","_createConnectors","_setOptionsFromModel","model","modelOptions","filterShapeDataItem","redrawVisual","_isEditable","_redrawVisual","syncChanges","_suspendModelRefresh","_resumeModelRefresh","_rotate","_alignContent","contentVisual","containerRect","aligner","contentBounds","bbox","contentRect","alignedBounds","connectorDefaults","_transformedBounds","_rotatedBounds","_setBounds","_triggerBoundsChange","_layouting","refreshConnections","cloneDataItem","deselected","_internalSelection","_selectionChanged","deltaAngle","newPosition","sc","con","cons","nameOrPoint","toLocaleLowerCase","fnName","_transformPoint","boundsChange","shapeOptions","shapeVisual","_visualOptions","_updateConnectors","_showConnectors","rotatedPoint","visualOptions","visualTemplate","_initRouter","_sourcePoint","_targetPoint","_setSource","_setTarget","definers","fromConnector","toConnector","dataMap","_dataMap","fromX","fromY","toX","toY","filterConnectionDataItem","connectionsDataSource","getByUid","uid","clearField","shapeSource","defaultConnector","_removeFromSourceConnector","_clearSourceConnector","_setFromOptions","fromPoint","sourceDefiner","_sourceDefiner","shapeTarget","_removeFromTargetConnector","_clearTargetConnector","_setToOptions","toPoint","targetDefiner","_targetDefiner","instance","connectorName","setNewTarget","inactiveItem","_inactiveShapeItems","_deferredConnectionUpdates","onActivate","endIdx","startIdx","alignToPath","midIdx","selection","_router","pts","definition","_resolveConnectors","_refreshPath","sourceConnectors","targetConnectors","_resolveAutoConnectors","minNonConflictSource","minNonConflictTarget","minSource","minTarget","sourceIdx","targetIdx","minNonConflict","_testRoutePoints","router","passRoute","exclude","_getRouteExclude","_shapesQuadTree","hitTestRect","_isPointInsideShape","boundsX","boundsY","Diagram","userOptions","_initTheme","_initElements","_extendLayoutOptions","_initDefaults","_interactionDefaults","_initCanvas","ShapesQuadTree","adornerLayer","_createHandlers","_clipboard","pauseMouseHandlers","_fetchFreshData","_createGlobalToolBar","_createOptionElements","theme","dataSource","draggable","autoBind","tooltip","connectionDefaults","toolBar","DiagramToolBar","click","_toolBarClick","modal","textAlign","prepend","_resize","createShape","editor","view","createModel","_createShape","edit","createConnection","_connectionsDataMap","addConnection","editModel","editorType","editors","cancelEdit","shapeEditors","shapeTemplate","connectionSelectorHandler","connectionSelector","connectionEditors","connectionTemplate","PopupEditor","_update","_cancel","_editArgs","_getEditDataSource","cancelChanges","_destroyEditor","saveEdit","sync","wrapper","close","attr","addClass","appendTo","userShapeDefaults","copyDefaultOptions","mobile","canvasContainer","viewPort","viewport","on","_wheel","_keydown","_userEvents","UserEvents","multiTouch","fastTap","tap","_tap","_dragStart","_drag","_dragEnd","gesturestart","_gestureStart","gesturechange","_gestureChange","gestureend","_gestureEnd","doubleTap","_doubleTap","supportDoubleTap","_mouseover","_mouseout","_mouseMove","_mouseDown","_mouseUp","_syncHandler","_resizeHandler","onResize","_pauseMouseHandlers","_eventPositions","event","_meta","preventDefault","_createToolBar","focused","ctrlPressed","keyCode","origEvent","originalEvent","wheelDelta","detail","mwDelta","touch","pageX","pageY","documentToModel","initialCenter","eventArgs","_gesture","_initialCenter","previousGesture","documentToView","scaleDelta","_zoom","updateZoom","_getValidZoom","zoomedPoint","_panTransform","_updateAdorners","pointPosition","_kendoNode","srcElement","themeOptions","themeName","themes","SASS_THEMES","autoTheme","shapesLength","_createShapes","_createConnections","_findConnectionTarget","unbindResize","off","destroyScroller","_destroyGlobalToolBar","is","_activeElement","scrollContainer","offsets","documentElement","document","parentNode","scrollHeight","load","setOptions","added","removed","_parseBounds","splitDiagramElements","_removeItem","_removeShapeDataItem","_removeConnectionDataItem","_getDiagramItems","_fixOrdering","bringIntoView","original","newPan","_zoomMainLayer","alignShapes","val","raw","hideTooltip","_getPan","animatedScrollTo","scrollTo","_copyOffset","copied","mapping","_updateCopiedConnection","sourceConnection","di","_containerOffset","containerOffset","viewToDocument","viewToModel","_transformWithMatrix","_matrixInvert","_matrix","_layerMatrix","layerToModel","_layerMatrixInvert","viewPoint","modelToDocument","setDataSource","_dataSource","fetch","setConnectionsDataSource","_connectionDataSource","_redrawConnections","getShapeByModelId","getShapeByModelUid","getConnectionByModelId","getConnectionByModelUid","_transformMainLayer","_finishPan","NaN","_storeViewMatrix","_storeLayerMatrix","canvasTransform","shapePos","conPos","removedConnections","_removeShape","_removeConnection","_removeDataItems","recursive","_removeShapeConnections","hasChildren","loaded","_addDataItem","_addDataItemByUid","_addDataItems","parentShape","_refreshSource","dataBound","_bindingRoots","_addItem","preventClosing","singleToolBar","popupZIndex","closest","popupWidth","_popup","popupHeight","connectionBounds","showAt","one","_normalizePointZoom","InactiveItemsCollection","undone","redone","_loadingShapes","_loadingConnections","dsOptions","ds","_shapesRefreshHandler","_shapesRequestStartHandler","_shapesErrorHandler","_refreshShapes","_shapesRequestStart","_error","DataSource","_treeDataSource","_connectionsRefreshHandler","_connectionsRequestStartHandler","_connectionsErrorHandler","_refreshConnections","_connectionsRequestStart","_connectionsError","_shouldRefresh","_removeShapes","_updateShapes","_syncShapes","_suspended","_rebindShapesAndConnections","_addShapes","_addConnections","inactiveItems","activate","dataItems","_removeConnections","_updateConnections","_addConnectionDataItem","_validateConnector","_unbindDataSource","_errorHandler","adorners","_refresh","hide","exportDOMVisual","scrollOffset","viewRect","clipPath","fromRect","wrap","clipWrap","clip","exportVisual","when","then","deferredConnectionUpdates","ExportMixin","PDFMixin","_tools","createToolBar","createTools","appendTools","createPopup","kendoPopup","getKendoPopup","buttons","_toolBar","kendoToolBar","resizable","getKendoToolBar","createTool","toolName","attributes","_setAttributes","open","newGroup","editTool","showText","deleteTool","rotateAnticlockwiseTool","_appendGroup","_rotateGroup","rotateClockwiseTool","createShapeTool","_createGroup","createConnectionTool","undoTool","_historyGroup","redoTool","prop","_getAttributes","eventData","selectedElements","delete","selectedElemens","rotateClockwise","rotateAnticlockwise","Editor","_getFields","_initContainer","createEditable","Editable","clearContainer","modelFields","columns","formContent","_renderTemplate","_renderFields","_renderButtons","Window","userTriggered","sender","_cancelClick","_attachButtonEvents","unescape","form","_createButton","_cancelClickHandler","_updateClickHandler","_updateClick","_editUpdateClickHandler","reader","textField","idField","kendoDropDownList","dataValueField","dataTextField","optionLabel","valuePrimitive","InactiveItem","callbacks","callback","deffered","Deferred","deferred","resolve","QuadRoot","_add","_quadNode","_testRect","QuadNode","inBounds","nodeRect","nodeBottomRight","overlapsBounds","inserted","_initChildren","childIdx","shapeIdx","halfWidth","halfHeight","ROOT_SIZE","boundsChangeHandler","_boundsChange","initRoots","rootMap","rootSize","sectors","getSectors","inRoot","bottomX","bottomY","xIdx","yIdx","Model","_defaultId","ObservableObject","mainOptions","plugin","__meta__","category","description","depends","features","kendo$1"],"sources":["kendo.dataviz.diagram.js"],"mappings":"MAAO,wBACA,+BACA,8BACA,mCACA,wBACA,gCACA,2BACA,2BACA,4BACA,0BACA,gCACA,kCACA,0BAEP,SAAUA,GACN,IAAIC,EAAQC,OAAOD,MACfE,EAAUF,EAAMG,QAAQD,QAAU,CAAC,EACnCE,EAAaJ,EAAMI,WACnBC,EAAUC,MAAMD,QAIhBE,EAAQ,CACZ,EAEAH,EAAWG,EAAO,CACdC,WAAY,SAASC,GACjB,OAAOC,KAAKC,IAAIF,GARV,IASV,EACAG,UAAW,SAASC,GAChB,YAAsB,IAARA,CAClB,EAEAC,YAAa,SAASD,GAClB,OAAO,MAAQA,CACnB,EAIAE,SAAU,SAASF,GACf,OAAOA,IAAQG,OAAOH,EAC1B,EAIAI,IAAK,SAASJ,EAAKK,GACf,OAAOF,OAAOG,eAAeC,KAAKP,EAAKK,EAC3C,EAIAG,SAAU,SAASR,GACf,MAA8C,mBAAvCG,OAAOM,UAAUC,SAASH,KAAKP,EAC1C,EACAW,UAAW,SAASX,GAChB,MAA8C,oBAAvCG,OAAOM,UAAUC,SAASH,KAAKP,EAC1C,EACAY,OAAQ,SAASZ,EAAKa,GAClB,OAAOV,OAAOM,UAAUC,SAASH,KAAKP,IAAQ,WAAaa,EAAO,GACtE,EAIAC,SAAU,SAASd,GACf,OAAQe,MAAMC,WAAWhB,KAASiB,SAASjB,EAC/C,EAIAkB,QAAS,SAASlB,GACd,GAAY,OAARA,EACA,OAAO,EAEX,GAAIR,EAAQQ,IAAQN,EAAMc,SAASR,GAC/B,OAAsB,IAAfA,EAAImB,OAEf,IAAK,IAAId,KAAOL,EACZ,GAAIN,EAAMU,IAAIJ,EAAKK,GACf,OAAO,EAGf,OAAO,CACX,EACAe,aAAc,SAASC,EAAaC,GAChC,GAAK5B,EAAMQ,SAASoB,GAIpB,IAAK,IAAIC,KAAQD,EACbD,EAAYE,GAAQD,EAAOC,EAEnC,EAOAC,UAAW,SAAuBC,EAAMC,GAEpC,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAIH,IAAQG,EACxBD,EAAMC,GAAKF,EAEf,OAAOC,CACX,EACAE,gBAAiB,SAASC,GAEtB,IADA,IAAIC,EAAM,GACDH,EAAI,EAAGA,EAAIE,EAAOX,OAAQS,IAAK,CACpC,IAAII,EAAIF,EAAOF,GACfG,EAAIE,KAAKD,EAAEE,EAAI,IAAMF,EAAEG,EAC3B,CACA,OAAOJ,EAAIK,KAAK,IACpB,EACAC,kBAAmB,SAASC,GACxB,IAAIC,EAAID,EAAEE,MAAM,KAAMV,EAAS,GAC/B,GAAIS,EAAEpB,OAAS,GAAM,EACjB,KAAM,0BAEV,IAAK,IAAIS,EAAI,EAAGA,EAAIW,EAAEpB,OAAQS,GAAK,EAC/BE,EAAOG,KAAK,IAAI5C,EAAQoD,MACpBC,SAASH,EAAEX,GAAI,IACfc,SAASH,EAAEX,EAAI,GAAI,MAG3B,OAAOE,CACX,EAOAa,cAAe,SAASC,EAAOC,GAC3B,OAAOH,SAAS7C,KAAKiD,MAAMjD,KAAKkD,SAAWF,GAASD,EAAO,GAC/D,EAIAI,IAAK,SAASC,EAAIC,GAEd,GADAA,EAAKD,GACDA,EAAGE,WACH,IAAK,IAAIvB,EAAI,EAAGA,EAAIqB,EAAGE,WAAWhC,OAAQS,IAAK,CAC3C,IAAIwB,EAAOH,EAAGE,WAAWvB,GACzByB,KAAKL,IAAII,EAAMF,EACnB,CAER,EAIAI,eAAgB,SAASC,GACrB,OAAU,OAANA,GAAsB,IAARA,EAAEC,EACT,EAEmB,IAAvB3D,KAAK4D,MAAMF,EAAEG,EAAGH,EAAEC,GAAW3D,KAAK8D,EAC7C,EAKAC,iBAAkB,SAASL,GAGvB,MAAO,CAFE1D,KAAKgE,KAAKN,EAAEO,EAAIP,EAAEO,EAAIP,EAAEQ,EAAIR,EAAEQ,GAC9BlE,KAAKgE,KAAKN,EAAEG,EAAIH,EAAEG,EAAIH,EAAEC,EAAID,EAAEC,GAE3C,IAqEJ9D,EAAMsE,KAAO,SAASC,GAClB,OAAOA,EAASA,EAAS,GAAK,EAAI,EAAI,CAC1C,EAEAvE,EAAMwE,UAAY,SAASC,EAAQC,GAC/B,OAAiC,IAlBrC,SAAoBC,EAAOD,GACvB,GAAIC,GAASD,EACT,OAAO,EAEX,IAAIE,EAAWF,EAAIlC,EAAImC,EAAMnC,EACzBqC,EAAWF,EAAMlC,EAAIiC,EAAIjC,EACzBqC,EAAO3E,KAAK2E,KAAKF,EAAWC,GAChC,OAAIA,GAAY,EACLD,EAAW,EAAIE,EAAQ,EAAI3E,KAAK8D,GAAMa,EAE1CA,EAAO3E,KAAK8D,EACvB,CAOWc,CAAWN,EAAQC,GAAavE,KAAK8D,EAChD,EAIAjE,EAAMgF,QAAU,SAASC,EAAKC,EAAUC,GACpC,IAAK,IAAIjD,EAAI,EAAGA,EAAI+C,EAAIxD,OAAQS,IAC5BgD,EAASrE,KAAKsE,EAASF,EAAI/C,GAAIA,EAAG+C,EAE1C,EAEAjF,EAAMoF,IAAM,SAASH,EAAKI,GACtB,IAAK,IAAInD,EAAI,EAAGA,EAAI+C,EAAIxD,SAAUS,EAC9B,GAAImD,EAAUJ,EAAI/C,IACd,OAAO+C,EAAI/C,GAGnB,OAAO,IACX,EAEAlC,EAAMsF,OAAS,SAASL,EAAKM,GAEzB,IADA,IAAIC,GACwC,KAApCA,EAAKxF,EAAMyF,QAAQR,EAAKM,KAC5BN,EAAIS,OAAOF,EAAI,GAEnB,OAAOP,CACX,EAEAjF,EAAM2F,SAAW,SAASV,EAAK3E,GAC3B,OAAoC,IAA7BN,EAAMyF,QAAQR,EAAK3E,EAC9B,EAEAN,EAAMyF,QAAU,SAASR,EAAKM,GAC1B,OAAO/F,EAAEoG,QAAQL,EAAMN,EAC3B,EAEAjF,EAAM6F,KAAO,SAASC,EAAMZ,EAAUa,EAAKC,GAGvC,IAFA,IAAIC,EAAUC,UAAUzE,OAAS,EAExBS,EAAI,EAAGA,EAAI4D,EAAKrE,OAAQS,IAAK,CAClC,IAAIF,EAAQ8D,EAAK5D,GACZ+D,EAKDF,EAAMb,EAASrE,KAAKmF,EAASD,EAAK/D,EAAOE,EAAG4D,IAJ5CC,EAAM/D,EACNiE,GAAU,EAKlB,CAEA,IAAKA,EACD,KAAM,8CAGV,OAAOF,CACX,EAEA/F,EAAMmG,KAAO,SAASlB,EAAKC,EAAUc,GACjC,IAAII,EAQJ,OAPApG,EAAMoF,IAAIH,GAAK,SAASjD,EAAOqE,EAAOP,GAClC,QAAIZ,EAASrE,KAAKmF,EAAShE,EAAOqE,EAAOP,KACrCM,EAASpE,GACF,EAGf,IACOoE,CACX,EAEApG,EAAMsG,MAAQ,SAASrB,EAAKsB,EAAYP,GACpC,OAAmB,IAAff,EAAIxD,OACG,KAEPzB,EAAMO,YAAYgG,GACXtB,EAAI,GAGRjF,EAAMmG,KAAKlB,EAAKsB,EAAYP,EACvC,EAKAhG,EAAMwG,OAAS,SAASvB,EAAKwB,EAASC,GAElC,OADAzB,EAAIS,OAAOgB,EAAU,EAAGD,GACjBxB,CACX,EAEAjF,EAAM2G,IAAM,SAAS1B,EAAKC,EAAUc,GAIhC,IAHA,IACIhE,EADAoE,GAAS,EAGJlE,EAAI,EAAGA,EAAI+C,EAAIxD,SACpBO,EAAQiD,EAAI/C,GACZkE,EAASA,GAAUlB,EAASrE,KAAKmF,EAAShE,EAAOE,EAAG+C,IAFxB/C,KAShC,OAAOkE,CACX,EAEApG,EAAM4G,MAAQ,SAAS3B,GACnBA,EAAIS,OAAO,EAAGT,EAAIxD,OACtB,EAQAzB,EAAM6G,OAAS,SAASzC,EAAGJ,EAAG8C,GAC1B,GAAI9G,EAAMO,YAAY6D,GAClB,KAAM,gCAEV,GAAIpE,EAAMO,YAAYyD,GAClB,KAAM,iCAEV,GAAII,EAAE3C,QAAUuC,EAAEvC,OACd,KAAM,0CAGV,IAAcS,EAAVyE,EAAM,GAEV,IAAKzE,EAAI,EAAGA,EAAIkC,EAAE3C,OAAQS,IACtByE,EAAIpE,KAAK,CAAEC,EAAK4B,EAAElC,GAAIO,EAAKuB,EAAE9B,KAgBjC,IAdIlC,EAAMO,YAAYuG,GAClBH,EAAII,MAAK,SAASlD,EAAGmD,GACjB,OAAOnD,EAAErB,EAAIwE,EAAExE,CACnB,IAGAmE,EAAII,MAAK,SAASlD,EAAGmD,GACjB,OAAOF,EAASjD,EAAErB,EAAGwE,EAAExE,EAC3B,IAGJxC,EAAM4G,MAAMxC,GACZpE,EAAM4G,MAAM5C,GAEP9B,EAAI,EAAGA,EAAIyE,EAAIlF,OAAQS,IACxBkC,EAAE7B,KAAKoE,EAAIzE,GAAGM,GACdwB,EAAEzB,KAAKoE,EAAIzE,GAAGO,EAEtB,EAEAzC,EAAMiH,SAAW,SAAShC,EAAKiC,GAC3BjC,EAAI1C,KAAK4E,MAAMlC,EAAKiC,EACxB,EAEA,IAAIE,EACW,SAASC,GAChB,OAAUlH,KAAKmH,IAAID,EAAMlH,KAAK8D,IAAM,EAAK,EAC7C,EAQAsD,EAAS9H,EAAM+H,MAAMC,OAAO,CAC5BC,KAAM,WACF/D,KAAKgE,SAAW,GAChBhE,KAAKiE,OAAS,EACdjE,KAAKkE,KAAO,EACZlE,KAAKmE,SAAW,GAChBnE,KAAKoE,SAAW,IAChBpE,KAAKqE,SAAW,KAChBrE,KAAKsE,SAAW,GAChB,IAAIC,EAAQvE,KACZA,KAAKwE,WAAaf,EAClBzD,KAAKyE,cAAgB,WACjBF,EAAMG,cACV,CACJ,EACAC,WAAY,SAASlE,GACjBT,KAAKgE,SAASpF,KAAK6B,EACvB,EACAmE,WAAY,SAASC,GACjB7E,KAAKsE,SAAS1F,KAAKiG,EACvB,EACAC,cAAe,SAASD,GACpB7E,KAAKsE,SAAWzI,EAAEkJ,KAAK/E,KAAKsE,UAAU,SAASU,GAC3C,OAAOA,IAAMH,CACjB,GACJ,EACAI,QAAS,WACL,IAAIV,EAAQvE,KACRA,KAAKsE,UACLjI,EAAMgF,QAAQrB,KAAKsE,UAAU,SAASU,GAClC,OAAOA,EAAE9H,KAAsB,OAAjBqH,EAAMW,OAAkBX,EAAMW,OAASX,EACzD,GAER,EACAY,OAAQ,WACR,EACAC,OAAQ,SAASC,GACbrF,KAAKsF,WAAWtF,KAAKkE,KAAMmB,EAC/B,EACAC,WAAY,SAASC,EAAMF,GACvBrF,KAAKiE,OAASzH,KAAKgJ,IAAI,EAAGhJ,KAAKiJ,IAAI,EAAGJ,IACtCrF,KAAKkE,KAAO1H,KAAKgJ,IAAI,EAAGhJ,KAAKiJ,IAAI,EAAGF,IACpCvF,KAAKqE,UAAW,IAAIqB,MAAOC,UACtB3F,KAAK4F,aACN5F,KAAK4F,WAAa7J,OAAO8J,YAAY7F,KAAKyE,cAAezE,KAAKmE,UAEtE,EACA2B,KAAM,WACE9F,KAAK4F,aACL7J,OAAOgK,cAAc/F,KAAK4F,YAC1B5F,KAAK4F,WAAa,KAGlB5F,KAAKiF,UAGb,EACAe,KAAM,SAASC,GACkB,IAAzBjG,KAAKgE,SAASlG,SAGH,OAAXmI,IACAjG,KAAKkF,OAASe,GAElBjG,KAAKkG,YACLlG,KAAKsF,WAAW,EAAG,GACvB,EACAa,QAAS,WACLnG,KAAKsF,WAAW,EAAG,EACvB,EACAY,UAAW,WACP,GAA6B,IAAzBlG,KAAKgE,SAASlG,OAGlB,IAAK,IAAIS,EAAI,EAAGA,EAAIyB,KAAKgE,SAASlG,OAAQS,IACtCyB,KAAKgE,SAASzF,GAAG2H,WAEzB,EACAE,UAAW,WAGP,IAFA,IAAI/H,EAAQ2B,KAAKwE,WAAWxE,KAAKkE,MAExB3F,EAAI,EAAGA,EAAIyB,KAAKgE,SAASlG,OAAQS,IACtCyB,KAAKgE,SAASzF,GAAG8H,OAAOhI,EAEhC,EACAqG,aAAc,WACV,IAAI4B,GAAM,IAAIZ,MAAOC,UACjBY,EAAaD,EAAMtG,KAAKqE,SAC5BrE,KAAKqE,SAAWiC,EAChB,IAAIE,EAAYD,EAAavG,KAAKoE,UAAapE,KAAKkE,KAAOlE,KAAKiE,OAAS,GAAK,GAC1EzH,KAAKC,IAAI+J,IAAahK,KAAKC,IAAIuD,KAAKkE,KAAOlE,KAAKiE,QAChDjE,KAAKkE,KAAOlE,KAAKiE,OAEjBjE,KAAKkE,MAAQsC,EAGjB,IACIxG,KAAKoG,WACT,CAAE,QACEpG,KAAKmF,OAAOjI,KAAK8C,MACbA,KAAKiE,QAAUjE,KAAKkE,MACpBlE,KAAK8F,MAEb,CACJ,IAGJhK,EAAMI,WAAWF,EAAS,CACtB+H,KAAM,SAASjB,GACXhH,EAAMiI,KAAKjB,EAAS9G,EAAQyK,GAChC,EAEApK,MAAOA,EACPqK,MArVJ,SAAe1F,EAAO8E,EAAMa,GACxB,QAAoB,IAAT3F,QAAuC,IAAR8E,EACtC,MAAO,GAEX,GAAIa,GAAQtK,EAAMsE,KAAKmF,EAAO9E,IAAU3E,EAAMsE,KAAKgG,GAC/C,KAAM,kEAKV,GAFA3F,EAAQA,GAAS,IACjB8E,EAAOA,GAAQ9E,GACHA,IAHZ2F,EAAOA,GAAQ,IAGeC,IAC1B,KAAM,0BAEV,IAAwBC,EAApBtD,EAAQ,GAAIhF,GAAK,EAUjBuI,EARJ,SAA2BjI,GAEvB,IADA,IAAIiI,EAAI,EACDjI,EAAIiI,EAAI,GACXA,GAAK,GAET,OAAOA,CACX,CAEQC,CAAkBvK,KAAKC,IAAIkK,IAOnC,GAJAA,GAAQG,GAFR9F,GAAS8F,IACThB,GAAQgB,IAEYH,EAAO,IACvBA,GAAQA,GAERA,EAAO,EACP,MAAQE,EAAI7F,EAAQ2F,IAASpI,IAAMuH,GAC/BvC,EAAM3E,KAAKiI,EAAIC,QAInB,MAAQD,EAAI7F,EAAQ2F,IAASpI,IAAMuH,GAC/BvC,EAAM3E,KAAKiI,EAAIC,GAGvB,OAAOvD,CACX,EA6SIK,OAAQA,GAEf,CAzfD,CAyfG7H,OAAOD,MAAMkL,QAEhB,SAAUnL,GAEN,IAAIC,EAAQC,OAAOD,MACfE,EAAUF,EAAMG,QAAQD,QACxB6H,EAAQ/H,EAAM+H,MACd3H,EAAaJ,EAAMI,WACnBG,EAAQL,EAAQK,MAChB+C,EAAQtD,EAAMmL,SAAS7H,MACvB8H,EAAapL,EAAMoL,WACnBlF,EAAW3F,EAAM2F,SACjBmF,EAAMtL,EAAEsL,IAMZ,MAAMC,UAAsBhI,EACxB,WAAAiI,CAAYxI,EAAGC,GACXwI,MAAMzI,EAAGC,EACb,CAEA,KAAAyI,GACI,OAAO,IAAIH,EAAcpH,KAAKnB,EAAGmB,KAAKlB,EAC1C,CAEA,IAAA0I,CAAK7I,GACD,OAAO,IAAIyI,EAAcpH,KAAKnB,EAAIF,EAAEE,EAAGmB,KAAKlB,EAAIH,EAAEG,EACtD,CAEA,KAAA2I,CAAM9I,GACF,OAAO,IAAIyI,EAAcpH,KAAKnB,EAAIF,EAAEE,EAAGmB,KAAKlB,EAAIH,EAAEG,EACtD,CAEA,MAAA4I,CAAOrJ,GACH,OAAO,IAAI+I,EAAcpH,KAAKnB,EAAIR,EAAO2B,KAAKlB,EAAIT,EACtD,CAEA,KAAAsJ,CAAM1I,GACF,OAAO,IAAImI,EAAcpH,KAAKnB,EAAII,EAAGe,KAAKlB,EAAIG,EAClD,CAEA,SAAA2I,GACI,OAAsB,IAAlB5H,KAAKlC,SACE,IAAIsJ,EAERpH,KAAK2H,MAAM,EAAI3H,KAAKlC,SAC/B,CAEA,MAAAA,GACI,OAAOtB,KAAKgE,KAAKR,KAAKnB,EAAImB,KAAKnB,EAAImB,KAAKlB,EAAIkB,KAAKlB,EACrD,CAEA,QAAAzB,GACI,MAAO,IAAM2C,KAAKnB,EAAI,IAAMmB,KAAKlB,EAAI,GACzC,CAEA,aAAA+I,GACI,OAAQ7H,KAAKnB,EAAImB,KAAKnB,EAAImB,KAAKlB,EAAIkB,KAAKlB,CAC5C,CAEA,QAAAgJ,CAASnJ,EAAGoJ,GACR,OAAO,IAAIX,EAAcW,EAAElJ,EAAIF,EAAEE,EAAGkJ,EAAEjJ,EAAIH,EAAEG,GAAG6I,MAAM,IAAKH,KAAK7I,EACnE,CAEA,OAAAqJ,CAAQC,GACJ,IAAIC,EAAS,EACTD,IACAC,EAAS,IAAM1L,KAAK8D,IAExB,IAAIG,EAAIjE,KAAK4D,MAAM5D,KAAKC,IAAIuD,KAAKlB,GAAItC,KAAKC,IAAIuD,KAAKnB,IAC/CsJ,EAAS3L,KAAK8D,GAAK,EACnB8H,EAAMpI,KAAKlC,SACf,GAAe,IAAXkC,KAAKnB,EAAS,CAGd,GAAe,IAAXmB,KAAKlB,EACL,OAAO,IAAIuJ,EAAM,EAAG,GAExB,GAAIrI,KAAKlB,EAAI,EACT,OAAO,IAAIuJ,EAAMD,EAAKF,EAASC,GAEnC,GAAInI,KAAKlB,EAAI,EACT,OAAO,IAAIuJ,EAAMD,EAAc,EAATF,EAAaC,EAE3C,MACK,GAAInI,KAAKnB,EAAI,EAAG,CACjB,GAAe,IAAXmB,KAAKlB,EACL,OAAO,IAAIuJ,EAAMD,EAAK,GAE1B,GAAIpI,KAAKlB,EAAI,EACT,OAAO,IAAIuJ,EAAMD,EAAKF,EAASzH,GAEnC,GAAIT,KAAKlB,EAAI,EACT,OAAO,IAAIuJ,EAAMD,EAAKF,GAAU,EAAIC,EAAS1H,GAErD,KACK,CACD,GAAe,IAAXT,KAAKlB,EACL,OAAO,IAAIuJ,EAAMD,EAAK,EAAID,GAE9B,GAAInI,KAAKlB,EAAI,EACT,OAAO,IAAIuJ,EAAMD,EAAKF,GAAU,EAAIC,EAAS1H,IAEjD,GAAIT,KAAKlB,EAAI,EACT,OAAO,IAAIuJ,EAAMD,EAAKF,GAAU,EAAIC,EAAS1H,GAErD,CACJ,CACA,QAAA6H,CAAS/C,EAAMF,GACX,GAAIE,EAAK1G,EAAIwG,EAAGxG,EAAG,CACf,IAAI0J,EAAOlD,EACXA,EAAKE,EACLA,EAAOgD,CACX,CACA,IACiEC,EAAIC,EADjEC,EAAK,IAAIC,EAAKpD,EAAK1G,EAAG0G,EAAKzG,GAAG8J,QArGxB,KAsGNC,EAAK,IAAIF,EAAKtD,EAAGxG,EAAGwG,EAAGvG,GAAG8J,QAtGpB,KAuGV,QAAIF,EAAGI,MAAMD,GAAI7G,SAAShC,QAClBuF,EAAK1G,IAAMwG,EAAGxG,GAAK0G,EAAKzG,IAAMuG,EAAGvG,IAG5ByG,EAAKzG,EAAIuG,EAAGvG,GACjB0J,EAAKE,EAAG7J,GAAOgK,EAAGhK,EAAI6J,EAAG7J,IAAMmB,KAAKlB,GAAK4J,EAAG5J,EAAI4J,EAAGK,UAAcF,EAAG/J,EAAI+J,EAAGE,QAAWL,EAAG5J,EAAI4J,EAAGK,SAChGN,EAAMC,EAAG7J,EAAI6J,EAAGM,OAAaH,EAAGhK,EAAIgK,EAAGG,OAAUN,EAAG7J,EAAI6J,EAAGM,SAAWhJ,KAAKlB,EAAI4J,EAAG5J,IAAO+J,EAAG/J,EAAI4J,EAAG5J,KAGnG0J,EAAKE,EAAG7J,GAAOgK,EAAGhK,EAAI6J,EAAG7J,IAAMmB,KAAKlB,EAAI4J,EAAG5J,IAAO+J,EAAG/J,EAAI4J,EAAG5J,GAC5D2J,EAAMC,EAAG7J,EAAI6J,EAAGM,OAAaH,EAAGhK,EAAIgK,EAAGG,OAAUN,EAAG7J,EAAI6J,EAAGM,SAAWhJ,KAAKlB,GAAK4J,EAAG5J,EAAI4J,EAAGK,UAAcF,EAAG/J,EAAI+J,EAAGE,QAAWL,EAAG5J,EAAI4J,EAAGK,UAEnI/I,KAAKnB,EAAI2J,GAAMxI,KAAKnB,EAAI4J,GAGxC,CACA,KAAAQ,CAAMC,GACF,IACIC,EADUD,EAAIE,MAAM,EAAGF,EAAIpL,OAAS,GACvBqB,MAAM,KACnBN,EAAIQ,SAAS8J,EAAG,GAAI,IACpBrK,EAAIO,SAAS8J,EAAG,GAAI,IACxB,IAAKzL,MAAMmB,KAAOnB,MAAMoB,GACpB,OAAO,IAAIsI,EAAcvI,EAAGC,EAEpC,EAQJ,IAAIuK,EAAcxF,EAAMC,OACpB,CACIC,KAAM,SAASpF,EAAG2K,EAAMC,GACpBvJ,KAAKwJ,MAAQ7K,EACbqB,KAAKsJ,KAAOA,EACZtJ,KAAKuJ,MAAQA,CACjB,IAOJZ,EAAO9E,EAAMC,OAAO,CACpBC,KAAM,SAASlF,EAAGC,EAAGkK,EAAOD,GACxB/I,KAAKnB,EAAIA,GAAK,EACdmB,KAAKlB,EAAIA,GAAK,EACdkB,KAAKgJ,MAAQA,GAAS,EACtBhJ,KAAK+I,OAASA,GAAU,CAC5B,EACA/G,SAAU,SAASwH,GACf,OAASA,EAAM3K,GAAKmB,KAAKnB,GAAO2K,EAAM3K,GAAMmB,KAAKnB,EAAImB,KAAKgJ,OAAYQ,EAAM1K,GAAKkB,KAAKlB,GAAO0K,EAAM1K,GAAMkB,KAAKlB,EAAIkB,KAAK+I,MAC3H,EACAH,QAAS,SAASa,EAAIC,GASlB,OApLZ,YA4KgBA,IACAA,EAAKD,GAGTzJ,KAAKnB,GAAK4K,EACVzJ,KAAKlB,GAAK4K,EACV1J,KAAKgJ,OAAS,EAAIS,EAAK,EACvBzJ,KAAK+I,QAAU,EAAIW,EAAK,EACjB1J,IACX,EACA0H,OAAQ,SAAS+B,EAAIC,GACjB,IAAI7K,EAAI4K,EAAI3K,EAAI4K,EAOhB,OANID,aAAcrC,IACdvI,EAAI4K,EAAG5K,EACPC,EAAI2K,EAAG3K,GAEXkB,KAAKnB,GAAKA,EACVmB,KAAKlB,GAAKA,EACHkB,IACX,EACA8I,MAAO,SAASa,GACZ,IAAIC,EAAKpN,KAAKiJ,IAAIzF,KAAKnB,EAAG8K,EAAE9K,GACxBgL,EAAKrN,KAAKiJ,IAAIzF,KAAKlB,EAAG6K,EAAE7K,GACxBgL,EAAKtN,KAAKgJ,IAAKxF,KAAKnB,EAAImB,KAAKgJ,MAASW,EAAE9K,EAAI8K,EAAEX,OAC9Ce,EAAKvN,KAAKgJ,IAAKxF,KAAKlB,EAAIkB,KAAK+I,OAAUY,EAAE7K,EAAI6K,EAAEZ,QACnD,OAAO,IAAIJ,EAAKiB,EAAIC,EAAIC,EAAKF,EAAIG,EAAKF,EAC1C,EACA/I,OAAQ,WACJ,OAAO,IAAIsG,EAAcpH,KAAKnB,EAAImB,KAAKgJ,MAAQ,EAAGhJ,KAAKlB,EAAIkB,KAAK+I,OAAS,EAC7E,EACAiB,IAAK,WACD,OAAO,IAAI5C,EAAcpH,KAAKnB,EAAImB,KAAKgJ,MAAQ,EAAGhJ,KAAKlB,EAC3D,EACAyK,MAAO,WACH,OAAO,IAAInC,EAAcpH,KAAKnB,EAAImB,KAAKgJ,MAAOhJ,KAAKlB,EAAIkB,KAAK+I,OAAS,EACzE,EACAkB,OAAQ,WACJ,OAAO,IAAI7C,EAAcpH,KAAKnB,EAAImB,KAAKgJ,MAAQ,EAAGhJ,KAAKlB,EAAIkB,KAAK+I,OACpE,EACAO,KAAM,WACF,OAAO,IAAIlC,EAAcpH,KAAKnB,EAAGmB,KAAKlB,EAAIkB,KAAK+I,OAAS,EAC5D,EACAmB,QAAS,WACL,OAAO,IAAI9C,EAAcpH,KAAKnB,EAAGmB,KAAKlB,EAC1C,EACAqL,SAAU,WACN,OAAO,IAAI/C,EAAcpH,KAAKnB,EAAImB,KAAKgJ,MAAOhJ,KAAKlB,EACvD,EACAsL,WAAY,WACR,OAAO,IAAIhD,EAAcpH,KAAKnB,EAAGmB,KAAKlB,EAAIkB,KAAK+I,OACnD,EACAsB,YAAa,WACT,OAAO,IAAIjD,EAAcpH,KAAKnB,EAAImB,KAAKgJ,MAAOhJ,KAAKlB,EAAIkB,KAAK+I,OAChE,EACAxB,MAAO,WACH,OAAO,IAAIoB,EAAK3I,KAAKnB,EAAGmB,KAAKlB,EAAGkB,KAAKgJ,MAAOhJ,KAAK+I,OACrD,EACAlL,QAAS,WACL,OAAQmC,KAAKgJ,QAAUhJ,KAAK+I,MAChC,EACAuB,OAAQ,SAASC,GACb,OAAOvK,KAAKnB,IAAM0L,EAAK1L,GAAKmB,KAAKlB,IAAMyL,EAAKzL,GAAKkB,KAAKgJ,QAAUuB,EAAKvB,OAAShJ,KAAK+I,SAAWwB,EAAKxB,MACvG,EACAyB,cAAe,SAASC,GACpB,IAAIF,EAAOvK,KAAKuH,QACZ9I,EAASuB,KAAK0K,cAAcD,GAC5BE,EAAKlM,EAAO,GACZmM,EAAKnM,EAAO,GACZoM,EAAKpM,EAAO,GACZqM,EAAKrM,EAAO,GAOhB,OALA8L,EAAK1L,EAAIrC,KAAKiJ,IAAIoF,EAAGhM,EAAG8L,EAAG9L,EAAG+L,EAAG/L,EAAGiM,EAAGjM,GACvC0L,EAAKzL,EAAItC,KAAKiJ,IAAIoF,EAAG/L,EAAG6L,EAAG7L,EAAG8L,EAAG9L,EAAGgM,EAAGhM,GACvCyL,EAAKvB,MAAQxM,KAAKgJ,IAAIqF,EAAGhM,EAAG8L,EAAG9L,EAAG+L,EAAG/L,EAAGiM,EAAGjM,GAAK0L,EAAK1L,EACrD0L,EAAKxB,OAASvM,KAAKgJ,IAAIqF,EAAG/L,EAAG6L,EAAG7L,EAAG8L,EAAG9L,EAAGgM,EAAGhM,GAAKyL,EAAKzL,EAE/CyL,CACX,EACAG,cAAe,SAASD,GACpB,IAAIF,EAAOvK,KACPU,EAAI6J,EAAKzJ,SACT+J,EAAKN,EAAKF,cAAcU,OAAON,EAAO/J,GAK1C,MAAO,CAJE6J,EAAKL,UAAUa,OAAON,EAAO/J,GAC7B6J,EAAKJ,WAAWY,OAAON,EAAO/J,GAGvBmK,EAFPN,EAAKH,aAAaW,OAAON,EAAO/J,GAG7C,EACArD,SAAU,SAAS2N,GAGf,OAFAA,EAAYA,GAAa,IAElBhL,KAAKnB,EAAImM,EAAYhL,KAAKlB,EAAIkM,EAAYhL,KAAKgJ,MAAQgC,EAAYhL,KAAK+I,MACnF,EACAkC,MAAO,SAASC,EAAQC,EAAQC,EAAYC,EAAeZ,GACvD,IAAIE,EAAK3K,KAAKkK,UACVoB,EAAatL,KAAKc,SACtB6J,EAAGI,OAAON,EAAOa,GAAYP,OAAON,EAAOY,GAE3C,IAAIE,EAAQH,EAAW3D,MAAMkD,GACzBa,EAAS,IAAIpE,EAAcmE,EAAM1M,EAAIqM,EAAQK,EAAMzM,EAAIqM,GACvDpI,EAAWwI,EAAM9D,MAAM+D,IAC3Bb,EAAKA,EAAGnD,KAAKzE,IACVgI,OAAON,EAAOY,GAAeN,OAAON,EAAOa,GAE9CtL,KAAKnB,EAAI8L,EAAG9L,EACZmB,KAAKlB,EAAI6L,EAAG7L,EAEZkB,KAAKgJ,OAASkC,EACdlL,KAAK+I,QAAUoC,CACnB,EAEAM,KAAM,SAASA,GAKX,OAJAzL,KAAKnB,GAAK4M,EACVzL,KAAKlB,GAAK2M,EACVzL,KAAKgJ,OAASyC,EACdzL,KAAK+I,QAAU0C,EACRzL,IACX,EAEA0L,SAAU,SAASnB,GACf,IAAIF,EAAcrK,KAAKqK,cACnBsB,EAAkBpB,EAAKF,cAG3B,QAFiBA,EAAYxL,EAAI0L,EAAK1L,GAAKwL,EAAYvL,EAAIyL,EAAKzL,GAC5D6M,EAAgB9M,EAAImB,KAAKnB,GAAK8M,EAAgB7M,EAAIkB,KAAKlB,EAE/D,IAGA8M,EAAO/H,EAAMC,OAAO,CACpBC,KAAM,SAASiF,EAAOD,GAClB/I,KAAKgJ,MAAQA,EACbhJ,KAAK+I,OAASA,CAClB,IA4BJ,SAAS8C,EAAcC,EAAQC,EAAMC,EAAQC,EAAMC,GAC/C,IAAIC,GAAgBJ,EAAKlN,EAAIiN,EAAOjN,IAAMoN,EAAKnN,EAAIkN,EAAOlN,IAAQiN,EAAKjN,EAAIgN,EAAOhN,IAAMmN,EAAKpN,EAAImN,EAAOnN,GACxG,GANgBtC,EAMD4P,IALR3P,KAAKC,IAAIF,GA3TN,MAgUV,CANJ,IAAoBA,EAaZoN,IAFSmC,EAAOhN,EAAIkN,EAAOlN,IAAMmN,EAAKpN,EAAImN,EAAOnN,IAAQiN,EAAOjN,EAAImN,EAAOnN,IAAMoN,EAAKnN,EAAIkN,EAAOlN,IAEtFqN,EACXlN,IAFS6M,EAAOhN,EAAIkN,EAAOlN,IAAMiN,EAAKlN,EAAIiN,EAAOjN,IAAQiN,EAAOjN,EAAImN,EAAOnN,IAAMkN,EAAKjN,EAAIgN,EAAOhN,IAEtFqN,EAEf,IAAID,KAAcvC,EAAI,GAAKA,EAAI,GAAK1K,EAAI,GAAKA,EAAI,GAQjD,OAAO,IAAImI,EAAc0E,EAAOjN,EAAK8K,GAAKoC,EAAKlN,EAAIiN,EAAOjN,GAAKiN,EAAOhN,EAAK6K,GAAKoC,EAAKjN,EAAIgN,EAAOhN,GAfhG,CAgBJ,CA9CA8M,EAAKxO,UAAUgP,MAAQ,IAAIR,EAAK,EAAG,GAEnCjD,EAAK0D,OAAS,SAAS9B,GAKnB,OAJMA,aAAgB5B,IAClB4B,EAAO,IAAI5B,EAAK4B,EAAK1L,EAAG0L,EAAKzL,EAAGyL,EAAKvB,MAAOuB,EAAKxB,SAG9CwB,CACX,EAEA5B,EAAK2D,MAAQ,WACT,OAAO,IAAI3D,EAAK,EAAG,EAAG,EAAG,EAC7B,EAEAA,EAAK4D,WAAa,SAAS5N,EAAGoJ,GAC1B,GAAIrK,MAAMiB,EAAEE,IAAMnB,MAAMiB,EAAEG,IAAMpB,MAAMqK,EAAElJ,IAAMnB,MAAMqK,EAAEjJ,GAClD,KAAM,uBAEV,OAAO,IAAI6J,EAAKnM,KAAKiJ,IAAI9G,EAAEE,EAAGkJ,EAAElJ,GAAIrC,KAAKiJ,IAAI9G,EAAEG,EAAGiJ,EAAEjJ,GAAItC,KAAKC,IAAIkC,EAAEE,EAAIkJ,EAAElJ,GAAIrC,KAAKC,IAAIkC,EAAEG,EAAIiJ,EAAEjJ,GAClG,EA6BA,IAAI0N,EAAY,CACZC,MAAO,SAASX,EAAQC,EAAMC,EAAQC,GAClC,OAAOJ,EAAcC,EAAQC,EAAMC,EAAQC,EAC/C,EACAS,SAAU,SAASZ,EAAQC,EAAMC,EAAQC,GACrC,OAAOJ,EAAcC,EAAQC,EAAMC,EAAQC,GAAM,EACrD,EACAU,aAAc,SAASpC,EAAMvJ,EAAOD,GAChC,OAAOyL,EAAUE,SAAS1L,EAAOD,EAAKwJ,EAAKL,UAAWK,EAAKJ,aACvDqC,EAAUE,SAAS1L,EAAOD,EAAKwJ,EAAKJ,WAAYI,EAAKF,gBACrDmC,EAAUE,SAAS1L,EAAOD,EAAKwJ,EAAKH,aAAcG,EAAKF,gBACvDmC,EAAUE,SAAS1L,EAAOD,EAAKwJ,EAAKL,UAAWK,EAAKH,aAC5D,EACAwC,MAAO,SAASC,EAAOC,EAAOrC,GAC1B,IAAIE,EAAKmC,EAAM5C,UACXU,EAAKkC,EAAM3C,WACXW,EAAKgC,EAAM1C,aACXS,EAAKiC,EAAMzC,cACXvJ,EAASgM,EAAMhM,SACf2J,IACAE,EAAKA,EAAGI,OAAON,EAAO3J,GACtB8J,EAAKA,EAAGG,OAAON,EAAO3J,GACtBgK,EAAKA,EAAGC,OAAON,EAAO3J,GACtB+J,EAAKA,EAAGE,OAAON,EAAO3J,IAG1B,IAAIiM,EAAYF,EAAM7K,SAAS2I,IAC3BkC,EAAM7K,SAAS4I,IACfiC,EAAM7K,SAAS8I,IACf+B,EAAM7K,SAAS6I,IACf2B,EAAUG,aAAaE,EAAOlC,EAAIC,IAClC4B,EAAUG,aAAaE,EAAOlC,EAAIG,IAClC0B,EAAUG,aAAaE,EAAOjC,EAAIC,IAClC2B,EAAUG,aAAaE,EAAO/B,EAAID,GAEtC,IAAKkC,EAAW,CAMZ,GALApC,EAAKkC,EAAM3C,UACXU,EAAKiC,EAAM1C,WACXW,EAAK+B,EAAMzC,aACXS,EAAKgC,EAAMxC,cAEPI,EAAO,CACP,IAAIuC,EAAe,IAAMvC,EACzBE,EAAKA,EAAGI,OAAOiC,EAAclM,GAC7B8J,EAAKA,EAAGG,OAAOiC,EAAclM,GAC7BgK,EAAKA,EAAGC,OAAOiC,EAAclM,GAC7B+J,EAAKA,EAAGE,OAAOiC,EAAclM,EACjC,CAEAiM,EAAYD,EAAM9K,SAAS2I,IACvBmC,EAAM9K,SAAS4I,IACfkC,EAAM9K,SAAS8I,IACfgC,EAAM9K,SAAS6I,EACvB,CAEA,OAAOkC,CACX,GAMAE,EAAYpJ,EAAMC,OAAO,CACzBC,KAAM,SAASmJ,GACXlN,KAAKkN,UAAYvE,EAAK0D,OAAOa,EACjC,EAEAC,MAAO,SAASC,EAASC,GAGrB,IAFA,IAAIC,EAAcD,EAAUE,cAAcpO,MAAM,KAEvCZ,EAAI,EAAGA,EAAI+O,EAAYxP,OAAQS,IACpC6O,EAAUpN,KAAKwN,aAAaJ,EAASE,EAAY/O,IAGrD,OAAO6O,CACX,EACAI,aAAc,SAASJ,EAASC,GAC5B,OAAInG,EAAWlH,KAAKqN,IACTrN,KAAKqN,GAAWD,GAGhBA,CAEf,EAEA9D,KAAM,SAAS8D,GACX,OAAOpN,KAAKyN,OAAOL,EAASpN,KAAK0N,MACrC,EACA5M,OAAQ,SAASsM,GACb,OAAOpN,KAAKyN,OAAOL,EAASpN,KAAK2N,QACrC,EACApE,MAAO,SAAS6D,GACZ,OAAOpN,KAAKyN,OAAOL,EAASpN,KAAK4N,OACrC,EACAC,QAAS,SAAST,GACd,OAAOpN,KAAKyN,OAAOL,EAASpN,KAAK8N,SACrC,EACA9D,IAAK,SAASoD,GACV,OAAOpN,KAAKyN,OAAOL,EAASpN,KAAK+N,KACrC,EACAC,OAAQ,SAASZ,GACb,OAAOpN,KAAKyN,OAAOL,EAASpN,KAAKiO,QACrC,EACAhE,OAAQ,SAASmD,GACb,OAAOpN,KAAKyN,OAAOL,EAASpN,KAAKkO,QACrC,EAEAR,MAAO,SAASR,EAAWE,GACvBA,EAAQvO,EAAIqO,EAAUrO,CAC1B,EACA8O,QAAS,SAAST,EAAWE,GACzBA,EAAQvO,GAAMqO,EAAUlE,MAAQoE,EAAQpE,OAAS,GAAM,CAC3D,EACA4E,OAAQ,SAASV,EAAWE,GACxBA,EAAQvO,EAAIqO,EAAUlE,MAAQoE,EAAQpE,KAC1C,EACA+E,KAAM,SAASb,EAAWE,GACtBA,EAAQtO,EAAIoO,EAAUpO,CAC1B,EACAmP,QAAS,SAASf,EAAWE,GACzBA,EAAQtO,GAAMoO,EAAUnE,OAASqE,EAAQrE,QAAU,GAAM,CAC7D,EACAmF,QAAS,SAAShB,EAAWE,GACzBA,EAAQtO,EAAIoO,EAAUnE,OAASqE,EAAQrE,MAC3C,EACA+E,SAAU,SAASZ,EAAWE,GAC1BA,EAAQvO,EAAI,EACZuO,EAAQtO,EAAI,EACZsO,EAAQrE,OAASmE,EAAUnE,OAC3BqE,EAAQpE,MAAQkE,EAAUlE,KAC9B,EACAyE,OAAQ,SAASL,EAASe,GAItB,OAHAf,EAAUzE,EAAK0D,OAAOe,GACtBe,EAAUnO,KAAKkN,UAAWE,GAEnBA,CACX,IAGA/E,EAAQxE,EAAMC,OAAO,CACrBC,KAAM,SAAS4F,EAAGlJ,GACdT,KAAK2J,EAAIA,EACT3J,KAAKyK,MAAQhK,CACjB,IAMA2N,EAASvK,EAAMC,OAAO,CACtBC,KAAM,SAAStD,EAAGJ,EAAGK,EAAGP,EAAGkO,EAAGC,GAC1BtO,KAAKS,EAAIA,GAAK,EACdT,KAAKK,EAAIA,GAAK,EACdL,KAAKU,EAAIA,GAAK,EACdV,KAAKG,EAAIA,GAAK,EACdH,KAAKqO,EAAIA,GAAK,EACdrO,KAAKsO,EAAIA,GAAK,CAClB,EACA9G,KAAM,SAAStH,GACXF,KAAKS,GAAKP,EAAEO,EACZT,KAAKK,GAAKH,EAAEG,EACZL,KAAKU,GAAKR,EAAEQ,EACZV,KAAKG,GAAKD,EAAEC,EACZH,KAAKqO,GAAKnO,EAAEmO,EACZrO,KAAKsO,GAAKpO,EAAEoO,CAChB,EACA7G,MAAO,SAASvH,GACZF,KAAKS,GAAKP,EAAEO,EACZT,KAAKK,GAAKH,EAAEG,EACZL,KAAKU,GAAKR,EAAEQ,EACZV,KAAKG,GAAKD,EAAEC,EACZH,KAAKqO,GAAKnO,EAAEmO,EACZrO,KAAKsO,GAAKpO,EAAEoO,CAChB,EACA3G,MAAO,SAASzH,GACZ,OAAO,IAAIkO,EACPpO,KAAKS,EAAIP,EAAEO,EAAIT,KAAKU,EAAIR,EAAEG,EAC1BL,KAAKK,EAAIH,EAAEO,EAAIT,KAAKG,EAAID,EAAEG,EAC1BL,KAAKS,EAAIP,EAAEQ,EAAIV,KAAKU,EAAIR,EAAEC,EAC1BH,KAAKK,EAAIH,EAAEQ,EAAIV,KAAKG,EAAID,EAAEC,EAC1BH,KAAKS,EAAIP,EAAEmO,EAAIrO,KAAKU,EAAIR,EAAEoO,EAAItO,KAAKqO,EACnCrO,KAAKK,EAAIH,EAAEmO,EAAIrO,KAAKG,EAAID,EAAEoO,EAAItO,KAAKsO,EAE3C,EACA9K,MAAO,SAAS7E,GACZ,OAAO,IAAIyI,EAAcpH,KAAKS,EAAI9B,EAAEE,EAAImB,KAAKU,EAAI/B,EAAEG,EAAIkB,KAAKqO,EAAGrO,KAAKK,EAAI1B,EAAEE,EAAImB,KAAKG,EAAIxB,EAAEG,EAAIkB,KAAKsO,EACtG,EACAC,UAAW,SAAS5E,GAChB,OAAOhB,EAAK4D,WAAWvM,KAAKwD,MAAMmG,EAAEO,WAAYlK,KAAKwD,MAAMmG,EAAEU,eACjE,EACAhN,SAAU,WACN,MAAO,UAAY2C,KAAKS,EAAI,IAAMT,KAAKK,EAAI,IAAML,KAAKU,EAAI,IAAMV,KAAKG,EAAI,IAAMH,KAAKqO,EAAI,IAAMrO,KAAKsO,EAAI,GAC3G,IAGJpS,EAAWkS,EAAQ,CACfI,cAAe,SAASC,GACpB,IAAIvO,EAAI,IAAIkO,EAOZ,OANAlO,EAAEO,EAAIgO,EAAGhO,EACTP,EAAEG,EAAIoO,EAAGpO,EACTH,EAAEQ,EAAI+N,EAAG/N,EACTR,EAAEC,EAAIsO,EAAGtO,EACTD,EAAEmO,EAAII,EAAGJ,EACTnO,EAAEoO,EAAIG,EAAGH,EACFpO,CACX,EACAwO,iBAAkB,SAASxP,GACvB,IAAIgB,EAAI,IAAIkO,EAOZ,OANAlO,EAAEO,EAAIvB,EAAEuB,EACRP,EAAEG,EAAInB,EAAEmB,EACRH,EAAEQ,EAAIxB,EAAEwB,EACRR,EAAEC,EAAIjB,EAAEiB,EACRD,EAAEmO,EAAInP,EAAEmP,EACRnO,EAAEoO,EAAIpP,EAAEoP,EACDpO,CACX,EACAyO,SAAU,SAASzP,GACf,GAAiB,IAAbA,EAAEpB,OACF,KAAM,iDAEV,IAAIoC,EAAI,IAAIkO,EAOZ,OANAlO,EAAEO,EAAIvB,EAAE,GACRgB,EAAEG,EAAInB,EAAE,GACRgB,EAAEQ,EAAIxB,EAAE,GACRgB,EAAEC,EAAIjB,EAAE,GACRgB,EAAEmO,EAAInP,EAAE,GACRgB,EAAEoO,EAAIpP,EAAE,GACDgB,CACX,EACA0O,YAAa,SAAS/P,EAAGC,GACrB,IAAIoB,EAAI,IAAIkO,EAOZ,OANAlO,EAAEO,EAAI,EACNP,EAAEG,EAAI,EACNH,EAAEQ,EAAI,EACNR,EAAEC,EAAI,EACND,EAAEmO,EAAIxP,EACNqB,EAAEoO,EAAIxP,EACCoB,CACX,EACA2O,KAAM,WACF,OAAO,IAAIT,EAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EACrC,EACAU,SAAU,SAASrE,EAAO5L,EAAGC,GACzB,IAAIoB,EAAI,IAAIkO,EAOZ,OANAlO,EAAEO,EAAIjE,KAAKmH,IAAI8G,EAAQjO,KAAK8D,GAAK,KACjCJ,EAAEG,EAAI7D,KAAKuS,IAAItE,EAAQjO,KAAK8D,GAAK,KACjCJ,EAAEQ,GAAKR,EAAEG,EACTH,EAAEC,EAAID,EAAEO,EACRP,EAAEmO,EAAKxP,EAAIA,EAAIqB,EAAEO,EAAI3B,EAAIoB,EAAEG,GAAM,EACjCH,EAAEoO,EAAKxP,EAAIA,EAAIoB,EAAEO,EAAI5B,EAAIqB,EAAEG,GAAM,EAC1BH,CACX,EACA8O,QAAS,SAAS9D,EAAQC,GACtB,IAAIjL,EAAI,IAAIkO,EAOZ,OANAlO,EAAEO,EAAIyK,EACNhL,EAAEG,EAAI,EACNH,EAAEQ,EAAI,EACNR,EAAEC,EAAIgL,EACNjL,EAAEmO,EAAI,EACNnO,EAAEoO,EAAI,EACCpO,CACX,EACA+I,MAAO,SAAS/J,GACZ,IAAI+P,EAAOC,EACX,GAAIhQ,EAAG,CAGH,GAAoC,YAFpCA,EAAIA,EAAEiQ,QAEA/F,MAAM,EAAG,GAAGmE,cAA4B,CAG1C,GAAqB,KADrB0B,GADAC,EAAOhQ,EAAEkK,MAAM,EAAGlK,EAAEpB,OAAS,GAAGqR,QACnBhQ,MAAM,MACTrB,OACN,OAAOsQ,EAAOO,SAASxH,EAAI8H,GAAO,SAAStQ,GACvC,OAAOhB,WAAWgB,EACtB,KAGJ,GAAqB,KADrBsQ,EAAQC,EAAK/P,MAAM,MACTrB,OACN,OAAOsQ,EAAOO,SAASxH,EAAI8H,GAAO,SAAStQ,GACvC,OAAOhB,WAAWgB,EACtB,IAER,CAKA,GAHsB,MAAlBO,EAAEkK,MAAM,EAAG,IAAwC,MAA1BlK,EAAEkK,MAAMlK,EAAEpB,OAAS,KAC5CoB,EAAIA,EAAEkQ,OAAO,EAAGlQ,EAAEpB,OAAS,IAE3BoB,EAAE4C,QAAQ,KAAO,GAEI,KADrBmN,EAAQ/P,EAAEC,MAAM,MACNrB,OACN,OAAOsQ,EAAOO,SAASxH,EAAI8H,GAAO,SAAStQ,GACvC,OAAOhB,WAAWgB,EACtB,KAGR,GAAIO,EAAE4C,QAAQ,KAAO,GAEI,KADrBmN,EAAQ/P,EAAEC,MAAM,MACNrB,OACN,OAAOsQ,EAAOO,SAASxH,EAAI8H,GAAO,SAAStQ,GACvC,OAAOhB,WAAWgB,EACtB,IAGZ,CACA,OAAOsQ,CACX,IAMJ,IAAII,EAAexL,EAAMC,OAAO,CAC5BC,KAAM,SAAStD,EAAGJ,EAAGK,EAAGP,EAAGkO,EAAGC,GAC1BtO,KAAKS,EAAIA,GAAK,EACdT,KAAKK,EAAIA,GAAK,EACdL,KAAKU,EAAIA,GAAK,EACdV,KAAKG,EAAIA,GAAK,EACdH,KAAKqO,EAAIA,GAAK,EACdrO,KAAKsO,EAAIA,GAAK,CAClB,EACAgB,WAAY,SAAoBpP,GAC5B,IAAIhB,EAAI,IAAImQ,EAOZ,OANAnQ,EAAEuB,EAAIP,EAAEO,EACRvB,EAAEmB,EAAIH,EAAEG,EACRnB,EAAEwB,EAAIR,EAAEQ,EACRxB,EAAEiB,EAAID,EAAEC,EACRjB,EAAEmP,EAAInO,EAAEmO,EACRnP,EAAEoP,EAAIpO,EAAEoO,EACDpP,CACX,IAwBJ,SAASqQ,EAASzR,GACVzB,EAAMO,YAAYkB,KAClBA,EAAS,IAKb,IAFA,IAAI2E,EAAS,GACT+M,EAAQ,iEACHjR,EAAIT,EAAQS,EAAI,IAAKA,EAC1BkE,GAAU+M,EAAMC,OAAOjT,KAAKkT,MAAsB,GAAhBlT,KAAKkD,WAE3C,OAAO+C,CACX,CAEA,IAAIkN,EAAW,CAQXC,uBAAwB,SAASjR,EAAG8B,EAAGJ,GACnC,SAASwP,EAAGC,EAAKC,GACb,OAAQD,EAAIjR,EAAIkR,EAAIlR,IAAMiR,EAAIjR,EAAIkR,EAAIlR,IAAMiR,EAAIhR,EAAIiR,EAAIjR,IAAMgR,EAAIhR,EAAIiR,EAAIjR,EAC9E,CAEA,GAAI2B,IAAMJ,EACN,OAAOwP,EAAGlR,EAAG8B,GAGjB,IAAIuP,EAAK3P,EAAExB,EAAI4B,EAAE5B,EACboR,EAAK5P,EAAEvB,EAAI2B,EAAE3B,EACboR,GAAOvR,EAAEE,EAAI4B,EAAE5B,GAAKmR,GAAMrR,EAAEG,EAAI2B,EAAE3B,GAAKmR,EAC3C,OAAIC,EAAM,EACCL,EAAGpP,EAAG9B,IAGjBuR,GAAO7P,EAAExB,EAAIF,EAAEE,GAAKmR,GAAM3P,EAAEvB,EAAIH,EAAEG,GAAKmR,GAC7B,EACCJ,EAAGxP,EAAG1B,IAGjBuR,GAAO7P,EAAExB,EAAIF,EAAEE,GAAKoR,GAAM5P,EAAEvB,EAAIH,EAAEG,GAAKkR,GAC1BE,GAAOF,EAAKA,EAAKC,EAAKA,EACvC,EAQAE,eAAgB,SAASxR,EAAG8B,EAAGJ,GAC3B,OAAO7D,KAAKgE,KAAKR,KAAK4P,uBAAuBjR,EAAG8B,EAAGJ,GACvD,EAQA+P,mBAAoB,SAASzR,EAAGF,GAC5B,IAAI4R,EAAUC,OAAOC,UACrB,GAAIlU,EAAMO,YAAY6B,IAA6B,IAAlBA,EAAOX,OACpC,OAAOwS,OAAOC,UAElB,IAAK,IAAItR,EAAI,EAAGA,EAAIR,EAAOX,OAAS,EAAGmB,IAAK,CACxC,IAAIuR,EAAK/R,EAAOQ,GACZwR,EAAKhS,EAAOQ,EAAI,GAEhBkB,EAAIH,KAAK4P,uBAAuBjR,EAAG6R,EAAIC,GACvCtQ,EAAIkQ,IACJA,EAAUlQ,EAElB,CACA,OAAO3D,KAAKgE,KAAK6P,EACrB,GAWAK,EAAY5U,EAAM+H,MAAMC,OAAO,CAC/BC,KAAM,WACF/D,KAAK2Q,SAAW,GAChB3Q,KAAKlC,OAAS,CAClB,EAKA8S,IAAK,SAAS5T,EAAKqB,GAEf,IAAI1B,EAAMqD,KAAK6Q,iBAAiB7T,GAIhC,OAHIX,EAAMK,UAAU2B,KAChB1B,EAAI0B,MAAQA,GAET1B,CACX,EAKAmU,IAAK,SAAS9T,GACV,OAAIgD,KAAK+Q,cAAc/T,GACZgD,KAAK6Q,iBAAiB7T,GAE1B,IACX,EAOAgU,IAAK,SAAShU,EAAKqB,GACf2B,KAAK4Q,IAAI5T,EAAKqB,EAClB,EAKA4S,YAAa,SAASjU,GAClB,OAAOgD,KAAK+Q,cAAc/T,EAC9B,EAMA2E,OAAQ,SAAS3E,GACb,GAAIgD,KAAK+Q,cAAc/T,GAAM,CACzB,IAAIkU,EAASlR,KAAKmR,MAAMnU,GAGxB,cAFOgD,KAAK2Q,SAASO,GACrBlR,KAAKlC,SACEd,CACX,CACJ,EAMAqE,QAAS,SAASxB,GAEd,IADA,IAAIuR,EAASpR,KAAKqR,UACT9S,EAAI,EAAG6J,EAAMgJ,EAAOtT,OAAQS,EAAI6J,EAAK7J,IAAK,CAC/C,IAAI+S,EAAOF,EAAO7S,GACdgT,EAASvR,KAAK2Q,SAASW,GACvBjV,EAAMO,YAAY2U,IAGtB1R,EAAK0R,EACT,CACJ,EAMAhK,MAAO,WAGH,IAFA,IAAIiK,EAAK,IAAId,EACTU,EAASpR,KAAKqR,UACT9S,EAAI,EAAG6J,EAAMgJ,EAAOtT,OAAQS,EAAI6J,EAAK7J,IAAK,CAC/C,IAAI+S,EAAOF,EAAO7S,GACdgT,EAASvR,KAAK2Q,SAASW,GACvBjV,EAAMO,YAAY2U,IAGtBC,EAAGZ,IAAIW,EAAOvU,IAAKuU,EAAOlT,MAC9B,CACA,OAAOmT,CACX,EAOAH,QAAS,WACL,IAAID,EAAS,GACb,IAAK,IAAIE,KAAQtR,KAAK2Q,SACd3Q,KAAK2Q,SAAS1T,eAAeqU,IAC7BF,EAAOxS,KAAK0S,GAGpB,OAAOF,CACX,EAEAL,cAAe,SAAS/T,GACpB,IAAIkU,EAASlR,KAAKmR,MAAMnU,GACxB,OAAOX,EAAMK,UAAUsD,KAAK2Q,SAASO,GACzC,EAOAL,iBAAkB,SAAS7T,GACvB,IAAIkU,EAASlR,KAAKmR,MAAMnU,GACpBuU,EAASvR,KAAK2Q,SAASO,GAM3B,OALI7U,EAAMO,YAAY2U,KAClBA,EAAS,CAAEvU,IAAKA,GAChBgD,KAAK2Q,SAASO,GAAUK,EACxBvR,KAAKlC,UAEFyT,CACX,EAKAJ,MAAO,SAASnU,GACZ,GAAIX,EAAMoB,SAAST,GACf,OAAOA,EAEX,GAAIX,EAAMc,SAASH,GACf,OAAOgD,KAAKyR,YAAYzU,GAE5B,GAAIX,EAAMQ,SAASG,GACf,OAAOgD,KAAK0R,cAAc1U,GAE9B,KAAM,uBACV,EAKAyU,YAAa,SAASxS,GAElB,IAAIwD,EAAS,EACb,GAAiB,IAAbxD,EAAEnB,OACF,OAAO2E,EAEX,IAAK,IAAIlE,EAAI,EAAGA,EAAIU,EAAEnB,OAAQS,IAAK,CAE/BkE,EAAoB,GAATA,EAAeA,EADjBxD,EAAE0S,WAAWpT,EAE1B,CACA,OAAOkE,CACX,EAKAiP,cAAe,SAAS1U,GACpB,IAAI4U,EAAK5U,EAAI6U,QAKb,OAJIxV,EAAMO,YAAYgV,KAClBA,EAAKrC,IACLvS,EAAI6U,QAAUD,GAEXA,CACX,IASAE,EAAahW,EAAMiW,WAAWjO,OAAO,CAKrCC,KAAM,SAASiO,GAKX,GAHAlW,EAAMiW,WAAWE,GAAGlO,KAAK7G,KADd8C,MAEXA,KAAKkS,WAAa,IAAIxB,EACtB1Q,KAAKlC,OAAS,EACVzB,EAAMK,UAAUsV,GAChB,GAAI5V,MAAMD,QAAQ6V,GACd,IAAK,IAAIzT,EAAI,EAAGA,EAAIyT,EAAWlU,OAAQS,IACnCyB,KAAK4Q,IAAIoB,EAAWzT,SAGxByT,EAAW3Q,SAAQ,SAASyF,EAAG5H,GAC3Bc,KAAK4Q,IAAI9J,EAAG5H,EAChB,GAAGc,KAGf,EAMA4Q,IAAK,SAAS5T,EAAKqB,GACf,IAAI8T,EAAQnS,KAAKkS,WAAWpB,IAAI9T,GAC3BmV,IACDA,EAAQnS,KAAKkS,WAAWtB,IAAI5T,GAC5BgD,KAAKlC,SACLkC,KAAKiF,QAAQ,YAEjBkN,EAAM9T,MAAQA,CAClB,EAOA2S,IAAK,SAAShU,EAAKqB,GACf2B,KAAK4Q,IAAI5T,EAAKqB,EAClB,EAKAyS,IAAK,SAAS9T,GACV,IAAImV,EAAQnS,KAAKkS,WAAWpB,IAAI9T,GAChC,GAAImV,EACA,OAAOA,EAAM9T,MAEjB,MAAM,IAAI+T,MAAM,mBAAqBpV,EACzC,EAKAiU,YAAa,SAASjU,GAClB,OAAOgD,KAAKkS,WAAWjB,YAAYjU,EACvC,EAKA2E,OAAQ,SAAS3E,GACb,GAAIgD,KAAKiR,YAAYjU,GAGjB,OAFAgD,KAAKiF,QAAQ,WACbjF,KAAKlC,SACEkC,KAAKkS,WAAWvQ,OAAO3E,EAEtC,EAKAqE,QAAS,SAASxB,EAAM2B,GACpBxB,KAAKkS,WAAW7Q,SAAQ,SAAS8Q,GAC7BtS,EAAK3C,KAAKsE,EAAS2Q,EAAMnV,IAAKmV,EAAM9T,MACxC,GACJ,EAKAgU,aAAc,SAASxS,EAAM2B,GACzBxB,KAAKkS,WAAW7Q,SAAQ,SAAS8Q,GAC7BtS,EAAK3C,KAAKsE,EAAS2Q,EAAM9T,MAC7B,GACJ,EAKAiU,WAAY,SAASzS,EAAM2B,GACvBxB,KAAKkS,WAAW7Q,SAAQ,SAAS8Q,GAC7BtS,EAAK3C,KAAKsE,EAAS2Q,EAAMnV,IAC7B,GACJ,EAKAuV,KAAM,WACF,IAAIA,EAAO,GAIX,OAHAvS,KAAKsS,YAAW,SAAStV,GACrBuV,EAAK3T,KAAK5B,EACd,IACOuV,CACX,IAKAC,EAAQ1W,EAAM+H,MAAMC,OAAO,CAE3BC,KAAM,WACF/D,KAAKyS,MAAQ,KACbzS,KAAK0S,MAAQ,KACb1S,KAAKlC,OAAS,CAClB,EAKA6U,QAAS,SAAStU,GACd,IAAI8T,EAAQ,CAAE9T,MAAOA,EAAOuU,KAAM,MAC7B5S,KAAK0S,OAKN1S,KAAKyS,MAAMG,KAAOT,EAClBnS,KAAKyS,MAAQzS,KAAKyS,MAAMG,OALxB5S,KAAK0S,MAAQP,EACbnS,KAAKyS,MAAQzS,KAAK0S,OAMtB1S,KAAKlC,QACT,EAKA+U,QAAS,WACL,GAAI7S,KAAKlC,OAAS,EACd,MAAM,IAAIsU,MAAM,uBAEpB,IAAI/T,EAAQ2B,KAAK0S,MAAMrU,MAGvB,OAFA2B,KAAK0S,MAAQ1S,KAAK0S,MAAME,KACxB5S,KAAKlC,SACEO,CACX,EAEA2D,SAAU,SAASjC,GAEf,IADA,IAAI+S,EAAU9S,KAAK0S,MACZI,GAAS,CACZ,GAAIA,EAAQzU,QAAU0B,EAClB,OAAO,EAEX+S,EAAUA,EAAQF,IACtB,CACA,OAAO,CACX,IASAG,EAAMjX,EAAMiW,WAAWjO,OAAO,CAC9BC,KAAM,SAASiP,GAEXlX,EAAMiW,WAAWE,GAAGlO,KAAK7G,KADd8C,MAEXA,KAAKkS,WAAa,IAAIxB,EACtB1Q,KAAKlC,OAAS,EACVzB,EAAMK,UAAUsW,KACZA,aAAoBtC,EACpBsC,EAAS3R,SAAQ,SAASlB,GACtBH,KAAK4Q,IAAIzQ,EACb,IAEK6S,aAAoBlB,GACzBkB,EAAS3R,SAAQ,SAASyF,EAAG5H,GACzBc,KAAK4Q,IAAI,CAAE5T,IAAK8J,EAAGzI,MAAOa,GAC9B,GAAGc,MAGf,EAEAgC,SAAU,SAASjC,GACf,OAAOC,KAAKkS,WAAWjB,YAAYlR,EACvC,EAEA6Q,IAAK,SAAS7Q,GACEC,KAAKkS,WAAWpB,IAAI/Q,KAE5BC,KAAKkS,WAAWtB,IAAI7Q,EAAMA,GAC1BC,KAAKlC,SACLkC,KAAKiF,QAAQ,WAErB,EAEA6L,IAAK,SAAS/Q,GACV,OAAIC,KAAKgC,SAASjC,GACPC,KAAKkS,WAAWpB,IAAI/Q,GAAM1B,MAG1B,IAEf,EAOAiT,KAAM,SAASvR,GACX,OAAOC,KAAKkS,WAAWf,MAAMpR,EACjC,EAMA4B,OAAQ,SAAS5B,GACTC,KAAKgC,SAASjC,KACdC,KAAKkS,WAAWvQ,OAAO5B,GACvBC,KAAKlC,SACLkC,KAAKiF,QAAQ,WAErB,EAKA5D,QAAS,SAASxB,EAAMwC,GACpBrC,KAAKkS,WAAW7Q,SAAQ,SAAS4R,GAC7BpT,EAAKoT,EAAG5U,MACZ,GAAGgE,EACP,EACA6Q,QAAS,WACL,IAAIvJ,EAAI,GAIR,OAHA3J,KAAKqB,SAAQ,SAASlB,GAClBwJ,EAAE/K,KAAKuB,EACX,IACOwJ,CACX,IAQAwJ,EAAOrX,EAAM+H,MAAMC,OAAO,CAE1BC,KAAM,SAAS6N,EAAIwB,GA+Bf,GAzBApT,KAAKqT,MAAQ,GAMbrT,KAAKsT,SAAW,GAMhBtT,KAAKuT,SAAW,GAKhBvT,KAAKwT,OAAS,EAEVnX,EAAMK,UAAUkV,GAChB5R,KAAK4R,GAAKA,EAGV5R,KAAK4R,GAAKrC,IAEVlT,EAAMK,UAAU0W,GAAQ,CACxBpT,KAAKyT,gBAAkBL,EAEvB,IAAI/S,EAAI+S,EAAMM,SACd1T,KAAKgJ,MAAQ3I,EAAE2I,MACfhJ,KAAK+I,OAAS1I,EAAE0I,OAChB/I,KAAKnB,EAAIwB,EAAExB,EACXmB,KAAKlB,EAAIuB,EAAEvB,CACf,MAEIkB,KAAKyT,gBAAkB,KAM3BzT,KAAK2T,KAAO,KACZ3T,KAAKxC,KAAO,OACZwC,KAAK4T,UAAY,SAAW5T,KAAK4R,GAAK,IAKtC5R,KAAK6T,WAAY,CACrB,EAKAC,WAAY,WACR,OAAOzX,EAAMwB,QAAQmC,KAAKqT,MAC9B,EAMAK,OAAQ,SAAS/J,GACb,IAAKtN,EAAMK,UAAUiN,GACjB,OAAO,IAAI3N,EAAQ2M,KAAK3I,KAAKnB,EAAGmB,KAAKlB,EAAGkB,KAAKgJ,MAAOhJ,KAAK+I,QAG7D/I,KAAKnB,EAAI8K,EAAE9K,EACXmB,KAAKlB,EAAI6K,EAAE7K,EACXkB,KAAKgJ,MAAQW,EAAEX,MACfhJ,KAAK+I,OAASY,EAAEZ,MACpB,EAMAgL,WAAY,SAASC,GACjB,IAAIC,EAAOjU,KACX,OAAO3D,EAAMoF,IAAIwS,EAAKZ,OAAO,SAASa,GAClC,OAAOA,EAAKC,cAAcF,KAAUD,CACxC,GACJ,EAMAI,YAAa,WACT,GAA6B,IAAzBpU,KAAKsT,SAASxV,OACd,MAAO,GAGX,IADA,IAAIuW,EAAW,GACN9V,EAAI,EAAG6J,EAAMpI,KAAKsT,SAASxV,OAAQS,EAAI6J,EAAK7J,IAAK,CACtD,IAAI2V,EAAOlU,KAAKsT,SAAS/U,GACzB8V,EAASzV,KAAKsV,EAAKC,cAAcnU,MACrC,CACA,OAAOqU,CACX,EAMAC,WAAY,WACR,GAA6B,IAAzBtU,KAAKuT,SAASzV,OACd,MAAO,GAGX,IADA,IAAIyW,EAAU,GACLhW,EAAI,EAAG6J,EAAMpI,KAAKuT,SAASzV,OAAQS,EAAI6J,EAAK7J,IAAK,CACtD,IAAI2V,EAAOlU,KAAKuT,SAAShV,GACzBgW,EAAQ3V,KAAKsV,EAAKC,cAAcnU,MACpC,CACA,OAAOuU,CACX,EAMAhN,MAAO,WACH,IAAIiN,EAAO,IAAIrB,EAef,OAdI9W,EAAMK,UAAUsD,KAAKwT,UACrBgB,EAAKhB,OAASxT,KAAKwT,QAEnBnX,EAAMK,UAAUsD,KAAKyU,WACrBD,EAAKC,QAAUzU,KAAKyU,SAEpBpY,EAAMK,UAAUsD,KAAK0U,SACrBF,EAAKE,MAAQ1U,KAAK0U,OAEtBF,EAAKf,gBAAkBzT,KAAKyT,gBAC5Be,EAAK3V,EAAImB,KAAKnB,EACd2V,EAAK1V,EAAIkB,KAAKlB,EACd0V,EAAKxL,MAAQhJ,KAAKgJ,MAClBwL,EAAKzL,OAAS/I,KAAK+I,OACZyL,CACX,EAKAG,WAAY,SAASX,GACjB,OAAiC,OAA1BhU,KAAK+T,WAAWC,EAC3B,EAMAY,WAAY,SAASV,GACbA,EAAKjW,SAAW+B,OAChB3D,EAAMsF,OAAO3B,KAAKqT,MAAOa,GACzB7X,EAAMsF,OAAO3B,KAAKsT,SAAUY,GAC5BA,EAAKjW,OAAS,MAGdiW,EAAKjQ,SAAWjE,OAChB3D,EAAMsF,OAAO3B,KAAKqT,MAAOa,GACzB7X,EAAMsF,OAAO3B,KAAKuT,SAAUW,GAC5BA,EAAKjQ,OAAS,KAEtB,EAKA4Q,UAAW,SAASb,GAChB,OAAO3X,EAAMoF,IAAIzB,KAAKsT,UAAU,SAASY,GACrC,OAAOA,EAAKjQ,SAAW+P,CAC3B,GACJ,EAKAc,OAAQ,WACJ,OAAO9U,KAAKqT,MAAMvV,MACtB,EAKAiX,aAAc,SAASb,GACnB,OAAOlS,EAAShC,KAAKqT,MAAOa,EAChC,EAKAc,aAAc,SAAShB,GACnB,OAAO3X,EAAM2G,IAAIhD,KAAKqT,OAAO,SAASa,GAClC,OAAOA,EAAKC,cAAcnU,QAAUgU,CACxC,GAAGhU,KACP,EAKAiV,aAAc,WACV,IAAIC,EAAY,GAOhB,OANA7Y,EAAMgF,QAAQrB,KAAKuT,UAAU,SAASlF,GAClC6G,EAAUtW,KAAKyP,EAAE8F,cAAcnU,MACnC,GAAGA,MACH3D,EAAMgF,QAAQrB,KAAKsT,UAAU,SAASjF,GAClC6G,EAAUtW,KAAKyP,EAAE8F,cAAcnU,MACnC,GAAGA,MACIkV,CACX,IAMAC,EAAOrZ,EAAM+H,MAAMC,OAAO,CAE1BC,KAAM,SAAS9F,EAAQgG,EAAQ2N,EAAIwD,GAC/B,GAAI/Y,EAAMO,YAAYqB,GAClB,KAAM,yCAEV,GAAI5B,EAAMO,YAAYqH,GAClB,KAAM,yCAEV,IAAIoR,EAAaC,EAEbD,EADAhZ,EAAMc,SAASc,GACD,IAAIkV,EAAKlV,GAGTA,EAGdqX,EADAjZ,EAAMc,SAAS8G,GACD,IAAIkP,EAAKlP,GAGTA,EAGlBjE,KAAK/B,OAASoX,EACdrV,KAAKiE,OAASqR,EACdtV,KAAK/B,OAAOoV,MAAMzU,KAAKoB,MACvBA,KAAKiE,OAAOoP,MAAMzU,KAAKoB,MACvBA,KAAK/B,OAAOqV,SAAS1U,KAAKoB,MAC1BA,KAAKiE,OAAOsP,SAAS3U,KAAKoB,MACtB3D,EAAMK,UAAUkV,GAChB5R,KAAK4R,GAAKA,EAGV5R,KAAK4R,GAAKrC,IAEVlT,EAAMK,UAAU0Y,GAChBpV,KAAKuV,qBAAuBH,EAG5BpV,KAAKuV,qBAAuB,KAEhCvV,KAAKxC,KAAO,OACZwC,KAAK4T,UAAY,SAAW5T,KAAK/B,OAAO2T,GAAK,KAAO5R,KAAKiE,OAAO2N,GAAK,GACzE,EAKAuC,cAAe,SAASH,GACpB,GAAIhU,KAAK/B,SAAW+V,GAAQhU,KAAKiE,SAAW+P,EACxC,KAAM,iDAEV,OAAOhU,KAAK/B,SAAW+V,EAAOhU,KAAKiE,OAASjE,KAAK/B,MACrD,EAKAuX,cAAe,SAAStB,GACpB,OAAIlU,KAAK/B,SAAWiW,EAAKjW,QAAU+B,KAAK/B,SAAWiW,EAAKjQ,OAC7CjE,KAAK/B,OAEZ+B,KAAKiE,SAAWiQ,EAAKjW,QAAU+B,KAAKiE,SAAWiQ,EAAKjQ,OAC7CjE,KAAKiE,OAET,IACX,EAKAwR,WAAY,SAASC,EAAIC,GACrB,OAAO3V,KAAK/B,SAAWyX,GAAM1V,KAAKiE,SAAW0R,GAAM3V,KAAK/B,SAAW0X,GAAM3V,KAAKiE,SAAWyR,CAC7F,EAKAE,SAAU,WACN,MAAO,CAAC5V,KAAK/B,OAAQ+B,KAAKiE,OAC9B,EAKA8Q,aAAc,SAASf,GACnB,OAAOhU,KAAK/B,SAAW+V,GAAQhU,KAAKiE,SAAW+P,CACnD,EAMAW,WAAY,SAAST,GACjB,OAAOlS,EAAShC,KAAK/B,OAAOoV,MAAOa,IAASlS,EAAShC,KAAKiE,OAAOoP,MAAOa,EAC5E,EAKA2B,aAAc,SAAS7B,GACnB3X,EAAMsF,OAAO3B,KAAK/B,OAAOoV,MAAOrT,MAChC3D,EAAMsF,OAAO3B,KAAK/B,OAAOqV,SAAUtT,MAEnCgU,EAAKX,MAAMzU,KAAKoB,MAChBgU,EAAKV,SAAS1U,KAAKoB,MAEnBA,KAAK/B,OAAS+V,CAClB,EAMA8B,aAAc,SAAS9B,GACnB3X,EAAMsF,OAAO3B,KAAKiE,OAAOoP,MAAOrT,MAChC3D,EAAMsF,OAAO3B,KAAKiE,OAAOsP,SAAUvT,MAEnCgU,EAAKX,MAAMzU,KAAKoB,MAChBgU,EAAKT,SAAS3U,KAAKoB,MAEnBA,KAAKiE,OAAS+P,CAClB,EAKA+B,aAAc,SAAS7W,EAAG8W,GAClBhW,KAAK/B,SAAWiB,EAChBc,KAAK6V,aAAaG,GAEbhW,KAAKiE,SAAW/E,GACrBc,KAAK8V,aAAaE,EAE1B,EAKA7P,QAAS,WACL,IAAI8P,EAAYjW,KAAK/B,OACjBiY,EAAYlW,KAAKiE,OASrB,OAPAjE,KAAK/B,OAASiY,EACd7Z,EAAMsF,OAAOsU,EAAU3C,SAAUtT,MACjCA,KAAK/B,OAAOqV,SAAS1U,KAAKoB,MAE1BA,KAAKiE,OAASgS,EACd5Z,EAAMsF,OAAOuU,EAAU3C,SAAUvT,MACjCA,KAAKiE,OAAOsP,SAAS3U,KAAKoB,MACnBA,IACX,EAKAmW,SAAU,SAASlS,GACf,GAAIjE,KAAK/B,SAAWgG,GAAUjE,KAAKiE,SAAWA,EAC1C,KAAM,iDAENjE,KAAKiE,SAAWA,GAChBjE,KAAKmG,SAEb,EAKAiQ,kBAAmB,WACf,IAAIzM,EAAI3J,KAAKuH,QAGb,OAFAoC,EAAExD,UACFwD,EAAE0M,UAAW,EACN1M,CACX,EAKApC,MAAO,WAEH,OADY,IAAI4N,EAAKnV,KAAK/B,OAAQ+B,KAAKiE,OAE3C,IASAqS,EAAQxa,EAAM+H,MAAMC,OAAO,CAC3BC,KAAM,SAASwS,GAKXvW,KAAKqT,MAAQ,GAKbrT,KAAKwW,MAAQ,GAEbxW,KAAKyW,SAAW,IAAI3E,EAKpB9R,KAAKhE,QAAU,KAOfgE,KAAK0W,MAAQ,KACTra,EAAMK,UAAU6Z,GACZla,EAAMc,SAASoZ,GACfvW,KAAK4R,GAAK2E,GAGVvW,KAAKhE,QAAUua,EACfvW,KAAK4R,GAAK2E,EAAY3E,IAI1B5R,KAAK4R,GAAKrC,IAOdvP,KAAK0T,OAAS,IAAI/K,EAElB3I,KAAK2W,yBAA0B,EAC/B3W,KAAKxC,KAAO,OAChB,EAMAoZ,mBAAoB,SAASC,GAIzB,GAHIxa,EAAMO,YAAYia,KAClBA,GAAe,IAEf7W,KAAK2W,yBAA4BE,EAArC,CAGA,IAAK,IAAItY,EAAI,EAAG6J,EAAMpI,KAAKwW,MAAM1Y,OAAQS,EAAI6J,EAAK7J,IAAK,CACnD,IAAIyV,EAAOhU,KAAKwW,MAAMjY,GACtByV,EAAKK,SAAWrU,KAAKoU,YAAYJ,GACjCA,EAAKO,QAAUvU,KAAKsU,WAAWN,EACnC,CACAhU,KAAK2W,yBAA0B,CAN/B,CAOJ,EAUAG,aAAc,SAASC,EAAWrP,EAAQsP,GACtC,IAAKD,EACD,KAAM,4BAEN1a,EAAMO,YAAY8K,KAClBA,EAAS,GAGb1H,KAAK4W,qBACDva,EAAMO,YAAYoa,KAClBA,EAAU,IAAIlF,EACdzV,EAAMgF,QAAQrB,KAAKwW,OAAO,SAASnT,GAC/B2T,EAAQpG,IAAIvN,GAAG,EACnB,KAEJ2T,EAAQhG,IAAI+F,GAAW,GACvBA,EAAUE,MAAQvP,EAElB,IADA,IAAI2M,EAAW0C,EAAU1C,SAChB9V,EAAI,EAAG6J,EAAMiM,EAASvW,OAAQS,EAAI6J,EAAK7J,IAAK,CACjD,IAAI2Y,EAAQ7C,EAAS9V,GAChB2Y,IAASF,EAAQlG,IAAIoG,IAG1BlX,KAAK8W,aAAaI,EAAOxP,EAAS,EAAGsP,EACzC,CACJ,EAQAG,KAAM,SAAS9Y,GACX,GAAIhC,EAAMO,YAAYyB,GAAQ,CAC1B,GAAK2B,KAAK0W,MAWN,OAAO1W,KAAK0W,MATZ,IAAIU,EAAQ/a,EAAMsG,MAAM3C,KAAKwW,OAAO,SAASnT,GACzC,OAA6B,IAAtBA,EAAEkQ,SAASzV,MACtB,IACA,OAAIsZ,GAGG/a,EAAMsG,MAAM3C,KAAKwW,MAKhC,CAEIxW,KAAK0W,MAAQrY,CAErB,EAQAgZ,uBAAwB,WACpBrX,KAAKsX,eAAiB,EACtBtX,KAAKuX,iBAGL,IAFA,IAAIC,EAAcnb,EAAM8B,UAAU6B,KAAKwW,MAAM1Y,QAAS,GAE7CoB,EAAI,EAAGA,EAAIc,KAAKwW,MAAM1Y,OAAQoB,KACX,IAApBsY,EAAYtY,KACZc,KAAKyX,uBAAuBD,EAAatY,GACzCc,KAAKsX,kBAIb,IAAqB/Y,EAAjBmZ,EAAa,GACjB,IAAKnZ,EAAI,EAAGA,EAAIyB,KAAKsX,iBAAkB/Y,EACnCmZ,EAAWnZ,GAAK,IAAI+X,EAExB,IAAK/X,EAAI,EAAGA,EAAIiZ,EAAY1Z,SAAUS,EAAG,CACzBmZ,EAAWF,EAAYjZ,IAC7BoZ,oBAAoB3X,KAAKwW,MAAMjY,GACzC,CAKA,OAHAmZ,EAAWtU,MAAK,SAAS3C,EAAGJ,GACxB,OAAOA,EAAEmW,MAAM1Y,OAAS2C,EAAE+V,MAAM1Y,MACpC,IACO4Z,CACX,EAEAD,uBAAwB,SAASG,EAAQC,GACrCD,EAAOC,GAAa7X,KAAKsX,eACzB,IAAItD,EAAOhU,KAAKwW,MAAMqB,GACtBxb,EAAMgF,QAAQ2S,EAAKX,OACf,SAASa,GACL,IACI4D,EADO5D,EAAKC,cAAcH,GACZtR,OACM,IAApBkV,EAAOE,IACP9X,KAAKyX,uBAAuBG,EAAQE,EAE5C,GAAG9X,KACX,EAMA+X,WAAY,WACR,GAAI/X,KAAKnC,UAEL,OADAmC,KAAK0T,OAAS,IAAI/K,EACX3I,KAAK0T,OAGhB,IADA,IAAIrT,EAAI,KACC9B,EAAI,EAAG6J,EAAMpI,KAAKwW,MAAM1Y,OAAQS,EAAI6J,EAAK7J,IAAK,CACnD,IAAIyV,EAAOhU,KAAKwW,MAAMjY,GAKlB8B,EAJCA,EAIGA,EAAEyI,MAAMkL,EAAKN,UAHbM,EAAKN,QAKjB,CAEA,OADA1T,KAAK0T,OAASrT,EACPL,KAAK0T,MAChB,EAUAsE,gBAAiB,SAASb,GACtB,IAC4BlZ,EAAQgG,EADhCgU,EAAO,IAAI3B,EACXnP,EAAM,IAAI2K,EACdmG,EAAKd,KAAOA,EAAK5P,QACjB0Q,EAAKd,KAAKF,MAAQ,EAClBgB,EAAKd,KAAKvF,GAAKuF,EAAKvF,GACpBzK,EAAIyJ,IAAIuG,EAAMc,EAAKd,MACnBA,EAAKF,MAAQ,EAEb,IAAID,EAAU,GACVkB,EAAY,GAChBD,EAAKE,SAASF,EAAKd,MACnBH,EAAQpY,KAAKuY,GACbe,EAAUtZ,KAAKuY,GAGf,IADA,IAAIiB,EAAa,EACVF,EAAUpa,OAAS,GAEtB,IADA,IAAI8U,EAAOsF,EAAUG,MACZC,EAAK,EAAGA,EAAK1F,EAAKS,MAAMvV,OAAQwa,IAAM,CAC3C,IACIC,EADO3F,EAAKS,MAAMiF,GACRnE,cAAcvB,GAC5B,IAAI5Q,EAASgV,EAASuB,GAAtB,CAIAA,EAAGtB,MAAQrE,EAAKqE,MAAQ,EACpBmB,EAAaG,EAAGtB,MAAQ,IACxBmB,EAAaG,EAAGtB,MAAQ,GAEvBjV,EAASkW,EAAWK,IACrBL,EAAUtZ,KAAK2Z,GAEdvW,EAASgV,EAASuB,IACnBvB,EAAQpY,KAAK2Z,GAEbpR,EAAI8J,YAAY2B,GAChB3U,EAASkJ,EAAI2J,IAAI8B,KAGjB3U,EAAS2U,EAAKrL,SACP0P,MAAQrE,EAAKqE,MACpBhZ,EAAO2T,GAAKgB,EAAKhB,GACjBzK,EAAIyJ,IAAIgC,EAAM3U,IAEdkJ,EAAI8J,YAAYsH,GAChBtU,EAASkD,EAAI2J,IAAIyH,KAGjBtU,EAASsU,EAAGhR,SACL0P,MAAQsB,EAAGtB,MAClBhT,EAAO2N,GAAK2G,EAAG3G,GACfzK,EAAIyJ,IAAI2H,EAAItU,IAEhB,IAAIuU,EAAU,IAAIrD,EAAKlX,EAAQgG,GAC/BgU,EAAKQ,QAAQD,EA/Bb,CAgCJ,CAKJ,IADA,IAAIE,EAAa,GACRna,EAAI,EAAGA,EAAI6Z,EAAY7Z,IAC5Bma,EAAW9Z,KAAK,IASpB,OANAvC,EAAMgF,QAAQ4W,EAAKzB,OAAO,SAASxC,GAC/B0E,EAAW1E,EAAKiD,OAAOrY,KAAKoV,EAChC,IAEAiE,EAAKS,WAAaA,EAClBT,EAAKrB,qBACEqB,CACX,EAQAU,eAAgB,SAASC,EAAeC,GAOpC,GANIxc,EAAMO,YAAYgc,KAClBA,EAAgB,IAEhBvc,EAAMO,YAAYic,KAClBA,EAAoB,GAEE,IAAtB7Y,KAAKwW,MAAM1Y,OACX,OAAO,KAEX,GAA0B,IAAtBkC,KAAKwW,MAAM1Y,OACX,OAAOkE,EAAS4W,EAAe5Y,KAAKwW,MAAM,IAAM,KAAOxW,KAAKwW,MAAM,GAEtE,IAAIsC,EAAOjd,EAAEkJ,KAAK/E,KAAKwW,OAAO,SAASxC,GACnC,OAAQhS,EAAS4W,EAAe5E,IAASA,EAAKc,UAAY+D,CAC9D,IACA,OAAIxc,EAAMwB,QAAQib,GACP,KAEJA,EAAKzc,EAAMiD,cAAc,EAAGwZ,EAAKhb,QAC5C,EAKAD,QAAS,WACL,OAAOxB,EAAMwB,QAAQmC,KAAKwW,MAC9B,EAKAuC,UAAW,WACP,OAAO1c,EAAM2G,IAAIhD,KAAKqT,OAAO,SAASa,GAClC,OAAOlS,EAAShC,KAAKwW,MAAOtC,EAAKjW,SAAW+D,EAAShC,KAAKwW,MAAOtC,EAAKjQ,OAC1E,GAAGjE,KACP,EAMAsU,WAAY,SAASjR,GACjB,IAAKrD,KAAKgZ,QAAQ3V,GACd,KAAM,4CAEV,OAAOA,EAAEiR,YACb,EAMAF,YAAa,SAAS/Q,GAClB,IAAKrD,KAAKgZ,QAAQ3V,GACd,KAAM,4CAEV,OAAOA,EAAE+Q,aACb,EAKAqE,QAAS,SAASQ,EAAchV,EAAQyQ,GAEpC,GAAIrY,EAAMO,YAAYqc,GAClB,KAAM,yCAEV,GAAI5c,EAAMO,YAAYqH,GAAS,CAE3B,GAAI5H,EAAMK,UAAUuc,EAAazb,OAA+B,SAAtByb,EAAazb,KAEnD,YADAwC,KAAKkZ,gBAAgBD,GAIrB,KAAM,wCAEd,CAEA,IAAIE,EAAcnZ,KAAKoZ,QAAQH,GAC3B5c,EAAMO,YAAYuc,KAClBA,EAAcnZ,KAAKqZ,QAAQJ,IAE/B,IAAIK,EAActZ,KAAKoZ,QAAQnV,GAC3B5H,EAAMO,YAAY0c,KAClBA,EAActZ,KAAKqZ,QAAQpV,IAG/B,IAAIuU,EAAU,IAAIrD,EAAKgE,EAAaG,GAapC,OAXIjd,EAAMK,UAAUgY,KAChB8D,EAAQ9D,MAAQA,GAQpB1U,KAAKqT,MAAMzU,KAAK4Z,GAETA,CACX,EAKAe,eAAgB,WACZ,KAAOvZ,KAAKqT,MAAMvV,OAAS,GAAG,CAC1B,IAAIoW,EAAOlU,KAAKqT,MAAM,GACtBrT,KAAK4U,WAAWV,EACpB,CACJ,EAKAgF,gBAAiB,SAAShF,GAEtB,IAAIlU,KAAKwZ,QAAQtF,GAAjB,CAIA,GADAlU,KAAKqT,MAAMzU,KAAKsV,GACZlU,KAAKgZ,QAAQ9E,EAAKjW,OAAO2T,IAAK,CAE9B,IAAI3S,EAAIe,KAAKoZ,QAAQlF,EAAKjW,OAAO2T,IACjCsC,EAAK2B,aAAa5W,EACtB,MAEIe,KAAKqZ,QAAQnF,EAAKjW,QAGtB,GAAI+B,KAAKgZ,QAAQ9E,EAAKjQ,OAAO2N,IAAK,CAC9B,IAAI6H,EAAIzZ,KAAKoZ,QAAQlF,EAAKjQ,OAAO2N,IACjCsC,EAAK4B,aAAa2D,EACtB,MAEIzZ,KAAKqZ,QAAQnF,EAAKjQ,OAhBtB,CA+BJ,EAOAuV,QAAS,SAASE,GACd,GAAIrd,EAAMc,SAASuc,GACf,OAAOrd,EAAMoF,IAAIzB,KAAKqT,OAAO,SAASa,GAClC,OAAOA,EAAKtC,KAAO8H,CACvB,IAEJ,GAAsB,SAAlBA,EAASlc,KACT,OAAOwE,EAAShC,KAAKqT,MAAOqG,GAEhC,KAAM,uDACV,EAIAN,QAAS,SAASO,GACd,IAAI/H,EAAK+H,EAAS/H,IAAM+H,EACxB,GAAI3Z,KAAKyW,SAASxF,YAAYW,GAC1B,OAAO5R,KAAKyW,SAAS3F,IAAIc,EAEjC,EAKAoH,QAAS,SAASW,GACd,IAAI/H,EAAK+H,EAAS/H,IAAM+H,EACxB,OAAO3Z,KAAKyW,SAASxF,YAAYW,EACrC,EAEAuG,SAAU,SAASnE,GACfhU,KAAKwW,MAAM5X,KAAKoV,GAChBhU,KAAKyW,SAAS7F,IAAIoD,EAAKpC,GAAIoC,EAC/B,EAEA4F,YAAa,SAAS5F,GAClB3X,EAAMsF,OAAO3B,KAAKwW,MAAOxC,GACzBhU,KAAKyW,SAAS9U,OAAOqS,EAAKpC,GAC9B,EAMAiI,WAAY,SAASF,GACjB,IAAItW,EAAIsW,EAKR,GAJItd,EAAMc,SAASwc,KACftW,EAAIrD,KAAKoZ,QAAQO,KAGjBtd,EAAMK,UAAU2G,GAUhB,KAAM,gEATN,IAAIgQ,EAAQhQ,EAAEgQ,MACdhQ,EAAEgQ,MAAQ,GACV,IAAK,IAAI9U,EAAI,EAAG6J,EAAMiL,EAAMvV,OAAQS,EAAI6J,EAAK7J,IAAK,CAC9C,IAAI2V,EAAOb,EAAM9U,GACjByB,KAAK4U,WAAWV,EACpB,CACAlU,KAAK4Z,YAAYvW,EAKzB,EAKAyW,aAAc,SAASC,EAAIC,GACvB,OAAO3d,EAAMoF,IAAIzB,KAAKqT,OAAO,SAASa,GAClC,OAAOA,EAAKjW,QAAU8b,GAAM7F,EAAKjQ,QAAU+V,GAAM9F,EAAKjW,QAAU+b,GAAM9F,EAAKjQ,QAAU8V,CACzF,GACJ,EAKAnF,WAAY,SAASV,GAKjB7X,EAAMsF,OAAO3B,KAAKqT,MAAOa,GAEzB7X,EAAMsF,OAAOuS,EAAKjW,OAAOqV,SAAUY,GACnC7X,EAAMsF,OAAOuS,EAAKjW,OAAOoV,MAAOa,GAChC7X,EAAMsF,OAAOuS,EAAKjQ,OAAOsP,SAAUW,GACnC7X,EAAMsF,OAAOuS,EAAKjQ,OAAOoP,MAAOa,EACpC,EAOAmF,QAAS,SAASM,EAAUM,EAAYvF,GAEpC,IAAIwF,EAAU,KAEd,IAAK7d,EAAMK,UAAUid,GACjB,KAAM,iDAGV,GAAItd,EAAMc,SAASwc,GAAW,CAC1B,GAAI3Z,KAAKgZ,QAAQW,GACb,OAAO3Z,KAAKoZ,QAAQO,GAExBO,EAAU,IAAI/G,EAAKwG,EACvB,KACK,CACD,GAAI3Z,KAAKgZ,QAAQW,GACb,OAAO3Z,KAAKoZ,QAAQO,GAGxBO,EAAUP,CACd,CAUA,OARItd,EAAMK,UAAUud,IAChBC,EAAQxG,OAAOuG,GAGf5d,EAAMK,UAAUgY,KAChBwF,EAAQxF,MAAQA,GAEpB1U,KAAKmY,SAAS+B,GACPA,CACX,EAKAvC,oBAAqB,SAAS3D,GACrBhU,KAAKgZ,QAAQhF,IACdhU,KAAKmY,SAASnE,GAGlB,IAAImG,EAAWnG,EAAKV,SACpBU,EAAKV,SAAW,GAChBjX,EAAMgF,QAAQ8Y,GAAU,SAASjG,GAC7BlU,KAAKkZ,gBAAgBhF,EACzB,GAAGlU,KACP,EAKAuX,eAAgB,WACZ,IAAIhZ,EACJ,IAAKA,EAAI,EAAGA,EAAIyB,KAAKwW,MAAM1Y,SAAUS,EACjCyB,KAAKwW,MAAMjY,GAAGmE,MAAQnE,EAG1B,IAAKA,EAAI,EAAGA,EAAIyB,KAAKqT,MAAMvV,SAAUS,EACjCyB,KAAKqT,MAAM9U,GAAGmE,MAAQnE,CAE9B,EAKAgJ,MAAO,SAAS6S,GACZ,IAAI5F,EAAO,IAAI8B,EACX+D,EAAOhe,EAAMK,UAAU0d,KAAgC,IAAhBA,EACvCC,IACA7F,EAAK8F,QAAU,IAAIxI,EACnB0C,EAAK+F,QAAU,IAAIzI,GAGvB,IAAI3K,EAAM,IAAI2K,EAoBd,OAnBAzV,EAAMgF,QAAQrB,KAAKwW,OAAO,SAASgE,GAC/B,IAAIC,EAAQD,EAAUjT,QACtBJ,EAAI6J,IAAIwJ,EAAWC,GACnBjG,EAAK2D,SAASsC,GAEVJ,GACA7F,EAAK8F,QAAQtJ,IAAIyJ,EAAOD,EAEhC,IAEAne,EAAMgF,QAAQrB,KAAKqT,OAAO,SAASqH,GAC/B,GAAIvT,EAAI8J,YAAYyJ,EAAazc,SAAWkJ,EAAI8J,YAAYyJ,EAAazW,QAAS,CAC9E,IAAI0W,EAAWnG,EAAKiE,QAAQtR,EAAI2J,IAAI4J,EAAazc,QAASkJ,EAAI2J,IAAI4J,EAAazW,SAC3EoW,GACA7F,EAAK+F,QAAQvJ,IAAI2J,EAAUD,EAEnC,CACJ,IAEOlG,CACX,EAOAoG,UAAW,SAASC,GAChB,OAAOvE,EAAMja,MAAMue,UAAU5a,KAAM6a,EACvC,EAOAC,oBAAqB,SAAS/D,EAAWgE,GACrC,GAAI1e,EAAMO,YAAYma,GAClB,KAAM,sCAEV,GAAI1a,EAAMO,YAAYme,GAClB,KAAM,gCAEV,IAAK/a,KAAKgZ,QAAQjC,GACd,KAAM,iDAEV,IAAIiE,EAAYhb,KAAKoZ,QAAQrC,GAE7B/W,KAAKib,aAAaD,EAAWD,EADf,GAElB,EAEAE,aAAc,SAASjH,EAAM+G,EAAQ/D,GAEjC+D,EAAO/G,GACPgD,EAAQpY,KAAKoV,GAEb,IADA,IAAIK,EAAWL,EAAKI,cACX7V,EAAI,EAAG6J,EAAMiM,EAASvW,OAAQS,EAAI6J,EAAK7J,IAAK,CACjD,IAAI2Y,EAAQ7C,EAAS9V,GACjByD,EAASgV,EAASE,IAGtBlX,KAAKib,aAAa/D,EAAO6D,EAAQ/D,EACrC,CACJ,EAOAkE,sBAAuB,SAASnE,EAAWgE,GAEvC,GAAI1e,EAAMO,YAAYma,GAClB,KAAM,sCAEV,GAAI1a,EAAMO,YAAYme,GAClB,KAAM,gCAGV,IAAK/a,KAAKgZ,QAAQjC,GACd,KAAM,iDAEV,IAAIiE,EAAYhb,KAAKoZ,QAAQrC,GACzBoE,EAAQ,IAAI3I,EACZwE,EAAU,GAGd,IAFAmE,EAAMxI,QAAQqI,GAEPG,EAAMrd,OAAS,GAAG,CACrB,IAAIkW,EAAOmH,EAAMtI,UACjBkI,EAAO/G,GACPgD,EAAQpY,KAAKoV,GAEb,IADA,IAAIK,EAAWL,EAAKI,cACX7V,EAAI,EAAG6J,EAAMiM,EAASvW,OAAQS,EAAI6J,EAAK7J,IAAK,CACjD,IAAI2Y,EAAQ7C,EAAS9V,GACjByD,EAASgV,EAASE,IAAUlV,EAASmZ,EAAOjE,IAGhDiE,EAAMxI,QAAQuE,EAClB,CACJ,CACJ,EAcAkE,6BAA8B,SAASC,EAAoBrH,EAAMsH,EAASC,EAAUC,EAAWC,EAAO/Y,GAClG4Y,EAAQ1K,IAAIoD,EAAMtR,GAClB6Y,EAAS3K,IAAIoD,EAAMtR,GACnBA,IAEA+Y,EAAM7c,KAAKoV,GAGX,IADA,IAAmCpB,EAA/ByB,EAAWL,EAAKI,cACX7V,EAAI,EAAG6J,EAAMiM,EAASvW,OAAQS,EAAI6J,EAAK7J,IAC5CqU,EAAOyB,EAAS9V,GACX+c,EAAQrK,YAAY2B,GAIhB5Q,EAASyZ,EAAO7I,IACrB2I,EAAS3K,IAAIoD,EAAMxX,KAAKiJ,IAAI8V,EAASzK,IAAIkD,GAAOsH,EAAQxK,IAAI8B,MAJ5D5S,KAAKob,6BAA6BC,EAAoBzI,EAAM0I,EAASC,EAAUC,EAAWC,EAAO/Y,GACjG6Y,EAAS3K,IAAIoD,EAAMxX,KAAKiJ,IAAI8V,EAASzK,IAAIkD,GAAOuH,EAASzK,IAAI8B,MAOrE,GAAI2I,EAASzK,IAAIkD,KAAUsH,EAAQxK,IAAIkD,GAAO,CAC1C,IAAI0H,EAAY,GAChB,GACI9I,EAAO6I,EAAMpD,MACbqD,EAAU9c,KAAKgU,SAEZA,IAASoB,KACXqH,GAAuBK,EAAU5d,OAAS,IAC3C0d,EAAU5c,KAAK8c,EAEvB,CACJ,EAQAC,WAAY,SAASN,GACbhf,EAAMO,YAAYye,KAClBA,GAAqB,GAMzB,IAJA,IAAIC,EAAU,IAAIxJ,EACdyJ,EAAW,IAAIzJ,EACf0J,EAAY,GACZC,EAAQ,GACHld,EAAI,EAAG6J,EAAMpI,KAAKwW,MAAM1Y,OAAQS,EAAI6J,EAAK7J,IAAK,CACnD,IAAIyV,EAAOhU,KAAKwW,MAAMjY,GAClB+c,EAAQrK,YAAY+C,IAGxBhU,KAAKob,6BAA6BC,EAAoBrH,EAAMsH,EAASC,EAAUC,EAAWC,EAAO,EACrG,CACA,OAAOD,CACX,EAMAI,UAAW,WACP,OAAOvf,EAAMwB,QAAQmC,KAAK2b,aAC9B,EAMAE,WAAY,SAASC,GACjB,IAAIC,EAAaD,EAAMlB,YACnBoB,EAAYhc,KAAK4a,YACrB,OAAOve,EAAM2G,IAAI+Y,GAAY,SAAS9c,GAClC,OAAO+C,EAASga,EAAW/c,EAC/B,GACJ,EAMAgd,YAAa,WAET,GAAIjc,KAAKnC,WAAamC,KAAKwW,MAAM1Y,QAAU,GAAKkC,KAAKqT,MAAMvV,QAAU,EACjE,MAAO,GAGX,GAAyB,GAArBkC,KAAKwW,MAAM1Y,OAAa,CACxB,IAAI2E,EAAS,GACb,GAAIzC,KAAKqT,MAAMvV,OAAS,EAGpB,IAFA,IACIoe,EADUlc,KAAKqT,MAAM,GACHpV,OACbM,EAAI,EAAG6J,EAAMpI,KAAKqT,MAAMvV,OAAQS,EAAI6J,EAAK7J,IAAK,CACnD,IAAI2V,EAAOlU,KAAKqT,MAAM9U,GACtB,GAAI2V,EAAKjW,QAAUie,EAAnB,CAGA,IAAIC,EAAMjI,EAAK/N,UACf1D,EAAO7D,KAAKud,EAFZ,CAGJ,CAEJ,OAAO1Z,CACX,CAEA,IAAI+R,EAAOxU,KAAKuH,OAAM,GAClB6U,EAAIpc,KAAKwW,MAAM1Y,OAEfue,EAAmB,IAAIvK,EAQvBwK,EAAgB,SAAStI,GACzB,OAA6B,IAAzBA,EAAKV,SAASxV,OACN,EAAIse,EAEkB,IAAzBpI,EAAKT,SAASzV,OACXse,EAAI,EAGLpI,EAAKV,SAASxV,OAASkW,EAAKT,SAASzV,MAEpD,EAOIye,EAAwB,SAASvI,EAAMqI,GACvC,IAAIG,EAAYF,EAActI,GACzBqI,EAAiBpL,YAAYuL,IAC9BH,EAAiBrL,IAAIwL,EAAW,IAEpCH,EAAiBvL,IAAI0L,GAAW5d,KAAKoV,EACzC,EAEA3X,EAAMgF,QAAQmT,EAAKgC,OAAO,SAAStX,GAC/Bqd,EAAsBrd,EAAGmd,EAC7B,IAKA,IAHA,IAAII,EAAc,GACdC,EAAc,GAEXlI,EAAKgC,MAAM1Y,OAAS,GAAG,CAC1B,IAAIG,EAAQgG,EAAQuY,EACpB,GAAIH,EAAiBpL,YAAY,EAAImL,GAEjC,IADA,IAAIO,EAAUN,EAAiBvL,IAAI,EAAIsL,GAChCO,EAAQ7e,OAAS,GAAG,CACvBmG,EAAS0Y,EAAQtE,MACjB,IAAK,IAAIuE,EAAK,EAAGA,EAAK3Y,EAAOoP,MAAMvV,OAAQ8e,IAAM,CAC7C,IAAIC,EAAa5Y,EAAOoP,MAAMuJ,GAC9B3e,EAAS4e,EAAW1I,cAAclQ,GAClCuY,EAAYF,EAAcre,GAC1B5B,EAAMsF,OAAO0a,EAAiBvL,IAAI0L,GAAYve,GAC9CA,EAAO2W,WAAWiI,GAClBN,EAAsBte,EAAQoe,EAClC,CACA7H,EAAKoF,YAAY3V,GACjByY,EAAYI,QAAQ7Y,EACxB,CAIJ,GAAIoY,EAAiBpL,YAAYmL,EAAI,GAEjC,IADA,IAAIW,EAAUV,EAAiBvL,IAAIsL,EAAI,GAChCW,EAAQjf,OAAS,GAAG,CACvBG,EAAS8e,EAAQ1E,MACjB,IAAK,IAAI2E,EAAK,EAAGA,EAAK/e,EAAOoV,MAAMvV,OAAQkf,IAAM,CAC7C,IAAIC,EAAahf,EAAOoV,MAAM2J,GAC9B/Y,EAASgZ,EAAW9I,cAAclW,GAClCue,EAAYF,EAAcrY,GAC1B5H,EAAMsF,OAAO0a,EAAiBvL,IAAI0L,GAAYvY,GAC9CA,EAAO2Q,WAAWqI,GAClBV,EAAsBtY,EAAQoY,EAClC,CACAI,EAAY7d,KAAKX,GACjBuW,EAAKoF,YAAY3b,EACrB,CAGJ,GAAIuW,EAAKgC,MAAM1Y,OAAS,EACpB,IAAK,IAAIgJ,EAAIsV,EAAI,EAAGtV,EAAI,EAAIsV,EAAGtV,IAC3B,GAAIuV,EAAiBpL,YAAYnK,IAC7BuV,EAAiBvL,IAAIhK,GAAGhJ,OAAS,EAAG,CAGpC,IAFA,IACIoB,EADUmd,EAAiBvL,IAAIhK,GACnBuR,MACP6E,EAAK,EAAGA,EAAKhe,EAAEmU,MAAMvV,OAAQof,IAAM,CACxC,IAAIC,EAAMje,EAAEmU,MAAM6J,GACdE,EAAID,EAAIhJ,cAAcjV,GAC1Bsd,EAAYF,EAAcc,GAC1B/gB,EAAMsF,OAAO0a,EAAiBvL,IAAI0L,GAAYY,GAC9CA,EAAExI,WAAWuI,GACbZ,EAAsBa,EAAGf,EAC7B,CACAI,EAAY7d,KAAKM,GACjBsV,EAAKoF,YAAY1a,GACjB,KACJ,CAGZ,CAEAud,EAAcA,EAAYY,OAAOX,GAGjC,IADA,IAAIY,EAAc,IAAIxL,EACbyL,EAAK,EAAGA,EAAKvd,KAAKwW,MAAM1Y,OAAQyf,IACrCD,EAAYtM,IAAIwD,EAAK8F,QAAQxJ,IAAI2L,EAAYc,IAAMA,GAGvD,IAAIC,EAAgB,GAOpB,OANAnhB,EAAMgF,QAAQrB,KAAKqT,OAAO,SAASa,GAC3BoJ,EAAYxM,IAAIoD,EAAKjW,QAAUqf,EAAYxM,IAAIoD,EAAKjQ,UACpDiQ,EAAK/N,UACLqX,EAAc5e,KAAKsV,GAE3B,IACOsJ,CACX,IAMJlH,EAAMmH,WAAa,CAMfC,WAAY,WACR,OAAOpH,EAAMja,MAAM4M,MAAM,CAAE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QACvF,EAOA0U,QAAS,WACL,OAAOrH,EAAMja,MAAM4M,MAAM,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAChH,SAAU,SAAU,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,SACvI,EAOA2U,WAAY,WACR,OAAOtH,EAAMja,MAAM4M,MAAM,CAAE,OAAQ,OAAQ,QAC/C,EAQA4U,WAAY,SAASC,GAIjB,OAHIzhB,EAAMO,YAAYkhB,KAClBA,EAAS,GAENxH,EAAMja,MAAM0hB,mBAAmBD,EAAQ,EAClD,EAQAE,OAAQ,SAASlgB,GAIb,OAHIzB,EAAMO,YAAYkB,KAClBA,EAAS,IAENwY,EAAMja,MAAM0hB,mBAAmBjgB,EAAQ,EAClD,EAYAmgB,KAAM,SAASH,EAAQI,GACnB,OAAO5H,EAAMja,MAAM0hB,mBAAmBD,EAAQI,EAClD,EAaAC,OAAQ,SAASL,EAAQI,EAAeE,GACpC,OAAO9H,EAAMja,MAAMgiB,qBAAqBP,EAAQI,EAAeE,EACnE,EAOAE,SAAU,WACN,OAAOhI,EAAMja,MAAM4M,MACf,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAEjF,EAUAsV,KAAM,SAASlb,EAAGnD,GACd,IAAIse,EAAI,IAAIxiB,EAAQsa,MACpB,GAAIjT,GAAK,GAAKnD,GAAK,EACf,OAAOse,EAGX,IAAK,IAAIjgB,EAAI,EAAGA,EAAI8E,EAAI,EAAG9E,IAEvB,IADA,IAAIkgB,EAAW,KACN5X,EAAI,EAAGA,EAAI3G,EAAI,EAAG2G,IAAK,CAE5B,IAAImN,EAAO,IAAIb,EAAK5U,EAAElB,WAAa,IAAMwJ,EAAExJ,YAK3C,GAJAmhB,EAAEnF,QAAQrF,GACNyK,GACAD,EAAE/F,QAAQgG,EAAUzK,GAEpBzV,EAAI,EAAG,CACP,IAAI+K,EAAOkV,EAAEpF,SAAS7a,EAAI,GAAGlB,WAAa,IAAMwJ,EAAExJ,YAClDmhB,EAAE/F,QAAQnP,EAAM0K,EACpB,CACAyK,EAAWzK,CACf,CAEJ,OAAOwK,CACX,GAOJlI,EAAMja,MAAQ,CAMV4M,MAAO,SAASyV,GAGZ,IADA,IAAIC,EAAcC,EAAQ,IAAI5iB,EAAQsa,MAASrH,EAAQyP,EAAYtV,QAC1D7K,EAAI,EAAG6J,EAAM6G,EAAMnR,OAAQS,EAAI6J,EAAK7J,IAAK,CAC9C,IAAIsgB,EAAO5P,EAAM1Q,GACjB,GAAIlC,EAAMc,SAAS0hB,GACnB,CACI,GAAIA,EAAK/c,QAAQ,MAAQ,EACrB,KAAM,0CAEV,IAAInD,EAAIkgB,EAAK1f,MAAM,MACnB,GAAgB,GAAZR,EAAEb,OACF,KAAM,0CAEV6gB,EAAe,IAAIxJ,EAAKxW,EAAE,GAAIA,EAAE,IAChCigB,EAAMnG,QAAQkG,EAClB,CACA,GAAItiB,EAAMQ,SAASgiB,GAAO,CACtB,IAAKF,EACD,KAAM,8CAEV7iB,EAAMI,WAAWyiB,EAAcE,EACnC,CACJ,CACA,OAAOD,CACX,EAMAhE,UAAW,SAASgE,EAAO/D,GACvB,GAAIxe,EAAMO,YAAYgiB,GAClB,KAAM,sDAENviB,EAAMO,YAAYie,KAClBA,GAAS,GAGb,IADA,IAAIiE,EAAM,GACDvgB,EAAI,EAAG6J,EAAMwW,EAAMvL,MAAMvV,OAAQS,EAAI6J,EAAK7J,IAAK,CACpD,IAAI2V,EAAO0K,EAAMvL,MAAM9U,GACvBugB,EAAIlgB,KAAKsV,EAAKjW,OAAO2T,GAAK,KAAOsC,EAAKjQ,OAAO2N,IACzCiJ,GACAiE,EAAIlgB,KAAK,CAAEgT,GAAIsC,EAAKtC,IAE5B,CACA,OAAOkN,CACX,EAWAC,UAAW,SAASC,EAAcrgB,EAAGiT,EAAIqN,GAqBrC,OApBI5iB,EAAMO,YAAY+B,KAClBA,EAAI,IAAIyI,EAAc,EAAG,IAGzB/K,EAAMO,YAAYgV,KAClBA,EAAKrC,KAGT0P,EAAgBnjB,EAAMI,WAAW,CAC7B8M,MAAO,GACPD,OAAQ,GACR6I,GAAIA,EACJsN,OAAQ,GACRC,KAAM,UACNxL,KAAM,SACNyL,UAAU,EACVvgB,EAAGF,EAAEE,EACLC,EAAGH,EAAEG,GACNmgB,GAEID,EAAaK,SAASJ,EACjC,EAUAK,eAAgB,SAAStjB,EAASuJ,EAAMF,EAAIka,GACxC,OAAOvjB,EAAQwjB,QAAQja,EAAMF,EAAIka,EACrC,EAOAE,uBAAwB,SAASzjB,EAAS4iB,EAAOc,EAAUC,GAEvD,GAAItjB,EAAMO,YAAYZ,GAClB,KAAM,oCAEV,GAAIK,EAAMO,YAAYgiB,GAClB,KAAM,kCAENviB,EAAMO,YAAY8iB,KAClBA,GAAW,GAEXrjB,EAAMO,YAAY+iB,KAClBA,GAAa,GAMjB,IAHA,IAEc3L,EAAMZ,EAFhBpK,EAAQhN,EAAQ8G,QAAQ8c,aAAe,IACvC7W,EAAS/M,EAAQ8G,QAAQ+c,cAAgB,IACzC1Y,EAAM,GACD5I,EAAI,EAAG6J,EAAMwW,EAAMpI,MAAM1Y,OAAQS,EAAI6J,EAAK7J,IAAK,CAEpD,IAAII,GADJqV,EAAO4K,EAAMpI,MAAMjY,IACNwE,SACT1G,EAAMO,YAAY+B,KAEdA,EADAtC,EAAMK,UAAUsX,EAAKnV,IAAMxC,EAAMK,UAAUsX,EAAKlV,GAC5C,IAAIsI,EAAc4M,EAAKnV,EAAGmV,EAAKlV,GAG/B,IAAIsI,EAAc/K,EAAMiD,cAAc,GAAI0J,EAAQ,IAAK3M,EAAMiD,cAAc,GAAIyJ,EAAS,MAGpG,IAAI+W,EAAM,CAAC,EAEK,MAAZ9L,EAAKpC,IAUA+N,GACL7jB,EAAMI,WAAW4jB,EAAK,CAClB9W,MAAuB,IAAhBxM,KAAKkD,SAAiB,GAC7BqJ,OAAwB,GAAhBvM,KAAKkD,SAAgB,GAC7BiU,KAAM,YACNwL,KAAM,CACFY,MAAO,aAQnB,IAAIrM,GAHJN,EAAQpT,KAAK+e,UAAU/iB,EAAS2C,EAAGqV,EAAKpC,GAAIkO,IAGzBpM,SACfrX,EAAMK,UAAUgX,KAChBM,EAAKnV,EAAI6U,EAAO7U,EAChBmV,EAAKlV,EAAI4U,EAAO5U,EAChBkV,EAAKhL,MAAQ0K,EAAO1K,MACpBgL,EAAKjL,OAAS2K,EAAO3K,QAEzB5B,EAAI6M,EAAKpC,IAAMwB,CACnB,CACA,IAAK,IAAI4M,EAAM,EAAGA,EAAMpB,EAAMvL,MAAMvV,OAAQkiB,IAAO,CAC/C,IAAI9L,EAAO0K,EAAMvL,MAAM2M,GACnBC,EAAc9Y,EAAI+M,EAAKjW,OAAO2T,IAClC,IAAIvV,EAAMO,YAAYqjB,GAAtB,CAGA,IAAIC,EAAc/Y,EAAI+M,EAAKjQ,OAAO2N,IAC9BvV,EAAMO,YAAYsjB,IAGtBlgB,KAAKsf,eAAetjB,EAASikB,EAAaC,EAAa,CAAEtO,GAAIsC,EAAKtC,IALlE,CAOJ,CACA,GAAI8N,EAAU,CACF,IAAI1jB,EAAQmkB,aAAankB,GAC/BokB,YAAYxB,EAAO,CAAEyB,aAAa,IACpC,IAAK,IAAIC,EAAM,EAAGA,EAAM1B,EAAMpI,MAAM1Y,OAAQwiB,KAExClN,EAAQjM,GADR6M,EAAO4K,EAAMpI,MAAM8J,IACF1O,KACX8B,OAAO,IAAI/K,EAAKqL,EAAKnV,EAAGmV,EAAKlV,EAAGkV,EAAKhL,MAAOgL,EAAKjL,QAE/D,CACJ,EAWAgV,mBAAoB,SAASD,EAAQI,GAC7B7hB,EAAMO,YAAYkhB,KAClBA,EAAS,GAETzhB,EAAMO,YAAYshB,KAClBA,EAAgB,GAGpB,IAA2DqC,EAAvD/B,EAAI,IAAIxiB,EAAQsa,MAASkK,GAAW,EAAGC,EAAY,GACvD,GAAI3C,GAAU,GAAKI,GAAiB,EAChC,OAAOM,EAEX,IAAIrH,EAAO,IAAIhE,KAAQqN,GAASnjB,YAChCmhB,EAAEnF,QAAQlC,GACVqH,EAAErH,KAAOA,EACTsJ,EAAU7hB,KAAKuY,GACf,IAAK,IAAI5Y,EAAI,EAAGA,EAAIuf,EAAQvf,IAAK,CAC7BgiB,EAAO,GACP,IAAK,IAAI1Z,EAAI,EAAGA,EAAI4Z,EAAU3iB,OAAQ+I,IAElC,IADA,IAAI6Z,EAASD,EAAU5Z,GACdC,EAAI,EAAGA,EAAIoX,EAAepX,IAAK,CACpC,IAAI/G,EAAO,IAAIoT,KAAQqN,GAASnjB,YAChCmhB,EAAE/F,QAAQiI,EAAQ3gB,GAClBwgB,EAAK3hB,KAAKmB,EACd,CAEJ0gB,EAAYF,CAChB,CACA,OAAO/B,CACX,EAYAH,qBAAsB,SAASP,EAAQI,EAAeyC,GAC9CtkB,EAAMO,YAAYkhB,KAClBA,EAAS,GAETzhB,EAAMO,YAAYshB,KAClBA,EAAgB,GAEhB7hB,EAAMO,YAAY+jB,KAClBA,EAAY,GAEhB,IAA2DJ,EAAvD/B,EAAI,IAAIxiB,EAAQsa,MAASkK,GAAW,EAAGC,EAAY,GACvD,GAAI3C,GAAU,GAAKI,GAAiB,GAAKyC,GAAa,EAClD,OAAOnC,EAGX,IAAK,IAAI/E,EAAI,EAAGA,EAAIkH,EAAWlH,IAAK,CAChC,IAAItC,EAAO,IAAIhE,KAAQqN,GAASnjB,YAChCmhB,EAAEnF,QAAQlC,GACVsJ,EAAY,CAACtJ,GACb,IAAK,IAAI5Y,EAAI,EAAGA,EAAIuf,EAAQvf,IAAK,CAC7BgiB,EAAO,GACP,IAAK,IAAI1Z,EAAI,EAAGA,EAAI4Z,EAAU3iB,OAAQ+I,IAElC,IADA,IAAI6Z,EAASD,EAAU5Z,GACdC,EAAI,EAAGA,EAAIoX,EAAepX,IAAK,CACpC,IAAI/G,EAAO,IAAIoT,KAAQqN,GAASnjB,YAChCmhB,EAAE/F,QAAQiI,EAAQ3gB,GAClBwgB,EAAK3hB,KAAKmB,EACd,CAEJ0gB,EAAYF,CAChB,CACJ,CACA,OAAO/B,CACX,EASAoC,2BAA4B,SAASC,EAAWC,EAAcC,GAWtD1kB,EAAMO,YAAYikB,KAClBA,EAAY,IAEZxkB,EAAMO,YAAYkkB,KAClBA,EAAe,GAEfzkB,EAAMO,YAAYmkB,KAClBA,GAAS,GAGb,IAAIvC,EAAI,IAAIxiB,EAAQsa,MAASkK,GAAW,EACxC,GAAIK,GAAa,EACb,OAAOrC,EAGX,IAAIrH,EAAO,IAAIhE,KAAQqN,GAASnjB,YAEhC,GADAmhB,EAAEnF,QAAQlC,GACQ,IAAd0J,EACA,OAAOrC,EAEX,GAAIqC,EAAY,EAAG,CAEf,IAAK,IAAItiB,EAAI,EAAGA,EAAIsiB,EAAWtiB,IAAK,CAChC,IAAIyiB,EAAWxC,EAAE7F,eAAe,GAAImI,GACpC,IAAKE,EAED,MAEJ,IAAI9G,EAAUsE,EAAEnF,QAAQ9a,EAAElB,YAC1BmhB,EAAE/F,QAAQuI,EAAU9G,EACxB,CACA,IAAK6G,GAAUF,EAAY,EAEvB,IADA,IAAII,EAAkB5kB,EAAMiD,cAAc,EAAGuhB,GACpC3D,EAAK,EAAGA,EAAK+D,EAAiB/D,IAAM,CACzC,IAAInD,EAAKyE,EAAE7F,eAAe,GAAImI,GAC1B9G,EAAKwE,EAAE7F,eAAe,GAAImI,GAC1B/G,GAAMC,IAAOwE,EAAE1E,aAAaC,EAAIC,IAChCwE,EAAE/F,QAAQsB,EAAIC,EAEtB,CAEJ,OAAOwE,CACX,CACJ,EAUA0C,cAAe,SAASllB,EAASmlB,EAAYL,EAAcC,EAAQpB,GAC/D,IAAInB,EAAI1iB,EAAMG,QAAQD,QAAQsa,MAAMja,MAAMukB,2BAA2BO,EAAYL,EAAcC,GAC/FzK,EAAMja,MAAMojB,uBAAuBzjB,EAASwiB,GAAG,EAAOmB,EAC1D,GAGJ7jB,EAAMI,WAAWF,EAAS,CACtB+H,KAAM,SAASjB,GACXhH,EAAMiI,KAAKjB,EAAS9G,EAAQyK,GAChC,EAEArH,MAAOgI,EACPoF,UAAWA,EACXmD,SAAUA,EACVhH,KAAMA,EACNiD,KAAMA,EACNqB,UAAWA,EACXmB,OAAQA,EACRiB,aAAcA,EACd+R,eAl2EJ,SAAwBC,EAAMC,GAC1B,IAAIziB,EAAGC,EAAG6K,EACV,GAGIA,GAFA9K,EAAoB,EAAhBrC,KAAKkD,SAAe,GAEhBb,GADRC,EAAoB,EAAhBtC,KAAKkD,SAAe,GACRZ,SAEZ6K,GAAKA,EAAI,GACjB,OAAO0X,EAAOC,EAAYziB,EAAIrC,KAAKgE,MAAM,EAAIhE,KAAK+kB,IAAI5X,GAAKA,EAC/D,EA01EI4F,SAAUA,EACVuC,WAAYA,EACZpB,UAAWA,EACX8B,MAAOA,EACPO,IAAKA,EACLI,KAAMA,EACNgC,KAAMA,EACNmB,MAAOA,EACPjN,YAAaA,GAEpB,CAjiGD,CAiiGGtN,OAAOD,MAAMkL,QAEhB,SAAUnL,EAAG2lB,GAET,IAAI1lB,EAAQC,OAAOD,MACfE,EAAUF,EAAMG,QAAQD,QACxB6H,EAAQ/H,EAAM+H,MACd3H,EAAaJ,EAAMI,WACnBkD,EAAQpD,EAAQoD,MAChBuJ,EAAO3M,EAAQ2M,KACfyF,EAASpS,EAAQoS,OACjB/R,EAAQL,EAAQK,MAChBoB,EAAWpB,EAAMoB,SACjBN,EAAWd,EAAMc,SACjBkS,EAAerT,EAAQqT,aAEvBmP,EAAI1iB,EAAMmL,SACV9G,EAAIrE,EAAM2lB,QAEVC,EAAUvhB,EAAEwhB,KAAKD,QAEjBzf,EAAUpG,EAAEoG,QAGZ2f,EAAc,cACdC,EAAU,CACNC,KAAM,OACNC,WAAY,aACZC,aAAc,eACdC,SAAU,YAGdC,EAAQ,QACRC,EAAM,MACNC,EAAQ,QACRC,EAAS,SAMb,SAASC,EAAmB/C,EAASgD,GAIjC,IAHA,IAEIlkB,EAAOmkB,EAFPC,EAAiBziB,KAAKuf,QACtBmD,GAAa,EAERnkB,EAAI,EAAGA,EAAIgkB,EAAOzkB,OAAQS,IAE/BF,EAAQkhB,EADRiD,EAAQD,EAAOhkB,IAEXd,EAASY,IAAUokB,EAAeD,KAAWnkB,IAC7CokB,EAAeD,GAASnkB,EACxBqkB,GAAa,GAIrB,OAAOA,CACX,CAhBA1mB,EAAQ6lB,QAAUA,EAkBlB,IAAIc,EAAQ9e,EAAMC,OAAO,CACrBC,KAAM,SAASlF,EAAGC,GACdkB,KAAKnB,EAAIA,EACTmB,KAAKlB,EAAIA,CACb,EACA8jB,SAAU,WACN,OAAOxU,EAAOY,QAAQhP,KAAKnB,EAAGmB,KAAKlB,EACvC,EACAzB,SAAU,WACN,OAAOvB,EAAM+mB,OAAO,iBAAkB7iB,KAAKnB,EAAGmB,KAAKlB,EACvD,EACAgkB,OAAQ,WACJ,OAAO,IAAIH,EAAM,EAAI3iB,KAAKnB,EAAG,EAAImB,KAAKlB,EAC1C,IAGAikB,EAAclf,EAAMC,OAAO,CAC3BC,KAAM,SAASlF,EAAGC,GACdkB,KAAKnB,EAAIA,EACTmB,KAAKlB,EAAIA,CACb,EACAkkB,eAAgB,WACZ,OAAO,IAAI3T,EAAa,EAAG,EAAG,EAAG,EAAGrP,KAAKnB,EAAGmB,KAAKlB,EACrD,EACA8jB,SAAU,WACN,OAAOxU,EAAOQ,YAAY5O,KAAKnB,EAAGmB,KAAKlB,EAC3C,EACAzB,SAAU,WACN,OAAOvB,EAAM+mB,OAAO,qBAAsB7iB,KAAKnB,EAAGmB,KAAKlB,EAC3D,EACA0I,KAAM,SAAS+D,GACXvL,KAAKnB,GAAK0M,EAAM1M,EAChBmB,KAAKlB,GAAKyM,EAAMzM,CACpB,EACA6I,MAAO,SAASO,GACZlI,KAAKnB,GAAKqJ,EACVlI,KAAKlB,GAAKoJ,CACd,EACApK,OAAQ,WACJ,OAAOtB,KAAKgE,KAAKR,KAAKnB,EAAImB,KAAKnB,EAAImB,KAAKlB,EAAIkB,KAAKlB,EACrD,EACA8I,UAAW,WACa,IAAhB5H,KAAKijB,QAGTjjB,KAAK2H,MAAM,EAAI3H,KAAKlC,SACxB,EACAglB,OAAQ,WACJ,OAAO,IAAIC,GAAa/iB,KAAKnB,GAAImB,KAAKlB,EAC1C,IAGAokB,EAAWrf,EAAMC,OAAO,CACxBC,KAAM,SAAS0G,EAAO5L,EAAGC,GACrBkB,KAAKnB,EAAIA,GAAK,EACdmB,KAAKlB,EAAIA,GAAK,EACdkB,KAAKyK,MAAQA,CACjB,EACApN,SAAU,WACN,OAAI2C,KAAKnB,GAAKmB,KAAKlB,EACRhD,EAAM+mB,OAAO,sBAAuB7iB,KAAKyK,MAAOzK,KAAKnB,EAAGmB,KAAKlB,GAE7DhD,EAAM+mB,OAAO,cAAe7iB,KAAKyK,MAEhD,EACAmY,SAAU,WACN,OAAOxU,EAAOU,SAAS9O,KAAKyK,MAAOzK,KAAKnB,EAAGmB,KAAKlB,EACpD,EACAgC,OAAQ,WACJ,OAAO,IAAI1B,EAAMY,KAAKnB,EAAGmB,KAAKlB,EAClC,EACAgkB,OAAQ,WACJ,OAAO,IAAII,EAlGK,IAkGwBljB,KAAKyK,MAAOzK,KAAKnB,EAAGmB,KAAKlB,EACrE,IAGJokB,EAASC,KAAO,IAAID,EAAS,GAE7BA,EAASE,OAAS,SAAStU,GACvB,OAAO,IAAIoU,EAASpU,EAASrE,MAAOqE,EAASjQ,EAAGiQ,EAAShQ,EAC7D,EAEAokB,EAASja,MAAQ,SAASC,GACtB,IAAIma,EAASna,EAAIE,MAAM,EAAGF,EAAIpL,OAAS,GAAGqB,MAAM,KAC5CsL,EAAQ4Y,EAAO,GACfxkB,EAAIwkB,EAAO,GACXvkB,EAAIukB,EAAO,GAEf,OADe,IAAIH,EAASzY,EAAO5L,EAAGC,EAE1C,EAEA,IAAIwkB,EAAqBzf,EAAMC,OAAO,CAClCC,KAAM,SAASlF,EAAGC,EAAGoM,EAAQC,EAAQV,EAAO3J,GACxCd,KAAKujB,UAAY,IAAIR,EAAYlkB,EAAGC,GAChCoM,IAAWsW,GAAerW,IAAWqW,IACrCxhB,KAAKiL,MAAQ,IAAI0X,EAAMzX,EAAQC,IAE/BV,IAAU+W,IACVxhB,KAAK+K,OAASjK,EAAS,IAAIoiB,EAASzY,EAAO3J,EAAOjC,EAAGiC,EAAOhC,GAAK,IAAIokB,EAASzY,GAEtF,EACApN,SAAU,WACN,IAAIA,EAAW,SAASmmB,GACpB,OAAOA,EAAYA,EAAUnmB,WAAa,EAC9C,EAEA,OAAOA,EAAS2C,KAAKujB,WACjBlmB,EAAS2C,KAAK+K,QACd1N,EAAS2C,KAAKiL,MACtB,EAEAwY,OAAQ,SAASC,GACbA,EAAOC,WAAa3jB,KACpB0jB,EAAOE,kBACX,EAEAhB,SAAU,WACN,IAAI1iB,EAAIkO,EAAOS,OAWf,OATI7O,KAAKujB,YACLrjB,EAAIA,EAAEyH,MAAM3H,KAAKujB,UAAUX,aAE3B5iB,KAAK+K,SACL7K,EAAIA,EAAEyH,MAAM3H,KAAK+K,OAAO6X,aAExB5iB,KAAKiL,QACL/K,EAAIA,EAAEyH,MAAM3H,KAAKiL,MAAM2X,aAEpB1iB,CACX,EACA4iB,OAAQ,WACJ,IAAI/X,EAAS/K,KAAK+K,OAAS/K,KAAK+K,OAAO+X,SAAWtB,EAC9CqC,EAAe9Y,EAASA,EAAO6X,WAAaxU,EAAOS,OACnD5D,EAAQjL,KAAKiL,MAAQjL,KAAKiL,MAAM6X,SAAWtB,EAC3CsC,EAAc7Y,EAAQA,EAAM2X,WAAaxU,EAAOS,OAEhDkV,EAAiB,IAAI3kB,GAAOY,KAAKujB,UAAU1kB,GAAImB,KAAKujB,UAAUzkB,GAClEilB,EAAiBF,EAAalc,MAAMmc,GAAatgB,MAAMugB,GACvD,IAAIR,EAAY,IAAIR,EAAYgB,EAAellB,EAAGklB,EAAejlB,GAE7D0kB,EAAY,IAAIF,EAKpB,OAJAE,EAAUD,UAAYA,EACtBC,EAAUzY,OAASA,EACnByY,EAAUvY,MAAQA,EAEXuY,CACX,IAGAQ,EAAoB,CACpBC,UAAW,WACP,IAAI1E,EAAUvf,KAAKuf,QACf2E,EAAclkB,KAAKmkB,aACnBC,EAAepkB,KAAKqkB,cACpBnZ,EAASqU,EAAQvW,MAAQkb,EACzB/Y,EAASoU,EAAQxW,OAASqb,EAEzB3mB,EAASyN,KACVA,EAAS,GAERzN,EAAS0N,KACVA,EAAS,GAGbnL,KAAK2jB,WAAW1Y,MAAQ,IAAI0X,EAAMzX,EAAQC,EAC9C,EAEAmZ,cAAe,WACX,IAAI/E,EAAUvf,KAAKuf,QACf1gB,EAAI0gB,EAAQ1gB,GAAK,EACjBC,EAAIygB,EAAQzgB,GAAK,EACrBkB,KAAK2jB,WAAWJ,UAAY,IAAIR,EAAYlkB,EAAGC,EACnD,EAEAylB,UAAW,WACP,IAAIhF,EAAUvf,KAAKuf,QACfiE,GAAY,GACS,IAArBjE,EAAQiF,WAAuB9C,EAAQnC,EAAQvW,QAAU0Y,EAAQnC,EAAQxW,WACzE/I,KAAKykB,UAAS,GACdzkB,KAAKikB,YACLT,GAAY,IAGZ9B,EAAQnC,EAAQ1gB,IAAM6iB,EAAQnC,EAAQzgB,MACtCkB,KAAKskB,gBACLd,GAAY,GAGZA,GACAxjB,KAAK4jB,kBAEb,EAEAc,YAAa,SAASnF,GAClB,IAAIlZ,GAAS,EAiBb,OAf8B,IAA1BrG,KAAKuf,QAAQiF,UAAsBxkB,KAAK2kB,oBAAoBpF,EAAS,CAAC6C,EAAOC,MAC7Ehc,GAAS,EACTrG,KAAKykB,UAAS,GACdzkB,KAAKikB,aAGLjkB,KAAK2kB,oBAAoBpF,EAAS,CA/NtC,IACA,QA+NIlZ,GAAS,EACTrG,KAAKskB,iBAGLje,GACArG,KAAK4jB,mBAGFvd,CACX,GAGAue,EAAU/gB,EAAMC,OAAO,CACvBC,KAAM,SAASwb,GACX,IAAIzc,EAAU9C,KACd8C,EAAQyc,QAAUrjB,EAAW,CAAC,EAAG4G,EAAQyc,QAASA,GAClDzc,EAAQ8O,GAAK9O,EAAQyc,QAAQ3N,GAC7B9O,EAAQ+hB,YAAclc,EAAK2D,QAC3BxJ,EAAQ6gB,WAAa,IAAIL,CAC7B,EAEAwB,QAAS,SAASzmB,GACd,OAAO2B,KAAK+kB,mBAAmBD,QAAQzmB,EAC3C,EAEA2mB,OAAQ,SAASzF,GACTA,GAAWA,EAAQ3N,KAClB5R,KAAK4R,GAAK2N,EAAQ3N,GAE3B,EAEA7O,SAAU,SAASlE,EAAGC,GAClB,IAAIygB,EAAUvf,KAAKuf,QACnB,IAAKmC,EAAQ7iB,GACV,OAAO,IAAIO,EAAMmgB,EAAQ1gB,EAAG0gB,EAAQzgB,GAGnC4iB,EAAQ5iB,IACRygB,EAAQ1gB,EAAIA,EACZ0gB,EAAQzgB,EAAIA,GACLD,aAAaO,IACpBmgB,EAAQ1gB,EAAIA,EAAEA,EACd0gB,EAAQzgB,EAAID,EAAEC,GAGlBkB,KAAK2jB,WAAWJ,UAAY,IAAIR,EAAYxD,EAAQ1gB,EAAG0gB,EAAQzgB,GAC/DkB,KAAK4jB,kBACT,EAEA7Y,OAAQ,SAASN,EAAO3J,GAKpB,OAJI4gB,EAAQjX,KACRzK,KAAK2jB,WAAW5Y,OAAS,IAAImY,EAASzY,EAAO3J,EAAOjC,EAAGiC,EAAOhC,GAC9DkB,KAAK4jB,oBAEF5jB,KAAK2jB,WAAW5Y,QAAUmY,EAASC,IAC9C,EAEA4B,iBAAkB,WACd,OAAO/kB,KAAKilB,cAChB,EAEArB,iBAAkB,WACd,IAAIsB,EAASllB,KAAK2jB,WAAWf,WAC7B5iB,KAAK+kB,mBAAmBvB,UAAU,IAAIhF,EAAEpQ,OAAO8W,EAAOzkB,EAAGykB,EAAO7kB,EAAG6kB,EAAOxkB,EAAGwkB,EAAO/kB,EAAG+kB,EAAO7W,EAAG6W,EAAO5W,GAC5G,EAEA6W,OAAQ,WAAY,EAEpBR,oBAAqBrC,EAErBmC,SAAU,SAASW,GACf,IAAI7a,EACJ,IAAKvK,KAAKqlB,WAAaD,EAAO,CAC1B,IAAIE,EAAMtlB,KAAKulB,gBAAkB,IAAI/G,EAAE7V,KACnC6c,EAAaF,EAAIpb,UACrBK,EAAO,IAAI5B,EAAK6c,EAAW3mB,EAAG2mB,EAAW1mB,EAAGwmB,EAAItc,QAASsc,EAAIvc,UAC7D/I,KAAK6kB,YAActa,EACnBvK,KAAKmkB,aAAe5Z,EAAKvB,MACzBhJ,KAAKqkB,cAAgB9Z,EAAKxB,OAC1B/I,KAAKqlB,WAAY,CACrB,MACI9a,EAAOvK,KAAK6kB,YAEhB,OAAOta,CACX,EAEAgb,aAAc,WACV,OAAOvlB,KAAKilB,eAAeQ,SAC/B,IAGAC,EAAad,EAAQ9gB,OAAO,CAC5BC,KAAM,SAASwb,GACXqF,EAAQ3S,GAAGlO,KAAK7G,KAAK8C,KAAMuf,IAE3BA,EAAUvf,KAAKuf,SACPJ,KAAOwG,EAAwBpG,EAAQJ,MAC/CI,EAAQqG,OAASD,EAAwBpG,EAAQqG,OACrD,EAEArG,QAAS,CACLqG,OAAQ,CACJ7F,MAAO,OACP/W,MAAO,GAEXmW,KAAM,CACFY,MAAO6B,IAIfzC,KAAM,SAASY,EAAO8F,GAClB7lB,KAAK8lB,MAAM,CACP/F,MAAOgG,EAAShG,GAChB8F,QAASA,GAEjB,EAEAD,OAAQ,SAAS7F,EAAO/W,EAAO6c,GAC3B7lB,KAAKgmB,QAAQ,CACTjG,MAAOgG,EAAShG,GAChB/W,MAAOA,EACP6c,QAASA,GAEjB,EAEAb,OAAQ,SAASzF,GACb,GAAIA,EAAS,CACT,IAAIqG,EAASrG,EAAQqG,OACjBzG,EAAOI,EAAQJ,KACfyG,GACA5lB,KAAKgmB,QAAQL,EAAwBC,IAErCzG,GACAnf,KAAK8lB,MAAMH,EAAwBxG,IAGvCyF,EAAQ3S,GAAG+S,OAAO9nB,KAAK8C,KAAMuf,EACjC,CACJ,EAEA4F,OAAQ,SAASc,GACb,IAAIhB,EAAiBjlB,KAAKilB,eACtB1F,EAAUvf,KAAKuf,QACf2G,EAAQ3G,EAAQ2G,MAEpB,GAAIA,GAASA,EAAM/G,KAAM,CACrB,IAAIA,EAAO8G,EAAON,EAAwBO,EAAM/G,MAAQI,EAAQJ,KAChE8F,EAAe9F,KAAKA,EAAKY,MAAOZ,EAAK0G,QACzC,CACJ,EAEAG,QAAS,SAASG,GACd,IAAI5G,EAAUvf,KAAKuf,QACnBrjB,EAAWqjB,EAAS,CAChBqG,OAAQO,IAKZ,IAAIP,EAAS,MAFbO,EAAgB5G,EAAQqG,QAGN5c,MAAQ,IACtB4c,EAAS,CACL7F,MAAOoG,EAAcpG,MACrB/W,MAAOmd,EAAcnd,MACrB6c,QAASM,EAAcN,QACvBO,SAAUD,EAAcC,WAIhCpmB,KAAKilB,eAAe1F,QAAQvO,IAAI,SAAU4U,EAC9C,EAEAE,MAAO,SAASO,GACZ,IAAI9G,EAAUvf,KAAKuf,QACnBrjB,EAAWqjB,EAAS,CAChBJ,KAAMkH,GAAe,CAAC,IAE1B,IAAIlH,EAAOI,EAAQJ,KAEnB,GAAIA,EAAKmH,SAAU,CACf,IAAIA,EAAWnH,EAAKmH,SAChBC,EAAmC,WAAlBD,EAAS9oB,KAAoB2C,EAAEqmB,eAAiBrmB,EAAEsmB,eACvEzmB,KAAKilB,eAAe9F,KAAK,IAAIoH,EAAcD,GAC/C,MACItmB,KAAKilB,eAAe9F,KAAKA,EAAKY,MAAOZ,EAAK0G,QAElD,IAGAa,EAAYhB,EAAW5hB,OAAO,CAC9BC,KAAM,SAASwb,GACXA,EAAUvf,KAAK2mB,WAAWpH,GAC1BmG,EAAWzT,GAAGlO,KAAK7G,KAAK8C,KAAMuf,GAE9Bvf,KAAK4mB,QACL5mB,KAAK6mB,YACL7mB,KAAKukB,WACT,EAEAhF,QAAS,CACLuH,SAAU,GACVC,WAAY,aACZnB,OAAQ,CACJ5c,MAAO,GAEXmW,KAAM,CACFY,MAAO,SAEXyE,UAAU,GAGdqC,UAAW,WACP,IAAItH,EAAUvf,KAAKuf,QAEnBvf,KAAKilB,eAAiB,IAAI9kB,EAAE6mB,KAAKtF,EAAQnC,EAAQ0H,MAAQ1H,EAAQ0H,KAAO,GAAI,IAAIzI,EAAEpf,MAAS,CACvF8nB,KAAM3H,EAAQ2H,OAGlBlnB,KAAK8lB,QACL9lB,KAAKgmB,SACT,EAEAW,WAAY,SAASpH,GAQjB,OAPIA,GAAWA,EAAQQ,QACnBR,EAAUrjB,EAAW,CAAC,EAAGqjB,EAAS,CAC9BJ,KAAM,CACFY,MAAOR,EAAQQ,UAIpBR,CACX,EAEAqH,MAAO,WACH,IAAIrH,EAAUvf,KAAKuf,QACnB,GAAIA,EAAQwH,YAAcrF,EAAQnC,EAAQuH,UAAW,CACjD,IAAIK,EAAc,GAEd5H,EAAQ6H,WACRD,EAAYvoB,KAAK2gB,EAAQ6H,WAGzB7H,EAAQ8H,YACRF,EAAYvoB,KAAK2gB,EAAQ8H,YAG7BF,EAAYvoB,KAAK2gB,EAAQuH,UAAYrpB,EAAS8hB,EAAQuH,UAAY,KAAO,KACzEK,EAAYvoB,KAAK2gB,EAAQwH,YAEzBxH,EAAQ2H,KAAOC,EAAYpoB,KAAK,IACpC,aACWwgB,EAAQ2H,IAEvB,EAEA9Z,QAAS,SAAS6Z,GACd,OAAOjnB,KAAKilB,eAAe7X,QAAQ6Z,EACvC,EAEAjC,OAAQ,SAASzF,GACb,GAAIA,EAAS,CACT,IAAI+H,GAAc,EACdC,EAAcvnB,KAAKuf,QAEvBA,EAAUvf,KAAK2mB,WAAWpH,GAE1BmG,EAAWzT,GAAG+S,OAAO9nB,KAAK8C,KAAMuf,IAE5BA,EAAQwH,YAAcrF,EAAQnC,EAAQuH,WAAavH,EAAQ6H,WAAa7H,EAAQ8H,cAChFnrB,EAAWqrB,EAAa,CACpBR,WAAYxH,EAAQwH,WACpBD,SAAUvH,EAAQuH,SAClBM,UAAW7H,EAAQ6H,UACnBC,WAAY9H,EAAQ8H,aAExBrnB,KAAK4mB,QACL5mB,KAAKilB,eAAe1F,QAAQvO,IAAI,OAAQuW,EAAYL,MACpDI,GAAc,GAGd/H,EAAQ0H,OACRjnB,KAAKoN,QAAQmS,EAAQ0H,MACrBK,GAAc,IAGbtnB,KAAK0kB,YAAYnF,IAAY+H,GAC9BtnB,KAAKukB,WAEb,CACJ,IAGJroB,EAAWwqB,EAAUzU,GAAI+R,GAEzB,IAAIwD,EAAY9B,EAAW5hB,OAAO,CAC9BC,KAAM,SAASwb,GACXmG,EAAWzT,GAAGlO,KAAK7G,KAAK8C,KAAMuf,GAC9Bvf,KAAKynB,YACLznB,KAAK0nB,cACT,EAEAA,aAAc,WACV,IAAInI,EAAUvf,KAAKuf,QACf1gB,EAAI0gB,EAAQ1gB,EACZC,EAAIygB,EAAQzgB,GACZ4iB,EAAQ7iB,IAAM6iB,EAAQ5iB,KACtBkB,KAAK+C,SAASlE,GAAK,EAAGC,GAAK,EAEnC,EAEAkmB,OAAQ,SAASzF,GACTA,IACAmG,EAAWzT,GAAG+S,OAAO9nB,KAAK8C,KAAMuf,GAC5Bvf,KAAK2kB,oBAAoBpF,EAAS,CAAC6C,EAAOC,KAC1CriB,KAAK2nB,YAEL3nB,KAAK2kB,oBAAoBpF,EAAS,CA5hB1C,IACA,OA4hBQvf,KAAK0nB,eAGjB,EAEAD,UAAW,WACP,IAAIlI,EAAUvf,KAAKuf,QACnBvf,KAAKilB,eAAiB,IAAI9kB,EAAEynB,KAAK,CAC7BhC,OAAQrG,EAAQqG,OAChBiC,QAAQ,IAGZ7nB,KAAK8lB,QACL9lB,KAAK2nB,WACT,EAEAA,UAAW,WACP,IAAI1C,EAAiBjlB,KAAKilB,eACtB6C,EAAcC,EAAqB/nB,KAAKuf,SACxCvW,EAAQ8e,EAAY9e,MACpBD,EAAS+e,EAAY/e,OAEzBkc,EAAevY,SAASsb,SAAS,CAC7BC,EAAc,EAAG,GACjBA,EAAcjf,EAAO,GACrBif,EAAcjf,EAAOD,GACrBkf,EAAc,EAAGlf,IAEzB,IAGAmf,EAAaxC,EAAW5hB,OAAO,CAC/BC,KAAM,SAASwb,GACZmG,EAAWzT,GAAGlO,KAAK7G,KAAK8C,KAAMuf,GAC9B,IAAI4I,EAASnoB,KAAKuf,QAAQ4I,OAC1BnoB,KAAKmoB,OAAS,IAAI3J,EAAEpf,MAAM+oB,EAAOtpB,EAAGspB,EAAOrpB,GAC3CkB,KAAKooB,eACR,EAEA7I,QAAS,CACNqG,OAAQ,CACH7F,MAAO6B,EACP5Y,MAAO,GAEZmW,KAAM,CACDY,MAAO,UAIfsI,iBAAkB,SAAS7e,EAAO8e,GAC9B,IAAI9E,EAAY8E,EAAK9E,YAIrB,OAHIha,GAASga,IACTha,EAAQA,EAAM+e,cAAc/E,IAEzBha,CACX,EAEAwb,OAAQ,SAASzF,GACTA,IACIA,EAAQxc,WACR/C,KAAKuf,QAAQxc,SAAWwc,EAAQxc,UAGpC2iB,EAAWzT,GAAG+S,OAAO9nB,KAAK8C,KAAMuf,GAExC,IAGAiJ,EAAeN,EAAWpkB,OAAO,CACjCyb,QAAS,CACLL,OAAQ,EACRiJ,OAAQ,CACJtpB,EAAG,EACHC,EAAG,IAIXspB,cAAe,WACX,IAAI7I,EAAUvf,KAAKuf,QACnBvf,KAAKilB,eAAiB,IAAI9kB,EAAEsoB,OAAO,IAAIjK,EAAEiK,OAAOzoB,KAAKmoB,OAAQ5I,EAAQL,QAAS,CAC1EC,KAAMI,EAAQJ,KACdyG,OAAQrG,EAAQqG,QAExB,EAEA8C,eAAgB,SAASJ,GACrB,IAGIK,EACAnf,EAHAzG,EADU/C,KAAKuf,QACIxc,SACnB2J,EAAW4b,EAAK5b,UAKhBic,EADA5lB,GAAYmf,EACIxV,EAAS,GAETA,EAASA,EAAS5O,OAAS,MAG3C0L,EAAQxJ,KAAKqoB,iBAAiBM,EAAcR,SAAUG,GACtDtoB,KAAKilB,eAAezB,UAAUhF,EAAEgF,YAAYD,UAAU/Z,EAAM3K,EAAG2K,EAAM1K,IAE7E,IAGA8pB,EAAcV,EAAWpkB,OAAO,CAChCyb,QAAS,CACL+I,KAAM,8BACNH,OAAQ,CACJtpB,EAAG,GACHC,EAAG,IAIXspB,cAAe,WACX,IAAI7I,EAAUvf,KAAKuf,QACnBvf,KAAKilB,eAAiB9kB,EAAEynB,KAAK3e,MAAMsW,EAAQ+I,KAAM,CAC7CnJ,KAAMI,EAAQJ,KACdyG,OAAQrG,EAAQqG,QAExB,EAEA8C,eAAgB,SAASJ,GACrB,IAqvBW9X,EAAIC,EACfoY,EACAC,EAvvBIrqB,EAASuB,KAAK+oB,YAAYT,GAC1BtnB,EAAQvC,EAAOuC,MACfD,EAAMtC,EAAOsC,IACbyiB,EAAYhF,EAAEgF,YAKlB,GAJIxiB,GACAwiB,EAAUzY,QAgvBHyF,EAhvBoBxP,EAivB/B6nB,GADepY,EAhvBuB1P,GAivB3BlC,EAAI2R,EAAG3R,EAClBiqB,EAAQrY,EAAG3R,EAAI0R,EAAG1R,EACVqB,EAAEwhB,KAAKqH,IAAIxsB,KAAK4D,MAAM0oB,EAAOD,KAnvBO9nB,GAGxCA,EAAK,CACL,IAAIonB,EAASnoB,KAAKmoB,OACd5E,EAAYxiB,EAAIwG,QAAQgc,WAAW4E,EAAOtpB,GAAIspB,EAAOrpB,GACzD0kB,EAAUD,UAAUA,EAAU1kB,EAAG0kB,EAAUzkB,EAC/C,CACAkB,KAAKilB,eAAezB,UAAUA,EAClC,EAEAuF,YAAa,SAAST,GAClB,IAEI9C,EAAYyD,EAAUN,EAFtBpJ,EAAUvf,KAAKuf,QACf7S,EAAW4b,EAAK5b,SAEpB,GAAI6S,EAAQxc,UAAYmf,GAEpB,GADAyG,EAAgBjc,EAAS,GACN,CACfuc,EAAWN,EAAcR,SACzB3C,EAAamD,EAAcO,aAC3B,IAAIC,EAAczc,EAAS,IACtB8Y,GAAc2D,IACf3D,EAAa2D,EAAYhB,SAEjC,OAGA,GADAQ,EAAgBjc,EAASA,EAAS5O,OAAS,GACxB,CACfmrB,EAAWN,EAAcR,SACzB3C,EAAamD,EAAcS,YAC3B,IAAIC,EAAc3c,EAASA,EAAS5O,OAAS,IACxC0nB,GAAc6D,IACf7D,EAAa6D,EAAYlB,SAEjC,CAEJ,GAAIc,EACA,MAAO,CACHjoB,MAAOhB,KAAKqoB,iBAAiB7C,EAAY8C,GACzCvnB,IAAKf,KAAKqoB,iBAAiBY,EAAUX,GAGjD,IAGAgB,EAAkB,CAClBC,SAAU,SAASxmB,GACf,IAAIulB,EAAOtoB,KAAKilB,eAQhB,GAPIqD,aAAgBnoB,EAAEqpB,YAEdlB,EADAvlB,GAAYmf,EACLoG,EAAKmB,MAAM,GAEXnB,EAAKmB,MAAMnB,EAAKmB,MAAM3rB,OAAS,IAG1CwqB,GAAQA,EAAK5b,SAAS5O,OACtB,OAAOwqB,CAEf,EAEAoB,wBAAyB,SAASnK,GAC9B,IAAIoK,EAAWpK,EAAQoK,SACnBC,EAASrK,EAAQqK,OAEjBzsB,EAASwsB,KACTpK,EAAQoK,SAAW,CACfnsB,KAAMmsB,IAIVxsB,EAASysB,KACTrK,EAAQqK,OAAS,CACbpsB,KAAMosB,GAGlB,EAEAC,cAAe,SAAS9mB,GACpB,IAAI+mB,EAAS9pB,KAAK+pB,SAAShnB,GACvB+mB,IACA9pB,KAAK+kB,mBAAmBpjB,OAAOmoB,EAAO7E,uBAC/BjlB,KAAK+pB,SAAShnB,GAE7B,EAEAinB,eAAgB,WACZ,IAAIzK,EAAUvf,KAAKuf,QACnBvf,KAAK0pB,wBAAwBnK,GAE7Bvf,KAAK+pB,SAAW,CAAC,EACjB/pB,KAAK+pB,SAAS7H,GAASliB,KAAKiqB,cAAc1K,EAAQoK,SAAUzH,GAC5DliB,KAAK+pB,SAAS5H,GAAOniB,KAAKiqB,cAAc1K,EAAQqK,OAAQzH,EAC5D,EAEA8H,cAAe,SAAS1K,EAASxc,GAC7B,IAEImnB,EAAYJ,EAFZtsB,GAAQ+hB,GAAW,CAAC,GAAG/hB,KACvB8qB,EAAOtoB,KAAKupB,SAASxmB,GAEzB,GAAKulB,EAYL,OAPI9qB,GAAQqkB,EAAQG,aAChBkI,EAAa1B,EACNhrB,GAAQqkB,EAAQE,YAAcvkB,GAAQqkB,EAAQI,SACrDiI,EAAatB,EAEb5oB,KAAK6pB,cAAc9mB,GAEnBmnB,IACAJ,EAAS,IAAII,EAAWhuB,EAAW,CAAC,EAAGqjB,EAAS,CAC5Cxc,SAAUA,MAEP2lB,eAAeJ,GACtBtoB,KAAK+kB,mBAAmBoF,OAAOL,EAAO7E,gBAE/B6E,QAPX,EAXI9pB,KAAK6pB,cAAc9mB,EAoB3B,EAEAqnB,gBAAiB,SAASrnB,GACtB,IAAI+mB,EAAS9pB,KAAK+pB,SAAShnB,GAE3B,GAAI+mB,EAAQ,CACR,IAAIxB,EAAOtoB,KAAKupB,SAASxmB,GACrBulB,EACAwB,EAAOpB,eAAeJ,GAEtBtoB,KAAK6pB,cAAc9mB,EAE3B,CACJ,EAEAsnB,QAAS,CACLrpB,MAAO,WACPD,IAAK,UAGTupB,cAAe,SAASC,EAAYxnB,EAAUwc,GAC1Cvf,KAAK0pB,wBAAwBnK,GAE7B,IAAIiL,EAAcxqB,KAAKuf,QACnBkL,EAAMzqB,KAAKqqB,QAAQtnB,GACnB2nB,GAAeF,EAAYC,IAAQ,CAAC,GAAGjtB,KACvCmtB,EAAapL,EAAQkL,GACrBG,GAAU,EAcd,OAbID,GACAH,EAAYC,GAAOvuB,EAAW,CAAC,EAAGsuB,EAAYC,GAAME,GAChDA,EAAWntB,MAAQktB,GAAeC,EAAWntB,MAC7CwC,KAAK6pB,cAAc9mB,GACnB/C,KAAK+pB,SAAShnB,GAAY/C,KAAKiqB,cAAcO,EAAYC,GAAM1nB,GAC/D6nB,GAAU,GACH5qB,KAAK+pB,SAAShnB,IACtB/C,KAAK+pB,SAAShnB,GAAUiiB,OAAO2F,IAE3BJ,IAAevqB,KAAK+pB,SAAShnB,IAAaynB,EAAYC,KAC7DzqB,KAAK+pB,SAAShnB,GAAY/C,KAAKiqB,cAAcO,EAAYC,GAAM1nB,GAC/D6nB,GAAU,GAEPA,CACX,EAEAC,eAAgB,SAASN,EAAYhL,IAC5Bvf,KAAKsqB,cAAcC,EAAYrI,EAAO3C,IAAYgL,GACnDvqB,KAAKoqB,gBAAgBlI,IAEpBliB,KAAKsqB,cAAcC,EAAYpI,EAAK5C,IAAYgL,GACjDvqB,KAAKoqB,gBAAgBjI,EAE7B,GAGAyF,EAAOlC,EAAW5hB,OAAO,CACzBC,KAAM,SAASwb,GACXmG,EAAWzT,GAAGlO,KAAK7G,KAAK8C,KAAMuf,GAC9Bvf,KAAKkN,UAAY,IAAI/M,EAAE2qB,MACvB9qB,KAAK+qB,kBACL/qB,KAAKukB,WACT,EAEAhF,QAAS,CACLiF,UAAU,GAGdO,iBAAkB,WACd,OAAO/kB,KAAKkN,SAChB,EAEAyG,KAAM,SAAStV,GACX,IAAIkhB,EAAUvf,KAAKuf,QACnB,IAAIlhB,EAQA,OAAOkhB,EAAQ5L,KAPX4L,EAAQ5L,MAAQtV,IACjBkhB,EAAQ5L,KAAOtV,EACf2B,KAAKgrB,SAAS3sB,GACd2B,KAAKukB,YACLvkB,KAAK6qB,gBAAe,EAAM,CAAC,GAKtC,EAEA7F,OAAQ,SAASzF,GACb,GAAIA,EAAS,CACTmG,EAAWzT,GAAG+S,OAAO9nB,KAAK8C,KAAMuf,GAEhC,IAAIiL,EAAcxqB,KAAKuf,QACnB5L,EAAO4L,EAAQ5L,KAEf+N,EAAQ/N,IAAS6W,EAAY7W,MAAQA,GACrC6W,EAAY7W,KAAOA,EACnB3T,KAAKgrB,SAASrX,GACT3T,KAAK0kB,YAAYnF,IAClBvf,KAAKukB,YAETvkB,KAAK6qB,gBAAe,EAAMtL,KAE1Bvf,KAAK0kB,YAAYnF,GACjBvf,KAAK6qB,gBAAe,EAAOtL,GAEnC,CACJ,EAEAwL,gBAAiB,WACb,IAAIxL,EAAUvf,KAAKuf,QAEnBvf,KAAKilB,eAAiB9kB,EAAEynB,KAAK3e,MAAMsW,EAAQ5L,MAAQ,GAAI,CACnDiS,OAAQrG,EAAQqG,SAGpB5lB,KAAK8lB,QACL9lB,KAAKkN,UAAUid,OAAOnqB,KAAKilB,gBAC3BjlB,KAAKgqB,gBACT,EAEAgB,SAAU,SAASrX,GACf,IAAIsR,EAAiBjlB,KAAKilB,eACtBgG,EAAY9qB,EAAEynB,KAAK3e,MAAM0K,GAAQ,IACjC8V,EAAQwB,EAAUxB,MAAMrgB,MAAM,GAClC6hB,EAAUxB,MAAMzB,SAAS,IACzB/C,EAAewE,MAAMzB,SAASyB,EAClC,IAGJvtB,EAAW0rB,EAAK3V,GAAI+R,GACpB9nB,EAAW0rB,EAAK3V,GAAIqX,GAEpB,IAAI4B,EAAOxF,EAAW5hB,OAAO,CACzBC,KAAM,SAASwb,GACXmG,EAAWzT,GAAGlO,KAAK7G,KAAK8C,KAAMuf,GAC9Bvf,KAAKkN,UAAY,IAAI/M,EAAE2qB,MACvB9qB,KAAKynB,YACLznB,KAAKgqB,gBACT,EAEAjF,iBAAkB,WACd,OAAO/kB,KAAKkN,SAChB,EAEA8X,OAAQ,SAASzF,GACb,GAAIA,EAAS,CAET,IAAIha,GADJga,EAAUA,GAAW,CAAC,GACHha,KACfF,EAAKka,EAAQla,GACbE,IACAvF,KAAKuf,QAAQha,KAAOA,GAGpBF,IACArF,KAAKuf,QAAQla,GAAKA,GAGlBE,GAAQF,GACRrF,KAAK2nB,YACL3nB,KAAK6qB,gBAAe,EAAMtL,IAE1Bvf,KAAK6qB,gBAAe,EAAOtL,GAG/BmG,EAAWzT,GAAG+S,OAAO9nB,KAAK8C,KAAMuf,EACpC,CACJ,EAEAkI,UAAW,WACP,IAAIlI,EAAUvf,KAAKuf,QACf0F,EAAiBjlB,KAAKilB,eAAiB,IAAI9kB,EAAEynB,KAAK,CAClDhC,OAAQrG,EAAQqG,SAGpB5lB,KAAK8lB,QACL9lB,KAAK2nB,YACL3nB,KAAKkN,UAAUid,OAAOlF,EAC1B,EAEA0C,UAAW,WACP,IAAIpI,EAAUvf,KAAKuf,QACf0F,EAAiBjlB,KAAKilB,eACtB1f,EAAOga,EAAQha,MAAQ,IAAInG,EAC3BiG,EAAKka,EAAQla,IAAM,IAAIjG,EAE3B6lB,EAAevY,SAASsb,SAAS,CAC7BC,EAAc1iB,EAAK1G,EAAG0G,EAAKzG,GAC3BmpB,EAAc5iB,EAAGxG,EAAGwG,EAAGvG,IAE/B,IAGJ5C,EAAWgvB,EAAKjZ,GAAIqX,GAEpB,IAAI6B,EAAWzF,EAAW5hB,OAAO,CAC7BC,KAAM,SAASwb,GACXmG,EAAWzT,GAAGlO,KAAK7G,KAAK8C,KAAMuf,GAC9Bvf,KAAKkN,UAAY,IAAI/M,EAAE2qB,MACvB9qB,KAAKynB,YACLznB,KAAKgqB,gBACT,EAEAjF,iBAAkB,WACd,OAAO/kB,KAAKkN,SAChB,EAEAzO,OAAQ,SAASA,GACb,IAAI8gB,EAAUvf,KAAKuf,QACnB,IAAI9gB,EAIA,OAAO8gB,EAAQ9gB,OAHf8gB,EAAQ9gB,OAASA,EACjBuB,KAAKorB,aAIb,EAEApG,OAAQ,SAASzF,GACb,GAAIA,EAAS,CACT,IAAI9gB,EAAS8gB,EAAQ9gB,OACrBinB,EAAWzT,GAAG+S,OAAO9nB,KAAK8C,KAAMuf,GAE5B9gB,GAAUuB,KAAKqrB,cAAc5sB,IAC7BuB,KAAKvB,OAAOA,GACZuB,KAAK6qB,gBAAe,EAAMtL,IAE1Bvf,KAAK6qB,gBAAe,EAAOtL,EAEnC,CACJ,EAEAkI,UAAW,WACP,IAAIlI,EAAUvf,KAAKuf,QACnBvf,KAAKilB,eAAiB,IAAI9kB,EAAEynB,KAAK,CAC7BhC,OAAQrG,EAAQqG,SAGpB5lB,KAAK8lB,QACL9lB,KAAKkN,UAAUid,OAAOnqB,KAAKilB,gBAEvB1F,EAAQ9gB,QACRuB,KAAKorB,aAEb,EAEAC,cAAe,SAAS5sB,GACpB,IAAI6sB,EAAgBtrB,KAAKuf,QAAQ9gB,OAC7B8sB,EAASD,EAAcxtB,SAAWW,EAAOX,OAC7C,IAAKytB,EACD,IAAK,IAAIhtB,EAAI,EAAGA,EAAIE,EAAOX,OAAQS,IAC/B,GAAI+sB,EAAc/sB,GAAGM,IAAMJ,EAAOF,GAAGM,GAAKysB,EAAc/sB,GAAGO,IAAML,EAAOF,GAAGO,EAAG,CAC1EysB,GAAS,EACT,KACJ,CAIR,OAAOA,CACX,EAEAH,YAAa,WAMT,IALA,IAII5hB,EAJAyb,EAAiBjlB,KAAKilB,eAEtBxmB,EADUuB,KAAKuf,QACE9gB,OACjBiO,EAAW,GAENnO,EAAI,EAAGA,EAAIE,EAAOX,OAAQS,IAC/BiL,EAAQ/K,EAAOF,GACfmO,EAAS9N,KAAKqpB,EAAcze,EAAM3K,EAAG2K,EAAM1K,IAG/CmmB,EAAevY,SAASsb,SAAStb,EACrC,EAEA6S,QAAS,CACL9gB,OAAQ,MAIhBvC,EAAWivB,EAASlZ,GAAIqX,GAExB,IAAIkC,EAAQ5G,EAAQ9gB,OAAO,CACvBC,KAAM,SAASwb,GACXqF,EAAQ3S,GAAGlO,KAAK7G,KAAK8C,KAAMuf,GAE3Bvf,KAAKyrB,YACT,EAEAzG,OAAQ,SAASzF,GACTA,IACIA,EAAQthB,QACR+B,KAAKilB,eAAeyG,IAAInM,EAAQthB,QAGhC+B,KAAK2kB,oBAAoBpF,EAAS,CAAC6C,EAAOC,EArjClD,IACA,OAqjCQriB,KAAKilB,eAAe1a,KAAKvK,KAAK2rB,SAGlC/G,EAAQ3S,GAAG+S,OAAO9nB,KAAK8C,KAAMuf,GAErC,EAEAkM,WAAY,WACR,IAAIlM,EAAUvf,KAAKuf,QACfhV,EAAOvK,KAAK2rB,QAEhB3rB,KAAKilB,eAAiB,IAAI9kB,EAAEqrB,MAAMjM,EAAQthB,OAAQsM,EAAM,CAAC,EAC7D,EAEAohB,MAAO,WACH,IAAI7D,EAAcC,EAAqB/nB,KAAKuf,SACxCtZ,EAAS,IAAIuY,EAAEpf,MAAM0oB,EAAYjpB,EAAGipB,EAAYhpB,GAChDV,EAAO,IAAIogB,EAAE5S,KAAKkc,EAAY9e,MAAO8e,EAAY/e,QAErD,OAAO,IAAIyV,EAAE7V,KAAK1C,EAAQ7H,EAC9B,IAGA0sB,EAAQlG,EAAQ9gB,OAAO,CACvBC,KAAM,SAASwb,GACXvf,KAAKqU,SAAW,GAChBuQ,EAAQ3S,GAAGlO,KAAK7G,KAAK8C,KAAMuf,GAC3Bvf,KAAKilB,eAAiB,IAAI9kB,EAAE2qB,MAC5B9qB,KAAKukB,WACT,EAEAhF,QAAS,CACLiF,UAAU,GAGd2F,OAAQ,SAASzG,GACb1jB,KAAKilB,eAAekF,OAAOzG,EAAOqB,oBAClC/kB,KAAKqU,SAASzV,KAAK8kB,GACnB1jB,KAAK4rB,iBAAkB,CAC3B,EAEAjqB,OAAQ,SAAS+hB,GACT1jB,KAAK6rB,QAAQnI,KACb1jB,KAAK4rB,iBAAkB,EAE/B,EAEAC,QAAS,SAASnI,GACd,IAAIhhB,EAAQT,EAAQyhB,EAAQ1jB,KAAKqU,UACjC,GAAI3R,GAAS,EAGT,OAFA1C,KAAKilB,eAAe6G,SAASppB,GAC7B1C,KAAKqU,SAAStS,OAAOW,EAAO,IACrB,CAEf,EAEAO,MAAO,WACHjD,KAAKilB,eAAehiB,QACpBjD,KAAKqU,SAAW,GAChBrU,KAAK4rB,iBAAkB,CAC3B,EAEAG,QAAS,SAASC,GAGd,IAFA,IAAItI,EAEKnlB,EAAI,EAAGA,EAAIytB,EAAQluB,OAAQS,IAChCmlB,EAASsI,EAAQztB,GACbyB,KAAK6rB,QAAQnI,IACb1jB,KAAKmqB,OAAOzG,EAGxB,EAEAuI,OAAQ,SAASD,GACbhsB,KAAKksB,iBAAiBF,EAAS,EACnC,EAEAG,QAAS,SAASH,EAAS1Q,GACvBtb,KAAKksB,iBAAiBF,EAAS1Q,EACnC,EAEA4Q,iBAAkB,SAASF,EAAS1Q,GAChC,IAII/c,EAAGmE,EAAOypB,EAASlH,EAAgBvB,EAJnC0I,EAAQpsB,KAAKilB,eACboH,EAAkBD,EAAM/X,SAASjL,MAAM,GACvCiL,EAAWrU,KAAKqU,SAChBiY,EAAgB7uB,EAAS6d,GAG7B,IAAK/c,EAAI,EAAGA,EAAIytB,EAAQluB,OAAQS,IAE5B0mB,GADAvB,EAASsI,EAAQztB,IACOwmB,oBAExBriB,EAAQT,EAAQyhB,EAAQrP,KACX,IACTgY,EAAgBtqB,OAAOW,EAAO,GAC9B2R,EAAStS,OAAOW,EAAO,GAEvBypB,EAAUG,EAAgBhR,EAAUA,EAAQ/c,GAE5C8tB,EAAgBtqB,OAAOoqB,EAAS,EAAGlH,GACnC5Q,EAAStS,OAAOoqB,EAAS,EAAGzI,IAGpC0I,EAAMnpB,QACNmpB,EAAMjC,OAAO3mB,MAAM4oB,EAAOC,EAC9B,EAEArH,OAAQ,SAASzF,GACTA,IACIvf,KAAK4rB,iBACL5rB,KAAK4rB,iBAAkB,EAClB5rB,KAAK0kB,YAAYnF,IAClBvf,KAAKukB,aAGTvkB,KAAK0kB,YAAYnF,GAGrBqF,EAAQ3S,GAAG+S,OAAO9nB,KAAK8C,KAAMuf,GAErC,EAEAgG,aAAc,WAIV,IAHA,IACIgH,EACA7I,EAAQ8I,EAFRnY,EAAWrU,KAAKqU,SAGX9V,EAAI,EAAGA,EAAI8V,EAASvW,OAAQS,KACjCmlB,EAASrP,EAAS9V,IACPumB,YAAuC,IAA1BpB,EAAO+I,iBAC3BD,EAAmB9I,EAAOqB,mBAAmB2H,YAAY,SAGjDH,EADAA,EACc/N,EAAE7V,KAAKG,MAAMyjB,EAAaC,GAE1BA,GAM9B,OAAOD,CACX,IAGJrwB,EAAW4uB,EAAM7Y,GAAI+R,GAErB,IAAI2I,EAAS7B,EAAMhnB,OAAO,CACtBC,KAAM,SAASwG,EAAMgV,GACjBvf,KAAKqU,SAAW,GAChBuQ,EAAQ3S,GAAGlO,KAAK7G,KAAK8C,KAAMuf,GAC3Bvf,KAAKilB,eAAiB,IAAI9kB,EAAEwsB,OAAOC,EAAcriB,GAAOgV,GACxDvf,KAAKukB,WACT,EAEAha,KAAM,SAASA,GACX,GAAIA,EACAvK,KAAKilB,eAAe1a,KAAKqiB,EAAcriB,QACpC,CACH,IAAIsiB,EAAc7sB,KAAKilB,eAAe1a,OACtC,GAAIsiB,EACA,OAAO,IAAIlkB,EAAKkkB,EAAY5mB,OAAOpH,EAAGguB,EAAY5mB,OAAOnH,EAAG+tB,EAAYzuB,KAAK4K,MAAO6jB,EAAYzuB,KAAK2K,OAE7G,CACJ,EAEA+jB,OAAQ,WACJ9sB,KAAKilB,eAAe6H,QACxB,EAEA9H,OAAQ,SAASzF,GACbzjB,EAAMI,WAAW8D,KAAKilB,eAAe1F,QAASA,GAC9CuL,EAAM7Y,GAAG+S,OAAO9nB,KAAK8C,KAAMuf,EAC/B,IAGAkJ,EAAS/C,EAAW5hB,OAAO,CAC3BC,KAAM,SAASwb,GACXmG,EAAWzT,GAAGlO,KAAK7G,KAAK8C,KAAMuf,GAC9Bvf,KAAK+sB,cACL/sB,KAAKukB,WACT,EAEAS,OAAQ,SAASzF,GACb,GAAIA,EAAS,CACT,IAAIyN,EAAgBhtB,KAAKuf,QAErBA,EAAQze,SACR5E,EAAW8wB,EAAe,CACtBlsB,OAAQye,EAAQze,SAEpBd,KAAK2N,QAAQsf,KAAKD,EAAclsB,OAAOjC,EAAGmuB,EAAclsB,OAAOhC,IAG/DkB,KAAK2kB,oBAAoBpF,EAAS,CAAC,YACnCvf,KAAKktB,QAAQC,UAAUH,EAAc9N,QAGzClf,KAAK0kB,YAAYnF,GAEjBmG,EAAWzT,GAAG+S,OAAO9nB,KAAK8C,KAAMuf,EACpC,CACJ,EAEAwN,YAAa,WACT,IAAIxN,EAAUvf,KAAKuf,QACfvW,EAAQuW,EAAQvW,MAChBD,EAASwW,EAAQxW,OACjBmW,EAASK,EAAQL,OAChBwC,EAAQxC,KACJwC,EAAQ1Y,KACTA,EAAQD,GAEP2Y,EAAQ3Y,KACTA,EAASC,GAEbuW,EAAQL,OAASA,EAAS1iB,KAAKiJ,IAAIuD,EAAOD,GAAU,GAGxD,IAAIjI,EAASye,EAAQze,QAAU,CAAEjC,EAAGqgB,EAAQpgB,EAAGogB,GAC/Clf,KAAK2N,QAAU,IAAI6Q,EAAEpf,MAAM0B,EAAOjC,EAAGiC,EAAOhC,GAC5CkB,KAAKktB,QAAU,IAAI1O,EAAEiK,OAAOzoB,KAAK2N,QAASuR,GAC1Clf,KAAKilB,eAAiB,IAAI9kB,EAAEsoB,OAAOzoB,KAAKktB,QAAS,CAC7CtH,OAAQrG,EAAQqG,SAGpB5lB,KAAK8lB,OACT,IAEJ5pB,EAAWusB,EAAOxW,GAAI+R,GAEtB,IAAIoJ,EAASvpB,EAAMC,OAAO,CACtBC,KAAM,SAASjB,EAASyc,GACpBA,EAAUA,GAAW,CAAC,EACtBvf,KAAK8C,QAAUA,EACf9C,KAAKqtB,QAAUltB,EAAEmtB,QAAQlK,OAAOtgB,EAASyc,GACrCzjB,EAAMoL,WAAWlH,KAAKqtB,QAAQ9J,aAC9BvjB,KAAKujB,UAAYvjB,KAAKutB,YAG1BvtB,KAAKilB,eAAiB,IAAI9kB,EAAE2qB,MAC5B9qB,KAAKwtB,SAAW,IAAI7kB,EAAK,EAAG,EAAG4W,EAAQvW,MAAOuW,EAAQxW,QACtD/I,KAAK5B,KAAK4B,KAAKwtB,SACnB,EAEA9Z,OAAQ,WACJ,IAAI4R,EAAMtlB,KAAKilB,eAAeyH,cAC9B,OAAO,IAAI/jB,EAAK,EAAG,EAAG2c,EAAItc,QAASsc,EAAIvc,SAC3C,EAEA3K,KAAM,SAASA,GACX,IAAIqvB,EAAUztB,KAAKwtB,SAMnB,OALI9L,EAAQtjB,KACRqvB,EAAQzkB,MAAQ5K,EAAK4K,MACrBykB,EAAQ1kB,OAAS3K,EAAK2K,OACtB/I,KAAKqtB,QAAQK,QAAQtvB,IAElB,CACH4K,MAAOykB,EAAQzkB,MACfD,OAAQ0kB,EAAQ1kB,OAExB,EAEAwkB,WAAY,SAAS1uB,EAAGC,GACpB,IAAI2uB,EAAUztB,KAAKwtB,SAMnB,OALI9L,EAAQ7iB,IAAM6iB,EAAQ5iB,KACtB2uB,EAAQ5uB,EAAIA,EACZ4uB,EAAQ3uB,EAAIA,EACZkB,KAAKqtB,QAAQ9J,UAAU,CAAE1kB,EAAGA,EAAGC,EAAGA,KAE/B,CACHD,EAAG4uB,EAAQ5uB,EACXC,EAAG2uB,EAAQ3uB,EAEnB,EAEA6uB,KAAM,WACF3tB,KAAKqtB,QAAQM,KAAK3tB,KAAKilB,eAC3B,EAEAkF,OAAQ,SAASzG,GAEb,OADA1jB,KAAKilB,eAAekF,OAAOzG,EAAOqB,oBAC3B/kB,IACX,EAEA2B,OAAQ,SAAS+hB,GACb1jB,KAAKilB,eAAetjB,OAAO+hB,EAAOqB,mBACtC,EAEA6I,aAAc,WAEd,EAEA3qB,MAAO,WACHjD,KAAKilB,eAAehiB,OACxB,EAEA4qB,QAAS,SAASC,GACd9tB,KAAKqtB,QAAQQ,UACTC,GACAjyB,EAAEmE,KAAK8C,SAASnB,QAExB,IAKJ,SAASomB,EAAqBxI,GAC1B,MAAO,CACH1gB,EAAG0gB,EAAQ1gB,GAAK,EAChBC,EAAGygB,EAAQzgB,GAAK,EAChBkK,MAAOuW,EAAQvW,OAAS,EACxBD,OAAQwW,EAAQxW,QAAU,EAElC,CAEA,SAAS4c,EAAwBpG,GAC7B,GAAIA,EAAS,CACT,IAAIwO,EAAiBxO,EAWrB,OATIpiB,EAAS4wB,KACTA,EAAiB,CACbhO,MAAOgO,IAIXA,EAAehO,QACfgO,EAAehO,MAAQgG,EAASgI,EAAehO,QAE5CgO,CACX,CACJ,CAEA,SAAShI,EAAS1nB,GAOd,OALIA,GAASujB,EACD,IAAIzhB,EAAE6tB,MAAM3vB,GAAO4vB,QAEnB5vB,CAGhB,CASA,SAAS4pB,EAAcppB,EAAGC,GACtB,OAAO,IAAI0f,EAAE0P,QAAQ,IAAI1P,EAAEpf,MAAMP,EAAGC,GACxC,CAEA,SAAS8tB,EAAcriB,GACnB,GAAIA,EACA,OAAO,IAAIiU,EAAE7V,KAAK,CAAC4B,EAAK1L,EAAG0L,EAAKzL,GAAI,CAACyL,EAAKvB,MAAOuB,EAAKxB,QAE9D,CAGAjN,EAAMI,WAAWF,EAAS,CACtB+H,KAAM,SAASjB,GACXhH,EAAMiI,KAAKjB,EAAS9G,EAAQyK,GAChC,EACA6b,mBAAoBA,EACpBsC,QAASA,EACTjC,MAAOA,EACPI,YAAaA,EACbG,SAAUA,EACVuF,OAAQA,EACRqC,MAAOA,EACPtD,UAAWA,EACX4F,OAAQA,EACRxF,KAAMA,EACN+E,OAAQA,EACRzB,KAAMA,EACNhD,WAAYA,EACZU,YAAaA,EACbJ,aAAcA,EACd2C,SAAUA,EACV7H,mBAAoBA,EACpBoD,UAAWA,EACX8E,MAAOA,EACP9F,WAAYA,GAEnB,CAz9CD,CAy9CG3pB,OAAOD,MAAMkL,QAEhB,SAAUnL,EAAG2lB,GAEL,IAAI1lB,EAAQC,OAAOD,MAEfE,EADUF,EAAMG,QACED,QAClB6H,EAAQ/H,EAAM+H,MACdinB,EAAQ9uB,EAAQ8uB,MAChBniB,EAAO3M,EAAQ2M,KACf6e,EAAYxrB,EAAQwrB,UACpBnrB,EAAQL,EAAQK,MAChBO,EAAcP,EAAMO,YACpBwC,EAAQpD,EAAQoD,MAChBqpB,EAASzsB,EAAQysB,OACjB7kB,EAAS5H,EAAQ4H,OACjB1H,EAAaJ,EAAMI,WACnBiyB,EAAUryB,EAAM2K,GAAG0nB,QACnBxM,EAAO7lB,EAAM2lB,QAAQE,KACrBD,EAAUC,EAAKD,QACfzf,EAAUpG,EAAEoG,QAGZmsB,EAAU,CACNC,MAAO,UACPC,KAAM,UACNC,MAAO,UACP3d,IAAK,UACLqc,KAAM,OACNuB,OAAQ,UACRC,MAAO,WACPC,KAAM,WACNC,KAAM,WACNC,MAAO,WACPC,UAAW,aACXC,UAAW,cAEfC,EAAoB,GACpBC,EAAO,OACPC,EAAM,MACNC,EAAQ,QACRC,EAAO,OACPC,EAAS,SAGTC,EAAa,YACbC,EAAO,OACPC,EAAW,UAEXC,EAAmB,mBAYnB5N,EAAc,cAEd6N,EAAU,UAEVC,EAAS,SACTC,EAAe,CACX,KAHK,SAIL,EAAKD,GAGb1zB,EAAQoyB,QAAUA,EAElB,IAAIwB,EAAkB9zB,EAAM+H,MAAMC,OAAO,CACrCC,KAAM,SAAS8rB,GACX7vB,KAAK6vB,YAAcA,EACnB7vB,KAAKhE,QAAU6zB,EAAY7zB,OAC/B,EACAkK,UAAW,WACPlG,KAAK8vB,MAAQ,GACb9vB,KAAK+vB,IAAM,GACX/vB,KAAKgwB,SAAW,GAUhBhwB,KAAK6vB,YAAYvV,QAAQjZ,SATzB,SAAgBuQ,EAAI8B,GAChB,IAAIN,EAAQpT,KAAKhE,QAAQi0B,aAAare,GAClCwB,IACApT,KAAKgwB,SAASpxB,KAAKwU,GACnBpT,KAAK8vB,MAAMlxB,KAAKwU,EAAMM,SAASxJ,WAC/BlK,KAAK+vB,IAAInxB,KAAK8U,EAAOxJ,WAE7B,GAEyClK,KAC7C,EACAqG,OAAQ,SAASnC,GACb,KAAIlE,KAAKgwB,SAASlyB,QAAU,GAG5B,IAAK,IAAIS,EAAI,EAAGA,EAAIyB,KAAKgwB,SAASlyB,OAAQS,IAEtCyB,KAAKgwB,SAASzxB,GAAGwE,SACb,IAAI3D,EAAMY,KAAK8vB,MAAMvxB,GAAGM,GAAKmB,KAAK+vB,IAAIxxB,GAAGM,EAAImB,KAAK8vB,MAAMvxB,GAAGM,GAAKqF,EAAMlE,KAAK8vB,MAAMvxB,GAAGO,GAAKkB,KAAK+vB,IAAIxxB,GAAGO,EAAIkB,KAAK8vB,MAAMvxB,GAAGO,GAAKoF,GAGxI,IAGAgsB,EAAiBrsB,EAAMC,OAAO,CAC9BC,KAAM,SAASosB,EAAcC,EAAYC,GACjCzzB,EAAYyzB,GACZrwB,KAAKqwB,SAAU,EAGfrwB,KAAKqwB,QAAUA,EAEnBrwB,KAAKswB,cAAgBH,EACrBnwB,KAAKuwB,YAAcH,EACnBpwB,KAAKwwB,MAAQ,gBACjB,EACAC,KAAM,WACFzwB,KAAK0wB,SAAS1wB,KAAKswB,cACvB,EACAK,KAAM,WACF3wB,KAAK0wB,SAAS1wB,KAAKuwB,YACvB,EACAG,SAAU,SAASE,GACf,IAAI50B,EAAU40B,EAAM50B,QACpB,GAAIgE,KAAKqwB,QAAS,CACdO,EAAMrW,QAAQlZ,SACV,SAASuQ,EAAInT,GACT,IAAIoyB,EAAO70B,EAAQi0B,aAAare,GAChCif,EAAK/L,SAAQ,GACT+L,GACAA,EAAKpyB,OAAOA,EAEpB,IAEJ,IAAIqyB,EAAS,IAAIltB,EACjBktB,EAAOnsB,WAAW,IAAIirB,EAAgBgB,IACtCE,EAAOlsB,YAAW,WACdgsB,EAAMrW,QAAQlZ,SACV,SAASuQ,GACM5V,EAAQi0B,aAAare,GAC3BkT,SAAQ,EACjB,GAER,IACAgM,EAAO9qB,MACX,MAEI4qB,EAAMtW,QAAQjZ,SAAQ,SAASuQ,EAAI8B,GAC/B,IAAIN,EAAQpX,EAAQi0B,aAAare,GAC7BwB,GACAA,EAAMrQ,SAAS2Q,EAAOxJ,UAE9B,IACA0mB,EAAMrW,QAAQlZ,SACV,SAASuQ,EAAInT,GACT,IAAIoyB,EAAO70B,EAAQi0B,aAAare,GAC5Bif,GACAA,EAAKpyB,OAAOA,EAEpB,GAGZ,IAGAsyB,EAAgBltB,EAAMC,OAAO,CAC7BC,KAAM,SAAS8K,GACX7O,KAAKgxB,MAAQ,GACbhxB,KAAKwwB,MAAQ,iBACT3hB,IAAS2S,GACTxhB,KAAKgxB,MAAMpyB,KAAKiQ,EAExB,EACA+B,IAAK,SAASqgB,GACVjxB,KAAKgxB,MAAMpyB,KAAKqyB,EACpB,EACAR,KAAM,WACF,IAAK,IAAIlyB,EAAI,EAAGA,EAAIyB,KAAKgxB,MAAMlzB,OAAQS,IACnCyB,KAAKgxB,MAAMzyB,GAAGkyB,MAEtB,EACAE,KAAM,WACF,IAAK,IAAIpyB,EAAI,EAAGA,EAAIyB,KAAKgxB,MAAMlzB,OAAQS,IACnCyB,KAAKgxB,MAAMzyB,GAAGoyB,MAEtB,IAGAO,EAAqBrtB,EAAMC,OAAO,CAClCC,KAAM,SAAShE,EAAMoxB,EAAYC,GAC7BpxB,KAAKD,KAAOA,EACZC,KAAKqxB,YAAcF,EACnBnxB,KAAKsxB,YAAcF,EACf1P,EAAQyP,KACRnxB,KAAKuxB,YAAcxxB,EAAK9B,UAGxByjB,EAAQ0P,KACRpxB,KAAKwxB,YAAczxB,EAAKkE,UAE5BjE,KAAKwwB,MAAQ,oBACjB,EACAC,KAAM,WACEzwB,KAAKuxB,cAAgB/P,GACrBxhB,KAAKD,KAAK0xB,iBAAiBzxB,KAAKuxB,YAAa,UAG7CvxB,KAAKwxB,cAAgBhQ,GACrBxhB,KAAKD,KAAK0xB,iBAAiBzxB,KAAKwxB,YAAa,UAGjDxxB,KAAKD,KAAK2xB,aACd,EACAf,KAAM,WACE3wB,KAAKqxB,cAAgB7P,GACrBxhB,KAAKD,KAAK0xB,iBAAiBzxB,KAAKqxB,YAAa,UAG7CrxB,KAAKsxB,cAAgB9P,GACrBxhB,KAAKD,KAAK0xB,iBAAiBzxB,KAAKsxB,YAAa,UAGjDtxB,KAAKD,KAAK2xB,aACd,IAGAC,EAAyB9tB,EAAMC,OAAO,CACtCC,KAAM,SAAShE,EAAM6xB,EAAYC,GAC7B7xB,KAAKD,KAAOA,EACZC,KAAKuxB,YAAcK,EACnB5xB,KAAKwxB,YAAcK,EACnB7xB,KAAKqxB,YAActxB,EAAK9B,SACxB+B,KAAKsxB,YAAcvxB,EAAKkE,SACxBjE,KAAKwwB,MAAQ,oBACjB,EACAC,KAAM,WACFzwB,KAAKD,KAAK0xB,iBAAiBzxB,KAAKuxB,YAAa,UAC7CvxB,KAAKD,KAAK0xB,iBAAiBzxB,KAAKwxB,YAAa,UAC7CxxB,KAAKD,KAAK2xB,aACd,EACAf,KAAM,WACF3wB,KAAKD,KAAK0xB,iBAAiBzxB,KAAKqxB,YAAa,UAC7CrxB,KAAKD,KAAK0xB,iBAAiBzxB,KAAKsxB,YAAa,UAC7CtxB,KAAKD,KAAK2xB,aACd,IAGAI,EAAuBjuB,EAAMC,OAAO,CACpCC,KAAM,SAASqR,GACXpV,KAAKoV,WAAaA,EAClBpV,KAAKhE,QAAUoZ,EAAWpZ,QAC1BgE,KAAK+xB,gBAAkB3c,EAAW2c,gBAClC/xB,KAAKwwB,MAAQ,mBACjB,EACAC,KAAM,WACFzwB,KAAKhE,QAAQsjB,eAAetf,KAAKoV,YAAY,EACjD,EACAub,KAAM,WACF3wB,KAAKhE,QAAQ2F,OAAO3B,KAAKoV,YAAY,EACzC,IAGA4c,EAAkBnuB,EAAMC,OAAO,CAC/BC,KAAM,SAASqP,GACXpT,KAAKoT,MAAQA,EACbpT,KAAKhE,QAAUoX,EAAMpX,QACrBgE,KAAKwwB,MAAQ,UACjB,EACAC,KAAM,WACFzwB,KAAKhE,QAAQ+iB,UAAU/e,KAAKoT,OAAO,GACnCpT,KAAKoT,MAAMob,QAAO,EACtB,EACAmC,KAAM,WACF3wB,KAAKoT,MAAMob,QAAO,GAClBxuB,KAAKhE,QAAQ2F,OAAO3B,KAAKoT,OAAO,EACpC,IAMA6e,EAAgBpuB,EAAMC,OAAO,CAC7BC,KAAM,SAASmuB,EAAQC,EAAYC,GAC/BpyB,KAAKkyB,OAASA,EACdlyB,KAAKmyB,WAAaA,EAClBnyB,KAAKwwB,MAAQ,iBACbxwB,KAAKqyB,WAAa,GAClBryB,KAAKoyB,QAAUA,EACf,IAAK,IAAI7zB,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,IAAK,CACzC,IAAI6U,EAAQpT,KAAKkyB,OAAO3zB,GACxByB,KAAKqyB,WAAWzzB,KAAKwU,EAAMM,SAC/B,CACJ,EACA+c,KAAM,WACF,IAAK,IAAIlyB,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,IAAK,CACzC,IAAI6U,EAAQpT,KAAKkyB,OAAO3zB,GACxB6U,EAAMM,OAAO1T,KAAKmyB,WAAW5zB,IACzB6U,EAAMnW,eAAe,WACrBmW,EAAMkf,OAAOlf,EAAOpT,KAAKqyB,WAAW9zB,GAAIyB,KAAKmyB,WAAW5zB,IAE5D6U,EAAMse,aACV,CACI1xB,KAAKoyB,UACLpyB,KAAKoyB,QAAQG,gBACbvyB,KAAKoyB,QAAQI,UAErB,EACA7B,KAAM,WACF,IAAK,IAAIpyB,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,IAAK,CACzC,IAAI6U,EAAQpT,KAAKkyB,OAAO3zB,GACxB6U,EAAMM,OAAO1T,KAAKqyB,WAAW9zB,IAEzB6U,EAAMnW,eAAe,WACrBmW,EAAMkf,OAAOlf,EAAOpT,KAAKmyB,WAAW5zB,GAAIyB,KAAKqyB,WAAW9zB,IAE5D6U,EAAMse,aACV,CAEI1xB,KAAKoyB,UACLpyB,KAAKoyB,QAAQG,gBACbvyB,KAAKoyB,QAAQI,UAErB,IAGAC,EAAoB5uB,EAAMC,OAAO,CACjCC,KAAM,SAASqR,EAAYpZ,GACvBgE,KAAKoV,WAAaA,EAClBpV,KAAKhE,QAAUA,EACfgE,KAAKwwB,MAAQ,gBACjB,EAEAC,KAAM,WACFzwB,KAAKhE,QAAQ2F,OAAO3B,KAAKoV,YAAY,EACzC,EAEAub,KAAM,WACF3wB,KAAKhE,QAAQsjB,eAAetf,KAAKoV,YAAY,EACjD,IAGAsd,EAAe7uB,EAAMC,OAAO,CAC5BC,KAAM,SAASqP,EAAOpX,GAClBgE,KAAKoT,MAAQA,EACbpT,KAAKhE,QAAUA,EACfgE,KAAKwwB,MAAQ,WACjB,EAEAC,KAAM,WACFzwB,KAAKhE,QAAQ22B,WACb3yB,KAAKhE,QAAQ2F,OAAO3B,KAAKoT,OAAO,EACpC,EAEAud,KAAM,WACF3wB,KAAKhE,QAAQ+iB,UAAU/e,KAAKoT,OAAO,EACvC,IAGAwf,EAAc/uB,EAAMC,OAAO,CAC3BC,KAAM,SAAS8uB,EAAiBC,EAAe92B,GAC3CgE,KAAKsC,QAAUuwB,EACf7yB,KAAK+yB,SAAWD,EAChB9yB,KAAKhE,QAAUA,EACfgE,KAAKwwB,MAAQ,UACjB,EACAC,KAAM,WACFzwB,KAAKhE,QAAQg3B,IAAIhzB,KAAKsC,QAC1B,EACAquB,KAAM,WACF3wB,KAAKhE,QAAQg3B,IAAIhzB,KAAK+yB,SAC1B,IAGAE,EAAapvB,EAAMC,OAAO,CAC1BC,KAAM,SAASquB,EAASF,EAAQgB,GAC5BlzB,KAAKkyB,OAASA,EACdlyB,KAAKkzB,YAAcA,EACnBlzB,KAAKwwB,MAAQ,WACbxwB,KAAKmzB,YAAc,GACnBnzB,KAAKozB,UAAYhB,EAAQiB,OACzBrzB,KAAKoyB,QAAUA,EACfpyB,KAAKc,OAASsxB,EAAQkB,aAAaxyB,SACnC,IAAK,IAAIvC,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,IAAK,CACzC,IAAI6U,EAAQpT,KAAKkyB,OAAO3zB,GACxByB,KAAKmzB,YAAYv0B,KAAKwU,EAAMrI,SAASN,MACzC,CACJ,EACAgmB,KAAM,WACF,IAAIlyB,EAAG6U,EACP,IAAK7U,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,KAChC6U,EAAQpT,KAAKkyB,OAAO3zB,IACdwM,OAAO/K,KAAKkzB,YAAY30B,GAAIyB,KAAKc,QAAQ,GAC3CsS,EAAMnW,eAAe,WACrBmW,EAAMkf,OAAOlf,GAEjBA,EAAMse,cAEN1xB,KAAKoyB,UACLpyB,KAAKoyB,QAAQmB,cACbvzB,KAAKoyB,QAAQI,UAErB,EACA7B,KAAM,WACF,IAAIpyB,EAAG6U,EACP,IAAK7U,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,KAChC6U,EAAQpT,KAAKkyB,OAAO3zB,IACdwM,OAAO/K,KAAKmzB,YAAY50B,GAAIyB,KAAKc,QAAQ,GAC3CsS,EAAMnW,eAAe,WACrBmW,EAAMkf,OAAOlf,GAEjBA,EAAMse,cAEN1xB,KAAKoyB,UACLpyB,KAAKoyB,QAAQmB,cACbvzB,KAAKoyB,QAAQI,UAErB,IAGAgB,EAAc3vB,EAAMC,OAAO,CAC3BC,KAAM,SAAS/H,EAASy3B,EAAOC,GAC3B1zB,KAAKhE,QAAUA,EACfgE,KAAKsb,QAAUoY,EACf1zB,KAAKyzB,MAAQA,EACbzzB,KAAKwwB,MAAQ,aACjB,EACAC,KAAM,WACFzwB,KAAKhE,QAAQ23B,SAAS3zB,KAAKyzB,MAAOzzB,KAAKsb,QAC3C,EACAqV,KAAM,WACF3wB,KAAKhE,QAAQ+vB,QAAQ/rB,KAAKyzB,OAAO,EACrC,IAGAG,EAAa/vB,EAAMC,OAAO,CAC1BC,KAAM,SAAS/H,EAASy3B,EAAOC,GAC3B1zB,KAAKhE,QAAUA,EACfgE,KAAKsb,QAAUoY,EACf1zB,KAAKyzB,MAAQA,EACbzzB,KAAKwwB,MAAQ,aACjB,EACAC,KAAM,WACFzwB,KAAKhE,QAAQ23B,SAAS3zB,KAAKyzB,MAAOzzB,KAAKsb,QAC3C,EACAqV,KAAM,WACF3wB,KAAKhE,QAAQiwB,OAAOjsB,KAAKyzB,OAAO,EACpC,IAMAI,EAAkB/3B,EAAMiW,WAAWjO,OAAO,CAC1CC,KAAM,SAASwb,GACXzjB,EAAMiW,WAAWE,GAAGlO,KAAK7G,KAAK8C,KAAMuf,GACpCvf,KAAK8zB,KAAK9zB,KAAK+zB,OAAQxU,GACvBvf,KAAKyb,MAAQ,GACbzb,KAAK0C,MAAQ,EACb1C,KAAKg0B,SAAW,GACpB,EAEAD,OAAQ,CAAC,SAAU,UAMnBE,MAAO,WACHj0B,KAAKk0B,UAAY,IAAInD,CACzB,EAKAoD,OAAQ,WACJn0B,KAAKk0B,UAAY1S,CACrB,EAKA4S,OAAQ,SAASC,GACTr0B,KAAKk0B,UAAUlD,MAAMlzB,OAAS,GAC9BkC,KAAKs0B,SAASt0B,KAAKk0B,UAAWG,GAElCr0B,KAAKk0B,UAAY1S,CACrB,EAMA+S,iBAAkB,SAAStD,GACnBjxB,KAAKk0B,UACLl0B,KAAKk0B,UAAUtjB,IAAIqgB,GAEnBjxB,KAAK4Q,IAAIqgB,EAEjB,EAOArgB,IAAK,SAASqgB,EAAUoD,GACpBr0B,KAAKs0B,SAASrD,EAAUoD,EAC5B,EAOAhc,IAAK,WACGrY,KAAK0C,MAAQ,IACb1C,KAAKyb,MAAMpD,MACXrY,KAAK0C,QAEb,EAEA8xB,MAAO,WACH,OAAOx0B,KAAKyb,MAAM3d,MACtB,EAKA2yB,KAAM,WACEzwB,KAAK0C,MAAQ,IACb1C,KAAK0C,QACL1C,KAAKyb,MAAMzb,KAAK0C,OAAO+tB,OACvBzwB,KAAKiF,QAAQ,UAErB,EAKA0rB,KAAM,WACE3wB,KAAKyb,MAAM3d,OAAS,GAAKkC,KAAK0C,MAAQ1C,KAAKyb,MAAM3d,SACjDkC,KAAKyb,MAAMzb,KAAK0C,OAAOiuB,OACvB3wB,KAAK0C,QACL1C,KAAKiF,QAAQ,UAErB,EAEAqvB,SAAU,SAASJ,EAAWG,GAE1Br0B,KAAKyb,MAAM1Z,OAAO/B,KAAK0C,MAAO1C,KAAKyb,MAAM3d,OAASkC,KAAK0C,OACvD1C,KAAKyb,MAAM7c,KAAKs1B,IACA,IAAZG,EACAr0B,KAAK2wB,OAEL3wB,KAAK0C,QAGL1C,KAAKyb,MAAM3d,OAASkC,KAAKg0B,WACzBh0B,KAAKyb,MAAM1Z,OAAO,EAAG/B,KAAKyb,MAAM3d,OAASkC,KAAKg0B,UAC9Ch0B,KAAK0C,MAAQ1C,KAAKg0B,SAE1B,EAKA/wB,MAAO,WACHjD,KAAKyb,MAAQ,GACbzb,KAAK0C,MAAQ,CACjB,IAKA+xB,EAAY5wB,EAAMC,OAAO,CACzBC,KAAM,SAAS2wB,GACX10B,KAAK00B,YAAcA,CACvB,EACA1zB,MAAO,WACP,EACAisB,KAAM,WACN,EACAlsB,IAAK,WACL,EACA4zB,YAAa,WACT,OAAO,CACX,EACAC,UAAW,WACP,OAAOxG,EAAQC,KACnB,IAGAwG,EAAeJ,EAAU3wB,OAAO,CAChCC,KAAM,SAAS2wB,GACX,IAAII,EAAO90B,KACP+0B,EAAWj5B,EAAMk5B,QAAQC,SA1hBf,IADP,GA4hBPR,EAAUxiB,GAAGlO,KAAK7G,KAAK43B,EAAMJ,GAE7B,IAAI14B,EAAU84B,EAAKJ,YAAY14B,QAC3Bk5B,EAASl5B,EAAQk5B,OAEjBC,EAAWn5B,EAAQm5B,SAAWL,EAAKK,SAAWt5B,EAAEG,EAAQo5B,YAAYC,oBAAoB,CACxFN,SAAUA,EACVO,mBAjiBc,EAkiBdC,qBAAqB,EACrB9pB,MAAM,EACN+pB,OAAQV,EAAKW,MAAM3B,KAAKgB,KACzBnhB,KAAK,uBAEJuhB,EAAO3R,YACPuR,EAAKY,cAAgB,IAAIvH,EAAQ+G,EAAOpyB,UAG5C,IAAI6yB,EAAgB,SAASC,EAAWnwB,EAAKD,GACzCowB,EAAUC,cACVD,EAAUE,YAAYrwB,IAjjBjB,IAijBoCD,GAhjBpC,IAijBT,EAEAmwB,EAAcR,EAASY,WAAWl3B,GAClC82B,EAAcR,EAASY,WAAWj3B,GAClCq2B,EAASa,SACb,EAEArB,YAAa,SAASh2B,EAAGs3B,GACrB,IAAIvB,EAAc10B,KAAK00B,YACnBnV,EAAUmV,EAAY14B,QAAQujB,QAAQ2W,SACtCC,EAAUF,EAAKG,QAUnB,OARI1U,EAAQnC,EAAQviB,OAIZm5B,EAHC5W,EAAQviB,KAAsB,QAAfuiB,EAAQviB,IAGdi5B,EAAK1W,EAAQviB,IAAM,OAFnBq5B,GAAOJ,KAAUvU,EAAQgT,EAAY4B,eAMpC,IAAZ/W,GAAqB4W,IAAYzU,EAAQgT,EAAY6B,kBAAoB7U,EAAQgT,EAAY8B,kBACxG,EAEAx1B,MAAO,WACHhB,KAAKm1B,SAASsB,QAClB,EACAxJ,KAAM,WACN,EACAwI,MAAO,SAASiB,GACZ,IACI16B,EADOgE,KACQ00B,YAAY14B,QAC3Bk5B,EAASl5B,EAAQk5B,OACjByB,EAAY,IAAIv3B,EAAMs3B,EAAKE,WAAYF,EAAKG,WAE5C3B,EAAO3R,WACPvnB,EAAQ86B,UAAUH,EAAUhvB,OAAO,IAN5B3H,KAOF01B,cAAcqB,OAAOJ,GAC1BzB,EAAO3R,UAAUoT,EAAU93B,EAAG83B,EAAU73B,IAExC63B,EAAYA,EAAUnvB,KAAKxL,EAAQg7B,KAAKrvB,OAAO,IAGnD3L,EAAQiJ,QAtlBN,MAslBmB,CAAE+tB,IAAK2D,GAChC,EACA51B,IAAK,WACDf,KAAKm1B,SAASa,SAClB,EACApB,UAAW,WACP,OAAOxG,EAAQnB,IACnB,IAOAgK,EAAcpzB,EAAMC,OAAO,CAC3BC,KAAM,SAAS2wB,GACX10B,KAAK00B,YAAcA,CACvB,EACAC,YAAa,WACT,OAAO,CACX,EACA3zB,MAAO,SAASrC,EAAGs3B,GACf,IAAIvB,EAAc10B,KAAK00B,YACnB14B,EAAU04B,EAAY14B,QACtBs6B,EAAc5B,EAAY4B,YAE1BA,IACA5B,EAAYwC,aAAaZ,EAAaL,GAClCK,EAAYlE,UACZpyB,KAAKoyB,QAAUkE,EAAYlE,QAC3BpyB,KAAKm3B,OAASn3B,KAAKoyB,QAAQgF,SAASz4B,KAIvCqB,KAAKm3B,SACNn3B,KAAKm3B,OAASn7B,EAAQq7B,iBAAiBD,SAASz4B,GAC5CqB,KAAKm3B,SACLn3B,KAAKoyB,QAAUp2B,EAAQq7B,mBAI3Br3B,KAAKoyB,UACApyB,KAAKoyB,QAAQkF,aAAat3B,KAAKm3B,SAAYn7B,EAAQiJ,QAAQoqB,EAAY,CAAE6C,OAAQlyB,KAAKoyB,QAAQF,OAAQqF,YAAa,MAGpH7C,EAAYlP,WAAa7mB,EACzB+1B,EAAY3zB,IAAIpC,IAHhBqB,KAAKoyB,QAAQpxB,MAAMrC,GAM/B,EAEAsuB,KAAM,SAAStuB,GACPqB,KAAKoyB,UACLpyB,KAAKoyB,QAAQnF,KAAKjtB,KAAKm3B,OAAQx4B,GAC3BqB,KAAKoyB,QAAQkF,aAAat3B,KAAKm3B,SAC/Bn3B,KAAK00B,YAAY14B,QAAQiJ,QAAQqqB,EAAM,CAAE4C,OAAQlyB,KAAKoyB,QAAQF,OAAQqF,YAAa,KAG/F,EAEAx2B,IAAK,WACD,IAEI8N,EAFA7S,EAAUgE,KAAK00B,YAAY14B,QAC3Bo2B,EAAUpyB,KAAKoyB,QAGfA,IACKA,EAAQkF,aAAat3B,KAAKm3B,SAAYn7B,EAAQiJ,QAAQsqB,EAAU,CAAE2C,OAAQE,EAAQF,OAAQqF,YAAa,KAMxGnF,EAAQ+B,UALRtlB,EAAOujB,EAAQtsB,SAEX9J,EAAQw7B,gBAAgB5mB,IAAI/B,GAAM,IAO9C7O,KAAKoyB,QAAU5Q,EACfxhB,KAAKm3B,OAAS3V,CAClB,EACAoT,UAAW,SAASj2B,GAChB,OAAOqB,KAAK00B,YAAY4B,YAAct2B,KAAK00B,YAAY4B,YAAYmB,WAAW94B,GAAKyvB,EAAQC,KAC/F,IAGAqJ,EAAgB7zB,EAAMC,OAAO,CAC7BC,KAAM,SAAS2wB,GACX10B,KAAK00B,YAAcA,CACvB,EACAC,YAAa,SAASh2B,EAAGs3B,GACrB,IAAIvB,EAAc10B,KAAK00B,YACnBiD,EAAajD,EAAY14B,QAAQujB,QAAQoY,WACzCxB,EAAUwB,IAAsC,IAAxBA,EAAWC,SAUvC,OARIzB,IAEIA,EADAwB,EAAW36B,KAAyB,QAAlB26B,EAAW36B,IACnBi5B,EAAK0B,EAAW36B,IAAM,OAEtBq5B,GAAOJ,IAIlBE,IAAYzU,EAAQgT,EAAY4B,eAAiB5U,EAAQgT,EAAY6B,eAChF,EACAv1B,MAAO,SAASrC,GACZ,IAAI3C,EAAUgE,KAAK00B,YAAY14B,QAC/BA,EAAQ22B,WACR32B,EAAQ67B,SAAS72B,MAAMrC,EAC3B,EACAsuB,KAAM,SAAStuB,GACGqB,KAAK00B,YAAY14B,QACvB67B,SAAS5K,KAAKtuB,EAC1B,EACAoC,IAAK,SAASpC,EAAGs3B,GACb,IAAIj6B,EAAUgE,KAAK00B,YAAY14B,QAASs6B,EAAct2B,KAAK00B,YAAY4B,YACnE/rB,EAAOvO,EAAQ67B,SAASnkB,SACtB4iB,GAAgBA,EAAYwB,YAAgB7B,EAAKG,SACnDp6B,EAAQ22B,WAEPpoB,EAAK1M,WACN7B,EAAQ+7B,WAAWxtB,GAEvBvO,EAAQ67B,SAAS92B,KACrB,EACA6zB,UAAW,WACP,OAAOxG,EAAQC,KACnB,IAGA2J,EAAiBn0B,EAAMC,OAAO,CAC9BC,KAAM,SAAS2wB,GACX10B,KAAK00B,YAAcA,EACnB10B,KAAKxC,KAAO,gBAChB,EACAm3B,YAAa,WACT,OAAO30B,KAAK00B,YAAY8B,iBAC5B,EACAx1B,MAAO,SAASrC,EAAGs3B,GACf,IAAIvB,EAAc10B,KAAK00B,YACnB14B,EAAU04B,EAAY14B,QACtBi8B,EAAYvD,EAAY8B,kBACxBphB,EAAapZ,EAAQk8B,kBAAkB,CAAC,EAAGD,EAAUE,GAAIx5B,GAEzDy5B,GAAQhjB,KAAgBpZ,EAAQiJ,QAAQoqB,EAAY,CAAE6C,OAAQ,GAAIqF,YAAa,CAACniB,GAAaijB,iBAAkB3I,KAAa1zB,EAAQsjB,eAAelK,IACnJsf,EAAY4D,wBAAwBljB,EAAY6iB,EAAUE,GAAG/kB,OAAO,GACpEshB,EAAY6D,eACZ7D,EAAYwC,aAAaxC,EAAY8D,iBAAkBvC,GACtC,aAAbA,EAAKz4B,OACLxB,EAAQy8B,mBAAqBR,EAAUvU,UAG3CtO,EAAWnX,OAAO,MAClBy2B,EAAY3zB,IAAIpC,GAExB,EAEAsuB,KAAM,SAAStuB,GACX,IAAI+1B,EAAc10B,KAAK00B,YACnBtf,EAAasf,EAAY8D,iBAI7B,OAFApjB,EAAWnR,OAAOtF,GAClB+1B,EAAY14B,QAAQiJ,QAAQqqB,EAAM,CAAE4C,OAAQ,GAAIqF,YAAa,CAACniB,GAAaijB,iBAAkB3I,KACtF,CACX,EAEA3uB,IAAK,SAASpC,GACV,IAKIsF,EALAywB,EAAc10B,KAAK00B,YACnBv0B,EAAIu0B,EAAY14B,QAChBoZ,EAAasf,EAAY8D,iBACzBlC,EAAc5B,EAAY4B,YAC1B2B,EAAYvD,EAAY8B,kBAExBkC,EAAoBv4B,EAAEs4B,mBAErBrjB,IAKDnR,EADAg0B,GAAaA,EAAUE,IAAM/iB,EAAWujB,gBAC/BV,EAAUE,GACZ7B,GAAeA,aAAuBt6B,EAAQ48B,MAC5CtC,EAAYuC,aAAa7J,IAASsH,EAAYuC,aAAal6B,GAE3DA,EAGbyW,EAAWnR,OAAOA,GAEb9D,EAAE8E,QAAQsqB,EAAU,CAAE2C,OAAQ,GAAIqF,YAAa,CAACniB,GAAaijB,iBAAkB3I,KAIhFvvB,EAAEwB,OAAOyT,GAAY,GACrBjV,EAAEq3B,gBAAgBnf,QAJlBjD,EAAWsc,cACXvxB,EAAE24B,0BAKNpE,EAAY4D,0BAERI,IACAv4B,EAAE44B,mBAAmBrV,OAAO/hB,OAAO+2B,GACnCv4B,EAAEs4B,mBAAqB,MAE/B,EAEA7D,UAAW,WACP,OAAOxG,EAAQC,KACnB,IAGA2K,EAAqBn1B,EAAMC,OAAO,CAClCC,KAAM,SAAS2wB,GACX10B,KAAK00B,YAAcA,EACnB10B,KAAKxC,KAAO,gBAChB,EAEAm3B,YAAa,SAASh2B,EAAGs3B,GACrB,IAAIvB,EAAc10B,KAAK00B,YAEnBiD,EADUjD,EAAY14B,QACDujB,QAAQoY,WAC7B53B,EAAO20B,EAAY4B,YACnB2C,GAA0B,IAAftB,GACA53B,GAAQA,EAAKuoB,QAAUvoB,EAAK+3B,YAAc7B,EAAKG,SAM9D,OAJI6C,IACAj5B,KAAKm4B,GAAKp4B,GAGPk5B,CACX,EAEAj4B,MAAO,SAASrC,EAAGs3B,GACf,IAAIvB,EAAc10B,KAAK00B,YACnBtf,EAAapV,KAAKm4B,GAEtBzD,EAAYwC,aAAa9hB,EAAY6gB,GAErC,IAEIkB,EAAQj5B,EAFRk0B,EAAUhd,EAAWgd,QAGrBA,IACA+E,EAAS/E,EAAQgF,SAASz4B,GAC1BT,EAAOyxB,EAAawH,IAGpBiB,GAAQhjB,IAAegd,IAAYsC,EAAY14B,QAAQiJ,QAAQoqB,EAAY,CAAE6C,OAAQ,GAAIqF,YAAa,CAACniB,GAAaijB,iBAAkBn6B,KACtI8B,KAAKm3B,OAASA,EACdn3B,KAAKk5B,WAAah7B,EAClBk0B,EAAQpxB,MAAMrC,KAEd+1B,EAAYlP,WAAa7mB,EACzB+1B,EAAY3zB,IAAIpC,GAExB,EAEAsuB,KAAM,SAAStuB,GACX,IAAIyzB,EAAUpyB,KAAKm4B,GAAG/F,QACtB,GAAIgG,GAAQp4B,KAAKm4B,KAAO/F,EAIpB,OAHAA,EAAQnF,KAAKjtB,KAAKm3B,OAAQx4B,GAC1BqB,KAAK00B,YAAY14B,QAAQiJ,QAAQqqB,EAAM,CAAE4C,OAAQ,GAAIqF,YAAa,CAACv3B,KAAKm4B,IAAKE,iBAAkBr4B,KAAKk5B,cAE7F,CAEf,EAEAn4B,IAAK,SAASpC,GACV,IAAIyW,EAAapV,KAAKm4B,GAClB/F,EAAUhd,EAAWgd,QAErBp2B,EADcgE,KAAK00B,YACG14B,QAE1B,GAAIo2B,GACIgG,GAAQhjB,GAAa,CACrB,IAAIvG,EAAOujB,EAAQtsB,KAAKnH,GACnB3C,EAAQiJ,QAAQsqB,EAAU,CAAE2C,OAAQ,GAAIqF,YAAa,CAACniB,GAAaijB,iBAAkBr4B,KAAKk5B,aAK3FrqB,EAAK4hB,QAJLz0B,EAAQw7B,gBAAgB5mB,IAAI/B,GAAM,GAClCuG,EAAWsc,cACX11B,EAAQ88B,yBAIhB,CAER,EAEAlE,UAAW,WACP,OAAOxG,EAAQnB,IACnB,IAGJ,SAASkM,GAAQn8B,EAAKkM,GAClB,OAAOA,EAAIyI,WAAW,IAAM3U,GAAOkM,EAAIkwB,cAAcznB,WAAW,IAAM3U,CAC1E,CAMA,IAAIq8B,GAAcx1B,EAAMC,OAAO,CAC3BC,KAAM,SAAS/H,GACXgE,KAAKhE,QAAUA,EACfgE,KAAKs5B,MAAQ,CACT,IAAIzE,EAAa70B,MACjB,IAAIg5B,EAAmBh5B,MACvB,IAAIg4B,EAAeh4B,MACnB,IAAI03B,EAAc13B,MAClB,IAAIi3B,EAAYj3B,OAGpBA,KAAKu5B,WAAa/X,CACtB,EAEAxgB,MAAO,SAASrC,EAAGs3B,GAYf,OAXAA,EAAO/5B,EAAW,CAAC,EAAG+5B,GAClBj2B,KAAKu5B,YACLv5B,KAAKu5B,WAAWx4B,IAAIpC,EAAGs3B,GAE3Bj2B,KAAKw5B,mBAAmB76B,GACxBqB,KAAKy5B,cAAc96B,EAAGs3B,GACtBj2B,KAAKu5B,WAAWv4B,MAAMrC,EAAGs3B,GACzBj2B,KAAK05B,cAAc/6B,GACnBqB,KAAKhE,QAAQ29B,QACb35B,KAAKhE,QAAQk5B,OAAO7H,QAAQuM,kBAC5B55B,KAAKwlB,WAAa7mB,GACX,CACX,EAEAsuB,KAAM,SAAStuB,EAAGs3B,GACdA,EAAO/5B,EAAW,CAAC,EAAG+5B,GACtB,IAAI4D,GAAgB,EAQpB,OAPI75B,KAAKu5B,aACLM,EAAgB75B,KAAKu5B,WAAWtM,KAAKtuB,EAAGs3B,IAExC4D,GACA75B,KAAKw5B,mBAAmB76B,GAE5BqB,KAAK05B,cAAc/6B,IACZ,CACX,EAEAoC,IAAK,SAASpC,EAAGs3B,GAQb,OAPAA,EAAO/5B,EAAW,CAAC,EAAG+5B,GAClBj2B,KAAKu5B,YACLv5B,KAAKu5B,WAAWx4B,IAAIpC,EAAGs3B,GAE3Bj2B,KAAKhE,QAAQk5B,OAAO7H,QAAQyM,iBAC5B95B,KAAKu5B,WAAa/X,EAClBxhB,KAAK05B,cAAc/6B,IACZ,CACX,EAEAo7B,QAAS,SAAS/8B,EAAKi5B,GACnB,IAAIj6B,EAAUgE,KAAKhE,QAEnB,KADAi6B,EAAO/5B,EAAW,CAAEk6B,SAAS,EAAO4D,SAAS,EAAOC,QAAQ,GAAShE,IAC3DG,UAAWH,EAAK+D,SAAa/D,EAAKgE,OA8BrC,IAAY,KAARj9B,GAAsB,IAARA,EAAW,CAChC,IAAIk9B,EAAWl6B,KAAKhE,QAAQm+B,eAAen+B,EAAQwyB,UAOnD,OANI0L,EAASp8B,SACTkC,KAAKhE,QAAQ2F,OAAOu4B,GAAU,GAC9Bl6B,KAAKhE,QAAQo+B,eACbp6B,KAAKhE,QAAQq+B,oBAGV,CACX,CAAO,GAAY,KAARr9B,EAIP,OAHAgD,KAAKs6B,wBACLt+B,EAAQ22B,WACR32B,EAAQq+B,mBACD,CACX,KA5CoD,CAChD,GAAIlB,GAAQn8B,EAAK,KAGb,OAFAhB,EAAQu+B,YACRv+B,EAAQq+B,mBACD,EACJ,GAAIlB,GAAQn8B,EAAK,KAGpB,OAFAhB,EAAQy0B,OACRz0B,EAAQq+B,mBACD,EACJ,GAAIlB,GAAQn8B,EAAK,KAGpB,OAFAhB,EAAQ20B,OACR30B,EAAQq+B,mBACD,EACAlB,GAAQn8B,EAAK,MACpBhB,EAAQwY,OACRxY,EAAQq+B,mBACDlB,GAAQn8B,EAAK,MACpBhB,EAAQw+B,MACRx+B,EAAQq+B,mBACDlB,GAAQn8B,EAAK,MACpBhB,EAAQy+B,QACRz+B,EAAQq+B,mBACDlB,GAAQn8B,EAAK,MACpBhB,EAAQs2B,SACRt2B,EAAQq+B,mBACDlB,GAAQn8B,EAAK,OACpBhB,EAAQq+B,kBACRr+B,EAAQwY,OACRxY,EAAQy+B,QAEhB,CAgBJ,EACAC,MAAO,SAAS/7B,EAAGs3B,GACf,IAAIj6B,EAAUgE,KAAKhE,QACfuP,EAAQ0qB,EAAK1qB,MACbovB,EAAI3+B,EAAQyP,OACZ8T,EAAUvjB,EAAQujB,QAClBqb,EAAWrb,EAAQqb,SACnBC,EAAc,CAAErxB,MAAO7K,EAAGs3B,KAAMA,EAAMxqB,KAAMkvB,GAEhD,IAAI3+B,EAAQiJ,QAp/BH,YAo/BuB41B,GAgBhC,OAZItvB,EAAQ,EACRovB,GAAKC,EAELD,GAAKC,EAGTD,EAAI7+B,EAAM2lB,QAAQE,KAAKjS,MAAMlT,KAAKgJ,IAAI+Z,EAAQub,QAASt+B,KAAKiJ,IAAI8Z,EAAQwb,QAASJ,IAAK,GACtFE,EAAYpvB,KAAOkvB,EAEnB3+B,EAAQyP,KAAKkvB,EAAGE,GAChB7+B,EAAQiJ,QAjgCD,UAigCmB41B,IAEnB,CACX,EACAG,QAAS,SAASlG,EAAMpyB,GACpBoyB,EAAKJ,YAAc10B,KACnBA,KAAKs5B,MAAM52B,GAASoyB,CACxB,EAEAoC,aAAc,SAASn3B,EAAMk2B,GACzB,IAAIj6B,EAAUgE,KAAKhE,QACf27B,EAAa37B,EAAQujB,QAAQoY,WACjC,GAAIA,IAAe53B,EAAK+3B,aAA0C,IAA5B/3B,EAAKwf,QAAQoY,WAAsB,CACrE,IAAIsD,EAAiBhF,EAAKG,UAAmC,IAAxBuB,EAAWC,SAChD57B,EAAQwyB,OAAOzuB,EAAM,CAAEk7B,eAAgBA,GAC3C,CACJ,EAEAX,sBAAuB,WACft6B,KAAKk7B,gBACLl7B,KAAKhE,QAAQ2F,OAAO3B,KAAKk7B,eACzBl7B,KAAKk7B,cAAgB1Z,EAE7B,EACAiY,cAAe,SAAS96B,EAAGs3B,GACvB,IAAK,IAAI13B,EAAI,EAAGA,EAAIyB,KAAKs5B,MAAMx7B,OAAQS,IAAK,CACxC,IAAIu2B,EAAO90B,KAAKs5B,MAAM/6B,GACtB,GAAIu2B,EAAKH,YAAYh2B,EAAGs3B,GAAO,CAC3Bj2B,KAAKu5B,WAAazE,EAClB,KACJ,CACJ,CACJ,EACA4E,cAAe,SAAS/6B,GACpB,IAAImE,EAAU9C,KAAKhE,QAAQ8G,QACvBq4B,EAASn7B,KAAKu5B,WAAav5B,KAAKu5B,WAAW3E,UAAUj2B,GAAMqB,KAAKu2B,eAAiBv2B,KAAKu2B,eAAekB,WAAW94B,GAAMqB,KAAKs2B,YAAct2B,KAAKs2B,YAAYmB,WAAW94B,GAAKyvB,EAAQC,MAEtLvrB,EAAQs4B,IAAI,CAAED,OAAQA,GAC1B,EACA7C,wBAAyB,SAASljB,EAAYimB,EAAeC,GACzDt7B,KAAKw4B,iBAAmBpjB,EACxBpV,KAAKq7B,cAAgBA,EAEjBr7B,KAAKk7B,cADLI,EACqBt7B,KAAKw4B,iBAELhX,CAE7B,EACAgY,mBAAoB,SAAS76B,GACzB,IAAI48B,EAAMv7B,KAAKo3B,SAASz4B,GACpB3C,EAAUgE,KAAKhE,QAEfu/B,GAAOv7B,KAAKs2B,aAAiBt2B,KAAKq7B,eAAiBE,GAAOv7B,KAAKq7B,gBAC3Dr7B,KAAKs2B,cACLt6B,EAAQiJ,QAzjCN,aAyjC2B,CAAElF,KAAMC,KAAKs2B,cAC1Ct2B,KAAKs2B,YAAYnR,QAAO,IAGxBoW,GAAOA,EAAIhc,QAAQkX,QACnBz6B,EAAQiJ,QA/jCN,aA+jC2B,CAAElF,KAAMw7B,IAErCv7B,KAAKs2B,YAAciF,EACnBv7B,KAAKs2B,YAAYnR,QAAO,IAExBnlB,KAAKs2B,YAAc9U,EAG/B,EACA+W,aAAc,WACNv4B,KAAKs2B,cACLt2B,KAAKs2B,YAAYnR,QAAO,GACxBnlB,KAAKs2B,YAAc9U,EAE3B,EACA4V,SAAU,SAAS5tB,GACf,IAAI+xB,EAAuBx7B,EAAMxB,EAAxB4B,EAAIH,KAAKhE,QAOlB,GAJIgE,KAAKw2B,oBACLx2B,KAAKw2B,kBAAkBrR,QAAO,GAC9BnlB,KAAKw2B,kBAAoBhV,GAEzBrhB,EAAE44B,mBAAmByC,WACrBD,EAAMp7B,EAAE44B,mBAAmB3B,SAAS5tB,IAEhC,OAAO+xB,EAKf,GADAA,EAAMv7B,KAAKhE,QAAQq7B,iBAAiBD,SAAS5tB,GACpC,CAEL,GADAxJ,KAAKu2B,eAAiBp2B,EAAEk3B,iBACV,IAAVkE,EAAI18B,GAAqB,IAAV08B,EAAIz8B,EACnB,OAEJy8B,EAAM/Z,CACV,MACIxhB,KAAKu2B,eAAiB/U,EAG1B,IAAKxhB,KAAKu5B,YAAuC,mBAAzBv5B,KAAKu5B,WAAW/7B,KAA2B,CAC/D,IAAIi+B,EAAsB,GAE1B,IAAKl9B,EAAI,EAAGA,EAAI4B,EAAEu7B,eAAe59B,OAAQS,KACrCwB,EAAOI,EAAEu7B,eAAen9B,cACJvC,EAAQ2/B,YACxBF,EAAoB78B,KAAKmB,GAGjCw7B,EAAMv7B,KAAK47B,cAAcH,EAAqBjyB,EAClD,CAEA,OAAO+xB,GAAOv7B,KAAK67B,iBAAiBryB,EACxC,EAEAqyB,iBAAkB,SAASryB,GACvB,IAGI+xB,EAHAv/B,EAAUgE,KAAKhE,QACf8/B,EAAW97B,KAAK47B,cAAc5/B,EAAQk2B,OAAQ1oB,GAC9CuyB,EAAgB/7B,KAAK47B,cAAc5/B,EAAQu7B,YAAa/tB,GAG5D,KAAMxJ,KAAKu5B,YAAsC,kBAAxBv5B,KAAKu5B,WAAW/7B,OAA6Bs+B,GAAYC,IA0oC1F,SAAgC3oB,EAAO5J,GAEnC,IADA,IAAIyuB,EAAWl1B,EAAUwH,EAChByxB,EAAM,EAAGA,EAAM5oB,EAAM6oB,WAAWn+B,OAAQk+B,IAK7C,GAHAj5B,GADAk1B,EAAY7kB,EAAM6oB,WAAWD,IACRj5B,YACrBwH,EAAO,IAAI5B,EAAK5F,EAASlE,EAAGkE,EAASjE,IAChC8J,QAAQmmB,EAAmBA,GAC5BxkB,EAAKvI,SAASwH,GACd,OAAOyuB,CAGnB,CArpC4GiE,CAAuBJ,EAAUtyB,GAAQ,CACzI,IAAI2yB,EAAYngC,EAAQmgC,UAGxBZ,EAFet5B,EAAQ65B,EAASpY,OAAQyY,EAAU9nB,UAC9BpS,EAAQ85B,EAAcrY,OAAQyY,EAAU9nB,UAC3BynB,EAAWC,CAChD,CACA,OAAOR,GAAOO,GAAYC,CAC9B,EAEAH,cAAe,SAASt9B,EAAOkL,GAC3B,IAAIjL,EAASg9B,EACb,IAAKh9B,EAAID,EAAMR,OAAS,EAAGS,GAAK,EAAGA,IAG/B,GADAg9B,EADOj9B,EAAMC,GACF64B,SAAS5tB,GAEhB,OAAO+xB,CAGnB,IAQAa,GAAuBtgC,EAAM+H,MAAMC,OAAO,CAC1CC,KAAM,WACN,IAcAs4B,GAAyBD,GAAqBt4B,OAAO,CACrDC,KAAM,SAASqR,GAEXgnB,GAAqBnqB,GAAGlO,KAAK7G,KADlB8C,MAEXA,KAAKoV,WAAaA,CACtB,EAIAknB,QAAS,SAAS39B,GAEd,QADUqB,KAAKu8B,YAAY3zB,QAAQmmB,GAC1B/sB,SAASrD,IAGX3C,EAAQ2T,SAASS,mBAAmBzR,EAAGqB,KAAKoV,WAAWonB,aAAezN,CACjF,EAMAwN,UAAW,WASP,IARA,IAAI99B,EAASuB,KAAKoV,WAAWonB,YACzBv9B,EAAIR,EAAO,GACX4P,EAAI5P,EAAOA,EAAOX,OAAS,GAC3ByL,EAAQ/M,KAAKgJ,IAAIvG,EAAEJ,EAAGwP,EAAExP,GACxByK,EAAO9M,KAAKiJ,IAAIxG,EAAEJ,EAAGwP,EAAExP,GACvBmL,EAAMxN,KAAKiJ,IAAIxG,EAAEH,EAAGuP,EAAEvP,GACtBmL,EAASzN,KAAKgJ,IAAIvG,EAAEH,EAAGuP,EAAEvP,GAEpBP,EAAI,EAAGA,EAAIE,EAAOX,OAAS,IAAKS,EACrCgL,EAAQ/M,KAAKgJ,IAAI+D,EAAO9K,EAAOF,GAAGM,GAClCyK,EAAO9M,KAAKiJ,IAAI6D,EAAM7K,EAAOF,GAAGM,GAChCmL,EAAMxN,KAAKiJ,IAAIuE,EAAKvL,EAAOF,GAAGO,GAC9BmL,EAASzN,KAAKgJ,IAAIyE,EAAQxL,EAAOF,GAAGO,GAGxC,OAAO,IAAI6J,EAAKW,EAAMU,EAAKT,EAAQD,EAAMW,EAASD,EACtD,IAQAyyB,GAAiBJ,GAAuBv4B,OAAO,CAC/CC,KAAM,SAASqR,GAEXinB,GAAuBpqB,GAAGlO,KAAK7G,KADpB8C,MAEXA,KAAKoV,WAAaA,CACtB,EACAsnB,MAAO,WAEP,IAGAC,GAAkBN,GAAuBv4B,OAAO,CAChD84B,yBAA0B,EAE1B74B,KAAM,SAASqR,GAEXinB,GAAuBpqB,GAAGlO,KAAK7G,KADpB8C,MAEXA,KAAKoV,WAAaA,CACtB,EAEAynB,YAAa,SAAS77B,EAAOD,EAAK43B,EAAiB5G,GAQ/C,OALI4G,GAAmB5G,EACV/xB,KAAK88B,iBAAiB97B,EAAOD,EAAK43B,EAAiB5G,GAEnD/xB,KAAK+8B,gBAAgB/7B,EAAOD,EAAK43B,EAGlD,EAEA+D,MAAO,WACH,IAAI/D,EAAkB34B,KAAKoV,WAAW4nB,yBAClCjL,EAAkB/xB,KAAKoV,WAAW6nB,yBAClCj8B,EAAQhB,KAAKoV,WAAW8nB,cACxBn8B,EAAMf,KAAKoV,WAAW+nB,cACtB1+B,EAASuB,KAAK68B,YAAY77B,EAAOD,EAAK43B,EAAiB5G,GAC3D/xB,KAAKoV,WAAW3W,OAAOA,EAC3B,EAEA2+B,gBAAiB,CAAC,CACdl/B,KAAM,MACNm/B,KAAM,IACNC,YAAa,UACbC,cAAe,GAChB,CACCr/B,KAAM,OACNm/B,KAAM,IACNC,YAAa,UACbC,cAAe,GAChB,CACCr/B,KAAM,SACNm/B,KAAM,IACNC,YAAa,cACbC,eAAgB,GACjB,CACCr/B,KAAM,QACNm/B,KAAM,IACNC,YAAa,cACbC,eAAgB,IAGpBC,eAAgB,SAASvF,EAAWkF,GAahC,IAZA,IAQIM,EACAC,EACAL,EACAM,EAXA56B,EAAWk1B,EAAUl1B,WACrB66B,EAAc3F,EAAU7kB,MAAMM,OAAO+b,GACrC/b,EAAS,CACTxJ,QAAS0zB,EAAY1zB,UACrBG,YAAauzB,EAAYvzB,eAEzBwzB,EAAQ79B,KAAKo9B,gBACb33B,EAAMkc,EAAKmc,QAKN9B,EAAM,EAAGA,EAAM6B,EAAM//B,OAAQk+B,IAElCqB,GADAM,EAAOE,EAAM7B,IACDqB,MACZI,EAAejhC,KAAKkT,MAAMlT,KAAKC,IAAIsG,EAASs6B,GAAQ3pB,EAAOiqB,EAAKL,aAAaD,MAC1D53B,GACfA,EAAMg4B,EACNC,EAAUC,GACHF,IAAiBh4B,IACvB1C,EAASs6B,GAAQF,EAAYE,IAASM,EAAKJ,eAAiBx6B,EAAS26B,EAAQL,MAAQF,EAAYO,EAAQL,OAASK,EAAQH,gBAC3HG,EAAUC,GAGlB,OAAOD,EAAQx/B,IACnB,EAEA6/B,kBAAmB,SAAS9F,GACxB,IAAIvkB,EAASukB,EAAU7kB,MAAMM,OAAO+b,GACpC,OAAOjzB,KAAKiJ,IAAIiO,EAAO1K,MAAO0K,EAAO3K,QAAU/I,KAAK48B,wBACxD,EAEAE,iBAAkB,SAAS97B,EAAOD,EAAK43B,EAAiB5G,GACpD,IAMIiM,EAAQC,EANRC,EAAsBl+B,KAAKw9B,eAAe7E,EAAiB53B,GAC3Do9B,EAAsBn+B,KAAKw9B,eAAezL,EAAiB/wB,GAC3Do9B,EAASr9B,EAAIlC,EAAImC,EAAMnC,EACvBw/B,EAASt9B,EAAIjC,EAAIkC,EAAMlC,EACvBw/B,EAAmBt+B,KAAK+9B,kBAAkBpF,GAC1Cl2B,EAAS,GAkCb,OA/BIy7B,IAAwBjP,GAAOiP,GAAuB9O,EAClD+O,GAAuBlP,GAAOkP,GAAuB/O,EACjD8O,GAAuBC,GAEnBF,EADAC,GAAuBjP,EACdzyB,KAAKiJ,IAAIzE,EAAMlC,EAAGiC,EAAIjC,GAAKw/B,EAE3B9hC,KAAKgJ,IAAIxE,EAAMlC,EAAGiC,EAAIjC,GAAKw/B,EAExC77B,EAAS,CAAC,IAAIrD,EAAM4B,EAAMnC,EAAGo/B,GAAS,IAAI7+B,EAAM2B,EAAIlC,EAAGo/B,KAEvDx7B,EAAS,CAAC,IAAIrD,EAAM4B,EAAMnC,EAAGmC,EAAMlC,EAAIu/B,EAAS,GAAI,IAAIj/B,EAAM2B,EAAIlC,EAAGmC,EAAMlC,EAAIu/B,EAAS,IAG5F57B,EAAS,CAAC,IAAIrD,EAAM4B,EAAMnC,EAAGkC,EAAIjC,IAGjCq/B,GAAuBhP,GAAQgP,GAAuBjP,EAClDgP,GAAuBC,GAEnBH,EADAE,GAAuB/O,EACd3yB,KAAKiJ,IAAIzE,EAAMnC,EAAGkC,EAAIlC,GAAKy/B,EAE3B9hC,KAAKgJ,IAAIxE,EAAMnC,EAAGkC,EAAIlC,GAAKy/B,EAExC77B,EAAS,CAAC,IAAIrD,EAAM4+B,EAAQh9B,EAAMlC,GAAI,IAAIM,EAAM4+B,EAAQj9B,EAAIjC,KAE5D2D,EAAS,CAAC,IAAIrD,EAAM4B,EAAMnC,EAAIu/B,EAAS,EAAGp9B,EAAMlC,GAAI,IAAIM,EAAM4B,EAAMnC,EAAIu/B,EAAS,EAAGp9B,EAAMlC,EAAIu/B,IAGlG57B,EAAS,CAAC,IAAIrD,EAAM2B,EAAIlC,EAAGmC,EAAMlC,IAGlC2D,CACX,EAEAs6B,gBAAiB,SAAS/7B,EAAOD,EAAK43B,GAWlC,IAVA,IAMI4F,EACAC,EAPAN,EAAsBvF,EAAkB34B,KAAKw9B,eAAe7E,EAAiB53B,GAAO,KACpF09B,EAAyBz+B,KAAK0+B,iBAAiB19B,EAAOD,EAAKm9B,GAC3Dz/B,EAAS,CAACuC,EAAOA,EAAOD,EAAKA,GAC7Bq9B,EAASr9B,EAAIlC,EAAImC,EAAMnC,EACvBw/B,EAASt9B,EAAIjC,EAAIkC,EAAMlC,EACvBhB,EAASW,EAAOX,OAKXk+B,EAAM,EAAGA,EAAMl+B,EAAS,IAAKk+B,EAC9ByC,EACIzC,EAAM,GAAM,GACZuC,EAASH,GAAUtgC,EAAS,GAC5B0gC,EAAS,IAGTD,EAAS,EACTC,EAASH,IAAWvgC,EAAS,GAAK,IAIlCk+B,EAAM,GAAM,GACZuC,EAAS,EACTC,EAASH,GAAUvgC,EAAS,KAG5BygC,EAASH,IAAWtgC,EAAS,GAAK,GAClC0gC,EAAS,GAGjB//B,EAAOu9B,GAAO,IAAI58B,EAAMX,EAAOu9B,EAAM,GAAGn9B,EAAI0/B,EAAQ9/B,EAAOu9B,EAAM,GAAGl9B,EAAI0/B,GAU5E,OAPAxC,IAEIv9B,EAAOX,EAAS,GADf2gC,GAA2BzC,EAAM,GAAM,IAASyC,GAA2BzC,EAAM,GAAM,EACnE,IAAI58B,EAAMX,EAAOX,EAAS,GAAGe,EAAGJ,EAAOX,EAAS,GAAGgB,GAEnD,IAAIM,EAAMX,EAAOX,EAAS,GAAGe,EAAGJ,EAAOX,EAAS,GAAGgB,GAGrE,CAACL,EAAO,GAAIA,EAAO,GAC9B,EAEAigC,iBAAkB,SAAS19B,EAAOD,EAAK49B,GAQnC,OANmB,OAAfA,IAAwBA,IAAezP,GAASyP,IAAexP,IAGlD3yB,KAAKC,IAAIuE,EAAMnC,EAAIkC,EAAIlC,GAAKrC,KAAKC,IAAIuE,EAAMlC,EAAIiC,EAAIjC,EAIxE,IAKA8/B,GAAc/6B,EAAMC,OAAO,CAC3BC,KAAM,SAAS/H,EAASujB,GACpB,IAAItL,EAAOjU,KACXiU,EAAKjY,QAAUA,EACfiY,EAAKsL,QAAUrjB,EAAW,CAAC,EAAG+X,EAAKsL,QAASA,GAC5CtL,EAAKyP,OAAS,IAAIoH,EAClB7W,EAAKjY,QAAQ6iC,UAAUjgC,KAAKqV,EAChC,EACAue,QAAS,WAET,IAGAsM,GAAwBF,GAAY96B,OAAO,CAC3CC,KAAM,SAASqR,EAAYmK,GACvB,IAAiBvjB,EAAbiY,EAAOjU,KACXiU,EAAKmB,WAAaA,EAClBpZ,EAAUiY,EAAKmB,WAAWpZ,QAC1BiY,EAAK8qB,IAAM/iC,EAAQ04B,YACnBkK,GAAY3sB,GAAGlO,KAAK7G,KAAK+W,EAAMjY,EAASujB,GACxC,IAAIyf,EAAK/qB,EAAKmB,WAAW8nB,cACrB+B,EAAKhrB,EAAKmB,WAAW+nB,cACzBlpB,EAAKirB,SAAW,IAAIzW,EAAOvsB,EAAW+X,EAAKsL,QAAQ4f,QAAS,CAAEr+B,OAAQk+B,KACtE/qB,EAAKmrB,SAAW,IAAI3W,EAAOvsB,EAAW+X,EAAKsL,QAAQ4f,QAAS,CAAEr+B,OAAQm+B,KACtEhrB,EAAKyP,OAAOyG,OAAOlW,EAAKirB,UACxBjrB,EAAKyP,OAAOyG,OAAOlW,EAAKmrB,SAC5B,EAEA7f,QAAS,CACL4f,QAAS,CAAC,GAGd1H,WAAY,WACR,OAAOrJ,EAAQnB,IACnB,EAEAjsB,MAAO,SAASrC,GAKZ,OAJAqB,KAAKm3B,OAASn3B,KAAKo3B,SAASz4B,GAC5BqB,KAAKwlB,WAAa7mB,EAClBqB,KAAKq/B,eAAiBr/B,KAAKoV,WAAWnX,SACtC+B,KAAKs/B,eAAiBt/B,KAAKoV,WAAWnR,SAC9BjE,KAAKm3B,QACT,KAAM,EACEn3B,KAAKoV,WAAW2c,iBAChB/xB,KAAK++B,IAAIzG,wBAAwBt4B,KAAKoV,WAAYpV,KAAKoV,WAAW2c,gBAAgB3e,OAEtF,MACJ,KAAK,EACGpT,KAAKoV,WAAWujB,iBAChB34B,KAAK++B,IAAIzG,wBAAwBt4B,KAAKoV,WAAYpV,KAAKoV,WAAWujB,gBAAgBvlB,OAIlG,EAEA6Z,KAAM,SAASkK,EAAQx4B,GACnB,OAAQw4B,GACJ,KAAM,EACFn3B,KAAKoV,WAAWnX,OAAOU,GACvB,MACJ,KAAK,EACDqB,KAAKoV,WAAWnR,OAAOtF,GACvB,MACJ,QACI,IAAI4M,EAAQ5M,EAAE8I,MAAMzH,KAAKwlB,YACzBxlB,KAAKwlB,WAAa7mB,EACbqB,KAAKoV,WAAWujB,iBACjB34B,KAAKoV,WAAWnX,OAAO+B,KAAKoV,WAAW8nB,cAAc11B,KAAK+D,IAEzDvL,KAAKoV,WAAW2c,iBACjB/xB,KAAKoV,WAAWnR,OAAOjE,KAAKoV,WAAW+nB,cAAc31B,KAAK+D,IAKtE,OADAvL,KAAKwyB,WACE,CACX,EAEA1sB,KAAM,SAASnH,GACX,IAA0DsF,EAAtDs7B,EAAKv/B,KAAKhE,QAAQ04B,YAAa30B,EAAOw/B,EAAGjJ,YAiB7C,OAfIryB,EADAs7B,EAAG/I,kBACM+I,EAAG/I,kBAAkB2B,GACvBp4B,GAAQA,aAAgB/D,EAAQ48B,MAC9B74B,EAAK84B,aAAa7J,IAASjvB,EAAK84B,aAAal6B,GAE7CA,GAGQ,IAAjBqB,KAAKm3B,OACLn3B,KAAKoV,WAAWnX,OAAOgG,GACA,IAAhBjE,KAAKm3B,QACZn3B,KAAKoV,WAAWnR,OAAOA,GAG3BjE,KAAKm3B,OAAS3V,EACdxhB,KAAK++B,IAAIzG,0BACF,IAAI3G,EAAuB3xB,KAAKoV,WAAYpV,KAAKq/B,eAAgBr/B,KAAKs/B,eACjF,EAEAlI,SAAU,SAAS5tB,GACf,IAAI0zB,EAAcl9B,KAAKoV,WAAW8nB,cAC9BC,EAAcn9B,KAAKoV,WAAW+nB,cAC9BqC,EAAUx/B,KAAKuf,QAAQ4f,QAAQn2B,MAAQ,EAAI+lB,EAC3C0Q,EAAUz/B,KAAKuf,QAAQ4f,QAAQp2B,OAAS,EAAIgmB,EAC5C2Q,EAAsBxC,EAAYyC,WAAWn2B,GAC7Co2B,EAAsBzC,EAAYwC,WAAWn2B,GAC7Cq2B,EAAe,IAAIl3B,EAAKu0B,EAAYr+B,EAAGq+B,EAAYp+B,GAAG8J,QAAQ42B,EAASC,GAASz9B,SAASwH,GACzFs2B,EAAe,IAAIn3B,EAAKw0B,EAAYt+B,EAAGs+B,EAAYr+B,GAAG8J,QAAQ42B,EAASC,GAASz9B,SAASwH,GACzF2tB,EAAS,EAQb,OANI0I,KAAkBC,GAAgBJ,EAAsBE,GACxDzI,GAAU,EACH2I,KAAkBD,GAAgBD,EAAsBF,KAC/DvI,EAAS,GAGNA,CACX,EAEA3E,QAAS,WACLxyB,KAAKk/B,SAASla,OAAO,CAAElkB,OAAQd,KAAKhE,QAAQ+jC,aAAa//B,KAAKoV,WAAW8nB,iBACzEl9B,KAAKo/B,SAASpa,OAAO,CAAElkB,OAAQd,KAAKhE,QAAQ+jC,aAAa//B,KAAKoV,WAAW+nB,gBAC7E,IAGA6C,GAAoBpB,GAAY96B,OAAO,CACvCC,KAAM,SAAS/H,EAASujB,GACpB,IAAItL,EAAOjU,KACX4+B,GAAY3sB,GAAGlO,KAAK7G,KAAK+W,EAAMjY,EAASujB,GACxCtL,EAAKgsB,gBAAkB,SAAS5xB,GACxBA,EAAEtO,MAAQkU,EAAKb,OACfa,EAAKue,SAEb,CACJ,EAEAvM,KAAM,SAAS7S,GACX,IAAiBhL,EAAK7J,EAAG2hC,EAArBjsB,EAAOjU,KAOX,IANAiU,EAAKunB,UAAW,EAChBvnB,EAAKb,MAAQA,EACba,EAAKjY,QAAQ83B,KAAKtE,EAAkBvb,EAAKgsB,iBACzC73B,EAAMgL,EAAM6oB,WAAWn+B,OACvBmW,EAAKgoB,WAAa,GAClBhoB,EAAKksB,eACA5hC,EAAI,EAAGA,EAAI6J,EAAK7J,IACjB2hC,EAAM,IAAIE,GAAgBhtB,EAAM6oB,WAAW19B,IAC3C0V,EAAKgoB,WAAWr9B,KAAKshC,GACrBjsB,EAAKyP,OAAOyG,OAAO+V,EAAIxc,QAE3BzP,EAAKyP,OAAOoB,SAAQ,GACpB7Q,EAAKue,SACT,EAEA2N,aAAc,WACV,IAAIlsB,EAAOjU,KACPiU,EAAKjY,QAAQy8B,mBACbxkB,EAAKosB,yBAELpsB,EAAKyP,OAAOzgB,OAEpB,EAEAo9B,uBAAwB,WAKpB,IAJA,IAAIpsB,EAAOjU,KACPsgC,EAAiBrsB,EAAKyP,OAAOrP,SAC7BksB,EAAgBD,EAAexiC,OAC/B4E,EAAQT,EAAQgS,EAAKjY,QAAQy8B,mBAAoB6H,GAC5C/hC,EAAIgiC,EAAgB,EAAGhiC,GAAK,EAAGA,IAChCA,GAAKmE,GAGTuR,EAAKyP,OAAO/hB,OAAO2+B,EAAe/hC,GAE1C,EAEAsvB,QAAS,WACL,IAAI5Z,EAAOjU,KACXiU,EAAKjY,QAAQwkC,OAAOhR,EAAkBvb,EAAKgsB,iBAC3ChsB,EAAKb,MAAQoO,EACbvN,EAAKunB,SAAWha,EAChBvN,EAAKyP,OAAOoB,SAAQ,EACxB,EAEAsS,SAAU,SAASz4B,GACf,IAAIuhC,EAAK3hC,EACT,IAAKA,EAAI,EAAGA,EAAIyB,KAAKi8B,WAAWn+B,OAAQS,IAEpC,IADA2hC,EAAMlgC,KAAKi8B,WAAW19B,IACd64B,SAASz4B,GAAI,CACjBuhC,EAAI/a,QAAO,GACXnlB,KAAKhE,QAAQ04B,YAAY8B,kBAAoB0J,EAC7C,KACJ,CAER,EAEA1N,QAAS,WACL,GAAIxyB,KAAKoT,MAAO,CACZ,IAAIM,EAAS1T,KAAKoT,MAAMM,SACpBA,EAAS1T,KAAKhE,QAAQ+jC,aAAarsB,GACvC1T,KAAK0jB,OAAO3gB,SAAS2Q,EAAOxJ,WAC5BrO,EAAE4kC,KAAKzgC,KAAKi8B,YAAY,WACpBj8B,KAAKwyB,SACT,GACJ,CACJ,IA2BJ,IAAIkO,GAAkB9B,GAAY96B,OAAO,CACrCC,KAAM,SAAS/H,EAASujB,GACpB,IAAItL,EAAOjU,KACX4+B,GAAY3sB,GAAGlO,KAAK7G,KAAK+W,EAAMjY,EAASujB,GACxCtL,EAAK0sB,eAAgB,EACrB1sB,EAAK9M,IAAM,GACX8M,EAAKie,OAAS,GAEdje,EAAK2sB,iBACL3sB,EAAK4sB,iBACL5sB,EAAK+Q,SACL/Q,EAAKjY,QAAQ83B,KAAK,UAAU,SAASzlB,GACjC4F,EAAKsf,YAAYllB,EAAEyyB,SACvB,IAEA7sB,EAAKgsB,gBAAkB,WACdhsB,EAAK8sB,kBACN9sB,EAAKse,gBACLte,EAAKue,UAEb,EAEAve,EAAK+sB,gBAAkB,WACO,GAAtB/sB,EAAKie,OAAOp0B,SACZmW,EAAKof,OAASpf,EAAKie,OAAO,GAAGnnB,SAASN,OAE1CwJ,EAAKgsB,iBACT,EAEAhsB,EAAKjY,QAAQ83B,KAAKtE,EAAkBvb,EAAKgsB,iBAAiBnM,KAlqDjD,aAkqDkE7f,EAAK+sB,iBAChF/sB,EAAKse,gBACLte,EAAKue,SACT,EAEAjT,QAAS,CACL4f,QAAS,CACLhgB,KAAM,CACFY,MAAO,QAEX6F,OAAQ,CACJ7F,MAAO,WAEXhX,OAAQ,EACRC,MAAO,EACPkd,MAAO,CACH/G,KAAM,CACFY,MAAO,WAEX6F,OAAQ,CACJ7F,MAAO,aAInB4X,WAAY,CACR/R,OAAQ,CACJ7F,MAAO,UACP/W,MAAO,EACPod,SAAU,QAEdjH,KAAM,CACFY,MAAO6B,IAGfla,OAAQ,IAGZk5B,eAAgB,WACZ,IAAI3sB,EAAOjU,KAEP23B,EADU1jB,EAAKjY,QACMujB,QAAQoY,WAC7BpY,EAAUrjB,EAAW,CAAC,EAAG+X,EAAKsL,QAAQoY,WAAYA,GACtD1jB,EAAK1J,KAAO,IAAIid,EAAUjI,GAC1BtL,EAAKyP,OAAOyG,OAAOlW,EAAK1J,KAC5B,EAEA02B,WAAY,WACR,OAAOjhC,KAAKuf,QAAQ2hB,WAA6C,IAAjClhC,KAAKuf,QAAQ2hB,SAASC,MAC1D,EAEAC,eAAgB,WACZ,OAAQphC,KAAKuf,QAAQ2hB,SAASC,QAAU,CAAC,GAAGhC,SAAWn/B,KAAKuf,QAAQ4f,OACxE,EAEA0B,eAAgB,WACZ,IAAI1B,EAASp/B,EAAMjB,EAAGD,EAEtB,GAAImB,KAAKihC,aAEL,IADA9B,EAAUn/B,KAAKohC,iBACVviC,GAAK,EAAGA,GAAK,EAAGA,IACjB,IAAKC,GAAK,EAAGA,GAAK,EAAGA,IACN,IAAND,GAAmB,IAANC,KACdiB,EAAO,IAAIynB,EAAU2X,IAChBla,eAAeE,OAASnlB,KAAKmlB,OAAO2O,KAAK9zB,MAC9CA,KAAKmH,IAAIvI,KAAK,CAAEC,EAAGA,EAAGC,EAAGA,EAAG4kB,OAAQ3jB,IACpCC,KAAK0jB,OAAOyG,OAAOpqB,GAKvC,EAEA2T,OAAQ,SAASrV,GACb,IAAIA,EAIA,OAAO2B,KAAKqhC,QAHZrhC,KAAKszB,aAAej1B,EAAMkJ,QAC1BvH,KAAKqhC,QAAUrhC,KAAKhE,QAAQ+jC,aAAa1hC,GAAOuK,QAAQ5I,KAAKuf,QAAQ7X,OAAQ1H,KAAKuf,QAAQ7X,OAIlG,EAEA0vB,SAAU,SAASz4B,GACf,IACIJ,EAAGg9B,EAAK+F,EAA8CnK,EADtD8H,EAAKj/B,KAAKhE,QAAQ+jC,aAAaphC,GACT4iC,EAAevhC,KAAKmH,IAAIrJ,OAMlD,GAJIkC,KAAKqzB,SACL4L,EAAKA,EAAG13B,QAAQwD,OAAO/K,KAAKqzB,OAAQrzB,KAAKqhC,QAAQvgC,WAGjDd,KAAKihC,aACL,IAAK1iC,EAAI,EAAGA,EAAIgjC,EAAchjC,IAK1B,GAJA44B,EAASn3B,KAAKmH,IAAI5I,GAClBg9B,EAAM,IAAIn8B,EAAM+3B,EAAOt4B,EAAGs4B,EAAOr4B,IACjCwiC,EAAethC,KAAKwhC,iBAAiBjG,IACxB7zB,OAAO1H,KAAKqhC,QAAQxiC,EAAGmB,KAAKqhC,QAAQviC,GAC7CwiC,EAAat/B,SAASi9B,GACtB,OAAO1D,EAKnB,GAAIv7B,KAAKqhC,QAAQr/B,SAASi9B,GACtB,OAAO,IAAI7/B,EAAM,EAAG,EAE5B,EAEAoiC,iBAAkB,SAAS7iC,GACvB,GAAIqB,KAAKihC,aAAc,CACnB,IAAI9B,EAAUn/B,KAAKohC,iBACfprB,EAAImpB,EAAQn2B,MACZhE,EAAIm6B,EAAQp2B,OACZY,EAAI,IAAIhB,EAAK,EAAG,EAAGqN,EAAGhR,GAgB1B,OAdIrG,EAAEE,EAAI,EACN8K,EAAE9K,GAAMmX,EAAI,EACG,IAARrX,EAAEE,EACT8K,EAAE9K,EAAIrC,KAAKiD,MAAMO,KAAKqhC,QAAQr4B,MAAQ,GAAKgN,EAAI,EACxCrX,EAAEE,EAAI,IACb8K,EAAE9K,EAAImB,KAAKqhC,QAAQr4B,MAAQ,EAAMgN,EAAI,GACnCrX,EAAEG,EAAI,EACR6K,EAAE7K,GAAMkG,EAAI,EACG,IAARrG,EAAEG,EACT6K,EAAE7K,EAAItC,KAAKiD,MAAMO,KAAKqhC,QAAQt4B,OAAS,GAAK/D,EAAI,EACzCrG,EAAEG,EAAI,IACb6K,EAAE7K,EAAIkB,KAAKqhC,QAAQt4B,OAAS,EAAM/D,EAAI,GAGnC2E,CACX,CACJ,EAEA8tB,WAAY,SAASjuB,GACjB,IAAI+xB,EAAMv7B,KAAKo3B,SAAS5tB,GACxB,GAAI+xB,GAAQA,EAAI18B,IAAM,GAAO08B,EAAI18B,GAAK,GAAO08B,EAAIz8B,IAAM,GAAOy8B,EAAIz8B,GAAK,GAAMkB,KAAKihC,aAAc,CAC5F,IAAIx2B,EAAQzK,KAAKqzB,OAMjB,GALI5oB,IACA8wB,EAAIxwB,OAAON,EAAO,IAAIrL,EAAM,EAAG,IAC/Bm8B,EAAM,IAAIn8B,EAAM5C,KAAKkT,MAAM6rB,EAAI18B,GAAIrC,KAAKkT,MAAM6rB,EAAIz8B,MAGxC,GAAVy8B,EAAI18B,IAAqB,GAAV08B,EAAIz8B,EACnB,MAAO,YAEX,GAAa,GAATy8B,EAAI18B,GAAmB,GAAT08B,EAAIz8B,EAClB,MAAO,YAEX,IAAc,GAAVy8B,EAAI18B,GAAoB,GAAT08B,EAAIz8B,EACnB,MAAO,YAEX,GAAa,GAATy8B,EAAI18B,IAAoB,GAAV08B,EAAIz8B,EAClB,MAAO,YAEX,GAAc,IAAVy8B,EAAI18B,IAAqB,GAAV08B,EAAIz8B,EACnB,MAAO,WAEX,GAAc,IAAVy8B,EAAI18B,GAAoB,GAAT08B,EAAIz8B,EACnB,MAAO,WAEX,GAAa,GAATy8B,EAAI18B,GAAoB,IAAV08B,EAAIz8B,EAClB,MAAO,WAEX,IAAc,GAAVy8B,EAAI18B,GAAqB,IAAV08B,EAAIz8B,EACnB,MAAO,UAEf,CACA,OAAOkB,KAAK2gC,cAAgBvS,EAAQnB,KAAOmB,EAAQI,MACvD,EAEA+E,YAAa,WACT,IAAiBh1B,EAAGwB,EAAhBkU,EAAOjU,KACPyzB,EAAQxf,EAAKjY,QAAQwyB,SAGzB,IADAva,EAAKie,OAAS,GACT3zB,EAAI,EAAGA,EAAIk1B,EAAM31B,OAAQS,KAC1BwB,EAAO0zB,EAAMl1B,cACOvC,EAAQ48B,QACxB3kB,EAAKie,OAAOtzB,KAAKmB,GACjBA,EAAK0hC,gBAAkB,IAAIriC,GAInC6U,EAAKof,OAA+B,GAAtBpf,EAAKie,OAAOp0B,OAAcmW,EAAKie,OAAO,GAAGnnB,SAASN,MAAQ,EACxEwJ,EAAKytB,YAAcztB,EAAKof,OACxBpf,EAAK0tB,WACL1tB,EAAK2tB,aACL3tB,EAAKse,gBACLte,EAAKue,UACLve,EAAK+Q,QACT,EAEA2c,SAAU,WACN,IAAiBpjC,EAAG6U,EAAhBa,EAAOjU,KAEX,IADAiU,EAAK4tB,eAAiB,GACjBtjC,EAAI,EAAGA,EAAI0V,EAAKie,OAAOp0B,OAAQS,IAChC6U,EAAQa,EAAKie,OAAO3zB,GACpB0V,EAAK4tB,eAAejjC,KAAKwU,EAAMrI,SAASN,MAEhD,EAEAm3B,WAAY,WACR,IAAiBrjC,EAAG6U,EAAhBa,EAAOjU,KAEX,IADAiU,EAAK6tB,cAAgB,GAChBvjC,EAAI,EAAGA,EAAI0V,EAAKie,OAAOp0B,OAAQS,IAChC6U,EAAQa,EAAKie,OAAO3zB,GACpB0V,EAAK6tB,cAAcljC,KAAKwU,EAAMM,SAEtC,EAEAyR,OAAQ,SAAS9mB,EAAOyE,GACpB,GAAI9C,KAAKihC,aAAc,CACnB,IAAIc,EAAgB/hC,KAAKohC,iBACrBlb,EAAQ6b,EAAc7b,MACtBN,EAASmc,EAAcnc,OACvBzG,EAAO4iB,EAAc5iB,KAErB9gB,GAAShC,EAAMK,UAAUwpB,EAAMN,UAC/BA,EAAS1pB,EAAW,CAAC,EAAG0pB,EAAQM,EAAMN,SAGtCvnB,GAAShC,EAAMK,UAAUwpB,EAAM/G,QAC/BA,EAAO+G,EAAM/G,MAEjBrc,EAAQ8iB,OAAOA,EAAO7F,MAAO6F,EAAO5c,MAAO4c,EAAOC,SAClD/iB,EAAQqc,KAAKA,EAAKY,MAAOZ,EAAK0G,QAClC,CACJ,EAEA7kB,MAAO,SAASrC,GACZqB,KAAKgiC,IAAMrjC,EACXqB,KAAKiiC,IAAMtjC,EACXqB,KAAKkiC,IAAMvjC,EACXqB,KAAK2gC,eAAgB,EACrB3gC,KAAK+gC,iBAAkB,EACvB/gC,KAAKmiC,YAAc,GACnB,IAAK,IAAI5jC,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,IAAK,CACzC,IAAI6U,EAAQpT,KAAKkyB,OAAO3zB,GACxByB,KAAKmiC,YAAYvjC,KAAKwU,EAAMM,SAChC,CACJ,EAEAsR,OAAQ,WACJ,IAAIzmB,EACA6jC,EAAiBpiC,KAAKihC,aAE1B,IAAK1iC,EAAI,EAAGA,EAAIyB,KAAKmH,IAAIrJ,OAAQS,IACpByB,KAAKmH,IAAI5I,GACXmlB,OAAOoB,QAAQsd,EAE9B,EAEA33B,MAAO,SAASpM,GAKZ,OAJIqjB,EAAQrjB,KACR2B,KAAKqzB,OAASh1B,GAGX2B,KAAKqzB,MAChB,EAEAtoB,OAAQ,WACJ,IAAIjK,EAASd,KAAKszB,aAAaxyB,SAC3BuhC,EAAeriC,KAAKyK,QACxBzK,KAAK+gC,iBAAkB,EACvB,IAAK,IAAIxiC,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,IAAK,CACzC,IAAI6U,EAAQpT,KAAKkyB,OAAO3zB,GACxB8jC,GAAgBA,EAAeriC,KAAK6hC,eAAetjC,GAAKyB,KAAK0hC,aAAe,IAC5EtuB,EAAMrI,OAAOs3B,EAAcvhC,EAC/B,CACAd,KAAKwyB,SACT,EAEAvF,KAAM,SAASkK,EAAQx4B,GACnB,IAAI4M,EAAO+2B,EAGP5uB,EAAQ5S,EAAQsS,EAChB7U,EAAGkM,EAAO83B,EACGC,EACbt3B,EAAQC,EALRs3B,EAAM,IAAIrjC,EACVsjC,EAAM,IAAItjC,EAGVujC,EAAU,EAGd,IAAkB,IAAdxL,EAAOr4B,IAA0B,IAAdq4B,EAAOt4B,EAAU,CAGpC,IAFAiC,EAASd,KAAKszB,aAAaxyB,SAC3Bd,KAAKqzB,OAASrzB,KAAK4iC,eAAevmC,EAAMwE,UAAUC,EAAQnC,IACrDJ,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,IAChC6U,EAAQpT,KAAKkyB,OAAO3zB,GACpBkM,GAASzK,KAAKqzB,OAASrzB,KAAK6hC,eAAetjC,GAAKyB,KAAK0hC,aAAe,IACpEtuB,EAAMrI,OAAON,EAAO3J,GAChBsS,EAAMnW,eAAe,WACrBmW,EAAMkf,OAAOlf,GAEjBpT,KAAK6iC,WAAY,EAErB7iC,KAAKwyB,SACT,KAAO,CACH,GAAIxyB,KAAK8iC,aAAc,CACnB,IAAIC,EAAM/iC,KAAKgjC,kBAAkBrkC,EAAE8I,MAAMzH,KAAKkiC,MAE9C,GAAc,IAAVa,EAAIlkC,GAAqB,IAAVkkC,EAAIjkC,EAEnB,YADAkB,KAAKiiC,IAAMtjC,GAGf4M,EAAQw3B,EACR/iC,KAAKkiC,IAAM,IAAI9iC,EAAMY,KAAKkiC,IAAIrjC,EAAIkkC,EAAIlkC,EAAGmB,KAAKkiC,IAAIpjC,EAAIikC,EAAIjkC,EAC9D,MACIyM,EAAQ5M,EAAE8I,MAAMzH,KAAKiiC,KA4BzB,IAzBIjiC,KAAKs3B,aAAaH,IAClBuL,EAAMD,EAAMl3B,EACZ+2B,GAAW,IAEPtiC,KAAKqzB,QACL9nB,EAAMR,OAAO/K,KAAKqzB,OAAQ,IAAIj0B,EAAM,EAAG,KAE1B,GAAb+3B,EAAOt4B,EACP4jC,EAAI5jC,EAAI0M,EAAM1M,EACK,GAAZs4B,EAAOt4B,IACd6jC,EAAI7jC,EAAI0M,EAAM1M,IAED,GAAbs4B,EAAOr4B,EACP2jC,EAAI3jC,EAAIyM,EAAMzM,EACK,GAAZq4B,EAAOr4B,IACd4jC,EAAI5jC,EAAIyM,EAAMzM,IAIjBwjC,IACDE,EA3XhB,SAA2BjH,EAAK7nB,GAC5B,IAAIjR,EAoBJ,OAlBc,GAAV84B,EAAI18B,IAAqB,GAAV08B,EAAIz8B,EACnB2D,EAASiR,EAAOrJ,cACA,GAATkxB,EAAI18B,GAAmB,GAAT08B,EAAIz8B,EACzB2D,EAASiR,EAAOxJ,WACC,GAAVqxB,EAAI18B,GAAoB,GAAT08B,EAAIz8B,EAC1B2D,EAASiR,EAAOvJ,WACA,GAAToxB,EAAI18B,IAAoB,GAAV08B,EAAIz8B,EACzB2D,EAASiR,EAAOtJ,aACC,IAAVmxB,EAAI18B,IAAqB,GAAV08B,EAAIz8B,EAC1B2D,EAASiR,EAAOzJ,SACC,IAAVsxB,EAAI18B,GAAoB,GAAT08B,EAAIz8B,EAC1B2D,EAASiR,EAAO1J,MACA,GAATuxB,EAAI18B,GAAoB,IAAV08B,EAAIz8B,EACzB2D,EAASiR,EAAOpK,QACC,GAAViyB,EAAI18B,GAAqB,IAAV08B,EAAIz8B,IAC1B2D,EAASiR,EAAOnK,SAGb9G,CACX,CAqW8BwgC,CAAkB9L,EAAQn3B,KAAKszB,cAC7CpoB,GAAUlL,KAAKszB,aAAatqB,MAAQuC,EAAM1M,EAAIs4B,EAAOt4B,GAAKmB,KAAKszB,aAAatqB,MAC5EmC,GAAUnL,KAAKszB,aAAavqB,OAASwC,EAAMzM,EAAIq4B,EAAOr4B,GAAKkB,KAAKszB,aAAavqB,QAG5ExK,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,IAAK,CAGrC,GADAmV,GADAN,EAAQpT,KAAKkyB,OAAO3zB,IACLmV,SACX4uB,EAAU,CACV,IAAKlK,GAAQhlB,GACT,SAEJmvB,EAAYviC,KAAKkjC,gBAAgBxvB,EAAQ+uB,EAAKC,EAAKJ,EACvD,KAAO,EACHC,EAAY7uB,EAAOnM,SACT0D,MAAMC,EAAQC,EAAQq3B,EAAaxiC,KAAKszB,aAAaxyB,SAAUsS,EAAMrI,SAASN,OACxF,IAAI04B,EAAYZ,EAAUzhC,SAC1BqiC,EAAUp4B,QAAQ/K,KAAKqzB,OAAQ3f,EAAO5S,UACtCyhC,EAAY,IAAI55B,EAAKw6B,EAAUtkC,EAAI0jC,EAAUv5B,MAAQ,EAAGm6B,EAAUrkC,EAAIyjC,EAAUx5B,OAAS,EAAGw5B,EAAUv5B,MAAOu5B,EAAUx5B,OAC3H,CACA,GAAIw5B,EAAUv5B,OAASoK,EAAMmM,QAAQ6jB,UAAYb,EAAUx5B,QAAUqK,EAAMmM,QAAQ8jB,UAAW,CAC1F,IAAIC,EAAY5vB,EAChBN,EAAMM,OAAO6uB,GACTnvB,EAAMnW,eAAe,WACrBmW,EAAMkf,OAAOlf,EAAOkwB,EAAWf,GAE/Be,EAAUt6B,QAAUu5B,EAAUv5B,OAASs6B,EAAUv6B,SAAWw5B,EAAUx5B,QACtEqK,EAAMrI,OAAOqI,EAAMrI,SAASN,OAEhCk4B,GAAW,CACf,CACJ,CAEIA,IACIA,GAAWpkC,GACXgkC,EAAYviC,KAAKkjC,gBAAgBljC,KAAKszB,aAAcmP,EAAKC,EAAKJ,GAC9DtiC,KAAK0T,OAAO6uB,IAEZviC,KAAKuyB,gBAETvyB,KAAKwyB,WAGTxyB,KAAK4hC,YACT,CAEA5hC,KAAKiiC,IAAMtjC,CACf,EAEA24B,aAAc,SAASH,GACnB,OAAoB,IAAbA,EAAOt4B,GAAwB,IAAbs4B,EAAOr4B,CACpC,EAEAq1B,OAAQ,WAGJ,IAFA,IAAIjC,EAASlyB,KAAKkyB,OACdqR,EAASvjC,KAAKmiC,YACTnG,EAAM,EAAGA,EAAM9J,EAAOp0B,OAAQk+B,IACnC9J,EAAO8J,GAAKtoB,OAAO6vB,EAAOvH,IAE9Bh8B,KAAKuyB,gBACLvyB,KAAKwyB,UACLxyB,KAAK2gC,cAAgBnf,EACrBxhB,KAAK+gC,gBAAkBvf,EACvBxhB,KAAK6iC,UAAYrhB,CACrB,EAEAgiB,0BAA2B,SAAS9vB,GAChC,OAAI1T,KAAKhE,QAAQynC,MACNzjC,KAAKhE,QAAQynC,MAAMC,yBAAyBhwB,GAEhDA,CACX,EAEAiwB,sBAAuB,SAASjwB,GAC5B,OAAI1T,KAAKhE,QAAQynC,MACNzjC,KAAKhE,QAAQynC,MAAMG,qBAAqBlwB,GAE5CA,CACX,EAEAkvB,eAAgB,SAASniC,GACrB,IAAIojC,EAAO7jC,KAAK8jC,cACZC,EAAYvnC,KAAKgJ,IAAIq+B,EAAKp5B,OA9jEb,GAOJ,GAwjEb,OAAOo5B,EAAOrnC,KAAKiD,MAAOgB,EAAI,IAAOsjC,GAAaA,EAAatjC,EAAI,GACvE,EAEAuiC,kBAAmB,SAAS7iC,GACxB,GAAIA,aAAanE,EAAQoD,MACrB,OAAO,IAAIpD,EAAQoD,MAAMY,KAAKgjC,kBAAkB7iC,EAAEtB,GAAImB,KAAKgjC,kBAAkB7iC,EAAErB,IAE/E,IAAI+kC,EAAO7jC,KAAK8jC,eAAiB,CAAC,EAC9BE,EAAWxnC,KAAKgJ,IAAIq+B,EAAKzlC,MAxkEjB,GAOJ,GAkkER,OAAOylC,EAAOrnC,KAAKiD,MAAMU,EAAI6jC,GAAYA,EAAW7jC,CAE5D,EAEA2jC,YAAa,WAGT,QAFe9jC,KAAKhE,QAAQujB,QAAQ2hB,UACX,CAAC,GAAG+C,MAAQ,CAAC,GAAGJ,MAAQ,CAAC,CAEtD,EAEAf,WAAY,WACR,IAAI5B,EAAWlhC,KAAKhE,QAAQujB,QAAQ2hB,SAChC+C,GAAQ/C,GAAY,CAAC,GAAG+C,KACxBJ,GAAQI,GAAQ,CAAC,GAAGJ,KACxB,OAAoB,IAAb3C,IAA+B,IAAT+C,IAA2B,IAATJ,CACnD,EAEAX,gBAAiB,SAASxvB,EAAQ+uB,EAAKC,EAAKJ,GACxC,IAGIa,EAHAx4B,EAAK+I,EAAOxJ,UAAU1C,KAAKi7B,GAC3B53B,EAAK6I,EAAOrJ,cAAc7C,KAAKk7B,GAC/BH,EAAY55B,EAAK4D,WAAW5B,EAAIE,GAOpC,OALKy3B,KACDa,EAAYZ,EAAUzhC,UACZiK,OAAO2I,EAAO5S,UAAWd,KAAKqzB,QACxCkP,EAAY,IAAI55B,EAAKw6B,EAAUtkC,EAAI0jC,EAAUv5B,MAAQ,EAAGm6B,EAAUrkC,EAAIyjC,EAAUx5B,OAAS,EAAGw5B,EAAUv5B,MAAOu5B,EAAUx5B,SAEpHw5B,CACX,EAEAz8B,KAAM,WACF,IAAI+I,EAAMtQ,EAAG6U,EACb,GAAIpT,KAAKiiC,KAAOjiC,KAAKgiC,IACjB,GAAIhiC,KAAK6iC,UACLh0B,EAAO,IAAIokB,EAAWjzB,KAAMA,KAAKkyB,OAAQlyB,KAAK6hC,gBAC9C7hC,KAAK6iC,WAAY,OACd,GAAI7iC,KAAKkkC,cAAe,CAC3B,GAAIlkC,KAAKhE,QAAQynC,MACb,IAAKllC,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,IAAK,CAErC,IAAImV,GADJN,EAAQpT,KAAKkyB,OAAO3zB,IACDmV,SACnBA,EAAS1T,KAAK2jC,sBAAsB3jC,KAAKwjC,0BAA0B9vB,IACnEN,EAAMM,OAAOA,GACb1T,KAAKuyB,gBACLvyB,KAAKwyB,SACT,CAEJ,IAAKj0B,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,KAChC6U,EAAQpT,KAAKkyB,OAAO3zB,IACdmzB,cAEV7iB,EAAO,IAAIojB,EAAcjyB,KAAKkyB,OAAQlyB,KAAKmiC,YAAaniC,MACxDA,KAAKhE,QAAQmoC,mBACjB,CAMJ,OAHAnkC,KAAK2gC,cAAgBnf,EACrBxhB,KAAK+gC,gBAAkBvf,EACvBxhB,KAAK6iC,UAAYrhB,EACV3S,CACX,EAEAq1B,YAAa,WAGT,IAFA,IAAIhS,EAASlyB,KAAKkyB,OACdqR,EAASvjC,KAAKmiC,YACTnG,EAAM,EAAGA,EAAM9J,EAAOp0B,OAAQk+B,IACnC,IAAK9J,EAAO8J,GAAKtoB,SAASpJ,OAAOi5B,EAAOvH,IACpC,OAAO,EAGf,OAAO,CACX,EAEAzJ,cAAe,WACX,IAAI7e,EAA+B,GAAtB1T,KAAKkyB,OAAOp0B,OACrBkC,KAAKkyB,OAAO,GAAGxe,SAASnM,QACxBvH,KAAKhE,QAAQuwB,YAAYvsB,KAAKkyB,QAAQ,GAE1ClyB,KAAK0T,OAAOA,EAChB,EAEA8e,QAAS,WACL,IAAiBnyB,EAAGqT,EAAhBO,EAAOjU,KACX,GAAIA,KAAKkyB,OAAOp0B,OAAS,EAAG,CACxB4V,EAAS1T,KAAK0T,SACd1T,KAAK0jB,OAAOoB,SAAQ,GACpB9kB,KAAK0jB,OAAO3gB,SAAS2Q,EAAOxJ,WAC5BrO,EAAE4kC,KAAKzgC,KAAKmH,KAAK,WACb9G,EAAI4T,EAAKutB,iBAAiB,IAAIpiC,EAAMY,KAAKnB,EAAGmB,KAAKlB,IACjDkB,KAAK0jB,OAAO3gB,SAAS1C,EAAE6J,UAC3B,IACAlK,KAAK0jB,OAAO3gB,SAAS2Q,EAAOxJ,WAE5B,IAAIpJ,EAAS,IAAI1B,EAAMsU,EAAO1K,MAAQ,EAAG0K,EAAO3K,OAAS,GAGzD,GAFA/I,KAAK0jB,OAAO3Y,OAAO/K,KAAKqzB,OAAQvyB,GAChCd,KAAKuK,KAAKya,OAAO,CAAEhc,MAAO0K,EAAO1K,MAAOD,OAAQ2K,EAAO3K,SACnD/I,KAAKokC,cAAe,CACpB,IAAIC,EAAQrkC,KAAKuf,QAAQ2hB,SAASn2B,OAAOs5B,MACzCrkC,KAAKskC,qBAAuB,IAAI37B,EAAK+K,EAAO5S,SAASjC,EAAG6U,EAAO5U,EAAIulC,EAAMvlC,EAAG,EAAG,GAAG8J,QAAQy7B,EAAMr7B,OAChGhJ,KAAKokC,cAAcpf,OAAO,CAAEnmB,EAAG6U,EAAO1K,MAAQ,EAAIq7B,EAAMr7B,MAAQ,GACpE,CACJ,MACIhJ,KAAK0jB,OAAOoB,SAAQ,EAE5B,IAGAyf,GAAW1gC,EAAMC,OAAO,CACxBC,KAAM,SAAS/H,GACX,IAAI27B,EAAa37B,EAAQujB,QAAQoY,WACjC33B,KAAKuf,QAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAASoY,GAE5C33B,KAAK0jB,OAAS,IAAI8D,EAAUxnB,KAAKuf,SACjCvf,KAAKhE,QAAUA,CACnB,EACAujB,QAAS,CACLqG,OAAQ,CACJ7F,MAAO,UACP/W,MAAO,EACPod,SAAU,QAEdjH,KAAM,CACFY,MAAO6B,IAGf5gB,MAAO,SAASrC,GACZqB,KAAKgiC,IAAMhiC,KAAKwkC,IAAM7lC,EACtBqB,KAAKwyB,UACLxyB,KAAKhE,QAAQyoC,OAAOzkC,MAAM,EAC9B,EACAe,IAAK,WACDf,KAAKgiC,IAAMhiC,KAAKwkC,IAAMhjB,EACtBxhB,KAAKhE,QAAQyoC,OAAOzkC,MAAM,EAC9B,EACA0T,OAAQ,SAASrV,GAIb,OAHIA,IACA2B,KAAKqhC,QAAUhjC,GAEZ2B,KAAKqhC,OAChB,EACApU,KAAM,SAAStuB,GACXqB,KAAKwkC,IAAM7lC,EACXqB,KAAKwyB,SACT,EACAA,QAAS,WACL,GAAIxyB,KAAKgiC,IAAK,CACV,IAAI0C,EAAe/7B,EAAK4D,WAAWvM,KAAKhE,QAAQ+jC,aAAa//B,KAAKgiC,KAAMhiC,KAAKhE,QAAQ+jC,aAAa//B,KAAKwkC,MACvGxkC,KAAK0T,OAAO/K,EAAK4D,WAAWvM,KAAKgiC,IAAKhiC,KAAKwkC,MAC3CxkC,KAAK0jB,OAAO3gB,SAAS2hC,EAAax6B,WAClClK,KAAK0jB,OAAOsB,OAAO,CAAEjc,OAAQ27B,EAAa37B,OAAS,EAAGC,MAAO07B,EAAa17B,MAAQ,GACtF,CACJ,IAGAo3B,GAAkBv8B,EAAMC,OAAO,CAC/BC,KAAM,SAASk0B,GACXj4B,KAAKuf,QAAUrjB,EAAW,CAAC,EAAG+7B,EAAU1Y,SACxCvf,KAAKm4B,GAAKF,EACVj4B,KAAK0jB,OAAS,IAAI+E,EAAOzoB,KAAKuf,SAC9Bvf,KAAKwyB,SACT,EACArN,OAAQ,SAAS9mB,GACb,IAAIkhB,EAAUvf,KAAKuf,QACf2G,EAAQ3G,EAAQ2G,MAChBN,EAASrG,EAAQqG,OACjBzG,EAAOI,EAAQJ,KAEf9gB,GAAShC,EAAMK,UAAUwpB,EAAMN,UAC/BA,EAAS1pB,EAAW,CAAC,EAAG0pB,EAAQM,EAAMN,SAGtCvnB,GAAShC,EAAMK,UAAUwpB,EAAM/G,QAC/BA,EAAO+G,EAAM/G,MAGjBnf,KAAK0jB,OAAOsB,OAAO,CACfY,OAAQA,EACRzG,KAAMA,GAEd,EACAqT,QAAS,WACL,IAAI7zB,EAAIqB,KAAKm4B,GAAG/kB,MAAMpX,QAAQ2oC,YAAY3kC,KAAKm4B,GAAGp1B,YAC9C6hC,EAAWjmC,EAAE8I,MAAMzH,KAAKm4B,GAAG/kB,MAAMM,OAAO,eAAexJ,WACvD7L,EAAQ,IAAIsK,EAAKhK,EAAEE,EAAGF,EAAEG,EAAG,EAAG,GAClCT,EAAMuK,QAAQ5I,KAAKuf,QAAQvW,MAAQ,EAAGhJ,KAAKuf,QAAQxW,OAAS,GAC5D/I,KAAK6kC,cAAgBxmC,EACrB2B,KAAK0jB,OAAOsB,OAAO,CAAElkB,OAAQ,IAAI1B,EAAMwlC,EAAS/lC,EAAG+lC,EAAS9lC,IAChE,EACAs4B,SAAU,SAASz4B,GACf,IAAIsgC,EAAKj/B,KAAKm4B,GAAG/kB,MAAMpX,QAAQ2oC,YAAYhmC,GAC3C,OAAOqB,KAAK6kC,cAAc7iC,SAASi9B,EACvC,IAGJ,SAAS7G,GAAQt1B,GACb,IAAIo+B,EAAWp+B,EAAQyc,QAAQ2hB,SAC/B,OAAOA,IAA8B,IAAlBA,EAAS+C,IAChC,CAeA,SAAS5N,GAAOJ,GACZ,OAAwB,IAAjBA,EAAKG,UAAqC,IAAhBH,EAAKgE,SAAsC,IAAlBhE,EAAK6O,QACnE,CAEA5oC,EAAWF,EAAS,CAChB+0B,cAAeA,EACfkB,cAAeA,EACfW,YAAaA,EACbF,aAAcA,EACdD,kBAAmBA,EACnBT,gBAAiBA,EACjBF,qBAAsBA,EACtBgN,sBAAuBA,GACvB9G,eAAgBA,EAChBoI,gBAAiBA,GACjBvM,gBAAiBA,EACjB6M,gBAAiBA,GACjB6D,SAAUA,GACVlL,YAAaA,GACb2G,kBAAmBA,GACnB9P,eAAgBA,EAChBgB,mBAAoBA,EACpBsC,YAAaA,EACbI,WAAYA,EACZwI,qBAAsBA,GACtBK,eAAgBA,GAChBE,gBAAiBA,GACjBjF,cAAeA,EACf7C,aAAcA,EACdoC,YAAaA,EACb+B,mBAAoBA,EACpB/F,WAAYA,GAEvB,CAv2ED,CAu2EGl3B,OAAOD,MAAMkL,QAEhB,SAAUnL,GACN,IAAIC,EAAQC,OAAOD,MACfE,EAAUF,EAAMG,QAAQD,QACxBsa,EAAQta,EAAQsa,MAChBnD,EAAOnX,EAAQmX,KACfgC,EAAOnZ,EAAQmZ,KACfjZ,EAAaJ,EAAMI,WACnB0P,EAAO5P,EAAQ4P,KACfjD,EAAO3M,EAAQ2M,KACfmJ,EAAa9V,EAAQ8V,WACrBiB,EAAM/W,EAAQ+W,IACdgyB,EAAY/oC,EAAQsa,MACpBja,EAAQL,EAAQK,MAChB+C,EAAQpD,EAAQoD,MAChB4lC,EAAU,KACVC,EAAazoC,KAAK8D,GAAK,IACvB0B,EAAW3F,EAAM2F,SACjB+C,EAAOlJ,EAAEkJ,KAMTmgC,EAAappC,EAAM+H,MAAMC,OAAO,CAChCqhC,eAAgB,CACZ3nC,KAAM,OACN4nC,QAAS,OACTC,MAAO,KACPhV,SAAS,EAKThQ,aAAa,EAIb0U,SAAU,GAIVuQ,aAAc,GAIdC,WAAY,IAKZC,qBAAsB,GAItBC,mBAAoB,GAMpBC,4BAA6B,GAI7BC,2BAA4B,GAI5BC,6BAA8B,GAK9BC,KAAM,CAIF78B,MAAO,KAIP88B,QAAS,GAITC,QAAS,GAITC,kBAAmB,GAInBC,kBAAmB,IAOvBC,gBAAiB,GAIjBC,kBAAmB,EAInBC,iBAAkB,EAIlBC,eAAgB,IAIhBC,iBAAkB,IAIlBC,2BAA4B,IAI5BC,iCAAiC,EAIjCC,kBAAkB,EAClBC,yBAAyB,EACzBC,iBAAiB,EACjBC,oBAAoB,GAExB7iC,KAAM,WACN,EAOA8iC,qBAAsB,SAASnvB,GAC3B,IAAKA,EACD,KAAM,0BAIVrb,EAAMgF,QAAQqW,GAAY,SAAShX,GAC/BA,EAAEqX,YACN,IAGAL,EAAWtU,MAAK,SAAS3C,EAAGJ,GACxB,OAAOA,EAAEqT,OAAO1K,MAAQvI,EAAEiT,OAAO1K,KACrC,IAcA,IAZA,IAQIzK,EARAuoC,EAAW9mC,KAAKuf,QAAQsmB,KAAK78B,MAC7B88B,EAAU9lC,KAAKuf,QAAQsmB,KAAKG,kBAC5BD,EAAU/lC,KAAKuf,QAAQsmB,KAAKI,kBAC5Bl9B,EAAS,EACTg+B,EAAS/mC,KAAKuf,QAAQsmB,KAAKC,QAE3BjnC,EAAIkoC,EACJjoC,EAFSkB,KAAKuf,QAAQsmB,KAAKE,QAI3BiB,EAAgB,GAChBC,EAAgB,GAEbvvB,EAAW5Z,OAAS,GAAG,CACtBe,GAAKioC,IAELjoC,EAAIkoC,EACJjoC,GAAKiK,EAASg9B,EAEdh9B,EAAS,GAEb,IAAI2S,EAAYhE,EAAWW,MAE3B,IADArY,KAAKknC,aAAaxrB,EAAW,IAAItc,EAAMP,EAAGC,IACrCP,EAAI,EAAGA,EAAImd,EAAUlF,MAAM1Y,OAAQS,IACpC0oC,EAAcroC,KAAK8c,EAAUlF,MAAMjY,IAEvC,IAAKA,EAAI,EAAGA,EAAImd,EAAUrI,MAAMvV,OAAQS,IACpCyoC,EAAcpoC,KAAK8c,EAAUrI,MAAM9U,IAEvC,IAAI4oC,EAAezrB,EAAUhI,OACzB0zB,EAAgBD,EAAap+B,QAC7Bq+B,GAAiB,GAAK1pC,MAAM0pC,MAC5BA,EAAgB,GAEpB,IAAIC,EAAeF,EAAan+B,OAC5Bq+B,GAAgB,GAAK3pC,MAAM2pC,MAC3BA,EAAe,GAGfD,GAAiBr+B,IACjBA,EAASq+B,GAEbvoC,GAAKwoC,EAAevB,CACxB,CAEA,MAAO,CACHtvB,MAAOywB,EACP5zB,MAAO2zB,EAEf,EAEAE,aAAc,SAASxrB,EAAW/c,GAC9B,IAAIJ,EAAGsI,EACH6M,EAASgI,EAAUhI,OACnB4zB,EAAS3oC,EAAEE,EAAI6U,EAAO7U,EACtB0oC,EAAS5oC,EAAEG,EAAI4U,EAAO5U,EAE1B,IAAKP,EAAI,EAAGA,EAAImd,EAAUlF,MAAM1Y,OAAQS,IAAK,CACzC,IAAIyV,EAAO0H,EAAUlF,MAAMjY,GACvBipC,EAAaxzB,EAAKN,SACG,IAArB8zB,EAAWx+B,OAAqC,IAAtBw+B,EAAWz+B,QAAiC,IAAjBy+B,EAAW3oC,GAA4B,IAAjB2oC,EAAW1oC,IACtF0oC,EAAa,IAAI7+B,EAAK,EAAG,EAAG,EAAG,IAEnC6+B,EAAW3oC,GAAKyoC,EAChBE,EAAW1oC,GAAKyoC,EAChBvzB,EAAKN,OAAO8zB,EAChB,CACA,IAAKjpC,EAAI,EAAGA,EAAImd,EAAUrI,MAAMvV,OAAQS,IAAK,CACzC,IAAI2V,EAAOwH,EAAUrI,MAAM9U,GAC3B,GAAI2V,EAAKzV,OAAQ,CACb,IAAIgpC,EAAY,GACZhpC,EAASyV,EAAKzV,OAClB,IAAKoI,EAAI,EAAGA,EAAIpI,EAAOX,OAAQ+I,IAAK,CAChC,IAAI6gC,EAAKjpC,EAAOoI,GAChB6gC,EAAG7oC,GAAKyoC,EACRI,EAAG5oC,GAAKyoC,EACRE,EAAU7oC,KAAK8oC,EACnB,CACAxzB,EAAKzV,OAASgpC,CAClB,CACJ,CAEA,OADAznC,KAAK2nC,yBAA2Bj0B,EAAO1K,MAAQhJ,KAAKuf,QAAQsmB,KAAKC,QAC1D,IAAI1mC,EAAMkoC,EAAQC,EAC7B,EAEAK,gBAAiB,SAASroB,GAItBvf,KAAKuf,QAAUzjB,EAAMI,WAAW,CAAC,EAAG8D,KAAKmlC,gBACrC9oC,EAAMO,YAAY2iB,KAItBvf,KAAKuf,QAAUzjB,EAAMI,WAAW8D,KAAKuf,QAASA,GAAW,CAAC,GAC9D,IAuBAsoB,EAA4B/rC,EAAM+H,MAAMC,OAAO,CAC/CC,KAAM,SAAS/H,GAMXgE,KAAKsa,QAAU,IAAIxI,EAMnB9R,KAAK8nC,SAAW,IAAIh2B,EAMpB9R,KAAKwW,MAAQ,GAMbxW,KAAK+nC,MAAQ,GAIb/nC,KAAKgoC,QAAU,IAAIl2B,EAMnB9R,KAAKioC,WAAa,GAMlBjoC,KAAKkoC,WAAa,GAMlBloC,KAAKmoC,mBAAqB,GAM1BnoC,KAAKooC,cAAgB,GAMrBpoC,KAAKqoC,SAAW,IAAIv2B,EAOpB9R,KAAKsoC,UAAY,IAAIhyB,EAOrBtW,KAAKuoC,WAAa,KAElBvoC,KAAKhE,QAAUA,CACnB,EAYAwsC,QAAS,SAASjpB,GAEd,GAAIljB,EAAMO,YAAYoD,KAAKhE,SACvB,KAAM,yBA6BV,OA1BAgE,KAAKuf,QAAUzjB,EAAMI,WAAW,CACxByqC,iBAAiB,EACjBF,kBAAkB,EAClBC,yBAAyB,GAE7BnnB,GAAW,CAAC,GAGhBvf,KAAKiD,QAELjD,KAAKyoC,qBAGLzoC,KAAK0oC,0BAGL1oC,KAAKioC,WAAa,IAAIn2B,EAAW9R,KAAKwW,OACtCxW,KAAKkoC,WAAa,IAAIp2B,EAAW9R,KAAK+nC,OAEtC/nC,KAAKuoC,WAAa,IAAIjyB,EACtBtW,KAAKioC,WAAW5mC,SAAQ,SAASgC,GAC7BrD,KAAKuoC,WAAWlvB,QAAQhW,EAC5B,GAAGrD,MACHA,KAAKkoC,WAAW7mC,SAAQ,SAASsnC,GAC7B3oC,KAAKuoC,WAAWrvB,gBAAgByvB,EACpC,GAAG3oC,MACIA,KAAKuoC,UAChB,EAOAK,cAAe,SAASxzB,GACpB,OAAOpV,KAAKgoC,QAAQl3B,IAAIsE,EAAWxD,GACvC,EAOAi3B,SAAU,SAASz1B,GACf,OAAOpT,KAAKsa,QAAQxJ,IAAIsC,EAAMxB,GAClC,EAOAk3B,QAAS,SAASroC,EAAGJ,GACjB,OAAOhE,EAAMsG,MAAMlC,EAAE4S,OAAO,SAASa,GACjC,OAAOA,EAAKC,cAAc1T,KAAOJ,CACrC,GACJ,EAKA4C,MAAO,WACHjD,KAAKuoC,WAAa,KAClBvoC,KAAKsoC,WAActoC,KAAKuf,QAAQknB,kBAAoBzmC,KAAKuf,QAAQmnB,wBAA2B,IAAI3B,EAAc,KAC9G/kC,KAAKqoC,UAAaroC,KAAKuf,QAAQknB,kBAAoBzmC,KAAKuf,QAAQmnB,wBAA2B,IAAI50B,EAAe,KAC9G9R,KAAKsa,QAAU,IAAIxI,EACnB9R,KAAK8nC,SAAW,IAAIh2B,EACpB9R,KAAKwW,MAAQ,GACbxW,KAAK+nC,MAAQ,GACb/nC,KAAKgoC,QAAU,IAAIl2B,EACnB9R,KAAKmoC,mBAAqB,GAC1BnoC,KAAKooC,cAAgB,GACrBpoC,KAAKioC,WAAa,GAClBjoC,KAAKkoC,WAAa,EACtB,EAOAa,WAAY,SAASC,GACjB,IAAI7mC,EAAO,GACPlD,EAAI+pC,EAAe97B,UACvB,IAAKjO,EACD,OAAOkD,EAGX,IADAA,EAAKvD,KAAKK,GACHA,EAAEgqC,iBACLhqC,EAAIA,EAAEgqC,gBACN9mC,EAAKvD,KAAKK,GAGd,OADAkD,EAAKgE,UACEhE,CACX,EAEA+mC,2BAA4B,SAAS91B,GAEjC,OAAIA,EAAM+1B,cAAgBnpC,KAAKopC,iBAAiBh2B,GACrCA,EAEHA,EAAM61B,gBAAyBjpC,KAAKkpC,2BAA2B91B,EAAM61B,iBAA7C,IACpC,EACAI,sBAAuB,SAAS5oC,EAAGJ,GAC/B,SAAII,EAAE0oC,cAAenpC,KAAKspC,eAAe7oC,EAAGJ,KAGrCA,EAAE8oC,aAAenpC,KAAKspC,eAAejpC,EAAGI,EACnD,EASA6oC,eAAgB,SAASC,EAAO9oC,GAC5B,IAAK8oC,EAAMJ,YACP,KAAM,yBAEV,GAAII,IAAU9oC,EACV,OAAO,EAEX,GAAIuB,EAASunC,EAAMl1B,SAAU5T,GACzB,OAAO,EAGX,IADA,IAAI+oC,EAAa,GACRjrC,EAAI,EAAG6J,EAAMmhC,EAAMl1B,SAASvW,OAAQS,EAAI6J,EAAK7J,IAAK,CACvD,IAAImC,EAAI6oC,EAAMl1B,SAAS9V,GACnBmC,EAAEyoC,aAAenpC,KAAKspC,eAAe5oC,EAAGD,IACxC+oC,EAAW5qC,KAAK8B,EAExB,CAEA,OAAO8oC,EAAW1rC,OAAS,CAC/B,EACA2rC,gBAAiB,SAASr2B,GACtB,OAAIpT,KAAKuf,QAAQonB,kBACTvzB,EAAMs2B,cAAe1pC,KAAK2pC,WAAWv2B,QAGpCA,EAAMs2B,aAAe1pC,KAAK2pC,WAAWv2B,IAMnCA,EAAMs2B,cAAgB1pC,KAAK4pC,OAAOx2B,EAEjD,EAQAy2B,cAAe,SAASz2B,GACpB,OAAOA,EAAMs2B,cAAgB1pC,KAAK2pC,WAAWv2B,KAAWpT,KAAK4pC,OAAOx2B,EACxE,EAEA02B,oBAAqB,SAASrpC,EAAGJ,GAC7B,IAAKI,EACD,KAAM,gCAEV,IAAKJ,EACD,KAAM,gCAGV,IAAKL,KAAKsoC,UACN,KAAM,0BAEV,IAAIyB,EAAK/pC,KAAK+oC,WAAWtoC,GACrBqK,EAAK9K,KAAK+oC,WAAW1oC,GACrB+W,EAAQ,KACZ,GAAI/a,EAAMwB,QAAQksC,IAAO1tC,EAAMwB,QAAQiN,GACnC,OAAO9K,KAAKsoC,UAAUnxB,KAAKxD,KAK/B,IAHA,IAAIq2B,EAAKD,EAAG,GACRE,EAAKn/B,EAAG,GACRvM,EAAI,EACDyrC,IAAOC,IACV7yB,EAAQ2yB,EAAGxrC,OACXA,GACSwrC,EAAGjsC,QAAUS,GAAKuM,EAAGhN,UAG9BksC,EAAKD,EAAGxrC,GACR0rC,EAAKn/B,EAAGvM,GAEZ,OAAK6Y,EAIMrS,EAAK/E,KAAKsoC,UAAU9xB,OAAO,SAASnT,GACvC,OAAOA,EAAEsQ,KAAKzG,YAAckK,CAChC,IALOpX,KAAKsoC,UAAUnxB,KAAKxD,IAOnC,EAOAi2B,OAAQ,SAAS7pC,GACb,OAAQA,EAAKkpC,eACjB,EASAU,WAAY,SAASv2B,GAEjB,QAAKA,EAAM0R,YAGH1R,EAAM61B,gBAAoCjpC,KAAK2pC,WAAWv2B,EAAM61B,iBAAxC71B,EAAM0R,UAC1C,EAEAolB,aAAc,SAAS92B,GAEnB,SAAIA,EAAM+1B,cAAe/1B,EAAMs2B,cAGxBt2B,EAAM61B,iBAAmBjpC,KAAKkqC,aAAa92B,EAAM61B,gBAC5D,EAMAR,mBAAoB,WAEhB,IAAIzoC,KAAKuf,QAAQknB,iBAkBb,KAAM,oDAjBN,IAAK,IAAIloC,EAAI,EAAG6J,EAAMpI,KAAKhE,QAAQk2B,OAAOp0B,OAAQS,EAAI6J,EAAK7J,IAAK,CAC5D,IAAI6U,EAAQpT,KAAKhE,QAAQk2B,OAAO3zB,GAGhC,GAAKyB,KAAKuf,QAAQonB,kBAAoB3mC,KAAK2pC,WAAWv2B,IAAWA,EAAM+1B,YACnEnpC,KAAKooC,cAAcxpC,KAAKwU,OAD5B,CAIA,IAAIY,EAAO,IAAIb,EAAKC,EAAMxB,GAAIwB,GAC9BY,EAAKH,WAAY,EAGjB7T,KAAKsa,QAAQ1J,IAAIwC,EAAMxB,GAAIoC,GAC3BhU,KAAKwW,MAAM5X,KAAKoV,EANhB,CAOJ,CAKR,EAMA00B,wBAAyB,WACrB,GAAwC,IAApC1oC,KAAKhE,QAAQu7B,YAAYz5B,OAG7B,IAAK,IAAIS,EAAI,EAAG6J,EAAMpI,KAAKhE,QAAQu7B,YAAYz5B,OAAQS,EAAI6J,EAAK7J,IAAK,CACjE,IAAIsyB,EAAO7wB,KAAKhE,QAAQu7B,YAAYh5B,GAEpC,GAAIyB,KAAKypC,gBAAgB5Y,GACrB7wB,KAAKmoC,mBAAmBvpC,KAAKiyB,OADjC,CAKA,IAAI5yB,EAAU4yB,EAAK8H,gBAAyB9H,EAAK8H,gBAAgBvlB,MAA5B,KACjC+2B,EAAQtZ,EAAKkB,gBAAyBlB,EAAKkB,gBAAgB3e,MAA5B,KAGnC,GAAKnV,GAAWksC,EAKhB,IAAInoC,EAAShC,KAAKooC,cAAenqC,IAAY+B,KAAK8nC,SAAS72B,YAAYhT,GAIvE,IAAI+D,EAAShC,KAAKooC,cAAe+B,IAAUnqC,KAAK8nC,SAAS72B,YAAYk5B,GAArE,CAMInqC,KAAK8nC,SAAS72B,YAAYhT,KAC1BA,EAAS+B,KAAK8nC,SAAS7pC,IAEvB+B,KAAK8nC,SAAS72B,YAAYk5B,KAC1BA,EAAOnqC,KAAK8nC,SAASqC,IAGzB,IAAIC,EAAapqC,KAAK6oC,SAAS5qC,GAC3BosC,EAAWrqC,KAAK6oC,SAASsB,GAC7B,GAAKC,IAAeC,GAAarqC,KAAKsqC,oBAAoBF,EAAYC,GAClErqC,KAAKmoC,mBAAmBvpC,KAAKiyB,OADjC,CAKA,GAAmB,OAAfuZ,GAAoC,OAAbC,EACvB,KAAM,oCAEV,IAAIrqC,KAAKuf,QAAQknB,iBAYb,KAAM,oDAVN,GAAI2D,EAAWv2B,WAAaw2B,EAASx2B,UACjC7T,KAAKmoC,mBAAmBvpC,KAAKiyB,OADjC,CAIA,IAAI0Z,EAAU,IAAIp1B,EAAKi1B,EAAYC,EAAUxZ,EAAKjf,GAAIif,GAEtD7wB,KAAKgoC,QAAQp3B,IAAIigB,EAAKjf,GAAI24B,GAC1BvqC,KAAK+nC,MAAMnpC,KAAK2rC,EAJhB,CAVJ,CAfA,MAFIvqC,KAAKmoC,mBAAmBvpC,KAAKiyB,QAJ7B7wB,KAAKmoC,mBAAmBvpC,KAAKiyB,QAL7B7wB,KAAKmoC,mBAAmBvpC,KAAKiyB,EAPjC,CAoDJ,CACJ,EAEAyZ,oBAAqB,SAASjnC,EAAGnD,GAC7B,OAAO7D,EAAMoF,IAAIzB,KAAK+nC,OAAO,SAASY,GAClC,OAAOA,EAAE1qC,SAAWoF,GAAKslC,EAAE1kC,SAAW/D,GAAKyoC,EAAE1qC,SAAWiC,GAAKyoC,EAAE1kC,SAAWZ,CAC9E,GACJ,IAwCA8c,EAAe+kB,EAAWphC,OAAO,CACjCC,KAAM,SAAS/H,GAGX,GADAkpC,EAAWjzB,GAAGlO,KAAK7G,KADR8C,MAEP3D,EAAMO,YAAYZ,GAClB,KAAM,4BAEVgE,KAAKhE,QAAUA,CACnB,EAEAs2B,OAAQ,SAAS/S,GAEbvf,KAAK4nC,gBAAgBroB,GAErB,IACIX,EADU,IAAIipB,EAA0B7nC,KAAKhE,SAC7BwsC,QAAQjpB,GAC5B,IAAIX,EAAM/gB,UAAV,CAIA,IAAI6Z,EAAakH,EAAMvH,yBACvB,IAAIhb,EAAMwB,QAAQ6Z,GAAlB,CAGA,IAAK,IAAInZ,EAAI,EAAGA,EAAImZ,EAAW5Z,OAAQS,IAAK,CACxC,IAAImd,EAAYhE,EAAWnZ,GAC3ByB,KAAKogB,YAAY1E,EAAW6D,EAChC,CACA,IAAIirB,EAAexqC,KAAK6mC,qBAAqBnvB,GAC7C,OAAO,IAAI1b,EAAQyuC,YAAYzqC,KAAKhE,QAASwuC,EAN7C,CALA,CAYJ,EAEApqB,YAAa,SAASxB,EAAOW,GAErBljB,EAAMK,UAAU6iB,IAChBvf,KAAK4nC,gBAAgBroB,GAEzBvf,KAAK4e,MAAQA,EAEb,IAAI8rB,EAAiD,EAA5B1qC,KAAKuf,QAAQ+lB,aACtCtlC,KAAK2qC,YAAcD,EAEnB,IAAIE,EAAc5qC,KAAK6qC,kBACvB7qC,KAAKgJ,MAAQ4hC,EAAY5hC,MACzBhJ,KAAK+I,OAAS6hC,EAAY7hC,OAE1B,IAAK,IAAIpC,EAAO,EAAGA,EAAO3G,KAAKuf,QAAQgmB,WAAY5+B,IAC/C3G,KAAK8qC,YAAcnkC,GAAkC,EAA1B3G,KAAKuf,QAAQgmB,WAAiB,EACzDvlC,KAAKkE,OAELlE,KAAK2qC,YAAc3qC,KAAK8qC,YACpBJ,EAAqB,GACrBA,GAAsB,EAAI/jC,GAAQ,EAAI3G,KAAKuf,QAAQgmB,YAE/D,EAKArhC,KAAM,WACF,IAAI3F,EAEJ,IAAKA,EAAI,EAAGA,EAAIyB,KAAK4e,MAAMpI,MAAM1Y,OAAQS,IACrCyB,KAAK+qC,WAAW/qC,KAAK4e,MAAMpI,MAAMjY,IAIrC,IAAKA,EAAI,EAAGA,EAAIyB,KAAK4e,MAAMvL,MAAMvV,OAAQS,IACrCyB,KAAKgrC,YAAYhrC,KAAK4e,MAAMvL,MAAM9U,IAGtC,IAAKA,EAAI,EAAGA,EAAIyB,KAAK4e,MAAMpI,MAAM1Y,OAAQS,IAAK,CAC1C,IAAIyV,EAAOhU,KAAK4e,MAAMpI,MAAMjY,GACxBmJ,EAASlL,KAAKgE,KAAKwT,EAAKvK,GAAKuK,EAAKvK,GAAKuK,EAAKtK,GAAKsK,EAAKtK,IAC1D,GAAe,IAAXhC,EACA,OAEJsM,EAAKnV,GAAKrC,KAAKiJ,IAAIiC,EAAQ1H,KAAK2qC,aAAe32B,EAAKvK,GAAK/B,EACzDsM,EAAKlV,GAAKtC,KAAKiJ,IAAIiC,EAAQ1H,KAAK2qC,aAAe32B,EAAKtK,GAAKhC,EACrD1H,KAAKuf,QAAQc,cACbrM,EAAKnV,EAAIrC,KAAKiJ,IAAIzF,KAAKgJ,MAAOxM,KAAKgJ,IAAIwO,EAAKhL,MAAQ,EAAGgL,EAAKnV,IAC5DmV,EAAKlV,EAAItC,KAAKiJ,IAAIzF,KAAK+I,OAAQvM,KAAKgJ,IAAIwO,EAAKjL,OAAS,EAAGiL,EAAKlV,IAEtE,CACJ,EAOAmsC,OAAQ,SAASj3B,GAEb,IAAIk3B,EAAM1uC,KAAKkD,SAAWM,KAAKuf,QAAQ+lB,aAAe,EAClD6F,EAAwB,EAAhB3uC,KAAKkD,SAAelD,KAAK8D,GACrC0T,EAAKnV,GAAKqsC,EAAM1uC,KAAKmH,IAAIwnC,GACzBn3B,EAAKlV,GAAKosC,EAAM1uC,KAAKuS,IAAIo8B,EAC7B,EAWAC,oBAAqB,SAASjrC,EAAGkD,EAAGnD,GAChC,IAAIklB,EACJ,GAAKplB,KAAK8qC,YAGL,CACD,IAAIxD,EAASjkC,EAAExE,EAAIqB,EAAErB,EACjB0oC,EAASlkC,EAAEvE,EAAIoB,EAAEpB,EAEjBusC,EAAKhoC,EAAE2F,MAAQ,EACfsiC,EAAKjoC,EAAE0F,OAAS,EAChBwiC,EAAKrrC,EAAE8I,MAAQ,EACfwiC,EAAKtrC,EAAE6I,OAAS,EAEpBqc,EAAS5oB,KAAKivC,IAAInE,EAAQ,GAAK9qC,KAAKivC,IAAIJ,EAAKE,EAAKvrC,KAAKuf,QAAQ+lB,aAAc,GAAO9oC,KAAKivC,IAAIlE,EAAQ,GAAK/qC,KAAKivC,IAAIH,EAAKE,EAAKxrC,KAAKuf,QAAQ+lB,aAAc,EAC5J,MAZIlgB,EAAQ5oB,KAAKivC,IAAItrC,EAAG,GAAK3D,KAAKivC,IAAIzrC,KAAKuf,QAAQ+lB,aAAc,GAajE,OAAe,EAARlgB,EAAY,CACvB,EAUAsmB,aAAc,SAASvrC,EAAGkD,EAAGnD,GACzB,OAAO,EAAIF,KAAKorC,oBAAoBjrC,EAAGkD,EAAGnD,EAC9C,EAEA6qC,WAAY,SAAS1nC,GACjBA,EAAEoG,GAAK,EACPpG,EAAEqG,GAAK,EACPrN,EAAMgF,QAAQrB,KAAK4e,MAAMpI,OAAO,SAAStW,GACrC,GAAIA,IAAMmD,EAAV,CAGA,KAAOA,EAAExE,IAAMqB,EAAErB,GAAKwE,EAAEvE,IAAMoB,EAAEpB,GAC5BkB,KAAKirC,OAAO/qC,GAEhB,IAAI8P,EAAK3M,EAAExE,EAAIqB,EAAErB,EACboR,EAAK5M,EAAEvE,EAAIoB,EAAEpB,EACb6sC,EAAWnvC,KAAKgE,KAAKwP,EAAKA,EAAKC,EAAKA,GACpCtG,EAAwC,EAApC3J,KAAK0rC,aAAaC,EAAUtoC,EAAGnD,GACvCmD,EAAEoG,IAAOuG,EAAK27B,EAAYhiC,EAC1BtG,EAAEqG,IAAOuG,EAAK07B,EAAYhiC,CAT1B,CAUJ,GAAG3J,KACP,EACAgrC,YAAa,SAAS92B,GAClB,IAAIuF,EAAIvF,EAAKjQ,OACThF,EAAIiV,EAAKjW,OACb,GAAIgB,IAAMwa,EAAV,CAIA,KAAOxa,EAAEJ,IAAM4a,EAAE5a,GAAKI,EAAEH,IAAM2a,EAAE3a,GAC5BkB,KAAKirC,OAAOxxB,GAGhB,IAAIzJ,EAAK/Q,EAAEJ,EAAI4a,EAAE5a,EACboR,EAAKhR,EAAEH,EAAI2a,EAAE3a,EACb6sC,EAAWnvC,KAAKgE,KAAKwP,EAAKA,EAAKC,EAAKA,GAEpCxP,EAA+C,EAA3CT,KAAKorC,oBAAoBO,EAAU1sC,EAAGwa,GAC1ChQ,EAAMuG,EAAK27B,EAAYlrC,EACvBiJ,EAAMuG,EAAK07B,EAAYlrC,EAC3BgZ,EAAEhQ,IAAMA,EACRgQ,EAAE/P,IAAMA,EACRzK,EAAEwK,IAAMA,EACRxK,EAAEyK,IAAMA,CAfR,CAgBJ,EAOAmhC,gBAAiB,WAEb,IAAIzsC,EAAMge,EAAIpc,KAAK4e,MAAMpI,MAAM1Y,OAC/B,GAAU,IAANse,EACA,OAAOhe,EAUX,IACIwtC,GATJxtC,EAAO/B,EAAM6F,KAAKlC,KAAK4e,MAAMpI,OAAO,SAASvX,EAAG+U,GAC5C,IAAI63B,EAAO73B,EAAKhL,MAAQgL,EAAKjL,OAC7B,OAAI8iC,EAAO,EACP5sC,GAAKzC,KAAKgE,KAAKqrC,GAGZ,CACX,GAAG,EAAG7rC,OACUoc,EACM5f,KAAKsvC,KAAKtvC,KAAKgE,KAAK4b,IAG1C,MAAO,CAAEpT,MAhBmF,GAchF4iC,EAAapvC,KAAKgE,KAd4C,MAgBtCuI,OAhBwD,GAe/E6iC,EAAapvC,KAAKgE,KAf2C,MAiB9E,IAIAurC,EAAsBjwC,EAAM+H,MAAMC,OAAO,CAEzCC,KAAM,SAASwb,GACXvf,KAAKc,OAAS,KACdd,KAAKuf,QAAUA,CACnB,EACA+S,OAAQ,SAAS0Z,EAAW70B,GAExB,GADAnX,KAAK4e,MAAQotB,EACRhsC,KAAK4e,MAAMpI,OAAqC,IAA5BxW,KAAK4e,MAAMpI,MAAM1Y,OAA1C,CAIA,IAAKkE,EAAShC,KAAK4e,MAAMpI,MAAOW,GAC5B,KAAM,sCAGVnX,KAAKc,OAASqW,EACdnX,KAAK4e,MAAMhI,qBAkBX5W,KAAKisC,cAzBL,CA6BJ,EAEAC,WAAY,SAAS5iC,GACjBtJ,KAAKmsC,qBAAqBnsC,KAAKc,OAAQ,QAAQ,GAC/Cd,KAAKosC,kBAAkBpsC,KAAKc,OAAQ,WAAW,GAC/C,IAAkBhC,EAAGP,EAAGyV,EAApBhP,EAAI,EAAGgR,EAAI,EACf,IAAKzX,EAAI,EAAGA,EAAI+K,EAAKxL,OAAQS,IAAK,EAC9ByV,EAAO1K,EAAK/K,IACP8tC,cAAgB,OACrB,IAAIptC,EAAIe,KAAKssC,QAAQt4B,EAAMpI,EAAKQ,OAChC4J,EAAIxZ,KAAKgJ,IAAIwQ,EAAG/W,EAAEstC,OAClBvnC,GAAK/F,EAAE8J,OAAS/I,KAAKuf,QAAQkmB,kBACjC,CAEAzgC,GAAKhF,KAAKuf,QAAQkmB,mBAClB,IAAI5mC,EAAImB,KAAKc,OAAOjC,EAAImB,KAAKuf,QAAQimB,qBAErC,IADA1mC,EAAIkB,KAAKc,OAAOhC,GAAMkB,KAAKc,OAAOiI,OAAS/D,GAAK,EAC3CzG,EAAI,EAAGA,EAAI+K,EAAKxL,OAAQS,IAAK,CAC9ByV,EAAO1K,EAAK/K,GACZ,IAAII,EAAI,IAAIS,EAAMP,EAAImV,EAAKpI,KAAK5C,MAAOlK,GAEvCkB,KAAKwsC,QAAQx4B,EAAMrV,GACnBG,GAAKkV,EAAKpI,KAAK7C,OAAS/I,KAAKuf,QAAQkmB,kBACzC,CACJ,EAEAgH,YAAa,SAASljC,GAClBvJ,KAAKmsC,qBAAqBnsC,KAAKc,OAAQ,SAAS,GAChDd,KAAKosC,kBAAkBpsC,KAAKc,OAAQ,WAAW,GAC/C,IAAkBhC,EAAGP,EAAGyV,EAApBhP,EAAI,EAAGgR,EAAI,EACf,IAAKzX,EAAI,EAAGA,EAAIgL,EAAMzL,OAAQS,IAAK,EAC/ByV,EAAOzK,EAAMhL,IACR8tC,cAAgB,QACrB,IAAIptC,EAAIe,KAAKssC,QAAQt4B,EAAMpI,EAAKQ,OAChC4J,EAAIxZ,KAAKgJ,IAAIwQ,EAAG/W,EAAEstC,OAClBvnC,GAAK/F,EAAE8J,OAAS/I,KAAKuf,QAAQkmB,kBACjC,CAEAzgC,GAAKhF,KAAKuf,QAAQkmB,mBAClB,IAAI5mC,EAAImB,KAAKc,OAAOjC,EAAImB,KAAKuf,QAAQimB,qBAAuBxlC,KAAKc,OAAOkI,MAExE,IADAlK,EAAIkB,KAAKc,OAAOhC,GAAMkB,KAAKc,OAAOiI,OAAS/D,GAAK,EAC3CzG,EAAI,EAAGA,EAAIgL,EAAMzL,OAAQS,IAAK,CAC/ByV,EAAOzK,EAAMhL,GACb,IAAII,EAAI,IAAIS,EAAMP,EAAGC,GACrBkB,KAAKwsC,QAAQx4B,EAAMrV,GACnBG,GAAKkV,EAAKpI,KAAK7C,OAAS/I,KAAKuf,QAAQkmB,kBACzC,CACJ,EAEAiH,SAAU,SAASC,GACf3sC,KAAKmsC,qBAAqBnsC,KAAKc,OAAQ,MAAM,GAC7Cd,KAAKosC,kBAAkBpsC,KAAKc,OAAQ,WAAW,GAC/C,IAAWhC,EAAGkV,EAAMzV,EAAhByX,EAAI,EACR,IAAKzX,EAAI,EAAGA,EAAIouC,EAAG7uC,OAAQS,IAAK,EAC5ByV,EAAO24B,EAAGpuC,IACL8tC,cAAgB,KAErBr2B,GADQhW,KAAKssC,QAAQt4B,EAAMpI,EAAKQ,OACzBpD,MAAQhJ,KAAKuf,QAAQimB,oBAChC,CAEAxvB,GAAKhW,KAAKuf,QAAQimB,qBAClB,IAAI3mC,EAAImB,KAAKc,OAAOjC,EAAKmB,KAAKc,OAAOkI,MAAQ,EAAMgN,EAAI,EAGvD,IAAKzX,EAAI,EAAGA,EAAIouC,EAAG7uC,OAAQS,IAAK,CAC5ByV,EAAO24B,EAAGpuC,GACVO,EAAIkB,KAAKc,OAAOhC,EAAIkB,KAAKuf,QAAQkmB,mBAAqBzxB,EAAKpI,KAAK7C,OAChE,IAAIpK,EAAI,IAAIS,EAAMP,EAAGC,GACrBkB,KAAKwsC,QAAQx4B,EAAMrV,GACnBE,GAAKmV,EAAKpI,KAAK5C,MAAQhJ,KAAKuf,QAAQimB,oBACxC,CACJ,EAEAoH,WAAY,SAASC,GACjB,IAAI74B,EAAMzV,EACVyB,KAAKmsC,qBAAqBnsC,KAAKc,OAAQ,QAAQ,GAC/Cd,KAAKosC,kBAAkBpsC,KAAKc,OAAQ,WAAW,GAC/C,IAAWhC,EAAPkX,EAAI,EACR,IAAKzX,EAAI,EAAGA,EAAIsuC,EAAK/uC,OAAQS,IAAK,EAC9ByV,EAAO64B,EAAKtuC,IACPuuC,cAAgB,OAErB92B,GADQhW,KAAKssC,QAAQt4B,EAAMpI,EAAKQ,OACzBpD,MAAQhJ,KAAKuf,QAAQimB,oBAChC,CAEAxvB,GAAKhW,KAAKuf,QAAQimB,qBAClB,IAAI3mC,EAAImB,KAAKc,OAAOjC,EAAKmB,KAAKc,OAAOkI,MAAQ,EAAMgN,EAAI,EAEvD,IADAlX,EAAIkB,KAAKc,OAAOhC,EAAIkB,KAAKuf,QAAQkmB,mBAAqBzlC,KAAKc,OAAOiI,OAC7DxK,EAAI,EAAGA,EAAIsuC,EAAK/uC,OAAQS,IAAK,CAC9ByV,EAAO64B,EAAKtuC,GACZ,IAAII,EAAI,IAAIS,EAAMP,EAAGC,GACrBkB,KAAKwsC,QAAQx4B,EAAMrV,GACnBE,GAAKmV,EAAKpI,KAAK5C,MAAQhJ,KAAKuf,QAAQimB,oBACxC,CACJ,EAEAuH,iBAAkB,WAEd/sC,KAAKmsC,qBAAqBnsC,KAAKc,OAAQ,UAAU,GACjDd,KAAKosC,kBAAkBpsC,KAAKc,OAAQ,WAAW,GAC/Cd,KAAKgtC,aAAe,KACpB,IAAIC,EAAajtC,KAAKuf,QAAQ6mB,iBAAmBnB,EAC7CiI,EAAWltC,KAAKuf,QAAQ8mB,eAAiBpB,EAC7C,GAAIiI,GAAYD,EACZ,KAAM,uDAGVjtC,KAAKmtC,SAAW,EAChBntC,KAAKiG,OAAS,IAAI7G,EAAMY,KAAKc,OAAOjC,EAAGmB,KAAKc,OAAOhC,GACnDkB,KAAKotC,sBAAsBptC,KAAKc,OAAQ,GAGpCd,KAAKmtC,SAAW,GAChBntC,KAAKqtC,aAAartC,KAAKc,OAAQd,KAAKuf,QAAQgnB,2BAA4B0G,EAAYC,GAIxFltC,KAAKc,OAAOwsC,MAAQJ,EAAWD,CACnC,EAEAM,YAAa,SAASV,EAAMW,GACpBnxC,EAAMO,YAAY4wC,KAClBA,EAAiB,GAGrBxtC,KAAKmsC,qBAAqBnsC,KAAKc,OAAQ,QAAQ,GAC/Cd,KAAKosC,kBAAkBpsC,KAAKc,OAAQ,WAAW,GAC/Cd,KAAKosC,kBAAkBpsC,KAAKc,OAAQ,cAAc,EAAO0sC,GACzD,IAAW1uC,EAAGkV,EAAMzV,EAAhByX,EAAI,EACR,IAAKzX,EAAI,EAAGA,EAAIsuC,EAAK/uC,OAAQS,IAAK,EAC9ByV,EAAO64B,EAAKtuC,IAGP8tC,cAAgB,OAErBr2B,GADQhW,KAAKssC,QAAQt4B,EAAMpI,EAAKQ,OACzBpD,MAAQhJ,KAAKuf,QAAQimB,oBAChC,CAEAxvB,GAAKhW,KAAKuf,QAAQimB,qBAGlBxvB,GAAK62B,EAAKA,EAAK/uC,OAAS,GAAGkL,MAC3BgN,GAAK62B,EAAKA,EAAK/uC,OAAS,GAAG2V,gBAAgBC,SAAS1K,MAEpD,IAAInK,EAAImB,KAAKc,OAAOjC,EAAKmB,KAAKc,OAAOkI,MAAQ,EAAMgN,EAAI,EAEvD,IADAlX,EAAIkB,KAAKc,OAAOhC,EAAIkB,KAAKuf,QAAQkmB,mBAAqBzlC,KAAKc,OAAOiI,OAC7DxK,EAAI,EAAGA,EAAIsuC,EAAK/uC,OAAQS,IAAK,CAC9ByV,EAAO64B,EAAKtuC,GAEZ,IAAII,EAAI,IAAIS,EAAMP,EAAGC,GACrBkB,KAAKwsC,QAAQx4B,EAAMrV,GACnBE,GAAKmV,EAAKpI,KAAK5C,MAAQhJ,KAAKuf,QAAQimB,oBACxC,CAUJ,EACA4H,sBAAuB,SAAS/pC,EAAGlD,GAC3BA,EAAIH,KAAKmtC,WACTntC,KAAKmtC,SAAWhtC,GAGpB,IAAIstC,EAAK,EAAuBC,EAAiB,IAANvtC,EAAU,EAAI3D,KAAKgE,KAAK,KAAqBL,EAExF,GAAIkD,EAAEgR,SAASvW,OAAS,EAAG,CAEvB,IAAK,IAAIS,EAAI,EAAG6J,EAAM/E,EAAEgR,SAASvW,OAAQS,EAAI6J,EAAK7J,IAAK,CACnD,IAAI2Y,EAAQ7T,EAAEgR,SAAS9V,GACvBkvC,GAAMztC,KAAKotC,sBAAsBl2B,EAAO/W,EAAI,EAChD,CACAstC,EAAKjxC,KAAKgJ,IAAIkoC,EAAUD,EAC5B,MAEIA,EAAKC,EAIT,OADArqC,EAAEsqC,YAAcF,EACTA,CACX,EACAG,aAAc,SAASvqC,GACnB,IAAmB9E,EAAfsvC,EAAY,EAGhB,GAAIxqC,EAAEkR,QAAQzW,OAAS,EACnB,KAAM,8BAEV,IAAIa,EAAI0E,EAAEkR,QAAQ,GAClB,GAAI5V,EAAG,CACH,IAAImvC,EAAK,IAAI1uC,EAAMT,EAAEE,EAAGF,EAAEG,GACtBivC,EAAK,IAAI3uC,EAAMiE,EAAExE,EAAGwE,EAAEvE,GAC1B+uC,EAAY7tC,KAAKguC,eAAexxC,KAAK4D,MAAM0tC,EAAGhvC,EAAIivC,EAAGjvC,EAAGgvC,EAAGjvC,EAAIkvC,EAAGlvC,GACtE,CAEA,IAAI21B,EAAQnxB,EAAEgR,SAASvW,OACvB,GAAc,IAAV02B,EACA,OAAO,KAGX,IAAI/pB,EAAQ,GACRuxB,EAAM,GAEV,IAAKz9B,EAAI,EAAGA,EAAIi2B,IAASj2B,EAAG,CACxB,IAAImC,EAAI2C,EAAEgR,SAAS9V,GACfoqC,EAAI,IAAIvpC,EAAMsB,EAAE7B,EAAG6B,EAAE5B,GACzBk9B,EAAIz9B,GAAKA,EACTkM,EAAMlM,GAAKyB,KAAKguC,gBAAgBH,EAAYrxC,KAAK4D,MAAMuoC,EAAE7pC,EAAI6pC,EAAE7pC,EAAG6pC,EAAE9pC,EAAI8pC,EAAE9pC,GAC9E,CAEAxC,EAAM6G,OAAOuH,EAAOuxB,GACpB,IAAIiS,EAAM,GACN55B,EAAWhR,EAAEgR,SACjB,IAAK9V,EAAI,EAAGA,EAAIi2B,IAASj2B,EACrB0vC,EAAIrvC,KAAKyV,EAAS2nB,EAAIz9B,KAG1B,OAAO0vC,CACX,EAEAD,eAAgB,SAASvjC,GACrB,KAAOA,EAAkB,EAAVjO,KAAK8D,IAChBmK,GAAS,EAAIjO,KAAK8D,GAEtB,KAAOmK,EAAQ,GACXA,GAAmB,EAAVjO,KAAK8D,GAElB,OAAOmK,CACX,EACA4iC,aAAc,SAASr5B,EAAMkL,EAAQ+tB,EAAYC,GAM7C,IALA,IAAIgB,EAAahB,EAAWD,EACxBkB,EAAiBD,EAAa,EAC9BE,EAAep6B,EAAK25B,YACpBU,EAAW,EACXC,EAAStuC,KAAK4tC,aAAa55B,GACtBzV,EAAI,EAAG6J,EAAMkmC,EAAOxwC,OAAQS,EAAI6J,EAAK7J,IAAK,CAC/C,IAAIgwC,EAAYD,EAAO/vC,GACnBiwC,EAAKD,EACLE,EAAqBD,EAAGb,YAAcS,EACtCG,EAAUl6B,SAASvW,OAAS,GAC5BkC,KAAKqtC,aAAakB,EACdrvB,EAASlf,KAAKuf,QAAQ+mB,iBACtB2G,EAAcoB,EAAWH,EACzBjB,GAAeoB,EAAWI,GAAsBP,GAGxDluC,KAAK0uC,iBAAiBH,EAAWrvB,EAAQ+tB,EAAcoB,EAAWH,EAAeO,EAAqBN,GACtGK,EAAG/jC,MAAQgkC,EAAqBP,EAChCG,GAAYI,CAChB,CACJ,EACAC,iBAAkB,SAAS16B,EAAMkL,EAAQzU,GACrCuJ,EAAKnV,EAAImB,KAAKiG,OAAOpH,EAAKqgB,EAAS1iB,KAAKmH,IAAI8G,GAC5CuJ,EAAKlV,EAAIkB,KAAKiG,OAAOnH,EAAKogB,EAAS1iB,KAAKuS,IAAItE,GAC5CuJ,EAAK26B,kBAAoB,IAAIhmC,EAAKqL,EAAKnV,EAAGmV,EAAKlV,EAAGkV,EAAKhL,MAAOgL,EAAKjL,OACvE,EAQAojC,qBAAsB,SAASn4B,EAAM46B,EAAWC,GAC5C,IAAIC,EAAgB96B,EAAK84B,cACzB9sC,KAAK4e,MAAM9D,oBAAoB9G,GAAM,SAAS3Q,GAC1CA,EAAEypC,cAAgB8B,CACtB,IACKC,IACD76B,EAAK84B,cAAgBgC,EAE7B,EASA1C,kBAAmB,SAASp4B,EAAMse,EAAQuc,EAAcrB,GAChDnxC,EAAMO,YAAY4wC,KAClBA,EAAiB,GAErB,IAAIuB,EAAa/6B,EAAKg7B,eAClBxB,EAAiB,GAEjBxtC,KAAK4e,MAAM9H,aAAa9C,GAGxBhU,KAAK4e,MAAM9D,oBACP9G,GAAM,SAAS/U,GACPA,EAAEgY,OAASu2B,EAAiB,IAC5BvuC,EAAE+vC,eAAiB1c,EAE3B,MAIJtyB,KAAK4e,MAAM9D,oBAAoB9G,GAAM,SAAS/U,GAC1CA,EAAE+vC,eAAiB1c,CACvB,IAGKuc,IACD76B,EAAKg7B,eAAiBD,GAGlC,EAQAzC,QAAS,SAASt4B,EAAMi7B,GACpB,IAAkBhwC,EAAd+W,EAAI,EAAGhR,EAAI,EACXvC,EAAS,IAAImJ,EAAK,EAAG,GACzB,IAAKoI,EACD,KAAM,GAEV,IAAI3T,EAAI2T,EAAKP,gBAAgBC,SACzBw7B,EAAa7uC,EAAE2I,MACfmmC,EAAc9uC,EAAE0I,OACpB,GAA4B,IAAxBiL,EAAKO,QAAQzW,OACb,KAAM,+BAGV,IAAI4iB,EAAS1M,EAAKO,QAAQ,GAK1B,GAJ2B,cAAvBP,EAAK84B,gBACL94B,EAAK84B,cAAgBpsB,EAAOosB,eAG5BzwC,EAAMwB,QAAQmW,EAAKK,UACnB5R,EAAS,IAAImJ,EACTpP,KAAKC,IAAIyyC,GAAclK,EAAU,GAAKkK,EACtC1yC,KAAKC,IAAI0yC,GAAenK,EAAU,GAAKmK,QAE1C,GAA6B,IAAzBn7B,EAAKK,SAASvW,OAAc,CACjC,OAAQkW,EAAK84B,eACT,IAAK,SACD7tC,EAAIe,KAAKssC,QAAQt4B,EAAKK,SAAS,GAAI46B,GACnCj5B,EAAIk5B,EAAclvC,KAAKuf,QAAQ+mB,iBAAmB9pC,KAAKmH,IAAIqQ,EAAKo7B,eAAkBnwC,EAAE+J,MACpFhE,EAAImqC,EAAc3yC,KAAKC,IAAIuD,KAAKuf,QAAQ+mB,iBAAmB9pC,KAAKuS,IAAIiF,EAAKo7B,gBAAkBnwC,EAAE8J,OAC7F,MACJ,IAAK,OACL,IAAK,QACD,OAAQiL,EAAKg7B,gBAET,IAAK,uBAGL,IAAK,0BACD,MAEJ,IAAK,aAEDh5B,EAAIk5B,GADJjwC,EAAIe,KAAKssC,QAAQt4B,EAAKK,SAAS,GAAI46B,IAChBjmC,MAAQhJ,KAAKuf,QAAQomB,2BACxC3gC,EAAImqC,EAAcnvC,KAAKuf,QAAQmmB,4BAA8BzmC,EAAE8J,OAC/D,MAEJ,IAAK,UACD9J,EAAIe,KAAKssC,QAAQt4B,EAAKK,SAAS,GAAI46B,GACnCj5B,EAAIk5B,EAAalvC,KAAKuf,QAAQimB,qBAAuBvmC,EAAE+J,MACvDhE,EAAIxI,KAAKgJ,IAAI2pC,EAAalwC,EAAE8J,QAC5B,MAEJ,QACI,KAAM,0DAEd,MACJ,IAAK,KACL,IAAK,OACD,OAAQiL,EAAKg7B,gBAET,IAAK,uBACL,IAAK,0BACD,MAEJ,IAAK,aACD/vC,EAAIe,KAAKssC,QAAQt4B,EAAKK,SAAS,GAAI46B,GACnCj5B,EAAIxZ,KAAKgJ,IAAI0pC,EAAYjwC,EAAE+J,MAAQhJ,KAAKuf,QAAQomB,4BAChD3gC,EAAImqC,EAAcnvC,KAAKuf,QAAQmmB,4BAA8BzmC,EAAE8J,OAC/D,MAEJ,IAAK,UACD9J,EAAIe,KAAKssC,QAAQt4B,EAAKK,SAAS,GAAI46B,GACnCjqC,EAAImqC,EAAcnvC,KAAKuf,QAAQkmB,mBAAqBxmC,EAAE8J,OACtDiN,EAAIxZ,KAAKgJ,IAAI0pC,EAAYjwC,EAAE+J,OAC3B,MAEJ,QACI,KAAM,wDAEd,MACJ,QACI,KAAM,mDAGdvG,EAAS,IAAImJ,EAAKoK,EAAGhR,EACzB,KACK,CACD,IAAIzG,EAAGgwC,EACP,OAAQv6B,EAAK84B,eACT,IAAK,OACL,IAAK,QACD,OAAQ94B,EAAKg7B,gBAET,IAAK,uBACL,IAAK,0BACD,MAEJ,IAAK,aAGD,IAFAh5B,EAAIk5B,EACJlqC,EAAImqC,EAAcnvC,KAAKuf,QAAQmmB,4BAC1BnnC,EAAI,EAAGA,EAAIyV,EAAKK,SAASvW,OAAQS,IAClCgwC,EAAYv6B,EAAKK,SAAS9V,GAC1BU,EAAIe,KAAKssC,QAAQiC,EAAWU,GAC5Bj5B,EAAIxZ,KAAKgJ,IAAIwQ,EAAG/W,EAAE+J,MAAQhJ,KAAKuf,QAAQomB,4BACvC3gC,GAAK/F,EAAE8J,OAAS/I,KAAKuf,QAAQqmB,6BAGjC5gC,GAAKhF,KAAKuf,QAAQqmB,6BAClB,MAEJ,IAAK,UAGD,IAFA5vB,EAAIk5B,EACJlqC,EAAI,EACCzG,EAAI,EAAGA,EAAIyV,EAAKK,SAASvW,OAAQS,IAClCgwC,EAAYv6B,EAAKK,SAAS9V,GAC1BU,EAAIe,KAAKssC,QAAQiC,EAAWU,GAC5Bj5B,EAAIxZ,KAAKgJ,IAAIwQ,EAAGk5B,EAAalvC,KAAKuf,QAAQimB,qBAAuBvmC,EAAE+J,OACnEhE,GAAK/F,EAAE8J,OAAS/I,KAAKuf,QAAQkmB,mBAEjCzgC,GAAKhF,KAAKuf,QAAQkmB,mBAClB,MAEJ,QACI,KAAM,yDAGd,MACJ,IAAK,KACL,IAAK,OAED,OAAQzxB,EAAKg7B,gBAET,IAAK,uBACL,IAAK,0BACD,MAEJ,IAAK,aAGD,IAFAh5B,EAAIk5B,EACJlqC,EAAImqC,EAAcnvC,KAAKuf,QAAQmmB,4BAC1BnnC,EAAI,EAAGA,EAAIyV,EAAKK,SAASvW,OAAQS,IAClCgwC,EAAYv6B,EAAKK,SAAS9V,GAC1BU,EAAIe,KAAKssC,QAAQiC,EAAWU,GAC5Bj5B,EAAIxZ,KAAKgJ,IAAIwQ,EAAG/W,EAAE+J,MAAQhJ,KAAKuf,QAAQomB,4BACvC3gC,GAAK/F,EAAE8J,OAAS/I,KAAKuf,QAAQqmB,6BAGjC5gC,GAAKhF,KAAKuf,QAAQqmB,6BAClB,MAEJ,IAAK,UAGD,IAFA5vB,EAAI,EACJhR,EAAI,EACCzG,EAAI,EAAGA,EAAIyV,EAAKK,SAASvW,OAAQS,IAClCgwC,EAAYv6B,EAAKK,SAAS9V,GAE1ByX,IADA/W,EAAIe,KAAKssC,QAAQiC,EAAWU,IACrBjmC,MAAQhJ,KAAKuf,QAAQimB,qBAC5BxgC,EAAIxI,KAAKgJ,IAAIR,EAAG/F,EAAE8J,OAAS/I,KAAKuf,QAAQkmB,mBAAqB0J,GAGjEn5B,GAAKhW,KAAKuf,QAAQimB,qBAClB,MAEJ,QACI,KAAM,wDAGd,MACJ,QACI,KAAM,mDAGd/iC,EAAS,IAAImJ,EAAKoK,EAAGhR,EACzB,CAIA,OAFAgP,EAAKq7B,YAAc7yC,KAAKgE,KAAMwV,EAAIA,EAAI,EAAMhR,EAAIA,EAAI,GACpDgP,EAAKpI,KAAOnJ,EACLA,CACX,EACA+pC,QAAS,SAASnpC,EAAG1E,GACjB,IAAIJ,EAAG+wC,EAAWt7B,EAAMu7B,EAShB1wC,EAAGC,EACH0wC,EAV+BnvC,EAAIgD,EAAEoQ,gBAAgBC,SACzDw7B,EAAa7uC,EAAE2I,MACfmmC,EAAc9uC,EAAE0I,OACpB,GAAI1M,EAAMwB,QAAQwF,EAAEgR,UAChBhR,EAAExE,EAAIF,EAAEE,EACRwE,EAAEvE,EAAIH,EAAEG,EACRuE,EAAEsrC,kBAAoB,IAAIhmC,EAAKhK,EAAEE,EAAGF,EAAEG,EAAGowC,EAAYC,QAKrD,OAAQ9rC,EAAEypC,eACN,IAAK,OACD,OAAQzpC,EAAE2rC,gBACN,IAAK,uBACL,IAAK,0BACD,MAEJ,IAAK,aAMD,IALAQ,EAAe7wC,EACf0E,EAAExE,EAAI2wC,EAAa3wC,EACnBwE,EAAEvE,EAAI0wC,EAAa1wC,EACnBuE,EAAEsrC,kBAAoB,IAAIhmC,EAAKtF,EAAExE,EAAGwE,EAAEvE,EAAGuE,EAAE2F,MAAO3F,EAAE0F,QACpDjK,EAAIH,EAAEG,EAAIqwC,EAAcnvC,KAAKuf,QAAQmmB,4BAChCnnC,EAAI,EAAGA,EAAIyV,EAAKK,SAASvW,OAAQS,IAClCyV,EAAOA,EAAKK,SAAS9V,GACrBM,EAAI2wC,EAAa3wC,EAAImV,EAAKP,gBAAgBzK,MAAQhJ,KAAKuf,QAAQomB,2BAC/D2J,EAAK,IAAIlwC,EAAMP,EAAGC,GAClBkB,KAAKwsC,QAAQx4B,EAAMs7B,GACnBxwC,GAAKkV,EAAKpI,KAAK7C,OAAS/I,KAAKuf,QAAQqmB,6BAEzC,MAEJ,IAAK,UAOD,IANA4J,EAAe,IAAIpwC,EAAMT,EAAEE,EAAIwE,EAAEuI,KAAK5C,MAAQkmC,EAAYvwC,EAAEG,GAAMuE,EAAEuI,KAAK7C,OAASomC,GAAe,GACjG9rC,EAAExE,EAAI2wC,EAAa3wC,EACnBwE,EAAEvE,EAAI0wC,EAAa1wC,EACnBuE,EAAEsrC,kBAAoB,IAAIhmC,EAAKtF,EAAExE,EAAGwE,EAAEvE,EAAGuE,EAAE2F,MAAO3F,EAAE0F,QACpDlK,EAAI2wC,EAAa3wC,EAAImB,KAAKuf,QAAQimB,qBAClC1mC,EAAIH,EAAEG,EACDP,EAAI,EAAGA,EAAI8E,EAAEgR,SAASvW,OAAQS,IAC/ByV,EAAO3Q,EAAEgR,SAAS9V,GAClB+wC,EAAK,IAAIlwC,EAAMP,EAAImV,EAAKpI,KAAK5C,MAAOlK,GACpCkB,KAAKwsC,QAAQx4B,EAAMs7B,GACnBxwC,GAAKkV,EAAKpI,KAAK7C,OAAS/I,KAAKuf,QAAQkmB,mBAEzC,MAEJ,QACI,KAAM,4BAGd,MACJ,IAAK,QACD,OAAQpiC,EAAE2rC,gBACN,IAAK,uBACL,IAAK,0BACD,MAEJ,IAAK,aASD,IARAQ,EAAe7wC,EACf0E,EAAExE,EAAI2wC,EAAa3wC,EACnBwE,EAAEvE,EAAI0wC,EAAa1wC,EACnBuE,EAAEsrC,kBAAoB,IAAIhmC,EAAKtF,EAAExE,EAAGwE,EAAEvE,EAAGuE,EAAE2F,MAAO3F,EAAE0F,QACpDlK,EAAIF,EAAEE,EAAIqwC,EAAalvC,KAAKuf,QAAQomB,2BAGpC7mC,EAAIH,EAAEG,EAAIqwC,EAAcnvC,KAAKuf,QAAQmmB,4BAChCnnC,EAAI,EAAGA,EAAI8E,EAAEgR,SAASvW,OAAQS,IAC/ByV,EAAO3Q,EAAEgR,SAAS9V,GAClB+wC,EAAK,IAAIlwC,EAAMP,EAAGC,GAClBkB,KAAKwsC,QAAQx4B,EAAMs7B,GACnBxwC,GAAKkV,EAAKpI,KAAK7C,OAAS/I,KAAKuf,QAAQqmB,6BAGzC,MAEJ,IAAK,UAOD,IANA4J,EAAe,IAAIpwC,EAAMT,EAAEE,EAAGF,EAAEG,GAAMuE,EAAEuI,KAAK7C,OAASomC,GAAe,GACrE9rC,EAAExE,EAAI2wC,EAAa3wC,EACnBwE,EAAEvE,EAAI0wC,EAAa1wC,EACnBuE,EAAEsrC,kBAAoB,IAAIhmC,EAAKtF,EAAExE,EAAGwE,EAAEvE,EAAGuE,EAAE2F,MAAO3F,EAAE0F,QACpDlK,EAAIF,EAAEE,EAAIqwC,EAAalvC,KAAKuf,QAAQimB,qBACpC1mC,EAAIH,EAAEG,EACDP,EAAI,EAAGA,EAAI8E,EAAEgR,SAASvW,OAAQS,IAC/ByV,EAAO3Q,EAAEgR,SAAS9V,GAClB+wC,EAAK,IAAIlwC,EAAMP,EAAGC,GAClBkB,KAAKwsC,QAAQx4B,EAAMs7B,GACnBxwC,GAAKkV,EAAKpI,KAAK7C,OAAS/I,KAAKuf,QAAQkmB,mBAEzC,MAEJ,QACI,KAAM,4BAGd,MACJ,IAAK,KAKD,GAJA+J,EAAe,IAAIpwC,EAAMT,EAAEE,GAAMwE,EAAEuI,KAAK5C,MAAQkmC,GAAc,EAAIvwC,EAAEG,EAAIuE,EAAEuI,KAAK7C,OAASomC,GACxF9rC,EAAExE,EAAI2wC,EAAa3wC,EACnBwE,EAAEvE,EAAI0wC,EAAa1wC,EACnBuE,EAAEsrC,kBAAoB,IAAIhmC,EAAKtF,EAAExE,EAAGwE,EAAEvE,EAAGuE,EAAE2F,MAAO3F,EAAE0F,QAChDvM,KAAKC,IAAI+yC,EAAa3wC,EAAIF,EAAEE,GAAKmmC,EAAS,CAG1C,IAFAuK,EAAgB,EAEXhxC,EAAI,EAAGA,EAAI8E,EAAEgR,SAASvW,OAAQS,IAE/BgxC,GADQlsC,EAAEgR,SAAS9V,GACIqN,KAAK5C,MAAQhJ,KAAKuf,QAAQimB,qBAErD+J,GAAiBvvC,KAAKuf,QAAQimB,qBAC9B3mC,EAAIF,EAAEE,GAAMqwC,EAAaK,GAAiB,CAC9C,MAEI1wC,EAAIF,EAAEE,EAGV,IAAKN,EAAI,EAAGA,EAAI8E,EAAEgR,SAASvW,OAAQS,IAC/ByV,EAAO3Q,EAAEgR,SAAS9V,GAClBO,EAAI0wC,EAAa1wC,EAAIkB,KAAKuf,QAAQkmB,mBAAqBzxB,EAAKpI,KAAK7C,OACjEumC,EAAK,IAAIlwC,EAAMP,EAAGC,GAClBkB,KAAKwsC,QAAQx4B,EAAMs7B,GACnBzwC,GAAKmV,EAAKpI,KAAK5C,MAAQhJ,KAAKuf,QAAQimB,qBAExC,MAEJ,IAAK,OAED,OAAQniC,EAAE2rC,gBACN,IAAK,uBACL,IAAK,0BACD,MACJ,IAAK,aAOD,IANAQ,EAAe7wC,EACf0E,EAAExE,EAAI2wC,EAAa3wC,EACnBwE,EAAEvE,EAAI0wC,EAAa1wC,EACnBuE,EAAEsrC,kBAAoB,IAAIhmC,EAAKtF,EAAExE,EAAGwE,EAAEvE,EAAGuE,EAAE2F,MAAO3F,EAAE0F,QACpDlK,EAAIF,EAAEE,EAAImB,KAAKuf,QAAQomB,2BACvB7mC,EAAIH,EAAEG,EAAIqwC,EAAcnvC,KAAKuf,QAAQmmB,4BAChCnnC,EAAI,EAAGA,EAAI8E,EAAEgR,SAASvW,OAAQS,IAC/ByV,EAAO3Q,EAAEgR,SAAS9V,GAClB+wC,EAAK,IAAIlwC,EAAMP,EAAGC,GAClBkB,KAAKwsC,QAAQx4B,EAAMs7B,GACnBxwC,GAAKkV,EAAKpI,KAAK7C,OAAS/I,KAAKuf,QAAQqmB,6BAEzC,MAEJ,IAAK,UAKD,GAJA4J,EAAe,IAAIpwC,EAAMT,EAAEE,GAAMwE,EAAEuI,KAAK5C,MAAQkmC,GAAc,EAAIvwC,EAAEG,GACpEuE,EAAExE,EAAI2wC,EAAa3wC,EACnBwE,EAAEvE,EAAI0wC,EAAa1wC,EACnBuE,EAAEsrC,kBAAoB,IAAIhmC,EAAKtF,EAAExE,EAAGwE,EAAEvE,EAAGuE,EAAE2F,MAAO3F,EAAE0F,QAChDvM,KAAKC,IAAI+yC,EAAa3wC,EAAIF,EAAEE,GAAKmmC,EAAS,CAG1C,IAFAuK,EAAgB,EAEXhxC,EAAI,EAAGA,EAAI8E,EAAEgR,SAASvW,OAAQS,IAE/BgxC,GADQlsC,EAAEgR,SAAS9V,GACIqN,KAAK5C,MAAQhJ,KAAKuf,QAAQimB,qBAGrD+J,GAAiBvvC,KAAKuf,QAAQimB,qBAC9B3mC,EAAIF,EAAEE,GAAMqwC,EAAaK,GAAiB,CAC9C,MAEI1wC,EAAIF,EAAEE,EAGV,IAAKN,EAAI,EAAGA,EAAI8E,EAAEgR,SAASvW,OAAQS,IAC/ByV,EAAO3Q,EAAEgR,SAAS9V,GAClBO,EAAI0wC,EAAa1wC,EAAIkB,KAAKuf,QAAQkmB,mBAAqB0J,EACvDG,EAAK,IAAIlwC,EAAMP,EAAGC,GAClBkB,KAAKwsC,QAAQx4B,EAAMs7B,GACnBzwC,GAAKmV,EAAKpI,KAAK5C,MAAQhJ,KAAKuf,QAAQimB,qBAExC,MAEJ,QACI,KAAM,4BAEd,MAEJ,IAAK,OACD,MAEJ,QACI,KAAM,4BAGtB,EACAyG,aAAc,WACV,GAAKjsC,KAAKc,SAINzE,EAAMwB,QAAQmC,KAAKc,OAAOuT,UAA9B,CAIA,IAIIo7B,EAAQC,EAAMC,EAAQC,EAJtBpyC,EAAOwC,KAAKuf,QAAQ6lB,QACpB/oC,EAAMO,YAAYY,KAClBA,EAAO,QAGX,IAAI6W,EAAWrU,KAAKc,OAAOuT,SAC3B,OAAQ7W,EAAK+P,eACT,IAAK,SACL,IAAK,aACDvN,KAAK+sC,mBACL,MAEJ,IAAK,oBACL,IAAK,UACD0C,EAASzvC,KAAKc,OAAOuT,SAEe,IAAhCrU,KAAKc,OAAOuT,SAASvW,OACrBkC,KAAKysC,YAAYgD,IAIjBG,EAAYv7B,EAASvW,OAAS,EAC9B4xC,EAAO3qC,EAAK/E,KAAKc,OAAOuT,UAAU,SAAShR,GACvC,OAAOhH,EAAMyF,QAAQuS,EAAUhR,GAAKusC,CACxC,IACAD,EAAS5qC,EAAK/E,KAAKc,OAAOuT,UAAU,SAAShR,GACzC,OAAOhH,EAAMyF,QAAQuS,EAAUhR,IAAMusC,CACzC,IAEA5vC,KAAKksC,WAAWwD,GAChB1vC,KAAKysC,YAAYkD,IAErB,MAEJ,IAAK,kBACDF,EAASzvC,KAAKc,OAAOuT,SAEe,IAAhCrU,KAAKc,OAAOuT,SAASvW,OACrBkC,KAAK4sC,WAAW6C,IAIhBG,EAAYv7B,EAASvW,OAAS,EAC9B4xC,EAAO3qC,EAAK/E,KAAKc,OAAOuT,UAAU,SAAShR,GACvC,OAAOhH,EAAMyF,QAAQuS,EAAUhR,GAAKusC,CACxC,IACAD,EAAS5qC,EAAK/E,KAAKc,OAAOuT,UAAU,SAAShR,GACzC,OAAOhH,EAAMyF,QAAQuS,EAAUhR,IAAMusC,CACzC,IACA5vC,KAAK0sC,SAASgD,GACd1vC,KAAK4sC,WAAW+C,IAEpB,MAEJ,IAAK,QACD3vC,KAAKysC,YAAYzsC,KAAKc,OAAOuT,UAC7B,MAEJ,IAAK,OACDrU,KAAKksC,WAAWlsC,KAAKc,OAAOuT,UAC5B,MAEJ,IAAK,KACL,IAAK,SACDrU,KAAK0sC,SAAS1sC,KAAKc,OAAOuT,UAC1B,MAEJ,IAAK,OACL,IAAK,MACDrU,KAAK4sC,WAAW5sC,KAAKc,OAAOuT,UAC5B,MAEJ,IAAK,UACL,IAAK,cACD,GAAIrU,KAAKuf,QAAQswB,sBAAwB,EACrC,KAAM,mDAEV7vC,KAAKutC,YAAYvtC,KAAKc,OAAOuT,SAAUrU,KAAKuf,QAAQswB,uBA/E5D,CAsFJ,IAOAC,EAAa5K,EAAWphC,OAAO,CAC/BC,KAAM,SAAS/H,GAGX,GADAkpC,EAAWjzB,GAAGlO,KAAK7G,KADR8C,MAEP3D,EAAMO,YAAYZ,GAClB,KAAM,wBAEVgE,KAAKhE,QAAUA,CACnB,EAKAs2B,OAAQ,SAAS/S,GAEbvf,KAAK4nC,gBAAgBroB,GAGrB,IAAIwwB,EAAU,IAAIlI,EAA0B7nC,KAAKhE,SAMjDgE,KAAK4e,MAAQmxB,EAAQvH,UAErB,IAAIgC,EAAexqC,KAAKgwC,mBAIxB,OAAO,IAAIh0C,EAAQyuC,YAAYzqC,KAAKhE,QAASwuC,EACjD,EAEAwF,iBAAkB,WACd,IAAIhwC,KAAK4e,MAAM/gB,UAAf,CAKA,IAAI6Z,EAAa1X,KAAK4e,MAAMvH,yBAC5B,IAAIhb,EAAMwB,QAAQ6Z,GAAlB,CAOA,IAHA,IAAI4a,EAAS,IAAIyZ,EAAoB/rC,KAAKuf,SACtCnB,EAAQ,GAEH7f,EAAI,EAAGA,EAAImZ,EAAW5Z,OAAQS,IAAK,CACxC,IAAImd,EAAYhE,EAAWnZ,GAEvBytC,EAAYhsC,KAAKiwC,QAAQv0B,GAC7B,IAAKswB,EACD,KAAM,oDAEV,IAAI70B,EAAO60B,EAAU70B,KACjBc,EAAO+zB,EAAU/zB,KACrBqa,EAAOA,OAAOra,EAAMd,GAEpBiH,EAAMxf,KAAKqZ,EACf,CAEA,OAAOjY,KAAK6mC,qBAAqBzoB,EAnBjC,CANA,CA2BJ,EAQA6xB,QAAS,SAASrxB,GACd,IAAIzH,EAAO,KACX,GAAInX,KAAKuf,QAAQ8lB,OAASrlC,KAAKuf,QAAQ8lB,MAAMvnC,OAAS,EAClD,IAAK,IAAIS,EAAI,EAAG6J,EAAMwW,EAAMpI,MAAM1Y,OAAQS,EAAI6J,EAAK7J,IAE/C,IADA,IAAIyV,EAAO4K,EAAMpI,MAAMjY,GACdsI,EAAI,EAAGA,EAAI7G,KAAKuf,QAAQ8lB,MAAMvnC,OAAQ+I,IAAK,CAEhD,GADqB7G,KAAKuf,QAAQ8lB,MAAMx+B,KACjBmN,EAAKP,gBAAiB,CACzC0D,EAAOnD,EACP,KACJ,CACJ,CAGR,IAAKmD,KAEDA,EAAOyH,EAAMzH,QAGT,KAAM,sCAGd,OAAOnX,KAAKkwC,eAAetxB,EAAOzH,EACtC,EAEA+4B,eAAgB,SAAStxB,EAAOzH,GAE5B,IAAIc,EAAO2G,EAAM5G,gBAAgBb,GACjC,OAAI9a,EAAMO,YAAYqb,IAASA,EAAKpa,UACzB,KAEJ,CACHoa,KAAMA,EACNd,KAAMc,EAAKd,KAEnB,IAQAg5B,EAAgBjL,EAAWphC,OAAO,CAClCC,KAAM,SAAS/H,GAGX,GADAkpC,EAAWjzB,GAAGlO,KAAK7G,KADR8C,MAEP3D,EAAMO,YAAYZ,GAClB,KAAM,4BAEVgE,KAAKhE,QAAUA,CACnB,EAEAs2B,OAAQ,SAAS/S,GAEbvf,KAAK4nC,gBAAgBroB,GAErB,IACIX,EADU,IAAIipB,EAA0B7nC,KAAKhE,SAC7BwsC,QAAQjpB,GAC5B,IAAIX,EAAM/gB,UAAV,CAIA,IAAI6Z,EAAakH,EAAMvH,yBACvB,IAAIhb,EAAMwB,QAAQ6Z,GAAlB,CAGA,IAAK,IAAInZ,EAAI,EAAGA,EAAImZ,EAAW5Z,OAAQS,IAAK,CACxC,IAAImd,EAAYhE,EAAWnZ,GAC3ByB,KAAKogB,YAAY1E,EAAW6D,EAChC,CACA,IAAIirB,EAAexqC,KAAK6mC,qBAAqBnvB,GAC7C,OAAO,IAAI1b,EAAQyuC,YAAYzqC,KAAKhE,QAASwuC,EAN7C,CALA,CAaJ,EAMA4F,uBAAwB,WACpB,IAAK,IAAItpC,EAAI,EAAGA,EAAI9G,KAAK4e,MAAMpI,MAAM1Y,OAAQgJ,IAAK,CAC9C,IAAIkN,EAAOhU,KAAK4e,MAAMpI,MAAM1P,GAC5BkN,EAAKq8B,OAAS,EACdr8B,EAAKs8B,oBAAsB,EAC3Bt8B,EAAKu8B,kBAAoB,EAEzBv8B,EAAKH,WAAY,EAEjBG,EAAKw8B,YAAc,EACnBx8B,EAAKy8B,YAAc,EAEnBz8B,EAAK08B,iBAAmB,EACxB18B,EAAK28B,mBAAqB,EAE1B38B,EAAK48B,aAAe,CACxB,CACJ,EACAC,SAAU,SAASjyB,GACf,IAAkBrgB,EAAGoqC,EAAGz0B,EAKpB48B,EAAal+B,EAAM3O,EALnB6O,EAAU,GAGVi+B,EAAW,IAAIj/B,EACfk/B,EAAa,EAUjB,IAPA30C,EAAMgF,QAAQud,EAAMpI,OAAO,SAASxC,GACH,IAAzBA,EAAKT,SAASzV,SACdizC,EAAS//B,IAAIgD,EAAM,GACnBlB,EAAQlU,KAAKoV,GAErB,IAEOlB,EAAQhV,OAAS,GAEpB,IADA8U,EAAOE,EAAQm+B,QACV1yC,EAAI,EAAGA,EAAIqU,EAAKU,SAASxV,OAAQS,IAElC0F,GADAiQ,EAAOtB,EAAKU,SAAS/U,IACP0F,OAGV6sC,EADAC,EAAS9/B,YAAYhN,GACPzH,KAAKgJ,IAAIurC,EAASjgC,IAAI8B,GAAQ,EAAGm+B,EAASjgC,IAAI7M,IAE9C8sC,EAASjgC,IAAI8B,GAAQ,EAEvCm+B,EAAS//B,IAAI/M,EAAQ6sC,GACjBA,EAAcE,IACdA,EAAaF,GAGZ9uC,EAAS8Q,EAAS7O,IACnB6O,EAAQlU,KAAKqF,GAKzB,IA2BIosC,EA3BAa,EAAcH,EAASx+B,OAE3B2+B,EAAY9tC,MAAK,SAASoF,EAAI2oC,GAC1B,IAAIC,EAAUL,EAASjgC,IAAItI,GACvB6oC,EAAUN,EAASjgC,IAAIqgC,GAC3B,OAAO90C,EAAMsE,KAAK0wC,EAAUD,EAChC,IAEA,IAAK,IAAI/tC,EAAI,EAAGA,EAAI6tC,EAAYpzC,SAAUuF,EAAG,CACzC,IAAI2Q,EAAOk9B,EAAY7tC,GACnBiuC,EAAWhhC,OAAOC,UAEtB,GAA6B,IAAzByD,EAAKV,SAASxV,OAAlB,CAIA,IAAK6qC,EAAI,EAAGA,EAAI30B,EAAKV,SAASxV,SAAU6qC,EACpCz0B,EAAOF,EAAKV,SAASq1B,GACrB2I,EAAW90C,KAAKiJ,IAAI6rC,EAAUP,EAASjgC,IAAIoD,EAAKjQ,SAGhDqtC,EAAW,GACXP,EAAS//B,IAAIgD,EAAMs9B,EAAW,EARlC,CAUJ,CAIA,IAFAtxC,KAAKuxC,OAAS,GAEThzC,EAAI,EAAGA,EAAIyyC,EAAa,EAAGzyC,KAC5B8xC,EAAQ,IACFmB,QAAU,CAAC,EACjBxxC,KAAKuxC,OAAO3yC,KAAKyxC,GASrB,IANAU,EAAS1vC,SAAQ,SAAS2S,EAAMq8B,GAC5Br8B,EAAKq8B,MAAQA,EACbrwC,KAAKuxC,OAAOlB,GAAOzxC,KAAKoV,EAC5B,GAAGhU,MAGE2oC,EAAI,EAAGA,EAAI3oC,KAAKuxC,OAAOzzC,OAAQ6qC,IAEhC,IADA0H,EAAQrwC,KAAKuxC,OAAO5I,GACfpqC,EAAI,EAAGA,EAAI8xC,EAAMvyC,OAAQS,IAC1B8xC,EAAM9xC,GAAGqyC,aAAeryC,CAGpC,EAIA6hB,YAAa,SAASxB,EAAOW,GACzB,GAAIljB,EAAMO,YAAYgiB,GAClB,KAAM,0DAENviB,EAAMK,UAAU6iB,IAChBvf,KAAK4nC,gBAAgBroB,GAEzBvf,KAAK4e,MAAQA,EAGbA,EAAMrH,iBAGN,IAAIiG,EAAgBoB,EAAM3C,cAG1Bjc,KAAKowC,yBAELpwC,KAAK6wC,SAASjyB,EAAOW,GAErBvf,KAAKyxC,WAELzxC,KAAK0xC,qBAEL1xC,KAAK2xC,aAEL3xC,KAAK4xC,eAEL5xC,KAAK6xC,oBAEL7xC,KAAK8xC,aAGLz1C,EAAMgF,QAAQmc,GAAe,SAASnP,GAC9BA,EAAE5P,QACF4P,EAAE5P,OAAO0H,SAEjB,GACJ,EAEA4rC,WAAY,SAAS7xC,EAAGmD,EAAG2uC,GACvB,IAAIrJ,EAAIzoC,EAAEmwC,MACN9xC,EAAI2B,EAAE+xC,WACVjyC,KAAKkyC,aAAavJ,GAAGpqC,GAAKyzC,CAC9B,EAEAG,WAAY,SAASjyC,EAAGmD,GAQpB,IAPA,IAAI+uC,EAAO,EACPC,EAAKnyC,EAAE+xC,WACPK,EAAKjvC,EAAE4uC,WACPtJ,EAAIzoC,EAAEmwC,MACN5qC,EAAMjJ,KAAKiJ,IAAI4sC,EAAIC,GACnB9sC,EAAMhJ,KAAKgJ,IAAI6sC,EAAIC,GAEdxrC,EAAIrB,EAAKqB,EAAItB,IAAOsB,EACzBsrC,GAAQpyC,KAAKkyC,aAAavJ,GAAG7hC,GAEjC,OAAOsrC,CACX,EAEAG,iBAAkB,SAASC,GAEvB,IADA,IAAgCnvC,EAAG2Q,EAA/By+B,EAAU,IAAI3gC,EACTpR,EAAI,EAAGA,EAAIV,KAAKuxC,OAAOzzC,SAAU4C,EAAG,CACzC,IAAIgyC,EAAaF,EAAY9xC,GAC7B,GAAKgyC,EAAL,CAIA,IAAKrvC,EAAI,EAAGA,EAAIqvC,EAAW50C,OAAQuF,IAC/B2Q,EAAO0+B,EAAWrvC,GACbovC,EAAQxhC,YAAY+C,IACrBhU,KAAK2yC,UAAU3+B,EAAMy+B,EAAS/xC,GAKtC,IAAIP,EAAImQ,OAAOsiC,kBACf,IAAKvvC,EAAI,EAAGA,EAAIqvC,EAAW50C,OAAQuF,IAAK,CACpC2Q,EAAO0+B,EAAWrvC,GAClB,IAAIwvC,EAAe7yC,KAAK6yC,aAAa7+B,GACjC6+B,GAAgB7yC,KAAK8yC,cAAchiC,IAAI+hC,KAAkBnyC,IACzDP,EAAI3D,KAAKiJ,IAAItF,EAAGsyC,EAAQ3hC,IAAI+hC,GAAgBJ,EAAQ3hC,IAAIkD,GAAQhU,KAAKmyC,WAAWn+B,EAAM6+B,IAE9F,CACA,GAAI1yC,IAAMmQ,OAAOsiC,kBAAmB,CAChC,IAAIG,EAAI,GACR,IAAK1vC,EAAI,EAAGA,EAAIqvC,EAAW50C,OAAQuF,IAAK,CACpC2Q,EAAO0+B,EAAWrvC,GAClB,IAAI6R,EAAY,GAChB7Y,EAAMiH,SAAS4R,EAAWlV,KAAKgzC,QAAQliC,IAAIkD,IAC3C3X,EAAMiH,SAAS4R,EAAWlV,KAAKizC,UAAUniC,IAAIkD,IAE7C,IAAK,IAAI3F,EAAI,EAAGA,EAAI6G,EAAUpX,OAAQuQ,IAAK,CACvC,IAAI6kC,EAAWh+B,EAAU7G,GACrBrO,KAAK8yC,cAAchiC,IAAIoiC,GAAYxyC,GACnCqyC,EAAEn0C,KAAK6zC,EAAQ3hC,IAAIoiC,GAAYT,EAAQ3hC,IAAIkD,GAEnD,CACJ,CACA++B,EAAE3vC,OAEEjD,EADa,IAAb4yC,EAAEj1C,OACE,EAECi1C,EAAEj1C,OAAS,GAAM,EAClBi1C,EAAE/yC,KAAKmzC,OAAOJ,EAAEj1C,OAAQ,KAGvBi1C,EAAE/yC,KAAKmzC,OAAOJ,EAAEj1C,OAAQ,GAAK,GAAKi1C,EAAE/yC,KAAKmzC,OAAOJ,EAAEj1C,OAAQ,KAAO,CAE9E,CACA,IAAKuF,EAAI,EAAGA,EAAIqvC,EAAW50C,OAAQuF,IAC/B2Q,EAAO0+B,EAAWrvC,GAClBovC,EAAQzhC,IAAIgD,EAAMy+B,EAAQ3hC,IAAIkD,GAAQ7T,EA9C1C,CAgDJ,CACA,OAAOsyC,CACX,EAEAW,iBAAkB,SAASC,GAEvB,IADA,IAAiChwC,EAAG2Q,EAAhCs/B,EAAW,IAAIxhC,EACVpR,EAAI,EAAGA,EAAIV,KAAKuxC,OAAOzzC,SAAU4C,EAAG,CACzC,IAAIgyC,EAAaW,EAAa3yC,GAC9B,GAAKgyC,EAAL,CAIA,IAAKrvC,EAAI,EAAGA,EAAIqvC,EAAW50C,OAAQuF,IAC/B2Q,EAAO0+B,EAAWrvC,GACbiwC,EAASriC,YAAY+C,IACtBhU,KAAKuzC,WAAWv/B,EAAMs/B,EAAU5yC,GAKxC,IAAIP,EAAImQ,OAAOkjC,kBACf,IAAKnwC,EAAI,EAAGA,EAAIqvC,EAAW50C,OAAQuF,IAAK,CACpC2Q,EAAO0+B,EAAWrvC,GAClB,IAAIowC,EAAczzC,KAAKyzC,YAAYz/B,GAC/By/B,GAAezzC,KAAK0zC,eAAe5iC,IAAI2iC,KAAiB/yC,IACxDP,EAAI3D,KAAKgJ,IAAIrF,EAAGmzC,EAASxiC,IAAI2iC,GAAeH,EAASxiC,IAAIkD,GAAQhU,KAAKmyC,WAAWsB,EAAaz/B,IAEtG,CACA,GAAI7T,IAAMmQ,OAAOkjC,kBAAmB,CAChC,IAAIT,EAAI,GACR,IAAK1vC,EAAI,EAAGA,EAAIqvC,EAAW50C,OAAQuF,IAAK,CACpC2Q,EAAO0+B,EAAWrvC,GAClB,IAAI6R,EAAY,GAChB7Y,EAAMiH,SAAS4R,EAAWlV,KAAKgzC,QAAQliC,IAAIkD,IAC3C3X,EAAMiH,SAAS4R,EAAWlV,KAAKizC,UAAUniC,IAAIkD,IAE7C,IAAK,IAAI3F,EAAI,EAAGA,EAAI6G,EAAUpX,OAAQuQ,IAAK,CACvC,IAAI6kC,EAAWh+B,EAAU7G,GACrBrO,KAAK0zC,eAAe5iC,IAAIoiC,GAAYxyC,GACpCqyC,EAAEn0C,KAAK00C,EAASxiC,IAAIkD,GAAQs/B,EAASxiC,IAAIoiC,GAEjD,CACJ,CACAH,EAAE3vC,OAEEjD,EADa,IAAb4yC,EAAEj1C,OACE,EAECi1C,EAAEj1C,OAAS,GAAM,EAClBi1C,EAAE/yC,KAAKmzC,OAAOJ,EAAEj1C,OAAQ,KAGvBi1C,EAAE/yC,KAAKmzC,OAAOJ,EAAEj1C,OAAQ,GAAK,GAAKi1C,EAAE/yC,KAAKmzC,OAAOJ,EAAEj1C,OAAQ,KAAO,CAE9E,CACA,IAAKuF,EAAI,EAAGA,EAAIqvC,EAAW50C,OAAQuF,IAC/B2Q,EAAO0+B,EAAWrvC,GAClBiwC,EAAStiC,IAAIgD,EAAMs/B,EAASxiC,IAAIkD,GAAQ7T,EA9C5C,CAgDJ,CACA,OAAOmzC,CACX,EAEAK,aAAc,WACV,IAAIC,EAAW,CAAEv1C,MAAO,MACpBoE,EAASzC,KAAK6zC,eAAeD,EAAU,GAE3C,OADA5zC,KAAK8yC,cAAgBc,EAASv1C,MACvBoE,CACX,EAEAqxC,cAAe,WACX,IAAIC,EAAY,CAAE11C,MAAO,MACrBoE,EAASzC,KAAK6zC,eAAeE,GAAY,GAE7C,OADA/zC,KAAK0zC,eAAiBK,EAAU11C,MACzBoE,CACX,EAEAoxC,eAAgB,SAASG,EAAU7zC,GAI/B,IAHA,IAAI8zC,EAAc,EACdC,EAAOF,EAAS31C,MAAQ,IAAIyT,EAEvB62B,EAAI,EAAGA,EAAI3oC,KAAKuxC,OAAOzzC,SAAU6qC,EAAG,CACzCsL,EAActL,EAGd,IADA,IAAI0H,EAAQrwC,KAAKuxC,OAAO5I,GACftlC,EAAU,IAANlD,EAAU,EAAIkwC,EAAMvyC,OAAS,EAAGuF,GAAK,GAAKA,EAAIgtC,EAAMvyC,OAAQuF,GAAKlD,EAAG,CAC7E,IAAI6T,EAAOq8B,EAAMhtC,GACjB,GAAK6wC,EAAKjjC,YAAY+C,GAWlBigC,EAAcC,EAAKpjC,IAAIkD,QATvB,GADAkgC,EAAKljC,IAAIgD,EAAMigC,GACXjgC,EAAKH,UAEL,IADA,IAAIsgC,EAASn0C,KAAKo0C,aAAapgC,GACtBuJ,EAAK,EAAGA,EAAK42B,EAAOr2C,OAAQyf,IAAM,CACvC,IAAI82B,EAAQF,EAAO52B,GACnB22B,EAAKljC,IAAIqjC,EAAOJ,EACpB,CAMZ,CACJ,CAGA,IADA,IAAIK,EAAQ,GACH/1C,EAAI,EAAGA,EAAIyB,KAAKuxC,OAAOzzC,OAAQS,IACpC+1C,EAAM11C,KAAK,MASf,OAPAs1C,EAAK7yC,SAAQ,SAAS2S,EAAMugC,GACE,OAAtBD,EAAMC,KACND,EAAMC,GAAc,IAExBD,EAAMC,GAAY31C,KAAKoV,EAC3B,IAEOsgC,CACX,EACAE,kBAAmB,WACf,MAA8C,OAAvCx0C,KAAKuf,QAAQ6lB,QAAQ73B,eAAiE,SAAvCvN,KAAKuf,QAAQ6lB,QAAQ73B,eAAmE,aAAvCvN,KAAKuf,QAAQ6lB,QAAQ73B,aAChI,EAEAknC,oBAAqB,WACjB,MAA8C,UAAvCz0C,KAAKuf,QAAQ6lB,QAAQ73B,eAAoE,SAAvCvN,KAAKuf,QAAQ6lB,QAAQ73B,eAAmE,eAAvCvN,KAAKuf,QAAQ6lB,QAAQ73B,aACnI,EACAmnC,oBAAqB,WAEjB,MAA8C,UAAvC10C,KAAKuf,QAAQ6lB,QAAQ73B,eAAoE,SAAvCvN,KAAKuf,QAAQ6lB,QAAQ73B,aAClF,EACAskC,kBAAmB,WACf,IAAItzC,EAAGoqC,EAAG30B,EAAMq8B,EAAOhtC,EAAG2S,EAE1B,IAAK2yB,EAAI,EAAGA,EAAI3oC,KAAKuxC,OAAOzzC,SAAU6qC,GAClC0H,EAAQrwC,KAAKuxC,OAAO5I,IACdvlC,KAAKpD,KAAK20C,uBAIpB,IADA30C,KAAKkyC,aAAe,GACfvJ,EAAI,EAAGA,EAAI3oC,KAAKuxC,OAAOzzC,SAAU6qC,EAGlC,IAFA0H,EAAQrwC,KAAKuxC,OAAO5I,GACpB3oC,KAAKkyC,aAAavJ,GAAK,GAClBtlC,EAAI,EAAGA,EAAIgtC,EAAMvyC,SAAUuF,GAC5B2Q,EAAOq8B,EAAMhtC,IACR4uC,WAAa5uC,EAClBrD,KAAKkyC,aAAavJ,GAAGtlC,GAAKrD,KAAKuf,QAAQ+lB,aACnCjiC,EAAIgtC,EAAMvyC,OAAS,IACfkC,KAAKw0C,oBACLx0C,KAAKkyC,aAAavJ,GAAGtlC,KAAO2Q,EAAKhL,MAAQqnC,EAAMhtC,EAAI,GAAG2F,OAAS,EAG/DhJ,KAAKkyC,aAAavJ,GAAGtlC,KAAO2Q,EAAKjL,OAASsnC,EAAMhtC,EAAI,GAAG0F,QAAU,GAkCjF,IA5BA/I,KAAKizC,UAAY,IAAInhC,EACrB9R,KAAKgzC,QAAU,IAAIlhC,EACnBzV,EAAMgF,QAAQrB,KAAK4e,MAAMpI,OAAO,SAASxC,GACrChU,KAAKizC,UAAUjiC,IAAIgD,EAAM,IACzBhU,KAAKgzC,QAAQhiC,IAAIgD,EAAM,GAC3B,GAAGhU,MACH3D,EAAMgF,QAAQrB,KAAK4e,MAAMvL,OAAO,SAASa,GACrC,IAAIjO,EAASiO,EAAKjW,OACd22C,EAAO1gC,EAAKjQ,OACZ4oC,EAAO,KAAMF,EAAK,KAClB1mC,EAAOoqC,MAAQuE,EAAKvE,OACpBxD,EAAO34B,EAAKjW,OACZ0uC,EAAKz4B,EAAKjQ,SAGV0oC,EAAKz4B,EAAKjW,OACV4uC,EAAO34B,EAAKjQ,QAEhBjE,KAAKizC,UAAUniC,IAAI67B,GAAI/tC,KAAKiuC,GAC5B7sC,KAAKgzC,QAAQliC,IAAI+7B,GAAMjuC,KAAK+tC,EAChC,GAAG3sC,MACHA,KAAKizC,UAAU5gC,cAAa,SAASlQ,GACjCA,EAAKiB,KAAKpD,KAAK20C,sBACnB,GAAG30C,MACHA,KAAKgzC,QAAQ3gC,cAAa,SAASlQ,GAC/BA,EAAKiB,KAAKpD,KAAK20C,sBACnB,GAAG30C,MAEE2oC,EAAI,EAAGA,EAAI3oC,KAAKuxC,OAAOzzC,OAAS,IAAK6qC,EAEtC,IADA0H,EAAQrwC,KAAKuxC,OAAO5I,GACf3yB,EAAI,EAAGA,EAAIq6B,EAAMvyC,OAAS,EAAGkY,IAAK,CACnC,IAAI6+B,EAAcxE,EAAMr6B,GACxB,GAAK6+B,EAAYhhC,UAAjB,CAIA,IAAIihC,EAAW90C,KAAKizC,UAAUniC,IAAI+jC,GAAa,GAC/C,GAAKC,EAASjhC,UAId,IAAKxQ,EAAI2S,EAAI,EAAG3S,EAAIgtC,EAAMvyC,SAAUuF,EAEhC,IADA2Q,EAAOq8B,EAAMhtC,IACHwQ,UAAV,CAIA,IAAIkhC,EAAW/0C,KAAKizC,UAAUniC,IAAIkD,GAAM,GACxC,GAAK+gC,EAASlhC,WAIVihC,EAASlE,aAAemE,EAASnE,aAAc,CAC/C,IAAIltC,EAAMoxC,EAASlE,aACnBkE,EAASlE,aAAemE,EAASnE,aACjCmE,EAASnE,aAAeltC,EACxB,IAAI2uC,EAAKyC,EAAS7C,WACdK,EAAKyC,EAAS9C,WAClBjyC,KAAKuxC,OAAO5I,EAAI,GAAG0J,GAAM0C,EACzB/0C,KAAKuxC,OAAO5I,EAAI,GAAG2J,GAAMwC,EACzBA,EAAS7C,WAAaK,EACtByC,EAAS9C,WAAaI,CAC1B,CAjBA,CAXJ,CA8BJ,CAIJ,IAAIG,EAAcxyC,KAAK2zC,eACnBN,EAAerzC,KAAK8zC,gBAGpBrB,EAAUzyC,KAAKuyC,iBAAiBC,GAChCc,EAAWtzC,KAAKozC,iBAAiBC,GACjCx0C,EAAI,IAAIiT,EACZzV,EAAMgF,QAAQrB,KAAK4e,MAAMpI,OAAO,SAASxC,GACrCnV,EAAEmS,IAAIgD,GAAOy+B,EAAQ3hC,IAAIkD,GAAQs/B,EAASxiC,IAAIkD,IAAS,EAC3D,IAGA,IAAIghC,EAAQ,IAAIljC,EACZmjC,EAAS,IAAInjC,EACjB,IAAK62B,EAAI,EAAGA,EAAI3oC,KAAKuxC,OAAOzzC,SAAU6qC,EAAG,CACrC0H,EAAQrwC,KAAKuxC,OAAO5I,GACpB,IAAIuM,GAAiB,EACrB,IAAK7xC,EAAI,EAAGA,EAAIgtC,EAAMvyC,SAAUuF,EAC5B2Q,EAAOq8B,EAAMhtC,GACb2xC,EAAMhkC,IAAIgD,EAAM,GAChBihC,EAAOjkC,IAAIgD,GAAM,GACbA,EAAKH,aACkB,IAAnBqhC,GAGKA,IAAkB7xC,EAAI,IAK3B2xC,EAAMhkC,IAAIq/B,EAAM6E,GAAgB,GAC5Br2C,EAAEiS,IAAIkD,GAAQnV,EAAEiS,IAAIu/B,EAAM6E,MAAoBl1C,KAAKmyC,WAAW9B,EAAM6E,GAAgBlhC,GACpFihC,EAAOjkC,IAAIq/B,EAAM6E,IAAgB,GAGjCD,EAAOjkC,IAAIq/B,EAAM6E,IAAgB,IAZrCA,EAAgB7xC,EAkBhC,CAEAhH,EAAMgF,QADW,CAAC,GAAI,IACI,SAASlB,GAE/B,IADA,IACSwoC,EADS,IAANxoC,EAAU,EAAIH,KAAKuxC,OAAOzzC,OAAS,EAC3B6qC,GAAK,GAAKA,EAAI3oC,KAAKuxC,OAAOzzC,OAAQ6qC,GAAKxoC,EAAG,CAC1D,IAAIkwC,EAAQrwC,KAAKuxC,OAAO5I,GACpBwM,EAAoBn1C,KAAKo1C,kBAAkB/E,GAC3CgF,EAAe,KACfC,EAAW,KACf,IAA2B,IAAvBH,EAGA,IAFAE,EAAehF,EAAM8E,GACrBG,EAAW,GACN/2C,EAAI,EAAGA,EAAI42C,EAAmB52C,IAC/B+2C,EAAS12C,KAAKyxC,EAAM9xC,SAIxB82C,EAAe,KACfC,EAAWjF,EAEf,GAAIiF,EAASx3C,OAAS,EAAG,CAErB,IADAkC,KAAKu1C,WAAW12C,EAAG,KAAMw2C,EAAcl1C,EAAGm1C,GACrC/2C,EAAI,EAAGA,EAAI+2C,EAASx3C,OAAS,IAAKS,EACnCyB,KAAK+xC,WAAWuD,EAAS/2C,GAAI+2C,EAAS/2C,EAAI,GAAIM,EAAEiS,IAAIwkC,EAAS/2C,EAAI,IAAMM,EAAEiS,IAAIwkC,EAAS/2C,KAEtF82C,GACAr1C,KAAK+xC,WAAWuD,EAASA,EAASx3C,OAAS,GAAIu3C,EAAcx2C,EAAEiS,IAAIukC,GAAgBx2C,EAAEiS,IAAIwkC,EAASA,EAASx3C,OAAS,IAE5H,CAEA,KAAOu3C,GAAc,CACjB,IAAIG,EAAax1C,KAAKy1C,gBAAgBpF,EAAOgF,GAC7C,GAAKG,GAcA,GAAIR,EAAMlkC,IAAIukC,KAAkBl1C,EAAG,CACpCg1C,EAAoBE,EAAapD,WACjC,IAAIyD,EAAkBF,EAAWvD,WAEjC,IADAqD,EAAW,GACN/2C,EAAI42C,EAAoB,EAAG52C,EAAIm3C,EAAiBn3C,IACjD+2C,EAAS12C,KAAKyxC,EAAM9xC,IAEpB+2C,EAASx3C,OAAS,GAClBkC,KAAKu1C,WAAW12C,EAAGw2C,EAAcG,EAAYr1C,EAAGm1C,GAEpDL,EAAOjkC,IAAIqkC,GAAc,EAC7B,MAzBiB,CAGb,IAFAF,EAAoBE,EAAapD,WACjCqD,EAAW,GACN/2C,EAAI42C,EAAoB,EAAG52C,EAAI8xC,EAAMvyC,OAAQS,IAC9C+2C,EAAS12C,KAAKyxC,EAAM9xC,IAExB,GAAI+2C,EAASx3C,OAAS,EAAG,CAErB,IADAkC,KAAKu1C,WAAW12C,EAAGw2C,EAAc,KAAMl1C,EAAGm1C,GACrC/2C,EAAI,EAAGA,EAAI+2C,EAASx3C,OAAS,IAAKS,EACnCyB,KAAK+xC,WAAWuD,EAAS/2C,GAAI+2C,EAAS/2C,EAAI,GAAIM,EAAEiS,IAAIwkC,EAAS/2C,EAAI,IAAMM,EAAEiS,IAAIwkC,EAAS/2C,KAE1FyB,KAAK+xC,WAAWsD,EAAcC,EAAS,GAAIz2C,EAAEiS,IAAIwkC,EAAS,IAAMz2C,EAAEiS,IAAIukC,GAC1E,CACJ,CAaAA,EAAeG,CACnB,CACAx1C,KAAK21C,iBAAiBhN,EAAGxoC,EAAG60C,EAAOC,EACvC,CACJ,GAAGj1C,MAGH,IACsC8G,EAAG8uC,EADrCC,EAAiB71C,KAAK00C,sBAAwB,EAAI10C,KAAKuxC,OAAOzzC,OAAS,EASvEg4C,EAAiB91C,KAAK00C,sBAAwB,GAAM,EAAGhtC,EAAS,EAKpE,SAASquC,EAAc1F,EAAOuF,GAE1B,IADA,IAAI7sC,EAASuH,OAAO0lC,UACX3yC,EAAI,EAAGA,EAAIgtC,EAAMvyC,SAAUuF,EAAG,CACnC,IAAI2Q,EAAOq8B,EAAMhtC,GAEb0F,EADA6sC,EAAIpB,oBACKh4C,KAAKgJ,IAAIuD,EAAQiL,EAAKjL,QAGtBvM,KAAKgJ,IAAIuD,EAAQiL,EAAKhL,MAEvC,CACA,OAAOD,CACX,CAEA,IAAKxK,EAAIs3C,EA3B6B/uC,EA2BUvI,GA3BPq3C,EA2BU51C,MA1BvC00C,sBACG5tC,EAAI8uC,EAAIrE,OAAOzzC,OAGfgJ,GAAK,EAsBsCvI,GAAKu3C,EAAgB,CAE3E,IAAI/sC,EAASgtC,EADb1F,EAAQrwC,KAAKuxC,OAAOhzC,GACcyB,MAElC,IAAKqD,EAAI,EAAGA,EAAIgtC,EAAMvyC,SAAUuF,EAC5B2Q,EAAOq8B,EAAMhtC,GACTrD,KAAKw0C,qBACLxgC,EAAKnV,EAAIA,EAAEiS,IAAIkD,GACfA,EAAKlV,EAAI4I,EAASqB,EAAS,IAG3BiL,EAAKnV,EAAI6I,EAASqB,EAAS,EAC3BiL,EAAKlV,EAAID,EAAEiS,IAAIkD,IAIvBtM,GAAU1H,KAAKuf,QAAQ2mB,gBAAkBn9B,CAC7C,CACJ,EAEA4sC,iBAAkB,SAAShN,EAAGxoC,EAAG60C,EAAOC,GACpC,KAAItM,EAAIxoC,EAAI,GAAKwoC,EAAIxoC,GAAKH,KAAKuxC,OAAOzzC,QAMtC,IAFA,IAAIm4C,EAAa,KAAMC,EAAmB,KACtC7F,EAAQrwC,KAAKuxC,OAAO5I,EAAIxoC,GACnBkD,EAAI,EAAGA,EAAIgtC,EAAMvyC,SAAUuF,EAAG,CACnC,IAAI8yC,EAAa9F,EAAMhtC,GACvB,GAAI8yC,EAAWtiC,UAAW,CACtB,IAAIuiC,EAAmBp2C,KAAKq2C,mBAAmBF,EAAYxN,GAC3D,GAAIyN,EAAiBviC,UAAW,CAC5B,GAAIoiC,EAAY,CAKZ,IAJA,IAAIt3C,EAAIs2C,EAAOnkC,IAAIolC,GACfI,EAASt2C,KAAKuxC,OAAO5I,GACrB0J,EAAK6D,EAAiBjE,WACtBK,EAAK8D,EAAiBnE,WACjB1zC,EAAI8zC,EAAK,EAAG9zC,EAAI+zC,IAAM/zC,EACvB+3C,EAAO/3C,GAAGsV,YACVlV,EAAIA,GAAKs2C,EAAOnkC,IAAIwlC,EAAO/3C,KAGnC,GAAII,EAAG,CACHq2C,EAAMhkC,IAAIilC,EAAY91C,GAGtB,IAFA,IAAIo2C,EAAKN,EAAWhE,WAChBuE,EAAKL,EAAWlE,WACXprC,EAAI0vC,EAAK,EAAG1vC,EAAI2vC,IAAM3vC,EACvBwpC,EAAMxpC,GAAGgN,WACTmhC,EAAMhkC,IAAIq/B,EAAMxpC,GAAI1G,EAGhC,CACJ,CACA81C,EAAaE,EACbD,EAAmBE,CACvB,CACJ,CACJ,CACJ,EAEAC,mBAAoB,SAASriC,EAAM20B,GAC/B,IAAIuK,EAAWlzC,KAAKgzC,QAAQliC,IAAIkD,GAAM,GACtC,OAAIk/B,EAAS7C,QAAU1H,IAGvBuK,EAAWlzC,KAAKizC,UAAUniC,IAAIkD,GAAM,IACvBq8B,QAAU1H,EAHZuK,EAMJ,IACX,EAEAqC,WAAY,SAAS12C,EAAGw2C,EAAcG,EAAYiB,EAAKnB,GAKnD,GAJwB,IAApBA,EAASx3C,QACTkC,KAAK02C,gBAAgB73C,EAAGw2C,EAAcG,EAAYiB,EAAKnB,EAAS,IAGhEA,EAASx3C,OAAS,EAAG,CACrB,IAAI6L,EAAI2rC,EAASx3C,OAAQ2b,EAAIzZ,KAAKmzC,OAAOxpC,EAAG,GAC5C3J,KAAKu1C,WAAW12C,EAAGw2C,EAAcG,EAAYiB,EAAKnB,EAASlsC,MAAM,EAAGqQ,IACpEzZ,KAAKu1C,WAAW12C,EAAGw2C,EAAcG,EAAYiB,EAAKnB,EAASlsC,MAAMqQ,IACjEzZ,KAAK22C,iBAAiB93C,EAAGw2C,EAAcG,EAAYiB,EAAKnB,EAC5D,CACJ,EAEAoB,gBAAiB,SAAS73C,EAAGw2C,EAAcG,EAAYiB,EAAKziC,GACxD,IAAIkB,GAAqB,IAATuhC,EAAaz2C,KAAKizC,UAAUniC,IAAIkD,GAAQhU,KAAKgzC,QAAQliC,IAAIkD,GAErE3Q,EAAI6R,EAAUpX,OACR,IAANuF,IACIA,EAAI,GAAM,EACVxE,EAAEmS,IAAIgD,EAAMnV,EAAEiS,IAAIoE,EAAUlV,KAAKmzC,OAAO9vC,EAAG,MAG3CxE,EAAEmS,IAAIgD,GAAOnV,EAAEiS,IAAIoE,EAAUlV,KAAKmzC,OAAO9vC,EAAG,GAAK,IAAMxE,EAAEiS,IAAIoE,EAAUlV,KAAKmzC,OAAO9vC,EAAG,MAAQ,GAG9FgyC,GACAx2C,EAAEmS,IAAIgD,EAAMxX,KAAKgJ,IAAI3G,EAAEiS,IAAIkD,GAAOnV,EAAEiS,IAAIukC,GAAgBr1C,KAAKmyC,WAAWkD,EAAcrhC,KAEtFwhC,GACA32C,EAAEmS,IAAIgD,EAAMxX,KAAKiJ,IAAI5G,EAAEiS,IAAIkD,GAAOnV,EAAEiS,IAAI0kC,GAAcx1C,KAAKmyC,WAAWn+B,EAAMwhC,KAGxF,EAEAmB,iBAAkB,SAAS93C,EAAGw2C,EAAcG,EAAYiB,EAAKnB,GACzD,IAGmB/2C,EAAGmC,EAAG2C,EAAG6R,EAAWg+B,EAAU0D,EAH7CjtC,EAAI2rC,EAASx3C,OAAQ2b,EAAIzZ,KAAKmzC,OAAOxpC,EAAG,GAGxCktC,EAAW,GACf,IAAKt4C,EAAI,EAAGA,EAAIkb,IAAKlb,EAAG,CAGpB,IAFAmC,EAAI,EACJwU,GAAqB,IAATuhC,EAAaz2C,KAAKizC,UAAUniC,IAAIwkC,EAAS/2C,IAAMyB,KAAKgzC,QAAQliC,IAAIwkC,EAAS/2C,IAChF8E,EAAI,EAAGA,EAAI6R,EAAUpX,SAAUuF,EAChC6vC,EAAWh+B,EAAU7R,GACjBxE,EAAEiS,IAAIoiC,IAAar0C,EAAEiS,IAAIwkC,EAAS/2C,IAClCmC,KAGAA,IACAm2C,EAASj4C,KAAK,CAAEkI,EAAGjI,EAAEiS,IAAIoiC,GAAYlzC,KAAKmyC,WAAWmD,EAAS/2C,GAAI+2C,EAAS77B,EAAI,IAAKva,EAAG,KAG/F23C,EAASj4C,KAAK,CAAEkI,EAAGjI,EAAEiS,IAAIwkC,EAAS/2C,IAAMyB,KAAKmyC,WAAWmD,EAAS/2C,GAAI+2C,EAAS77B,EAAI,IAAKva,EAAGwB,GAC9F,CACI20C,GACAwB,EAASj4C,KAAK,CAAEkI,EAAGjI,EAAEiS,IAAIukC,GAAgBr1C,KAAKmyC,WAAWkD,EAAcC,EAAS77B,EAAI,IAAKva,EAAGoR,OAAOC,YAEvGsmC,EAASzzC,KAAKpD,KAAK82C,6BAGnB,IAAIC,EAAY,GAChB,IAAKx4C,EAAIkb,EAAGlb,EAAIoL,IAAKpL,EAAG,CAGpB,IAFAmC,EAAI,EACJwU,GAAqB,IAATuhC,EAAaz2C,KAAKizC,UAAUniC,IAAIwkC,EAAS/2C,IAAMyB,KAAKgzC,QAAQliC,IAAIwkC,EAAS/2C,IAChF8E,EAAI,EAAGA,EAAI6R,EAAUpX,SAAUuF,EAChC6vC,EAAWh+B,EAAU7R,GACjBxE,EAAEiS,IAAIoiC,IAAar0C,EAAEiS,IAAIwkC,EAAS/2C,IAClCmC,KAGAA,IACAq2C,EAAUn4C,KAAK,CAAEkI,EAAGjI,EAAEiS,IAAIoiC,GAAYlzC,KAAKmyC,WAAWmD,EAAS/2C,GAAI+2C,EAAS77B,IAAKva,EAAG,KAG5F63C,EAAUn4C,KAAK,CAAEkI,EAAGjI,EAAEiS,IAAIwkC,EAAS/2C,IAAMyB,KAAKmyC,WAAWmD,EAAS/2C,GAAI+2C,EAAS77B,IAAKva,EAAGwB,GAC3F,CACI80C,GACAuB,EAAUn4C,KAAK,CAAEkI,EAAGjI,EAAEiS,IAAI0kC,GAAcx1C,KAAKmyC,WAAWqD,EAAYF,EAAS77B,IAAKva,EAAGoR,OAAOC,YAEhGwmC,EAAU3zC,KAAKpD,KAAKg3C,4BAIpB,IAFA,IAAIC,EAAU,EAAGC,EAAW,EACxBh3C,EAAIF,KAAKmyC,WAAWmD,EAAS77B,EAAI,GAAI67B,EAAS77B,IAC3C5a,EAAEiS,IAAIwkC,EAAS77B,IAAM5a,EAAEiS,IAAIwkC,EAAS77B,EAAI,IAAMvZ,GACjD,GAAI+2C,EAAUC,EAAU,CACpB,GAAwB,IAApBL,EAAS/4C,OAAc,CACvBe,EAAEmS,IAAIskC,EAAS77B,EAAI,GAAI5a,EAAEiS,IAAIwkC,EAAS77B,IAAMvZ,GAC5C,KACJ,CAGI+2C,IADAL,EAAOC,EAAS5F,SACS/xC,EACzBL,EAAEmS,IAAIskC,EAAS77B,EAAI,GAAIm9B,EAAK9vC,GAC5BjI,EAAEmS,IAAIskC,EAAS77B,EAAI,GAAIjd,KAAKgJ,IAAI3G,EAAEiS,IAAIwkC,EAAS77B,EAAI,IAAK5a,EAAEiS,IAAIwkC,EAAS77B,IAAMvZ,GAErF,KACK,CACD,GAAyB,IAArB62C,EAAUj5C,OAAc,CACxBe,EAAEmS,IAAIskC,EAAS77B,GAAI5a,EAAEiS,IAAIwkC,EAAS77B,EAAI,IAAMvZ,GAC5C,KACJ,CAGIg3C,IADAN,EAAOG,EAAU9F,SACU/xC,EAC3BL,EAAEmS,IAAIskC,EAAS77B,GAAIm9B,EAAK9vC,GACxBjI,EAAEmS,IAAIskC,EAAS77B,GAAIjd,KAAKiJ,IAAI5G,EAAEiS,IAAIwkC,EAAS77B,IAAK5a,EAAEiS,IAAIwkC,EAAS77B,EAAI,IAAMvZ,GAEjF,CAEJ,IAAK3B,EAAIkb,EAAI,EAAGlb,GAAK,EAAGA,IACpBM,EAAEmS,IAAIskC,EAAS/2C,GAAI/B,KAAKiJ,IAAI5G,EAAEiS,IAAIwkC,EAAS/2C,IAAKM,EAAEiS,IAAIwkC,EAAS77B,EAAI,IAAMzZ,KAAKmyC,WAAWmD,EAAS/2C,GAAI+2C,EAAS77B,EAAI,MAEvH,IAAKlb,EAAIkb,EAAI,EAAGlb,EAAIoL,EAAGpL,IACnBM,EAAEmS,IAAIskC,EAAS/2C,GAAI/B,KAAKgJ,IAAI3G,EAAEiS,IAAIwkC,EAAS/2C,IAAKM,EAAEiS,IAAIwkC,EAAS77B,IAAMzZ,KAAKmyC,WAAWmD,EAAS/2C,GAAI+2C,EAAS77B,KAEnH,EAEAk5B,UAAW,SAAS3+B,EAAMy+B,EAAS0E,GAC/B,IAAIzzC,EAAM4M,OAAOkjC,kBACjBn3C,EAAMgF,QAAQrB,KAAKo3C,cAAcpjC,IAAO,SAAS9U,GAC7C,IAAIu0C,EAAczzC,KAAKyzC,YAAYv0C,GAC/Bu0C,GAAezzC,KAAK8yC,cAAchiC,IAAI2iC,KAAiBzzC,KAAK8yC,cAAchiC,IAAI5R,KACzEuzC,EAAQxhC,YAAYwiC,IACrBzzC,KAAK2yC,UAAUc,EAAahB,EAAS0E,GAEzCzzC,EAAMlH,KAAKgJ,IAAI9B,EAAK+uC,EAAQ3hC,IAAI2iC,GAAezzC,KAAKmyC,WAAWsB,EAAav0C,IAEpF,GAAGc,MACC0D,IAAQ4M,OAAOkjC,oBACf9vC,EAAM,GAEVrH,EAAMgF,QAAQrB,KAAKo3C,cAAcpjC,IAAO,SAAS9U,GAC7CuzC,EAAQzhC,IAAI9R,EAAGwE,EACnB,GACJ,EAEA6vC,WAAY,SAASv/B,EAAMs/B,EAAU+D,GACjC,IAAI3zC,EAAM4M,OAAOsiC,kBACjBv2C,EAAMgF,QAAQrB,KAAKo3C,cAAcpjC,IAAO,SAAS9U,GAC7C,IAAI2zC,EAAe7yC,KAAK6yC,aAAa3zC,GACjC2zC,GAAgB7yC,KAAK0zC,eAAe5iC,IAAI+hC,KAAkB7yC,KAAK0zC,eAAe5iC,IAAI5R,KAC7Eo0C,EAASriC,YAAY4hC,IACtB7yC,KAAKuzC,WAAWV,EAAcS,EAAU+D,GAE5C3zC,EAAMlH,KAAKiJ,IAAI/B,EAAK4vC,EAASxiC,IAAI+hC,GAAgB7yC,KAAKmyC,WAAWjzC,EAAG2zC,IAE5E,GAAG7yC,MACC0D,IAAQ4M,OAAOsiC,oBACflvC,EAAM,GAEVrH,EAAMgF,QAAQrB,KAAKo3C,cAAcpjC,IAAO,SAAS9U,GAC7Co0C,EAAStiC,IAAI9R,EAAGwE,EACpB,GACJ,EAEA+vC,YAAa,SAASz/B,GAClB,IAAIq8B,EAAQrwC,KAAKuxC,OAAOv9B,EAAKq8B,OACzB4B,EAAaj+B,EAAKi+B,WACtB,OAAsB,IAAfA,EAAmB,KAAO5B,EAAM4B,EAAa,EACxD,EAEAY,aAAc,SAAS7+B,GACnB,IAAIq8B,EAAQrwC,KAAKuxC,OAAOv9B,EAAKq8B,OACzB4B,EAAaj+B,EAAKi+B,WACtB,OAAOA,IAAe5B,EAAMvyC,OAAS,EAAI,KAAOuyC,EAAM4B,EAAa,EAEvE,EAEAmF,cAAe,SAASpjC,GACpB,OAAOA,EAAKH,UAAY7T,KAAKo0C,aAAapgC,GAAQ,CAACA,EACvD,EAEA49B,aAAc,WACV,IAAIrzC,EAAGoqC,EAAGrwB,EAAI+3B,EAAOr8B,EAErB,IAAK20B,EAAI,EAAGA,EAAI3oC,KAAKuxC,OAAOzzC,OAAQ6qC,IAGhC,IAFA0H,EAAQrwC,KAAKuxC,OAAO5I,GAEfrwB,EAAK,EAAGA,EAAK+3B,EAAMvyC,OAAQwa,KAC5BtE,EAAOq8B,EAAM/3B,IACRo4B,iBAAmB18B,EAAKu8B,kBAC7Bv8B,EAAK28B,mBAAqB38B,EAAKs8B,oBAQvC,IADA,IACSgH,EAAK,EAAGA,EADS,EACiBA,IAAM,CAC7C,IAAK/4C,EAAIyB,KAAKuxC,OAAOzzC,OAAS,EAAGS,GAAK,EAAGA,IACrCyB,KAAKu3C,aAAY,EAAOh5C,GAG5B,IAAKA,EAAI,EAAGA,EAAIyB,KAAKuxC,OAAOzzC,OAAS,EAAGS,IACpCyB,KAAKu3C,aAAY,EAAMh5C,EAE/B,CAGA,IAAIi5C,EAAUlnC,OAAOC,UACrB,IAAKo4B,EAAI,EAAGA,EAAI3oC,KAAKuxC,OAAOzzC,OAAQ6qC,IAGhC,IAFA0H,EAAQrwC,KAAKuxC,OAAO5I,GAEfrwB,EAAK,EAAGA,EAAK+3B,EAAMvyC,OAAQwa,IAC5BtE,EAAOq8B,EAAM/3B,GACbk/B,EAAUh7C,KAAKiJ,IAAI+xC,EAASxjC,EAAK48B,cAIzC,GAAI4G,EAAU,EACV,IAAK7O,EAAI,EAAGA,EAAI3oC,KAAKuxC,OAAOzzC,OAAQ6qC,IAGhC,IAFA0H,EAAQrwC,KAAKuxC,OAAO5I,GAEfrwB,EAAK,EAAGA,EAAK+3B,EAAMvyC,OAAQwa,KAC5BtE,EAAOq8B,EAAM/3B,IACRs4B,aAAe58B,EAAK48B,aAAe4G,CAIxD,EAQAD,YAAa,SAAS1K,EAAMwD,GACxB,IAAIoH,EACAC,EAGAA,EADA7K,EACa7sC,KAAKuxC,OAAOkG,EAAcpH,EAAQ,GAGlCrwC,KAAKuxC,OAAOkG,EAAcpH,EAAQ,GAKnD,IADA,IAAI/B,EAAS,GACJjrC,EAAI,EAAGA,EAAIq0C,EAAW55C,OAAQuF,IACnCirC,EAAO1vC,KAAK84C,EAAWr0C,IAE3BirC,EAAOlrC,MAAK,SAAS2W,EAAIC,GACrB,IAAI29B,GAAc59B,EAAG22B,iBAAmB32B,EAAG42B,oBAAsB,EAC7DiH,GAAc59B,EAAG02B,iBAAmB12B,EAAG22B,oBAAsB,EAEjE,OAAIn0C,KAAKC,IAAIk7C,EAAaC,GAAc,KAC7B,EAEPD,EAAaC,EACN,GAEH,CACZ,IAGAv7C,EAAMgF,QAAQitC,GAAQ,SAASt6B,GAC3B,IAAI6jC,EAAc7jC,EAAK48B,aACnBkH,EAAiB93C,KAAK+3C,eAAe/jC,GACrCgkC,GAAgBhkC,EAAK08B,iBAAmB18B,EAAK28B,oBAAsB,EAEvE,KAAIn0C,KAAKC,IAAIo7C,EAAcC,GAAkB,MAKzCt7C,KAAKC,IAAIo7C,EAAcC,GAAkB,OAK7C,GAAID,EAAcC,EAGd,KAAOD,EAAcC,GACZ93C,KAAKi4C,UAAUjkC,EAAM0jC,EAAYM,IAItCH,EAAc7jC,EAAK48B,kBAMvB,KAAOiH,EAAcC,GACZ93C,KAAKk4C,SAASlkC,EAAM0jC,EAAYM,IAIrCH,EAAc7jC,EAAK48B,YAG/B,GAAG5wC,MAICy3C,EAAc,GACdz3C,KAAKm4C,aAAaV,EAAc,GAEhCA,EAAcz3C,KAAKuxC,OAAOzzC,OAAS,GACnCkC,KAAKo4C,WAAWX,EAAc,EAEtC,EAQAQ,UAAW,SAASjkC,EAAMq8B,EAAOgI,GAC7B,IAAI31C,EAAQrG,EAAMyF,QAAQuuC,EAAOr8B,GACjC,GAAItR,IAAU2tC,EAAMvyC,OAAS,EAGzB,OADAkW,EAAK48B,aAAe58B,EAAK48B,aAAe,IACjC,EAGX,IAAI0H,EAAYjI,EAAM3tC,EAAQ,GAC1B61C,GAAqBD,EAAU5H,iBAAmB4H,EAAU3H,oBAAsB,EAGtF,OAAI2H,EAAU1H,aAAe58B,EAAK48B,aAAe,GAC7C58B,EAAK48B,aAAe58B,EAAK48B,aAAe,IACjC,KAIP2H,EAAoBF,GACpB77C,KAAKC,IAAI87C,EAAoBF,GAAY,UAKzCr4C,KAAKi4C,UAAUK,EAAWjI,EAAOgI,KACjCrkC,EAAK48B,aAAe58B,EAAK48B,aAAe,IACjC,GAIf,EAQAsH,SAAU,SAASlkC,EAAMq8B,EAAOgI,GAC5B,IAAI31C,EAAQrG,EAAMyF,QAAQuuC,EAAOr8B,GACjC,GAAc,IAAVtR,EAGA,OADAsR,EAAK48B,aAAe58B,EAAK48B,aAAe,IACjC,EAGX,IAAI4H,EAAWnI,EAAM3tC,EAAQ,GACzB+1C,GAAoBD,EAAS9H,iBAAmB8H,EAAS7H,oBAAsB,EAGnF,OAAI6H,EAAS5H,aAAe58B,EAAK48B,aAAe,GAC5C58B,EAAK48B,aAAe58B,EAAK48B,aAAe,IACjC,KAIP6H,EAAmBJ,GACnB77C,KAAKC,IAAIg8C,EAAmBJ,GAAY,UAKxCr4C,KAAKk4C,SAASM,EAAUnI,EAAOgI,KAC/BrkC,EAAK48B,aAAe58B,EAAK48B,aAAe,IACjC,GAIf,EAEA8H,eAAgB,SAAS1kC,EAAME,GAC3BlU,KAAK24C,cAAc3nC,IAAIgD,EAAME,GACxBlU,KAAK44C,cAAc3nC,YAAYiD,IAChClU,KAAK44C,cAAc5nC,IAAIkD,EAAM,IAEjClU,KAAK44C,cAAc9nC,IAAIoD,GAAMtV,KAAKoV,EACtC,EAEAogC,aAAc,SAASpgC,GACnB,OAAOhU,KAAK44C,cAAc9nC,IAAI9Q,KAAK24C,cAAc7nC,IAAIkD,GACzD,EAKAy9B,SAAU,WACNzxC,KAAK44C,cAAgB,IAAI9mC,EACzB9R,KAAK24C,cAAgB,IAAI7mC,EAEzB,IAAIu+B,EAAO3sC,EAAKwW,EAASlG,EAAMrK,EAAG6O,EAASja,EAAGoqC,EAAGt1B,EAAQrT,KAAK4e,MAAMvL,MAAMjK,MAAM,GAC5EmoC,EAASvxC,KAAKuxC,OAEdsH,EAAuB,SAASC,EAASC,EAAW7kC,GACpDq9B,EAAOuH,GAAStH,QAAQuH,GAAaxH,EAAOuH,GAAStH,QAAQuH,IAAc,GAC3ExH,EAAOuH,GAAStH,QAAQuH,GAAWn6C,KAAKsV,EAC5C,EAEA,IAAKy0B,EAAI,EAAGA,EAAIt1B,EAAMvV,OAAQ6qC,IAAK,CAC/B,IAAIz0B,EAAOb,EAAMs1B,GACbqQ,EAAI9kC,EAAKjW,OACTkC,EAAI+T,EAAKjQ,OAETg1C,EAASD,EAAE3I,MACX6I,EAAS/4C,EAAEkwC,MACX8I,EAAOH,EAAEpI,aACTwI,EAAOj5C,EAAEywC,aAETjqC,GAAQyyC,EAAOD,GAAQ38C,KAAKC,IAAIy8C,EAASD,GAEzCt6C,EAAIq6C,EACR,GAAIC,EAASC,EAAS,EAAG,CACrB,IAAK36C,EAAI06C,EAAS,EAAG16C,EAAI26C,EAAQ36C,IAAK,CAmClC,KAlCA2b,EAAU,IAAI/G,GACNtU,EAAIm6C,EAAEn6C,EACdqb,EAAQpb,EAAIk6C,EAAEl6C,EACdob,EAAQlR,MAAQgwC,EAAEhwC,MAAQ,IAC1BkR,EAAQnR,OAASiwC,EAAEjwC,OAAS,KAG5BrF,GAAOnF,EAAI26C,GAAUvyC,EAAOwyC,IAD5B9I,EAAQkB,EAAOhzC,IAECT,SACZ4F,EAAM2sC,EAAMvyC,QAIZq7C,GAAQ5H,EAAO0H,GAAQn7C,OAAS,GAChCs7C,GAAQ7H,EAAO2H,GAAQp7C,OAAS,EAChC4F,EAAM2sC,EAAMvyC,OAIE,IAATq7C,GAAuB,IAATC,IACnB11C,EAAM,GAGVwW,EAAQm2B,MAAQ9xC,EAChB2b,EAAQs2B,YAAc,EACtBt2B,EAAQu2B,YAAc,EACtBv2B,EAAQq2B,kBAAoB,EAC5Br2B,EAAQo2B,oBAAsB,EAC9Bp2B,EAAQ02B,aAAeltC,EACvBwW,EAAQrG,WAAY,EAEpBxX,EAAMwG,OAAOwtC,EAAOn2B,EAASxW,GAGxBiG,EAAIjG,EAAM,EAAGiG,EAAI0mC,EAAMvyC,OAAQ6L,KAChCqK,EAAOq8B,EAAM1mC,IACRinC,aAAe58B,EAAK48B,aAAe,GAG5Cp4B,EAAU,IAAIrD,EAAKxW,EAAGub,IACdm/B,iBAAmB,EAE3BR,EAAqBt6C,EAAI,EAAGA,EAAGia,GAE/B7Z,EAAIub,EAGJla,KAAK4e,MAAMzG,SAAS+B,GACpBla,KAAK4e,MAAMnG,QAAQD,GAEnB0B,EAAQxX,MAAQ1C,KAAK4e,MAAMpI,MAAM1Y,OAAS,EAC1CkC,KAAK04C,eAAex+B,EAAShG,EACjC,CAGA2kC,EAAqBK,EAAS,EAAGA,EAAQ1gC,GACzCtE,EAAK2B,aAAalX,GAClBuV,EAAKmlC,iBAAmBJ,EAASC,EAAS,CAC9C,MAAO,GAAID,EAASC,GAAU,EAAG,CAC7B,IAAK36C,EAAI06C,EAAS,EAAG16C,EAAI26C,EAAQ36C,IAAK,CAoClC,KAnCA2b,EAAU,IAAI/G,GACNtU,EAAIm6C,EAAEn6C,EACdqb,EAAQpb,EAAIk6C,EAAEl6C,EACdob,EAAQlR,MAAQgwC,EAAEhwC,MAAQ,IAC1BkR,EAAQnR,OAASiwC,EAAEjwC,OAAS,KAG5BrF,GAAOnF,EAAI06C,GAAUtyC,EAAOwyC,IAD5B9I,EAAQkB,EAAOhzC,IAECT,SACZ4F,EAAM2sC,EAAMvyC,QAIZq7C,GAAQ5H,EAAO0H,GAAQn7C,OAAS,GAChCs7C,GAAQ7H,EAAO2H,GAAQp7C,OAAS,EAChC4F,EAAM2sC,EAAMvyC,OAIE,IAATq7C,GAAuB,IAATC,IACnB11C,EAAM,GAGVwW,EAAQm2B,MAAQ9xC,EAChB2b,EAAQs2B,YAAc,EACtBt2B,EAAQu2B,YAAc,EACtBv2B,EAAQq2B,kBAAoB,EAC5Br2B,EAAQo2B,oBAAsB,EAC9Bp2B,EAAQ02B,aAAeltC,EACvBwW,EAAQrG,WAAY,EAEpBnQ,GAAOA,EACPrH,EAAMwG,OAAOwtC,EAAOn2B,EAASxW,GAGxBiG,EAAIjG,EAAM,EAAGiG,EAAI0mC,EAAMvyC,OAAQ6L,KAChCqK,EAAOq8B,EAAM1mC,IACRinC,aAAe58B,EAAK48B,aAAe,GAG5Cp4B,EAAU,IAAIrD,EAAKxW,EAAGub,IACdm/B,iBAAmB,EAC3BR,EAAqBt6C,EAAI,EAAGA,EAAGia,GAE/B7Z,EAAIub,EAGJla,KAAK4e,MAAMzG,SAAS+B,GACpBla,KAAK4e,MAAMnG,QAAQD,GAEnB0B,EAAQxX,MAAQ1C,KAAK4e,MAAMpI,MAAM1Y,OAAS,EAC1CkC,KAAK04C,eAAex+B,EAAShG,EACjC,CACA2kC,EAAqBK,EAAS,EAAGA,EAAQhlC,GAGzCA,EAAK2B,aAAalX,GAClBuV,EAAKmlC,iBAAmBH,EAASD,EAAS,CAC9C,MACIJ,EAAqBI,EAAQC,EAAQhlC,EAE7C,CACJ,EAMA49B,WAAY,WAER,IADA,IAAIwH,GAAQ,EACLA,GAAO,CACVA,GAAQ,EAER,IAAK,IAAI3Q,EAAI,EAAGA,EAAI3oC,KAAK4e,MAAMvL,MAAMvV,OAAQ6qC,IAAK,CAC9C,IAAIz0B,EAAOlU,KAAK4e,MAAMvL,MAAMs1B,GAC5B,GAAKz0B,EAAKmlC,iBAAV,CAIA,IAAI56C,EAAS,GAGbA,EAAOqe,QAAQ,CAAEje,EAAGqV,EAAKjQ,OAAOpF,EAAGC,EAAGoV,EAAKjQ,OAAOnF,IAClDL,EAAOqe,QAAQ,CAAEje,EAAGqV,EAAKjW,OAAOY,EAAGC,EAAGoV,EAAKjW,OAAOa,IAKlD,IAFA,IAAIyJ,EAAO2L,EACPmlC,EAAmBnlC,EAAKmlC,iBACnBl5C,EAAI,EAAGA,EAAIk5C,EAAkBl5C,IAAK,CACvC,IACIo5C,EADOhxC,EAAKtK,OACIsV,SAAS,GAE7B9U,EAAOqe,QAAQ,CAAEje,EAAG06C,EAASt7C,OAAOY,EAAGC,EAAGy6C,EAASt7C,OAAOa,IAE1DyJ,EAAOgxC,CACX,CAGArlC,EAAK2B,aAAatN,EAAKtK,QAGvBiW,EAAKmlC,iBAAmB,EAGpB56C,EAAOX,OAAS,GAEhBW,EAAOsD,OAAO,EAAG,GACjBtD,EAAOsD,OAAOtD,EAAOX,OAAS,GAC9BoW,EAAKzV,OAASA,GAGdyV,EAAKzV,OAAS,GAMlB66C,GAAQ,EACR,KAzCA,CA0CJ,CACJ,CACJ,EAKA5H,mBAAoB,WAKhB,IAJA,IAAgBnzC,EAAZi7C,GAAS,EAETC,EAAO,EAEM,IAAVD,KACCC,IAJY,IAGA,CAOhB,IAFAD,EAAQ,EAEHj7C,EAAIyB,KAAKuxC,OAAOzzC,OAAS,EAAGS,GAAK,EAAGA,IACrCi7C,GAASx5C,KAAK05C,wBAAuB,EAAOn7C,GAGhD,IAAKA,EAAI,EAAGA,EAAIyB,KAAKuxC,OAAOzzC,OAAS,EAAGS,IACpCi7C,GAASx5C,KAAK05C,wBAAuB,EAAMn7C,EAEnD,CACJ,EAEA65C,WAAY,SAAS/H,GACjB,GAAc,IAAVA,EAAJ,CAIA,IAAqC9xC,EAAGoqC,EAAGz0B,EAAvCwjC,EAAa13C,KAAKuxC,OAAOlB,GACzByI,EAAU,IAAI/lC,EACdxK,EAAOvI,KAAKuxC,OAAOlB,EAAQ,GAC/B,IAAK9xC,EAAI,EAAGA,EAAIgK,EAAKzK,OAAQS,IACzBu6C,EAAQloC,IAAIrI,EAAKhK,IAGrB,IAAKA,EAAI,EAAGA,EAAIm5C,EAAW55C,OAAQS,IAAK,CACpC,IAAIyV,EAAO0jC,EAAWn5C,GAGlBo7C,EAAM,EACNC,EAAQ,EAEZ,IAAKjR,EAAI,EAAGA,EAAI30B,EAAKT,SAASzV,OAAQ6qC,IAClCz0B,EAAOF,EAAKT,SAASo1B,GACjBmQ,EAAQ92C,SAASkS,EAAKjW,UACtB27C,IACAD,GAAOzlC,EAAKjW,OAAO2yC,cAI3B,IAAKjI,EAAI,EAAGA,EAAI30B,EAAKV,SAASxV,OAAQ6qC,IAClCz0B,EAAOF,EAAKV,SAASq1B,GACjBmQ,EAAQ92C,SAASkS,EAAKjQ,UACtB21C,IACAD,GAAOzlC,EAAKjQ,OAAO2sC,cAIvBgJ,EAAQ,GACR5lC,EAAKw8B,YAAcmJ,EAAMC,EACzB5lC,EAAKu8B,kBAAoBqJ,IAGzB5lC,EAAKw8B,YAAcjyC,EACnByV,EAAKu8B,kBAAoB,EAEjC,CAxCA,CAyCJ,EAEA4H,aAAc,SAAS9H,GACnB,GAAIA,IAAUrwC,KAAKuxC,OAAOzzC,OAAS,EAAnC,CAIA,IAAqCS,EAAIoqC,EAAGz0B,EAAxCwjC,EAAa13C,KAAKuxC,OAAOlB,GACzB0I,EAAY,IAAIhmC,EAChBxK,EAAOvI,KAAKuxC,OAAOlB,EAAQ,GAC/B,IAAK9xC,EAAI,EAAGA,EAAIgK,EAAKzK,OAAQS,IACzBw6C,EAAUnoC,IAAIrI,EAAKhK,IAGvB,IAAKA,EAAI,EAAGA,EAAIm5C,EAAW55C,OAAQS,IAAK,CACpC,IAAIyV,EAAO0jC,EAAWn5C,GAGlBo7C,EAAM,EACNC,EAAQ,EAEZ,IAAKjR,EAAI,EAAGA,EAAI30B,EAAKT,SAASzV,OAAQ6qC,IAClCz0B,EAAOF,EAAKT,SAASo1B,GACjBoQ,EAAU/2C,SAASkS,EAAKjW,UACxB27C,IACAD,GAAOzlC,EAAKjW,OAAO2yC,cAI3B,IAAKjI,EAAI,EAAGA,EAAI30B,EAAKV,SAASxV,OAAQ6qC,IAClCz0B,EAAOF,EAAKV,SAASq1B,GACjBoQ,EAAU/2C,SAASkS,EAAKjQ,UACxB21C,IACAD,GAAOzlC,EAAKjQ,OAAO2sC,cAIvBgJ,EAAQ,GACR5lC,EAAKy8B,YAAckJ,EAAMC,EACzB5lC,EAAKs8B,oBAAsBsJ,IAG3B5lC,EAAKy8B,YAAclyC,EACnByV,EAAKs8B,oBAAsB,EAEnC,CAxCA,CAyCJ,EAUAoJ,uBAAwB,SAAS7M,EAAMwD,GACnC,IAAIoH,EACAC,EAUAmC,GAPAnC,EADA7K,EACa7sC,KAAKuxC,OAAOkG,EAAcpH,EAAQ,GAGlCrwC,KAAKuxC,OAAOkG,EAAcpH,EAAQ,IAIxBjnC,MAAM,GAG7ByjC,EACA7sC,KAAKo4C,WAAWX,GAGhBz3C,KAAKm4C,aAAaV,GAGtB,IAAIxjC,EAAOjU,KAEX03C,EAAWt0C,MAAK,SAAS2W,EAAIC,GACzB,IAAI8/B,EAAe7lC,EAAK8jC,eAAeh+B,GACnCggC,EAAe9lC,EAAK8jC,eAAe/9B,GACvC,GAAIxd,KAAKC,IAAIq9C,EAAeC,GAAgB,KAExC,OAAIhgC,EAAGjF,WAAakF,EAAGlF,SACZb,EAAK+lC,eAAejgC,EAAIC,GAE1BD,EAAGjF,SAAWkF,EAAGlF,SACf,GAEH,EAEZ,IAAImlC,EAA+C,KAA/BF,EAAeD,GACnC,OAAIG,EAAe,GACP,EAEHA,EAAe,EACb,EAEJhmC,EAAK+lC,eAAejgC,EAAIC,EACnC,IAGA,IAAIzb,EAAGi7C,EAAQ,EACf,IAAKj7C,EAAI,EAAGA,EAAIm5C,EAAW55C,OAAQS,IAC3Bm5C,EAAWn5C,KAAOs7C,EAAUt7C,IAC5Bi7C,IAIR,GAAIA,EAAQ,EAAG,CAEX,IAAIU,EAAQ,EACZ,IAAK37C,EAAI,EAAGA,EAAIm5C,EAAW55C,OAAQS,IAAK,CACzBm5C,EAAWn5C,GACjBqyC,aAAesJ,GACxB,CACJ,CAEA,OAAOV,CACX,EAOA7H,WAAY,WAIR,IAHA,IAAIwI,EAAgBn6C,KAAKuf,QAAQ4mB,kBAC7BsT,EAAO,IAGHA,IAASU,IAOb,IAHA,IAAIC,EAAaX,EAAO,GAAK,EACzBY,EAAcZ,EAAO,GAAM,EAEtB9Q,EAAKyR,EAAY,EAAIp6C,KAAKuxC,OAAOzzC,OAAS,EAC9Cs8C,EAAYzR,GAAK3oC,KAAKuxC,OAAOzzC,OAAS,EAAI6qC,GAAK,EAAGA,GAAMyR,EAAY,GAAK,EAAI,CAS9E,IARA,IAAI/J,EAAQrwC,KAAKuxC,OAAO5I,GACpB2R,GAAa,EAIbC,GAAgB,EAChBC,EAAe,EAEVn3C,EAAI,EAAGA,EAAIgtC,EAAMvyC,OAAS,EAAGuF,IAAK,CAEvC,IAAIspC,EAAK,EACLE,EAAO,EACP4N,EAAc,EAsBlB,GApBIF,GACU,IAAN5R,IACAgE,EAAK3sC,KAAK06C,mCAAmC/R,EAAI,EAAGA,IAEpDA,IAAM3oC,KAAKuxC,OAAOzzC,OAAS,IAC3B+uC,EAAO7sC,KAAK06C,mCAAmC/R,EAAGA,EAAI,IAEtDyR,EACAzN,GAAM,EAGNE,GAAQ,EAGZ4N,EAAc9N,EAAKE,GAGnB4N,EAAcD,EAGE,IAAhBC,EAAJ,CAKA,IAAIE,EAAQtK,EAAMhtC,GACdu3C,EAAQvK,EAAMhtC,EAAI,GAElBw3C,EAAeF,EAAM/J,aACrBkK,EAAeF,EAAMhK,aACzBP,EAAMhtC,GAAKu3C,EACXvK,EAAMhtC,EAAI,GAAKs3C,EACfA,EAAM/J,aAAekK,EACrBF,EAAMhK,aAAeiK,EAGrBlO,EAAK,EACK,IAANhE,IACAgE,EAAK3sC,KAAK06C,mCAAmC/R,EAAI,EAAGA,IAExDkE,EAAO,EACHlE,IAAM3oC,KAAKuxC,OAAOzzC,OAAS,IAC3B+uC,EAAO7sC,KAAK06C,mCAAmC/R,EAAGA,EAAI,IAEtDyR,EACAzN,GAAM,EAGNE,GAAQ,EAEZ,IAAIkO,EAAapO,EAAKE,GAGlBwN,EACSU,GAAcN,EAGdM,EAAaN,IAItBE,EAAQtK,EAAMhtC,GACdu3C,EAAQvK,EAAMhtC,EAAI,GAElBw3C,EAAeF,EAAM/J,aACrBkK,EAAeF,EAAMhK,aACrBP,EAAMhtC,GAAKu3C,EACXvK,EAAMhtC,EAAI,GAAKs3C,EACfA,EAAM/J,aAAekK,EACrBF,EAAMhK,aAAeiK,EAIrBL,EAAeC,EACfF,GAAgB,IAGhBD,GAAa,EACbC,GAAgB,EAxDpB,CA0DJ,CAEID,IACI3R,IAAM3oC,KAAKuxC,OAAOzzC,OAAS,GAC3BkC,KAAKo4C,WAAWzP,EAAI,GAEd,IAANA,GACA3oC,KAAKm4C,aAAaxP,EAAI,GAGlC,CAER,EAQA+R,mCAAoC,SAASM,EAAQC,GACjD,IACIC,EAAOC,EAAOC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EADtCpoC,EAAQrT,KAAKuxC,OAAOyJ,GAAQxJ,QAAQyJ,GAEpCS,EAAY,EACZ59C,EAASuV,EAAMvV,OAEnB,IAAK09C,EAAK,EAAGA,EAAK19C,EAAQ09C,IAEtB,IADAN,EAAQ7nC,EAAMmoC,GACTC,EAAKD,EAAK,EAAGC,EAAK39C,EAAQ29C,IAAM,CAEjCN,EAAQ9nC,EAAMooC,GAEVP,EAAMj3C,OAAOosC,QAAU4K,GACvBG,EAAMF,EAAMj9C,OACZo9C,EAAMH,EAAMj3C,SAGZm3C,EAAMF,EAAMj3C,OACZo3C,EAAMH,EAAMj9C,QAGZk9C,EAAMl3C,OAAOosC,QAAU4K,GACvBK,EAAMH,EAAMl9C,OACZs9C,EAAMJ,EAAMl3C,SAGZq3C,EAAMH,EAAMl3C,OACZs3C,EAAMJ,EAAMl9C,QAGhB,IAAI09C,EAAQP,EAAIxK,aACZgL,EAAQP,EAAIzK,cAIX+K,EAHOL,EAAI1K,eAGOgL,EAFXL,EAAI3K,cAEwB,GACpC8K,GAER,CAGJ,OAAOA,CACX,EAEA3D,eAAgB,SAAS/jC,GACrB,IAAIu8B,EAAoBv8B,EAAKu8B,kBACzBD,EAAsBt8B,EAAKs8B,oBAC3BE,EAAcx8B,EAAKw8B,YACnBC,EAAcz8B,EAAKy8B,YAEvB,OAAIF,EAAoB,GAAKD,EAAsB,GACvCE,EAAcC,GAAe,EAErCF,EAAoB,EACbC,EAEPF,EAAsB,EACfG,EAGJ,CACX,EAEAkE,sBAAuB,SAAS91C,EAAGC,GAC/B,OAAID,EAAE+xC,aAAe9xC,EAAE8xC,cACX,EAER/xC,EAAE+xC,aAAe9xC,EAAE8xC,aACZ,EAEJ,CACX,EAEAoG,2BAA4B,SAASn4C,EAAGC,GACpC,OAAOD,EAAEiI,EAAIhI,EAAEgI,GAAK,EAAIjI,EAAEiI,EAAIhI,EAAEgI,EAAI,EAAI,CAC5C,EAEAgwC,4BAA6B,SAASj4C,EAAGC,GACrC,OAAOD,EAAEiI,EAAIhI,EAAEgI,EAAI,EAAIjI,EAAEiI,EAAIhI,EAAEgI,GAAK,EAAI,CAC5C,EAEAsuC,kBAAmB,SAAS/E,GACxB,IAAK,IAAI3vC,EAAI,EAAGA,EAAI2vC,EAAMvyC,OAAQ4C,IAC9B,GAAI2vC,EAAM3vC,GAAGmT,UACT,OAAOnT,EAGf,OAAQ,CACZ,EAEAs5C,eAAgB,SAASxxC,EAAI2oC,GACzB,IAAIkB,EAAK7pC,EAAG9F,MACR4vC,EAAKnB,EAAGzuC,MAEZ,OAAI2vC,EAAKC,EACE,EAGPD,EAAKC,GACG,EAGL,CACX,EAEAa,OAAQ,SAAS0I,EAAWC,GACxB,OAAQD,EAAYA,EAAYC,GAAeA,CACnD,EAEArG,gBAAiB,SAASpF,EAAOr8B,GAE7B,IADA,IACSzV,EADOyV,EAAKi+B,WACI,EAAG1zC,EAAI8xC,EAAMvyC,SAAUS,EAC5C,GAAI8xC,EAAM9xC,GAAGsV,UACT,OAAOw8B,EAAM9xC,GAGrB,OAAO,IACX,IAQAksC,EAAc3uC,EAAM+H,MAAMC,OAAO,CACjCC,KAAM,SAAS/H,EAAS+/C,GACpB,GAAI1/C,EAAMO,YAAYZ,GAClB,KAAM,mBAEVgE,KAAKhE,QAAUA,EACfgE,KAAKsa,QAAU,IAAIxI,EACnB9R,KAAKua,QAAU,IAAIzI,EACnB9R,KAAKg8C,QAAQD,GAA8B//C,EAC/C,EAUAggD,QAAS,SAASC,GACd,IAAIjoC,EACAwC,EACApD,EACA7U,EACAsyB,EACA3c,EACAb,EAEJ,GAAI4oC,aAAiCjgD,EAAQsa,MAAO,CAEhD,IAAK/X,EAAI,EAAGA,EAAI09C,EAAsBzlC,MAAM1Y,OAAQS,IAEhD6U,GADAY,EAAOioC,EAAsBzlC,MAAMjY,IACtBkV,gBAEbzT,KAAKsa,QAAQtJ,IAAIoC,EAAMsQ,OAAO9R,GAAI,IAAIjJ,EAAKqL,EAAKnV,EAAGmV,EAAKlV,EAAGkV,EAAKhL,MAAOgL,EAAKjL,SAEhF,IAAKxK,EAAI,EAAGA,EAAI09C,EAAsB5oC,MAAMvV,OAAQS,IAEhDsyB,GADA3c,EAAO+nC,EAAsB5oC,MAAM9U,IACvBgX,qBACZvV,KAAKua,QAAQvJ,IAAI6f,EAAKnN,OAAO9R,GAAIsC,EAAKzV,SAE9C,MACK,GAAIw9C,aAAiC7/C,MAEtC,IADAoa,EAAQylC,EACH19C,EAAI,EAAGA,EAAIiY,EAAM1Y,OAAQS,KAE1B6U,GADAY,EAAOwC,EAAMjY,IACAkV,kBAETzT,KAAKsa,QAAQtJ,IAAIoC,EAAMsQ,OAAO9R,GAAI,IAAIjJ,EAAKqL,EAAKnV,EAAGmV,EAAKlV,EAAGkV,EAAKhL,MAAOgL,EAAKjL,cAInF,GAAIkzC,EAAsBh/C,eAAe,UAAYg/C,EAAsBh/C,eAAe,SAAU,CAGrG,IAFAuZ,EAAQylC,EAAsBzlC,MAC9BnD,EAAQ4oC,EAAsB5oC,MACzB9U,EAAI,EAAGA,EAAIiY,EAAM1Y,OAAQS,KAE1B6U,GADAY,EAAOwC,EAAMjY,IACAkV,kBAETzT,KAAKsa,QAAQtJ,IAAIoC,EAAMsQ,OAAO9R,GAAI,IAAIjJ,EAAKqL,EAAKnV,EAAGmV,EAAKlV,EAAGkV,EAAKhL,MAAOgL,EAAKjL,SAGpF,IAAKxK,EAAI,EAAGA,EAAI8U,EAAMvV,OAAQS,KAE1BsyB,GADA3c,EAAOb,EAAM9U,IACDgX,uBAERvV,KAAKua,QAAQvJ,IAAI6f,EAAKnN,OAAO9R,GAAIsC,EAAKzV,OAGlD,KACK,CACD,IAAIyzB,EAASlyB,KAAKhE,QAAQk2B,OACtBqF,EAAcv3B,KAAKhE,QAAQu7B,YAC/B,IAAKh5B,EAAI,EAAGA,EAAI2zB,EAAOp0B,OAAQS,IAC3B6U,EAAQ8e,EAAO3zB,GACfyB,KAAKsa,QAAQtJ,IAAIoC,EAAMsQ,OAAO9R,GAAIwB,EAAMM,UAE5C,IAAKnV,EAAI,EAAGA,EAAIg5B,EAAYz5B,OAAQS,IAChCsyB,EAAO0G,EAAYh5B,GACnByB,KAAKua,QAAQvJ,IAAI6f,EAAKnN,OAAO9R,GAAIif,EAAKpyB,SAE9C,CACJ,IAGJvC,EAAWF,EAAS,CAChB+H,KAAM,SAASjB,GACXhH,EAAMiI,KAAKjB,EAAS9G,EAAQyK,GAChC,EACA0Z,aAAcA,EACd2vB,WAAYA,EACZoM,aAAcrU,EACdsI,cAAeA,EACfjL,WAAYA,EACZuF,YAAaA,GAEpB,CA/oHD,CA+oHG1uC,OAAOD,MAAMkL,QAEhB,SAAUnL,EAAG2lB,GAEL,IAAIvlB,EAAUH,MAAMG,QAChB0xB,EAAO7xB,MAAM2lB,QACb06B,EAAOrgD,MAAMmL,SACbjL,EAAUC,EAAQD,QAClBogD,EAAStgD,MAAM2K,GAAG21C,OAClBv4C,EAAQ/H,MAAM+H,MACd3H,EAAaJ,MAAMI,WACnBmgD,EAAavgD,MAAMwgD,YACnBC,EAAczgD,MAAM0gD,aACpB14C,EAASjI,EAAEiI,OACX24C,EAAyB3gD,MAAM6X,KAAK8oC,uBACpCrvB,EAASpxB,EAAQoxB,OACjBtC,EAAQ9uB,EAAQ8uB,MAChBtD,EAAYxrB,EAAQwrB,UACpBiB,EAASzsB,EAAQysB,OACjBnF,EAAqBtnB,EAAQsnB,mBAC7B3a,EAAO3M,EAAQ2M,KACfif,EAAO5rB,EAAQ4rB,KACfoK,EAAkBh2B,EAAQg2B,gBAC1BF,EAAuB91B,EAAQ81B,qBAC/BpL,EAAY1qB,EAAQ0qB,UACpB8E,EAAQxvB,EAAQwvB,MAChBpsB,EAAQpD,EAAQoD,MAChBoN,EAAYxQ,EAAQwQ,UACpBsyB,EAAwB9iC,EAAQ8iC,sBAChCjL,EAAkB73B,EAAQ63B,gBAC1BwF,EAAcr9B,EAAQq9B,YACtBkL,EAAWvoC,EAAQuoC,SACnB7D,EAAkB1kC,EAAQ0kC,gBAC1BV,EAAoBhkC,EAAQgkC,kBAC5B5R,EAAUpyB,EAAQoyB,QAClB/xB,EAAQL,EAAQK,MAChB0V,EAAajW,MAAMiW,WACnB6hB,EAAa53B,EAAQ43B,WACrBJ,EAAcx3B,EAAQw3B,YACtBiJ,EAAiBzgC,EAAQygC,eACzBE,EAAkB3gC,EAAQ2gC,gBAC1B//B,EAAcP,EAAMO,YACpBF,EAAYL,EAAMK,UAClBglB,EAAUiM,EAAKhM,KAAKD,QACpBvlB,EAAUC,MAAMD,QAChB+K,EAAapL,MAAMoL,WACnB/J,EAAWd,EAAMc,SACjBu/C,EAAgB7gD,EAAE6gD,cAElBC,EAAOngD,KAGPogD,EAAK,gBACLC,EAAY,YACZrtB,EAAmB,mBACnBstB,EAAS,SACTC,EAAQ,QAMRC,EAAQ,QACRhuB,EAAO,OAKPiuB,GAAS,iBACTC,GAAS,SACTC,GAAa,aACbC,GAAM,MACNC,GAAa,YACbC,GAAW,UACXC,GAAO,OAUPhtC,GAAYD,OAAOC,UACnBylC,IAAa1lC,OAAOC,UAEpBitC,GAAc,cACd/tB,GAAU,UAMVguB,GAAgB,iBAAmBb,EAAK,cAAgBA,EAGxDc,GAAkB,EAAGC,YAAWC,OAAMC,aAAY52B,UAC9CnrB,MAAMgiD,KAAKC,aAAa,kBAAkBJ,eAAuB12B,aAAiB,CAC9E22B,KAAMA,EACNC,eAIZ7hD,EAAQgiD,kBAAoB,CAAC,CACzB9/C,KAzCM,OA0CP,CACCA,KAxCS,UAyCV,CACCA,KA3CO,QA4CR,CACCA,KA9CQ,SA+CT,CACCA,KAAM8wB,EACNjsB,SAAU,SAASqQ,GACf,OAAOA,EAAM6qC,YAAY,SAC7B,IAGJ,IAAIC,GAAiB,CACjB/pB,OAAQ,CACJlN,KAAM,SACN22B,KAAM,iBACND,UAAW,oBAEft3C,OAAQ,CACJ4gB,KAAM,OACNk3B,WAAY,OACZR,UAAW,mBACXC,KAAM,OACNC,WAAY,YA8CpB,SAASO,GAAgBnmB,GACrB,OAAOA,EAAU1Y,QAAQrhB,KAAKqP,gBAAkByhB,EAAKzhB,aACzD,CAEA,SAAS8wC,GAAiB70C,EAAOyyB,GAE7B,IADA,IAA8BqiB,EAAQrmB,EAAlCsmB,EAAkBtB,GACb1+C,EAAI,EAAGA,EAAI09B,EAAWn+B,OAAQS,IAEnC,IAAK6/C,GADLnmB,EAAYgE,EAAW19B,IACU,CAC7B,IAAI6zC,EAAO5oC,EAAMm2B,WAAW1H,EAAUl1B,YAClCqvC,EAAOmM,IACPA,EAAkBnM,EAClBkM,EAASrmB,EAEjB,CAEJ,OAAOqmB,CACX,CAEA,SAASE,GAAepyB,EAAOJ,GAC3B,IAAIztB,EAAiBmlB,EAAdpI,EAAU,GACbjH,EAAW+X,EAAMrH,mBAAmB1Q,SACpCvW,EAASuW,EAASvW,OACtB,IAAKS,EAAI,EAAGA,EAAIytB,EAAQluB,OAAQS,IAAK,CACjCmlB,EAASsI,EAAQztB,GACjB,IAAK,IAAIsI,EAAI,EAAGA,EAAI/I,EAAQ+I,IACxB,GAAIwN,EAASxN,IAAM6c,EAAOqB,mBAAoB,CAC1CzJ,EAAQ1c,KAAKiI,GACb,KACJ,CAER,CACA,OAAOyU,CACX,CA3EAtf,EAAQijB,cAAgB,SAASw/B,GAC7B,IAAIC,EAAW,CACXlhD,KA3DiB,YA4DjB8qB,KAAM,GACN9D,UAAU,EACVd,OAAQ,KACR7kB,EA1DqB,EA2DrBC,EA3DqB,EA4DrBskC,SA9DqB,GA+DrBC,UA9DsB,GA+DtBr6B,MAlEkB,IAmElBD,OAlEmB,IAmEnBmd,MAAO,CAAC,EACRgb,SAAU,CACN1hB,SAAS,EACT8Z,MAAO,IAEX2C,WAAYjgC,EAAQgiD,kBACpBlvC,SAAU,CACNrE,MAAO,IAMf,OAFApO,EAAM0B,aAAa2gD,EAAUD,GAEtBC,CACX,EAmDA,IAAIC,GAAiB5sC,EAAWjO,OAAO,CACnCC,KAAM,SAASwb,GACX,IAAItL,EAAOjU,KACXiU,EAAK2qC,UAAYr/B,GAAW,CAAC,GAAGq/B,SAChC7sC,EAAWE,GAAGlO,KAAK7G,KAAK+W,GACxBA,EAAKsL,QAAUrjB,EAAW,CAAE0V,GAAI5V,EAAQuT,YAAc0E,EAAKsL,QAASA,GACpEtL,EAAK6jB,YAAa,EAClB7jB,EAAKyP,OAAS,IAAIoH,EAAM,CACpBlZ,GAAIqC,EAAKsL,QAAQ3N,GACjB4S,SAAUvQ,EAAKsL,QAAQiF,WAE3BvQ,EAAKrC,GAAKqC,EAAKsL,QAAQ3N,GACvBqC,EAAK4qC,WACT,EAEAt/B,QAAS,CACL2G,MAAO,CAAC,EACRiV,OAAQ/M,EAAQE,KAChBlhB,QAAS,CACLD,MAAO,iBAEXwqB,YAAY,EACZmnB,cAAc,EACdroB,QAAQ,GAGZgB,WAAY,SAASjuB,GACjB,OAAIxJ,KAAKoyB,QACEpyB,KAAKoyB,QAAQqF,WAAWjuB,GAE5BxJ,KAAKuf,QAAQ4b,MACxB,EAEArW,QAAS,SAASzmB,GACd,GAAIzB,EAAYyB,GACZ,OAAO2B,KAAK0jB,OAAOoB,UAEnB9kB,KAAK0jB,OAAOoB,QAAQzmB,EAE5B,EAEAqV,OAAQ,WACR,EAEA8e,QAAS,WACLxyB,KAAK0jB,OAAOsB,QAChB,EAEAjiB,SAAU,SAASyG,GACfxJ,KAAKuf,QAAQ1gB,EAAI2K,EAAM3K,EACvBmB,KAAKuf,QAAQzgB,EAAI0K,EAAM1K,EACvBkB,KAAK0jB,OAAO3gB,SAASyG,EACzB,EAEAnM,SAAU,WACN,OAAO2C,KAAKuf,QAAQ3N,EACxB,EAEAmtC,UAAW,WAEP,IAAIC,EAAO9iD,EAAW,CAAC,EAAG,CAAEqjB,QAASvf,KAAKuf,UAI1C,OAHIvf,KAAK4+C,WACLI,EAAKJ,SAAW5+C,KAAK4+C,SAASvhD,YAE3B2hD,CACX,EAEAC,SAAU,SAAS7xC,GACf,GAAIA,IAAYoU,EAAa,CACzB,IAAIjC,EAAUvf,KAAKuf,QAEfvjB,EAAQK,MAAMc,SAASiQ,GACvBmS,EAAQnS,QAAQ6Z,KAAO7Z,EAEvBlR,EAAWqjB,EAAQnS,QAASA,GAGhC,IAAI8xC,EAAiB3/B,EAAQnS,QACTpN,KAAKm/C,eAKrBn/C,KAAKo/C,qBAAqBF,GAF1Bl/C,KAAKq/C,qBAAqBH,EAIlC,CAEA,OAAOl/C,KAAKuf,QAAQnS,QAAQ6Z,IAChC,EAEAo4B,qBAAsB,SAAS9/B,GACvBA,EAAQ0H,OACRjnB,KAAKm/C,eAAiB,IAAIz4B,EAAUnH,GACpCvf,KAAKm/C,eAAe1yB,gBAAiB,EACrCzsB,KAAK0jB,OAAOyG,OAAOnqB,KAAKm/C,gBAEhC,EAEAC,qBAAsB,SAAS7/B,GAC3Bvf,KAAKm/C,eAAen6B,OAAOzF,EAC/B,EAEA6X,SAAU,SAAS5tB,GACf,IAAIkK,EAAS1T,KAAK0T,SAClB,OAAO1T,KAAK8kB,WAAapR,EAAO1R,SAASwH,IAAUxJ,KAAKuf,QAAQkX,MACpE,EAEAooB,UAAW,WACP,IAAI5qC,EAAOjU,KACX,GAAIiU,EAAKsL,QAAQnS,QAAQkyC,SAAU,CAC/B,IAAI3rC,EAAOM,EAAK2qC,UAAY,CAAC,EACzBW,EAAkBzjD,MAAMwjD,SAASrrC,EAAKsL,QAAQnS,QAAQkyC,SAAU,CAC5DE,UAAW,aAGnBvrC,EAAKsL,QAAQnS,QAAQ6Z,KAAOs4B,EAAgB5rC,EAChD,CACJ,EAEA8rC,WAAY,WACR,OAAmC,IAA5Bz/C,KAAKuf,QAAQoY,UACxB,EAEA+nB,OAAQ,WACJ,MAAO,CACH9tC,GAAI5R,KAAKuf,QAAQ3N,GAEzB,IAGA+tC,GAAY97C,EAAMC,OAAO,CACzBC,KAAM,SAASqP,EAAOmM,GAClBvf,KAAKuf,QAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAASA,GAC5Cvf,KAAKu3B,YAAc,GACnBv3B,KAAKoT,MAAQA,CACjB,EACAmM,QAAS,CACLvW,MAAO,EACPD,OAAQ,EACRoW,KAAM,CACFY,MA5QwB,UA8Q5BmG,MAAO,CAAC,GAEZnjB,SAAU,WACN,OAAI/C,KAAKuf,QAAQxc,SACN/C,KAAKuf,QAAQxc,SAAS/C,KAAKoT,OAE3BpT,KAAKoT,MAAM6qC,YAAYj+C,KAAKuf,QAAQrhB,KAEnD,EACAwhD,OAAQ,WACJ,MAAO,CACHE,QAAS5/C,KAAKoT,MAAM/V,WACpB46B,UAAWj4B,KAAKuf,QAAQrhB,KAEhC,IAGJyhD,GAAU12C,MAAQ,SAASjN,EAASkN,GAKhC,IAJA,IAAI22C,EAAU32C,EAAI/J,MAAM,KACpByS,EAAKiuC,EAAQ,GACb3hD,EAAO2hD,EAAQ,IAAM7wB,EAEhBzwB,EAAI,EAAGA,EAAIvC,EAAQk2B,OAAOp0B,OAAQS,IAAK,CAC5C,IAAI6U,EAAQpX,EAAQk2B,OAAO3zB,GAC3B,GAAI6U,EAAMmM,QAAQ3N,IAAMA,EACpB,OAAOwB,EAAMylB,aAAa36B,EAAKiR,OAEvC,CACJ,EAEA,IAAIypB,GAAQ+lB,GAAe76C,OAAO,CAC9BC,KAAM,SAASwb,EAASvjB,GACpB,IAAIiY,EAAOjU,KACX2+C,GAAe1sC,GAAGlO,KAAK7G,KAAK+W,EAAMsL,GAClCvf,KAAKhE,QAAUA,EACfgE,KAAK8/C,yBACLvgC,EAAUtL,EAAKsL,QACftL,EAAKgoB,WAAa,GAClBhoB,EAAKzW,KAAO+hB,EAAQ/hB,KACpByW,EAAK8rC,oBACL9rC,EAAK+rC,eACL/rC,EAAK7G,QAAQ6G,EAAK7G,WAElB6G,EAAKgsC,mBACT,EAEA1gC,QAASvjB,EAAQijB,gBAEjBihC,qBAAsB,SAASC,GAC3B,IAAIC,EAAeC,GAAoBF,GAASngD,KAAK4+C,UACrD5+C,KAAKuf,QAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAAS6gC,GAE5CpgD,KAAKsgD,cACT,EAEAR,uBAAwB,SAASK,EAAO39B,GACpC,GAAIxiB,KAAKhE,SAAWgE,KAAKhE,QAAQukD,YAAa,CAC1C,IAAIH,EAAeC,GAAoBF,GAASngD,KAAK4+C,UAErD,GAAIuB,GAAS39B,EACT,GAAKvmB,EAAQgG,QAAQugB,EAAO,CAAC,IAAK,IAAK,QAAS,WAYzC,CACH,IAAI9O,EAAS1T,KAAK0T,SAClBA,EAAO8O,GAAS29B,EAAM39B,GACtBxiB,KAAK0T,OAAOA,EAChB,MAfQ1T,KAAKuf,QAAQmE,OACb1jB,KAAKwgD,gBACEJ,EAAa5iD,OACpBwC,KAAKuf,QAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAAS6gC,GAC5CpgD,KAAKwgD,iBAGLxgD,KAAKuf,QAAQnS,UACbpN,KAAK6+C,YACL7+C,KAAKoN,QAAQpN,KAAKuf,QAAQnS,eAQlCpN,KAAKuf,QAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAAS6gC,EAEpD,CACJ,EAEAI,cAAe,WACXxgD,KAAK0jB,OAAOzgB,QACZjD,KAAKm/C,eAAiB,KACtBn/C,KAAKuf,QAAQq/B,SAAW5+C,KAAK4+C,SAC7B5+C,KAAK+/C,oBACL//C,KAAKggD,cACT,EAEAM,aAAc,WACVtgD,KAAKwgD,gBACDxgD,KAAKuf,QAAQnS,UACbpN,KAAK6+C,YACL7+C,KAAKoN,QAAQpN,KAAKuf,QAAQnS,SAElC,EAEAskB,YAAa,SAAS+uB,GAClB,IAAIzkD,EAAUgE,KAAKhE,QACnB,GAAIA,GAAWA,EAAQukD,YAAa,CAChC,IAAI7sC,EAAS1T,KAAKqhC,QACd8e,EAAQngD,KAAK4+C,SAEbuB,IACAnkD,EAAQ0kD,uBACJh/B,EAAQy+B,EAAMthD,IAAM6U,EAAO7U,IAAMshD,EAAMthD,GACvCshD,EAAMnvC,IAAI,IAAK0C,EAAO7U,GAGtB6iB,EAAQy+B,EAAMrhD,IAAM4U,EAAO5U,IAAMqhD,EAAMrhD,GACvCqhD,EAAMnvC,IAAI,IAAK0C,EAAO5U,GAGtB4iB,EAAQy+B,EAAMn3C,QAAU0K,EAAO1K,QAAUm3C,EAAMn3C,OAC/Cm3C,EAAMnvC,IAAI,QAAS0C,EAAO1K,OAG1B0Y,EAAQy+B,EAAMp3C,SAAW2K,EAAO3K,SAAWo3C,EAAMp3C,QACjDo3C,EAAMnvC,IAAI,SAAU0C,EAAO3K,QAG/B/I,KAAK4+C,SAAWuB,EAChBnkD,EAAQ2kD,sBAEJF,GACAzkD,EAAQmoC,oBAGpB,CACJ,EAEA6b,aAAc,WACV,IAAItsC,EAAS1T,KAAK0jB,OAAOe,UAAS,GAC9BlF,EAAUvf,KAAKuf,QACnBvf,KAAK0T,OAAO,IAAI/K,EAAK4W,EAAQ1gB,EAAG0gB,EAAQzgB,EAAG4U,EAAO1K,MAAO0K,EAAO3K,SAChE/I,KAAK4gD,UACL5gD,KAAK6gD,eACT,EAEAzzC,QAAS,SAASA,GACd,IAAI3K,EAASzC,KAAKi/C,SAAS7xC,GAI3B,OAFApN,KAAK6gD,gBAEEp+C,CACX,EAEAo+C,cAAe,WACX,IAAI3B,EAAiBl/C,KAAKuf,QAAQnS,SAAW,CAAC,EAC1C0zC,EAAgB9gD,KAAKm/C,eACzB,GAAI2B,GAAiB5B,EAAe/xC,MAAO,CACvC,IAAI4zC,EAAgB/gD,KAAK0jB,OAAOe,WAC5Bu8B,EAAU,IAAIhlD,EAAQiR,UAAU8zC,GAChCE,EAAgBH,EAAc77B,eAAei8B,KAAK,MAElDC,EAAc,IAAIx4C,EAAK,EAAG,EAAGs4C,EAAcj4C,QAASi4C,EAAcl4C,UAClEq4C,EAAgBJ,EAAQ7zC,MAAMg0C,EAAajC,EAAe/xC,OAE9D2zC,EAAc/9C,SAASq+C,EAAcl3C,UACzC,CACJ,EAEA+1C,kBAAmB,WACf,IAGIhoB,EAAW15B,EAHXghB,EAAUvf,KAAKuf,QACfzhB,EAASyhB,EAAQ0c,WAAWn+B,OAC5BujD,EAAoB9hC,EAAQ8hC,kBAGhC,IAAK9iD,EAAI,EAAGA,EAAIT,EAAQS,IACpB05B,EAAY,IAAI0nB,GACZ3/C,KAAM9D,EAAW,CAAC,EACdmlD,EACA9hC,EAAQ0c,WAAW19B,KAG3ByB,KAAKi8B,WAAWr9B,KAAKq5B,EAE7B,EAEAvkB,OAAQ,SAASrV,GACb,IAAIqV,EAEJ,GAAIrV,EACA,GAAIlB,EAASkB,GACT,OAAQA,GACJ,KAAKm/C,GACD9pC,EAAS1T,KAAKshD,qBACd,MACJ,IAzcL,WA0cS5tC,EAAS1T,KAAKshD,qBACd,IAAItuB,EAAMhzB,KAAKhE,QAAQg7B,KACvBtjB,EAAO7U,GAAKm0B,EAAIn0B,EAChB6U,EAAO5U,GAAKk0B,EAAIl0B,EAChB,MACJ,KAAK2wB,GACD/b,EAAS1T,KAAKuhD,iBACd,MACJ,QACI7tC,EAAS1T,KAAKqhC,aAGtBrhC,KAAKwhD,WAAWnjD,GAChB2B,KAAKyhD,uBACCzhD,KAAKhE,SAAWgE,KAAKhE,QAAQ0lD,YAC/B1hD,KAAK2hD,0BAIbjuC,EAAS1T,KAAKqhC,QAGlB,OAAO3tB,CACX,EAEA8tC,WAAY,SAASj3C,GACjB,IAAIgV,EAAUvf,KAAKuf,QACfrV,EAAUK,EAAKL,UACfrL,EAAI0gB,EAAQ1gB,EAAIqL,EAAQrL,EACxBC,EAAIygB,EAAQzgB,EAAIoL,EAAQpL,EACxBkK,EAAQuW,EAAQvW,MAAQ2zC,EAAKn3C,IAAI+E,EAAKvB,MAAOuW,EAAQ6jB,UACrDr6B,EAASwW,EAAQxW,OAAS4zC,EAAKn3C,IAAI+E,EAAKxB,OAAQwW,EAAQ8jB,WAE5DrjC,KAAKqhC,QAAU,IAAI14B,EAAK9J,EAAGC,EAAGkK,EAAOD,GAErC/I,KAAK0jB,OAAOsB,OAAO,CACfnmB,EAAGA,EACHC,EAAGA,EACHkK,MAAOA,EACPD,OAAQA,GAEhB,EAEAhG,SAAU,SAASyG,GACf,IAAIA,EAGA,OAAOxJ,KAAKqhC,QAAQn3B,UAFpBlK,KAAK0T,OAAO,IAAI/K,EAAKa,EAAM3K,EAAG2K,EAAM1K,EAAGkB,KAAKqhC,QAAQr4B,MAAOhJ,KAAKqhC,QAAQt4B,QAIhF,EAKAxB,MAAO,WACH,IAAIy3C,EAAOh/C,KAAK++C,YAQhB,OANAC,EAAKz/B,QAAQ3N,GAAK5V,EAAQuT,WAEtBvP,KAAKhE,SAAWgE,KAAKhE,QAAQukD,aAAe7+B,EAAQ1hB,KAAK4+C,YACzDI,EAAKz/B,QAAQq/B,SAAWgD,GAAc5hD,KAAK4+C,WAGxC,IAAIhmB,GAAMomB,EAAKz/B,QAC1B,EAEAiP,OAAQ,SAASnwB,GACb,IAA4ByiC,EAAU+gB,EAAlC7lD,EAAUgE,KAAKhE,QAKnB,GAJIY,EAAYyB,KACZA,GAAQ,GAGR2B,KAAKy/C,cACDz/C,KAAK83B,YAAcz5B,EAgBnB,OAfAyiC,EAAW,GACX+gB,EAAa,GACb7hD,KAAK83B,WAAaz5B,EACd2B,KAAK83B,YACL97B,EAAQ0/B,eAAe98B,KAAKoB,MAC5B8gC,EAASliC,KAAKoB,QAEd3D,EAAMsF,OAAO3F,EAAQ0/B,eAAgB17B,MACrC6hD,EAAWjjD,KAAKoB,OAGfhE,EAAQ8lD,oBACT9lD,EAAQ+lD,kBAAkBjhB,EAAU+gB,IAGjC,CAGnB,EAEA92C,OAAQ,SAASN,EAAO3J,EAAQse,GAC5B,IAAIrU,EAAS/K,KAAK0jB,OAAO3Y,SACzB,GAAIN,IAAU+W,EAAa,EACN,IAAbpC,GAAsBpf,KAAKhE,SAAWgE,KAAKhE,QAAQw7B,iBAAmB/sB,IAAUM,EAAON,OACvFzK,KAAKhE,QAAQw7B,gBAAgB5mB,IACzB,IAAI5U,EAAQi3B,WAAWjzB,KAAKhE,QAAQq7B,iBAAkB,CAACr3B,MAAO,CAAC+K,EAAON,SAAS,GAGvF,IAEIu3C,EACAC,EAHA5hD,EAAIL,KAAK0T,SACTwuC,EAAK,IAAI9iD,EAAMiB,EAAE2I,MAAQ,EAAG3I,EAAE0I,OAAS,GAIvCjI,IACAkhD,EAAav3C,EAAQM,EAAON,MAC5Bw3C,EAAc5hD,EAAES,SAASiK,OAAOi3C,EAAYlhD,GAAQ2G,MAAMy6C,GAC1DliD,KAAKyhC,gBAAkBzhC,KAAKyhC,gBAAgBj6B,KAAKy6C,EAAYx6C,MAAMpH,EAAE6J,YACrElK,KAAK+C,SAASk/C,IAGlBjiD,KAAK0jB,OAAO3Y,OAAON,EAAOy3C,GAC1BliD,KAAKuf,QAAQzQ,SAASrE,MAAQA,EAE1BzK,KAAKhE,SAAWgE,KAAKhE,QAAQ+8B,oBAC7B/4B,KAAKhE,QAAQ+8B,mBAAmBvG,UAGpCxyB,KAAK2hD,qBAED3hD,KAAKhE,SACLgE,KAAKhE,QAAQiJ,QAAQk4C,GAAY,CAAEp9C,KAAMC,MAEjD,CAEA,OAAO+K,CACX,EAEAwsB,YAAa,SAAS/5B,GAClB,IAAiBe,EAAGsI,EAAGs7C,EAAKC,EAAxB3/C,EAAS,GAEb,IAAKlE,EAAI,EAAGA,EAAIyB,KAAKi8B,WAAWn+B,OAAQS,IAGpC,IADA6jD,EADMpiD,KAAKi8B,WAAW19B,GACXg5B,YACN1wB,EAAI,EAASA,EAAIu7C,EAAKtkD,OAAQ+I,IAE/B,GADAs7C,EAAMC,EAAKv7C,GACC,OAARrJ,EAAe,CACf,IAAIS,EAASkkD,EAAIlkD,SACbA,EAAOmV,OAASnV,EAAOmV,OAASpT,MAChCyC,EAAO7D,KAAKujD,EAEpB,MAAO,GAAY,MAAR3kD,EAAc,CACrB,IAAIyG,EAASk+C,EAAIl+C,SACbA,EAAOmP,OAASnP,EAAOmP,OAASpT,MAChCyC,EAAO7D,KAAKujD,EAEpB,MACI1/C,EAAO7D,KAAKujD,GAKxB,OAAO1/C,CACX,EAEAk/C,mBAAoB,WAChB9lD,EAAE4kC,KAAKzgC,KAAKu3B,eAAe,WACvBv3B,KAAKwyB,SACT,GACJ,EAOAqG,aAAc,SAASwpB,GACnB,IAAI9jD,EAAG2hC,EACP,IAAI/iC,EAASklD,GAQN,OAAIA,aAAuBjjD,EACvBi/C,GAAiBgE,EAAariD,KAAKi8B,YAEnCj8B,KAAKi8B,WAAWn+B,OAASkC,KAAKi8B,WAAW,GAAK,KATrD,IADAomB,EAAcA,EAAYC,oBACrB/jD,EAAI,EAAGA,EAAIyB,KAAKi8B,WAAWn+B,OAAQS,IAEpC,IADA2hC,EAAMlgC,KAAKi8B,WAAW19B,IACdghB,QAAQrhB,KAAKokD,qBAAuBD,EACxC,OAAOniB,CAQvB,EAEA+d,YAAa,SAAStgB,GAClB,IAAIt9B,EAAIL,KAAK0T,SACT6uC,EAAS5kB,EAAKluB,OAAO,GAAGlC,cAAgBowB,EAAKv0B,MAAM,GAEvD,OAAIlC,EAAW7G,EAAEkiD,IACNviD,KAAKwiD,gBAAgBniD,EAAEkiD,MAG3BliD,EAAES,QACb,EAEAkkB,OAAQ,SAASzF,GACb,GAAIA,EAAS,CACT,IACIkjC,EADAC,EAAe1iD,KAAKuf,QAGxBvf,KAAK2iD,YAAY39B,OAAOhlB,KAAK4iD,eAAerjC,IAExCvf,KAAK2kB,oBAAoBpF,EAAS,CAlpBtC,QACC,SACL,IACA,QAgpBQvf,KAAK0T,OAAO,IAAI/K,EAAK+5C,EAAa7jD,EAAG6jD,EAAa5jD,EAAG4jD,EAAa15C,MAAO05C,EAAa35C,SACtF05C,GAAe,GAGfljC,EAAQ0c,aACRymB,EAAazmB,WAAa1c,EAAQ0c,WAClCj8B,KAAK6iD,qBAGTH,EAAexmD,EAAWwmD,EAAcnjC,IAEpCA,EAAQzQ,UAAY2zC,IACpBziD,KAAK4gD,UAGL8B,EAAat1C,SACbpN,KAAKoN,QAAQs1C,EAAat1C,QAElC,CACJ,EAEAy1C,kBAAmB,WACf,IAGIztC,EACAnX,EACAgG,EALAszB,EAAcv3B,KAAKu3B,cACvBv3B,KAAKi8B,WAAa,GAClBj8B,KAAKigD,oBAKL,IAAK,IAAIjkB,EAAM,EAAGA,EAAMzE,EAAYz5B,OAAQk+B,IAExC/9B,GADAmX,EAAamiB,EAAYyE,IACL/9B,SACpBgG,EAASmR,EAAWnR,SAChBhG,EAAOmV,OAASnV,EAAOmV,QAAUpT,KACjCoV,EAAWnX,OAAO+B,KAAK64B,aAAa56B,EAAOshB,QAAQrhB,OAAS,MACrD+F,EAAOmP,OAASnP,EAAOmP,QAAUpT,MACxCoV,EAAWnR,OAAOjE,KAAK64B,aAAa50B,EAAOsb,QAAQrhB,OAAS,MAEhEkX,EAAWsc,aAEnB,EAEA/M,oBAAqB3oB,EAAQsmB,mBAE7BsgC,eAAgB,SAASrjC,GACrB,MAAO,CACH5L,KAAM4L,EAAQ+I,KACdrqB,OAAQshB,EAAQthB,OAChBioB,MAAO3G,EAAQ2G,MACf/G,KAAMI,EAAQJ,KACdyG,OAAQrG,EAAQqG,OAExB,EAEA67B,qBAAsB,WACdzhD,KAAKhE,SACLgE,KAAKhE,QAAQiJ,QAAQuqB,EAAkB,CAAEzvB,KAAMC,KAAM0T,OAAQ1T,KAAKqhC,QAAQ95B,SAElF,EAEAi7C,gBAAiB,SAASh5C,GACtB,IAAIuB,EAAS/K,KAAK+K,SAEdJ,EADS3K,KAAK0T,SACFxJ,UAMhB,OAJIa,EAAON,OACPjB,EAAMuB,OAAOA,EAAON,MAAOM,EAAOjK,SAAS0G,KAAKmD,IAG7CnB,CACX,EAEA83C,mBAAoB,WAChB,IAAI5tC,EAAS1T,KAAK0T,SACd/I,EAAK+I,EAAOxJ,UACZW,EAAK6I,EAAOrJ,cAEhB,OAAO1B,EAAK4D,WAAWvM,KAAKhE,QAAQ2oC,YAAYh6B,GAAK3K,KAAKhE,QAAQ2oC,YAAY95B,GAClF,EAEA02C,eAAgB,WACZ,IAAI7tC,EAAS1T,KAAK0T,SAASlJ,cAAcxK,KAAK+K,SAASN,OACnDE,EAAK+I,EAAOxJ,UACZW,EAAK6I,EAAOrJ,cAEhB,OAAO1B,EAAK4D,WAAW5B,EAAIE,EAC/B,EAEA+1C,QAAS,WACL,IAAI9xC,EAAW9O,KAAKuf,QAAQzQ,SAExBA,GAAYA,EAASrE,OACrBzK,KAAK+K,OAAO+D,EAASrE,OAGzBzK,KAAKyhC,gBAAkB,IAAIriC,CAC/B,EAEA+lB,OAAQ,SAAS9mB,GACb,IAAIkhB,EAAUvf,KAAKuf,QACf2G,EAAQ3G,EAAQ2G,MAChBN,EAASrG,EAAQqG,OACjBzG,EAAOI,EAAQJ,KAEf9gB,GAAS3B,EAAUwpB,EAAMN,UACzBA,EAAS1pB,EAAW,CAAC,EAAG0pB,EAAQM,EAAMN,SAGtCvnB,GAAS3B,EAAUwpB,EAAM/G,QACzBA,EAAO+G,EAAM/G,MAGjBnf,KAAK2iD,YAAY39B,OAAO,CACpBY,OAAQA,EACRzG,KAAMA,IAGNI,EAAQ2hB,UAAY3hB,EAAQ2hB,SAAS1hB,SACrCxf,KAAKhE,QAAQ8mD,gBAAgB9iD,KAAM3B,EAE3C,EAEA+4B,SAAU,SAAS/4B,GACf,GAAI2B,KAAK8kB,UAAW,CAChB,IAA4Bi+B,EAAxBrvC,EAAS1T,KAAK0T,SACdjJ,EAAQzK,KAAK+K,SAASN,MAE1B,GAAIpM,EAAMR,UAAYQ,EAAMR,UACxB,OAAO2O,EAAUI,MAAMvO,EAAOqV,EAAQjJ,GAAgB,GAGtD,GADAs4C,EAAe1kD,EAAMkJ,QAAQwD,OAAON,EAAOiJ,EAAO5S,UAC9C4S,EAAO1R,SAAS+gD,GAChB,OAAO/iD,IAGnB,CACJ,EAEA0/C,OAAQ,WACJ,MAAO,CACHE,QAAS5/C,KAAKuf,QAAQ3N,GAE9B,EAEAmuC,kBAAmB,WACf,IAII4C,EAkvIej/B,EACnBw9B,EAvvII3hC,EAAUvf,KAAKuf,QACfyjC,EAAgBhjD,KAAK4iD,eAAerjC,GACpC0jC,EAAiB1jC,EAAQmE,OACzBlmB,GAAQ+hB,EAAQ/hB,KAAO,IAAI8kD,oBAG/BU,EAAch6C,MAAQuW,EAAQvW,MAC9Bg6C,EAAcj6C,OAASwW,EAAQxW,OAE3B7B,EAAW+7C,GACXN,EAAcM,EAAe/lD,KAAK8C,KAAMuf,GACjCyjC,EAAcrvC,MACrBgvC,EAAc,IAAI/6B,EAAKo7B,GA4uIT,KADlB9B,GADmBx9B,EAzuIGi/B,GA0uIR59B,mBAAmB2H,YAAY,OACxCzmB,OAAOpH,GAA6B,IAAlBqiD,EAAKj7C,OAAOnH,GACnC4kB,EAAO3gB,UAAUm+C,EAAKj7C,OAAOpH,GAAIqiD,EAAKj7C,OAAOnH,IA1uIzC6jD,EADe,aAARnlD,EACO,IAAIgqB,EAAUw7B,GACb,UAARxlD,EACO,IAAIirB,EAAOu6B,GACV,QAARxlD,EACO,IAAIkpB,EAAUs8B,GACb,SAARxlD,EACO,IAAIguB,EAAMw3B,GAEV,IAAIp7B,EAAKo7B,GAG3BhjD,KAAK2iD,YAAcA,EACnB3iD,KAAK0jB,OAAOyG,OAAOnqB,KAAK2iD,YAC5B,IAMAhnB,GAAagjB,GAAe76C,OAAO,CACnCC,KAAM,SAASwB,EAAMF,EAAIka,GACrB,IAAItL,EAAOjU,KACX2+C,GAAe1sC,GAAGlO,KAAK7G,KAAK+W,EAAMsL,GAClCvf,KAAK8/C,yBACL9/C,KAAKkjD,cACLjvC,EAAKqU,KAAO,IAAItsB,EAAQmvB,SAASlX,EAAKsL,SACtCtL,EAAKqU,KAAKnJ,KA90BA,eA+0BVlL,EAAKyP,OAAOyG,OAAOlW,EAAKqU,MACxBrU,EAAKkvC,aAAelvC,EAAKmvC,aAAe,IAAIhkD,EAC5C6U,EAAKovC,WAAW99C,GAChB0O,EAAKqvC,WAAWj+C,GAChB4O,EAAK7G,QAAQ6G,EAAKsL,QAAQnS,SAC1B6G,EAAKsvC,SAAW,GACZ7hC,EAAQnC,IAAYA,EAAQ9gB,QAC5BwV,EAAKxV,OAAO8gB,EAAQ9gB,OAE5B,EAEA8gB,QAAS,CACL2G,MAAO,CACHN,OAAQ,CAAC,GAEb+D,SAAU4zB,GACV3zB,OAAQ2zB,GACR9+C,OAAQ,GACRk5B,YAAY,EACZ6rB,cAAex0B,EACfy0B,YAAaz0B,GAGjBkxB,qBAAsB,SAASC,GAC3BngD,KAAK8/C,uBAAuBK,GAASngD,KAAK4+C,SAC9C,EAEAkB,uBAAwB,SAASK,GAC7B,GAAIngD,KAAKhE,SAAWgE,KAAKhE,QAAQukD,YAAa,CAC1C,IAAImD,EAAU1jD,KAAKhE,QAAQ2nD,SACvBpkC,EAixGhB,SAAkCq/B,GAC9B,IAAIn8C,EAAS,CAAC,EAIVif,GAFJk9B,EAAWA,GAAY,CAAC,GAEH33B,OAA2B,OAAlB23B,EAAS33B,OACnCxkB,EAAO2K,QAAUwxC,EAAS33B,MAG1BvF,EAAQk9B,EAASphD,OAA2B,OAAlBohD,EAASphD,OACnCiF,EAAOjF,KAAOohD,EAASphD,MAGvBkkB,EAAQk9B,EAASr5C,OAA2B,OAAlBq5C,EAASr5C,OACnC9C,EAAO8C,KAAOq5C,EAASr5C,MAGvBmc,EAAQk9B,EAAS4E,gBAA6C,OAA3B5E,EAAS4E,gBAC5C/gD,EAAO+gD,cAAgB5E,EAAS4E,eAGhC9hC,EAAQk9B,EAASgF,QAA6B,OAAnBhF,EAASgF,QACpCnhD,EAAOmhD,MAAQhF,EAASgF,OAGxBliC,EAAQk9B,EAASiF,QAA6B,OAAnBjF,EAASiF,QACpCphD,EAAOohD,MAAQjF,EAASiF,OAGxBniC,EAAQk9B,EAASv5C,KAAuB,OAAhBu5C,EAASv5C,KACjC5C,EAAO4C,GAAKu5C,EAASv5C,IAGrBqc,EAAQk9B,EAAS6E,cAAyC,OAAzB7E,EAAS6E,cAC1ChhD,EAAOghD,YAAc7E,EAAS6E,aAG9B/hC,EAAQk9B,EAASkF,MAAyB,OAAjBlF,EAASkF,MAClCrhD,EAAOqhD,IAAMlF,EAASkF,KAGtBpiC,EAAQk9B,EAASmF,MAAyB,OAAjBnF,EAASmF,MAClCthD,EAAOshD,IAAMnF,EAASmF,KAG1B,OAAOthD,CACX,CA/zG0BuhD,CAAyB7D,GAASngD,KAAK4+C,UAErD,GAAIuB,EAAO,CACP,GAAIz+B,EAAQnC,EAAQha,MAAO,CACvB,IAAIA,EAAOm+C,EAAQnkC,EAAQha,MACvBA,GAAQmc,EAAQnC,EAAQikC,iBACzBj+C,EAAOA,EAAKszB,aAAatZ,EAAQikC,gBAEpCxjD,KAAK/B,OAAOsH,EAChB,MAAWmc,EAAQnC,EAAQqkC,QAAUliC,EAAQnC,EAAQskC,QACjD7jD,KAAK/B,OAAO,IAAImB,EAAMmgB,EAAQqkC,MAAOrkC,EAAQskC,QAGjD,GAAIniC,EAAQnC,EAAQla,IAAK,CACrB,IAAIA,EAAKq+C,EAAQnkC,EAAQla,IACrBA,GAAMqc,EAAQnC,EAAQkkC,eACtBp+C,EAAKA,EAAGwzB,aAAatZ,EAAQkkC,cAEjCzjD,KAAKiE,OAAOoB,EAChB,MAAWqc,EAAQnC,EAAQukC,MAAQpiC,EAAQnC,EAAQwkC,MAC/C/jD,KAAKiE,OAAO,IAAI7E,EAAMmgB,EAAQukC,IAAKvkC,EAAQwkC,MAG3CriC,EAAQnC,EAAQ/hB,OAASwC,KAAKxC,SAAW+hB,EAAQ/hB,OACjDwC,KAAKvB,OAAO,IACZuB,KAAKxC,KAAK+hB,EAAQ/hB,OAGtBwC,KAAK4+C,SAAWuB,EAEhBngD,KAAK6+C,YACL7+C,KAAKglB,OAAOhlB,KAAKuf,QACrB,MACIvf,KAAKuf,QAAUrjB,EAAW,CAAC,EAAGqjB,EAASvf,KAAKuf,QAEpD,CACJ,EAEAmS,YAAa,SAAS+uB,GAClB,GAAIzgD,KAAKhE,SAAWgE,KAAKhE,QAAQukD,aACzBvgD,KAAKhE,QAAQioD,sBAAuB,CACpC,IAAI9D,EAAQngD,KAAKhE,QAAQioD,sBAAsBC,SAASlkD,KAAK4+C,SAASuF,KAElEhE,IACAngD,KAAKhE,QAAQ0kD,uBACTh/B,EAAQ1hB,KAAKuf,QAAQqkC,QAAiC,OAAvB5jD,KAAKuf,QAAQqkC,OAC5CQ,GAAW,OAAQjE,GACnBiE,GAAW,gBAAiBjE,GAC5BA,EAAMnvC,IAAI,QAAShR,KAAKuf,QAAQqkC,OAChCzD,EAAMnvC,IAAI,QAAShR,KAAKuf,QAAQskC,SAEhC1D,EAAMnvC,IAAI,OAAQhR,KAAKuf,QAAQha,MAC3Bmc,EAAQy+B,EAAMqD,gBACdrD,EAAMnvC,IAAI,gBAAiBhR,KAAK24B,gBAAkB34B,KAAK24B,gBAAgBpZ,QAAQrhB,KAAO,MAE1FkmD,GAAW,QAASjE,GACpBiE,GAAW,QAASjE,IAGpBz+B,EAAQ1hB,KAAKuf,QAAQukC,MAA6B,OAArB9jD,KAAKuf,QAAQukC,KAC1CM,GAAW,KAAMjE,GACjBiE,GAAW,cAAejE,GAC1BA,EAAMnvC,IAAI,MAAOhR,KAAKuf,QAAQukC,KAC9B3D,EAAMnvC,IAAI,MAAOhR,KAAKuf,QAAQwkC,OAE9B5D,EAAMnvC,IAAI,KAAMhR,KAAKuf,QAAQla,IACzBqc,EAAQy+B,EAAMsD,cACdtD,EAAMnvC,IAAI,cAAehR,KAAK+xB,gBAAkB/xB,KAAK+xB,gBAAgBxS,QAAQrhB,KAAO,MAExFkmD,GAAW,MAAOjE,GAClBiE,GAAW,MAAOjE,IAGlBz+B,EAAQ1hB,KAAKuf,QAAQ/hB,OAASkkB,EAAQy+B,EAAM3iD,OAC5C2iD,EAAMnvC,IAAI,OAAQhR,KAAKuf,QAAQ/hB,MAGnCwC,KAAK4+C,SAAWuB,EAChBngD,KAAKhE,QAAQ2kD,sBAETF,GACAzgD,KAAKhE,QAAQ88B,yBAGzB,CAER,EAOAoE,YAAa,WACT,OAAOl9B,KAAKg9B,yBAA2Bh9B,KAAKg9B,yBAAyBj6B,WAAa/C,KAAKmjD,YAC3F,EAEAE,WAAY,SAASplD,GACjB,IAEI2gD,EAFAyF,EAAcpmD,aAAkB26B,GAChC0rB,EAAmBtkD,KAAKuf,QAAQikC,eAAiBx0B,EAEjDq1B,IAAgBpmD,EAAO46B,aAAayrB,KAIpCrmD,IAAWujB,IACXxhB,KAAKuF,KAAOtH,GAGhB+B,KAAKukD,6BAEU,OAAXtmD,EACI+B,KAAK24B,kBACL34B,KAAKmjD,cAAgBnjD,KAAKg9B,0BAA4Bh9B,KAAK24B,iBAAiB51B,WAC5E/C,KAAKwkD,wBACLxkD,KAAKykD,gBAAgB,KAAMzkD,KAAKmjD,eAE7BllD,aAAkB0hD,KACzBf,EAAW3gD,EAAOmV,MAAMwrC,WAEpB5+C,KAAKykD,gBAAgB7F,EAAShtC,IAElC5R,KAAK24B,gBAAkB16B,EACvB+B,KAAK24B,gBAAgBpB,YAAY34B,KAAKoB,OAC/B/B,aAAkBmB,GACzBY,KAAKykD,gBAAgB,KAAMxmD,GAC3B+B,KAAKmjD,aAAellD,EAChB+B,KAAK24B,iBACL34B,KAAKwkD,yBAGFH,KACPzF,EAAW3gD,EAAO2gD,WAEd5+C,KAAKykD,gBAAgB7F,EAAShtC,IAGlC5R,KAAK24B,gBAAkB16B,EAAO46B,aAAayrB,GAC3CtkD,KAAK24B,gBAAgBpB,YAAY34B,KAAKoB,OAE9C,EAEA/B,OAAQ,SAASA,EAAQmhB,GAQrB,OAPI1iB,EAAUuB,KACNmhB,GAAYpf,KAAKhE,SACjBgE,KAAKhE,QAAQw7B,gBAAgBjD,iBAAiB,IAAIv4B,EAAQk1B,mBAAmBlxB,KAAM/B,IAEvF+B,KAAKqjD,WAAWplD,GAChB+B,KAAKwyB,WAEFxyB,KAAK24B,gBAAkB34B,KAAK24B,gBAAkB34B,KAAKmjD,YAC9D,EAEAsB,gBAAiB,SAASl/C,EAAMm/C,GAC5B1kD,KAAKuf,QAAQha,KAAOA,EAChBm/C,GACA1kD,KAAKuf,QAAQqkC,MAAQc,EAAU7lD,EAC/BmB,KAAKuf,QAAQskC,MAAQa,EAAU5lD,IAE/BkB,KAAKuf,QAAQqkC,MAAQ,KACrB5jD,KAAKuf,QAAQskC,MAAQ,KAE7B,EAQAc,cAAe,SAAStmD,GACpB,IAAIA,EAYA,OAHK2B,KAAK4kD,iBACN5kD,KAAK4kD,eAAiB,IAAI5oD,EAAQqN,YAAYrJ,KAAKk9B,cAAe,KAAM,OAErEl9B,KAAK4kD,eAXZ,KAAIvmD,aAAiBrC,EAAQqN,aAKzB,KAAM,+CAJNhL,EAAMiL,KAAO,KACbtJ,KAAK4kD,eAAiBvmD,EACtB2B,KAAK/B,OAAOI,EAAMmL,MAU9B,EAKA2zB,YAAa,WACT,OAAOn9B,KAAKi9B,yBAA2Bj9B,KAAKi9B,yBAAyBl6B,WAAa/C,KAAKojD,YAC3F,EAEAE,WAAY,SAASr/C,GACjB,IAEI26C,EAFAiG,EAAc5gD,aAAkB20B,GAChC0rB,EAAmBtkD,KAAKuf,QAAQkkC,aAAez0B,EAG/C61B,IAAgB5gD,EAAO40B,aAAayrB,KAIpCrgD,IAAWud,IACXxhB,KAAKqF,GAAKpB,GAGdjE,KAAK8kD,6BAEU,OAAX7gD,EACIjE,KAAK+xB,kBACL/xB,KAAKojD,cAAgBpjD,KAAKi9B,0BAA4Bj9B,KAAK+xB,iBAAiBhvB,WAC5E/C,KAAK+kD,wBACL/kD,KAAKglD,cAAc,KAAMhlD,KAAKojD,eAE3Bn/C,aAAkB07C,KACzBf,EAAW36C,EAAOmP,MAAMwrC,WAEpB5+C,KAAKglD,cAAcpG,EAAShtC,IAEhC5R,KAAK+xB,gBAAkB9tB,EACvBjE,KAAK+xB,gBAAgBwF,YAAY34B,KAAKoB,OAC/BiE,aAAkB7E,GACzBY,KAAKglD,cAAc,KAAM/gD,GACzBjE,KAAKojD,aAAen/C,EAChBjE,KAAK+xB,iBACL/xB,KAAK+kD,yBAEFF,KACPjG,EAAW36C,EAAO26C,WAEd5+C,KAAKglD,cAAcpG,EAAShtC,IAEhC5R,KAAK+xB,gBAAkB9tB,EAAO40B,aAAayrB,GAC3CtkD,KAAK+xB,gBAAgBwF,YAAY34B,KAAKoB,OAE9C,EAEAiE,OAAQ,SAASA,EAAQmb,GASrB,OARI1iB,EAAUuH,KACNmb,GAAYpf,KAAKhE,SACjBgE,KAAKhE,QAAQw7B,gBAAgBjD,iBAAiB,IAAIv4B,EAAQk1B,mBAAmBlxB,KAAMwhB,EAAavd,IAEpGjE,KAAKsjD,WAAWr/C,GAEhBjE,KAAKwyB,WAEFxyB,KAAK+xB,gBAAkB/xB,KAAK+xB,gBAAkB/xB,KAAKojD,YAC9D,EAEA4B,cAAe,SAAS3/C,EAAI4/C,GACxBjlD,KAAKuf,QAAQla,GAAKA,EACd4/C,GACAjlD,KAAKuf,QAAQukC,IAAMmB,EAAQpmD,EAC3BmB,KAAKuf,QAAQwkC,IAAMkB,EAAQnmD,IAE3BkB,KAAKuf,QAAQukC,IAAM,KACnB9jD,KAAKuf,QAAQwkC,IAAM,KAE3B,EAQAmB,cAAe,SAAS7mD,GACpB,IAAIA,EAYA,OAHK2B,KAAKmlD,iBACNnlD,KAAKmlD,eAAiB,IAAInpD,EAAQqN,YAAYrJ,KAAKm9B,cAAe,KAAM,OAErEn9B,KAAKmlD,eAXZ,KAAI9mD,aAAiBrC,EAAQqN,aAKzB,KAAM,+CAJNhL,EAAMkL,MAAQ,KACdvJ,KAAKmlD,eAAiB9mD,EACtB2B,KAAKiE,OAAO5F,EAAMmL,MAU9B,EAEAq5C,kBAAmB,WACf7iD,KAAKyxB,iBAAiBzxB,KAAK/B,SAAU,UACrC+B,KAAKyxB,iBAAiBzxB,KAAKiE,SAAU,SACzC,EAEAwtB,iBAAkB,SAAS2zB,EAAUlnD,GACjC,IAAI+V,EAAOjU,KACPhE,EAAUiY,EAAKjY,QACnB,GAAIopD,aAAoBzF,KAAc3jD,EAAQi0B,aAAam1B,EAAShyC,MAAMxB,IAAK,CAC3E,IAAIgtC,EAAWwG,EAAShyC,MAAMwrC,SAC1ByG,EAAgBD,EAAS7lC,QAAQrhB,KACjConD,EAAe,WACf,IAAIlyC,EAAQpX,EAAQ2nD,SAAS/E,EAAShtC,IACtCwzC,EAAWhyC,EAAMylB,aAAawsB,GAC9BpxC,EAAK/V,GAAMknD,GAAU,GACrBnxC,EAAKyd,aACT,EACA,GAAI11B,EAAQ2nD,SAAS/E,EAAShtC,IAC3B0zC,QACI,CACH,IAAIC,EAAevpD,EAAQwpD,oBAAoBtB,SAAStF,EAASuF,KAC7DoB,GACAvpD,EAAQypD,2BAA2B7mD,KAAK2mD,EAAaG,WAAWJ,GAExE,CACJ,MACIrxC,EAAK/V,GAAMknD,GAAU,EAE7B,EAEAh4C,QAAS,SAASA,GACd,IAAI3K,EAASzC,KAAKi/C,SAAS7xC,GAI3B,OAHIsU,EAAQtU,IACRpN,KAAK6gD,gBAEFp+C,CACX,EAEA48C,qBAAsB,SAAS9/B,GAC3B,IAAImE,EAaJ,OAZIxc,EAAWqY,EAAQmE,QACnBA,EAASnE,EAAQmE,OAAOxmB,KAAK8C,KAAMuf,GAC5BA,EAAQ0H,OACfvD,EAAS,IAAIgD,EAAUnH,IAGvBmE,IACA1jB,KAAKm/C,eAAiBz7B,EACtBA,EAAO+I,gBAAiB,EACxBzsB,KAAK0jB,OAAOyG,OAAOzG,IAGhBA,CACX,EAEA07B,qBAAsB,SAAS7/B,GACvBrY,EAAWqY,EAAQmE,SACnB1jB,KAAK0jB,OAAO/hB,OAAO3B,KAAKm/C,gBACxBn/C,KAAKq/C,qBAAqB9/B,IAE1Bvf,KAAKm/C,eAAen6B,OAAOzF,EAEnC,EAEAshC,cAAe,WACX,GAAI7gD,KAAKm/C,eAAgB,CAMrB,IALA,IAAIz3C,EA9rCgB,EA+rChBjJ,EAASuB,KAAKw8B,YACdmpB,EAAShJ,EAAKl9C,MAAMhB,EAAOX,OAAS,GACpC8nD,EAAWD,EAAS,EAEjBC,EAAW,GAAKnnD,EAAOmnD,GAAUt7C,OAAO7L,EAAOknD,KAClDC,IACAD,IAGJ,IAeIn8C,EAfAyf,EAAWxqB,EAAOknD,GAClBngC,EAAa/mB,EAAOmnD,GAEpBr5B,EAAcvsB,KAAKm/C,eAAe16B,WAClCzb,EAAQujB,EAAYvjB,MACpBD,EAASwjB,EAAYxjB,OACrB88C,EAAcpnD,EAAOX,OAAS,GAAM,EACpC6tC,EAAWnmB,EAAWma,WAAW1W,GAUrC,GARI48B,GAAepnD,EAAOX,OAAS,GAAK6tC,EAAW,IAC7CnmB,EAAW1mB,IAAMmqB,EAASnqB,GAAK6sC,EAAW3iC,GAAWwc,EAAW3mB,IAAMoqB,EAASpqB,GAAK8sC,EAAW5iC,KACjG88C,GAAc,EACdn+C,EAAS,GAKTm+C,EAAa,CACb,IAAIp7C,EAAQkjB,EAAKhM,KAAKqH,IAAI2zB,EAAKv8C,MAAM6oB,EAASnqB,EAAI0mB,EAAW1mB,EAAGmqB,EAASpqB,EAAI2mB,EAAW3mB,IACxF2K,EAAQ,IAAIpK,GAAO6pB,EAASpqB,EAAI2mB,EAAW3mB,GAAK,EAAI2mB,EAAW3mB,GAAIoqB,EAASnqB,EAAI0mB,EAAW1mB,GAAK,EAAI0mB,EAAW1mB,GAEvF,KAApB69C,EAAKlgD,IAAIgO,IACTjB,EAAM3K,GAAK6I,EACX8B,EAAM1K,GAAKiK,EAAS,GACb0B,EAAQ,KAAQ,GACvBjB,EAAM3K,GAAKmK,EAAQ,EACnBQ,EAAM1K,GAAKiK,EAASrB,GACb+C,GAAS,IAAO,EAAIA,GAASA,EAAQ,GAC5CjB,EAAM1K,GAAKiK,GACJ0B,EAAQ,GAAKA,EAAQ,MAC5BjB,EAAM3K,GAAKmK,EACXQ,EAAM1K,GAAKiK,EAEnB,KAAO,CACH,IAAI+8C,EAASnJ,EAAKl9C,MAAMhB,EAAOX,OAAS,GACxC0L,EAAQ/K,EAAOqnD,GAAQv+C,QACvBie,EAAa/mB,EAAOqnD,EAAS,GAC7B78B,EAAWxqB,EAAOqnD,EAAS,GAE3B,IAAIhgB,EAAUtgB,EAAW3mB,GAAK2K,EAAM3K,GAAKoqB,EAASpqB,GAAK2K,EAAM3K,EAAI6I,GAAU6kB,EAAYvjB,MAAQtB,EAC3Fq+B,EAAUvgB,EAAW1mB,GAAK0K,EAAM1K,GAAKmqB,EAASnqB,GAAK0K,EAAM1K,EAAI4I,GAAU6kB,EAAYxjB,OAASrB,EAEhG8B,EAAM3K,GAAKinC,EACXt8B,EAAM1K,GAAKinC,CACf,CAEA/lC,KAAKm/C,eAAep8C,SAASyG,EACjC,CACJ,EAMAglB,OAAQ,SAASnwB,GACb,IAA4ByiC,EAAU+gB,EAAlC7lD,EAAUgE,KAAKhE,QACnB,GAAIgE,KAAKy/C,cACDz/C,KAAK83B,aAAez5B,EAyBpB,OAxBA2B,KAAK83B,WAAaz5B,EAClByiC,EAAW,GACX+gB,EAAa,GACT7hD,KAAK83B,YACL93B,KAAKoyB,QAAU,IAAI0M,EAAsB9+B,KAAMA,KAAKuf,QAAQwmC,WAC5D/pD,EAAQyoC,OAAOzkC,KAAKoyB,SAAS,GAC7Bp2B,EAAQ0/B,eAAe98B,KAAKoB,MAC5B8gC,EAASliC,KAAKoB,OAEVA,KAAKoyB,UACLp2B,EAAQyoC,OAAOzkC,KAAKoyB,SAAS,GAC7B/1B,EAAMsF,OAAO3F,EAAQ0/B,eAAgB17B,MACrCA,KAAKoyB,QAAU5Q,EACfqgC,EAAWjjD,KAAKoB,OAIpBA,KAAKoyB,SACLpyB,KAAKoyB,QAAQI,UAGZx2B,EAAQ8lD,oBACT9lD,EAAQ+lD,kBAAkBjhB,EAAU+gB,IAEjC,CAGnB,EAOAnuC,OAAQ,SAASrV,GACb,IAAIA,GAAUlB,EAASkB,GAGnB,OAAO2B,KAAKqhC,QAFZrhC,KAAKqhC,QAAUhjC,CAIvB,EAMAb,KAAM,SAASa,GACX,IAAIkhB,EAAUvf,KAAKuf,QACnB,IAAIlhB,EAOA,OAAOkhB,EAAQ/hB,KANXa,IAAUkhB,EAAQ/hB,OAClB+hB,EAAQ/hB,KAAOa,EACf2B,KAAKkjD,cACLljD,KAAKwyB,UAKjB,EAEA0wB,YAAa,WACT,IAAI1lD,GAAQwC,KAAKuf,QAAQ/hB,MAAQ,IAAI+P,cAEjCvN,KAAKgmD,QADLxoD,GAAQq/C,EACO,IAAIlgB,EAAgB38B,MAEpB,IAAIy8B,EAAez8B,KAE1C,EAQAvB,OAAQ,SAASJ,GACb,IAAIA,EAaG,CACH,IAAI4nD,EAAM,GACV,GAAIvpD,EAAUsD,KAAKujD,UACf,IAAK,IAAIz8C,EAAI,EAAGA,EAAI9G,KAAKujD,SAASzlD,OAAQgJ,IACtCm/C,EAAIrnD,KAAKoB,KAAKujD,SAASz8C,GAAG0C,OAGlC,OAAOy8C,CACX,CApBIjmD,KAAKujD,SAAW,GAChB,IAAK,IAAIhlD,EAAI,EAAGA,EAAIF,EAAMP,OAAQS,IAAK,CACnC,IAAI2nD,EAAa7nD,EAAME,GACvB,GAAI2nD,aAAsBlqD,EAAQoD,MAC9BY,KAAKujD,SAAS3kD,KAAK,IAAI5C,EAAQqN,YAAY68C,QACxC,KAAIA,EAAWjpD,eAAe,OAAQipD,EAAWjpD,eAAe,KAGnE,KAAM,+EAFN+C,KAAKujD,SAAS3kD,KAAK,IAAI5C,EAAQqN,YAAY,IAAIjK,EAAM8mD,EAAWrnD,EAAGqnD,EAAWpnD,IAGlF,CACJ,CAWR,EAKA09B,UAAW,WACP,IAAIypB,EAAM,CAACjmD,KAAKk9B,eAChB,GAAIl9B,KAAKujD,SACL,IAAK,IAAIz8C,EAAI,EAAGA,EAAI9G,KAAKujD,SAASzlD,OAAQgJ,IACtCm/C,EAAIrnD,KAAKoB,KAAKujD,SAASz8C,GAAG0C,OAIlC,OADAy8C,EAAIrnD,KAAKoB,KAAKm9B,eACP8oB,CACX,EAEAzzB,QAAS,WACLxyB,KAAKmmD,qBACLnmD,KAAKomD,eACLpmD,KAAK6gD,gBAED7gD,KAAKoyB,SACLpyB,KAAKoyB,QAAQI,SAErB,EAEA2zB,mBAAoB,WAChB,IACIjpB,EAAaC,EACbkpB,EAAkBC,EAFlBlxC,EAAapV,KAGb/B,EAASmX,EAAWnX,SACpBgG,EAASmR,EAAWnR,SAEpBhG,aAAkBmB,EAClB89B,EAAcj/B,EACPA,aAAkB0hD,KAErB0G,EADAjI,GAAgBngD,GACGA,EAAOmV,MAAM6oB,WAEb,CAACh+B,IAIxBgG,aAAkB7E,EAClB+9B,EAAcl5B,EACPA,aAAkB07C,KAErB2G,EADAlI,GAAgBn6C,GACGA,EAAOmP,MAAM6oB,WAEb,CAACh4B,IAIxBi5B,EACIopB,IACAlxC,EAAW6nB,yBAA2BohB,GAAiBnhB,EAAaopB,IAEjED,IACHlpB,EACA/nB,EAAW4nB,yBAA2BqhB,GAAiBlhB,EAAakpB,GAC7DC,GACPtmD,KAAKumD,uBAAuBF,EAAkBC,GAG1D,EAEAC,uBAAwB,SAASF,EAAkBC,GAC/C,IAEIE,EAAsBC,EACtBvpB,EAAaC,EACbupB,EAAWC,EACXhuB,EAAiB5G,EACjB60B,EAAWC,EACXzU,EAPA0U,EAAiB7J,GACjBjL,EAAUiL,GAQd,IAAK2J,EAAY,EAAGA,EAAYP,EAAiBvoD,OAAQ8oD,IAErD,IAAKxI,GADLzlB,EAAkB0tB,EAAiBO,IAI/B,IAFA1pB,EAAcvE,EAAgB51B,WAEzB8jD,EAAY,EAAGA,EAAYP,EAAiBxoD,OAAQ+oD,IAEhDzI,GADLrsB,EAAkBu0B,EAAiBO,MAE/B1pB,EAAcpL,EAAgBhvB,YAC9BqvC,EAAOuK,EAAKjtC,MAAMwtB,EAAYyC,WAAWxC,KAE9B2pB,GAAkB9mD,KAAKhE,SAAWgE,KAAK+mD,iBAAiB7pB,EAAaC,EAAaxE,EAAiB5G,KAC1G+0B,EAAiB1U,EACjBoU,EAAuB7tB,EACvB8tB,EAAuB10B,GAGvBqgB,EAAOJ,IACP0U,EAAY/tB,EACZguB,EAAY50B,EACZigB,EAAUI,IAO1BoU,IACAE,EAAYF,EACZG,EAAYF,GAGhBzmD,KAAKg9B,yBAA2B0pB,EAChC1mD,KAAKi9B,yBAA2B0pB,CACpC,EAEAI,iBAAkB,SAAS7pB,EAAaC,EAAaxE,EAAiB5G,GAClE,IAAIi1B,EAAShnD,KAAKgmD,QACdiB,GAAY,EAChB,GAAID,aAAkBrqB,EAAiB,CACnC,IACI37B,EAAOD,EACNwJ,EAAM28C,EAFPzoD,EAASuoD,EAAOnqB,YAAYK,EAAaC,EAAaxE,EAAiB5G,GAI3Em1B,EAAUlnD,KAAKmnD,iBAAiBjqB,EAAaC,EAAaxE,EAAgBvlB,MAAO2e,EAAgB3e,OACjG3U,EAAOqe,QAAQogB,GACfz+B,EAAOG,KAAKu+B,GAGZ,IAAK,IAAInB,EAAM,EAAGA,EAAMv9B,EAAOX,OAAQk+B,IAcnC,GAbAh7B,EAAQvC,EAAOu9B,EAAM,GACrBj7B,EAAMtC,EAAOu9B,IACbzxB,EAAO,IAAI5B,EAAKg0C,EAAKl3C,IAAIzE,EAAMnC,EAAGkC,EAAIlC,GAAI89C,EAAKl3C,IAAIzE,EAAMlC,EAAGiC,EAAIjC,GAChD69C,EAAKlgD,IAAIuE,EAAMnC,EAAIkC,EAAIlC,GAAI89C,EAAKlgD,IAAIuE,EAAMlC,EAAIiC,EAAIjC,KACzDkK,MAAQ,IACbuB,EAAK1L,IACL0L,EAAKvB,OAAS,GAEduB,EAAKxB,OAAS,IACdwB,EAAKzL,IACLyL,EAAKxB,QAAU,IAGdwB,EAAK1M,WAAamC,KAAKhE,QAAQorD,gBAAgBC,YAAY98C,EAAM28C,GAAU,CAC5ED,GAAY,EACZ,KACJ,CAER,CACA,OAAOA,CACX,EAEAE,iBAAkB,SAASjqB,EAAaC,EAAald,EAAaC,GAC9D,IAAIgnC,EAAU,GAOd,OANIlnD,KAAKsnD,oBAAoBpqB,EAAajd,IACtCinC,EAAQtoD,KAAKqhB,GAEbjgB,KAAKsnD,oBAAoBnqB,EAAajd,IACtCgnC,EAAQtoD,KAAKshB,GAEVgnC,CACX,EAEAI,oBAAqB,SAAS99C,EAAO4J,GACjC,IAA6B2vC,EAEzB/kB,EAAQC,EAFRvqB,EAASN,EAAMM,SACfjJ,EAAQ2I,EAAMrI,SAASN,MAEvB88C,EAAU7zC,EAAO7U,EACjB2oD,EAAU9zC,EAAO5U,EAKrB,OAFAk/B,GADA+kB,EAAev5C,EAAMjC,QAAQwD,OAAON,EAAOiJ,EAAO5S,WAC5BjC,EACtBo/B,EAAS8kB,EAAajkD,EACfk/B,EAASupB,GAAWvpB,EAAUupB,EAAU7zC,EAAO1K,OAAUi1B,EAASupB,GAAWvpB,EAAUupB,EAAU9zC,EAAO3K,MACnH,EAEAic,OAAQ,SAASzF,GACb,GAAIA,EAAS,CACTvf,KAAKuf,QAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAASA,GAE5C,IAAI9gB,EAASuB,KAAKuf,QAAQ9gB,OAEtBijB,EAAQjjB,IAAWA,EAAOX,OAAS,IACnCkC,KAAKvB,OAAOA,GACZuB,KAAKomD,iBAGJ7mC,GAAWA,EAAQnS,SAAYmS,EAAQ0H,OACxCjnB,KAAKoN,QAAQmS,EAAQnS,SAGzBpN,KAAKsoB,KAAKtD,OAAO,CACb7F,KAAMI,EAAQJ,KACdyG,OAAQrG,EAAQqG,OAChB+D,SAAUpK,EAAQoK,SAClBC,OAAQrK,EAAQqK,QAExB,CACJ,EAKAriB,MAAO,WACH,IAAIy3C,EAAOh/C,KAAK++C,YAMhB,OAJI/+C,KAAKhE,SAAWgE,KAAKhE,QAAQukD,aAAe7+B,EAAQ1hB,KAAK4+C,YACzDI,EAAKz/B,QAAQq/B,SAAWgD,GAAc5hD,KAAK4+C,WAGxC,IAAIjjB,GAAW37B,KAAKuF,KAAMvF,KAAKqF,GAAI25C,EAAKz/B,QACnD,EAKAw/B,UAAW,WACP,IAAIx5C,EAAOvF,KAAKuF,KAAKm6C,OAAS1/C,KAAKuF,KAAKm6C,OAAS1/C,KAAKuF,KAAKlI,WACvDgI,EAAKrF,KAAKqF,GAAGq6C,OAAS1/C,KAAKqF,GAAGq6C,OAAS1/C,KAAKqF,GAAGhI,WAE/C2hD,EAAO9iD,EAAW,CAAC,EAAG,CACtBqjB,QAASvf,KAAKuf,QACdha,KAAMA,EACNF,GAAIA,IAQR,OALIqc,EAAQ1hB,KAAK4+C,YACbI,EAAKJ,SAAW5+C,KAAK4+C,SAASvhD,YAGlC2hD,EAAKz/B,QAAQ9gB,OAASuB,KAAKvB,SACpBugD,CACX,EAQA5nB,SAAU,SAAS/4B,GACf,GAAI2B,KAAK8kB,UAAW,CAChB,IAAInmB,EAAI,IAAIS,EAAMf,EAAMQ,EAAGR,EAAMS,GAAIyG,EAAOvF,KAAKk9B,cAAe73B,EAAKrF,KAAKm9B,cAC1E,GAAI9+B,EAAMR,UAAYQ,EAAMR,WAAaQ,EAAM2D,SAASuD,IAASlH,EAAM2D,SAASqD,GAC5E,OAAOrF,KAEX,GAAIA,KAAKgmD,QAAQ1pB,QAAQ39B,GACrB,OAAOqB,IAEf,CACJ,EAEAmlB,OAAQ,SAAS9mB,GACb,IAAI0hB,GAAS/f,KAAKuf,QAAQqG,QAAU,CAAC,GAAG7F,MAEpC1hB,GAAS3B,EAAUsD,KAAKuf,QAAQ2G,MAAMN,OAAO7F,SAC7CA,EAAQ/f,KAAKuf,QAAQ2G,MAAMN,OAAO7F,OAGtC/f,KAAKsoB,KAAKtD,OAAO,CACbY,OAAQ,CACJ7F,MAAOA,IAGnB,EAEAqmC,aAAc,WACL1kC,EAAQ1hB,KAAKsoB,QAGlBtoB,KAAK2nB,YACL3nB,KAAK0T,OAAO1T,KAAKgmD,QAAQzpB,aAC7B,EAEA5U,UAAW,WACH3nB,KAAKgmD,SACLhmD,KAAKgmD,QAAQtpB,QAEjB,IAAIz+B,EAAS+B,KAAKk9B,cACdj5B,EAASjE,KAAKm9B,cACd1+B,EAASuB,KAAKvB,SAElBuB,KAAKsoB,KAAKtD,OAAO,CACbvmB,OAAQ,CAACR,GAAQof,OAAO5e,EAAQ,CAACwF,KAEzC,EAEAugD,sBAAuB,WACnBxkD,KAAK24B,gBAAkBnX,EACvBxhB,KAAKg9B,yBAA2Bxb,CACpC,EAEAujC,sBAAuB,WACnB/kD,KAAK+xB,gBAAkBvQ,EACvBxhB,KAAKi9B,yBAA2Bzb,CACpC,EAEA+iC,2BAA4B,WACpBvkD,KAAK24B,iBACLt8B,EAAMsF,OAAO3B,KAAK24B,gBAAgBpB,YAAav3B,KAEvD,EAEA8kD,2BAA4B,WACpB9kD,KAAK+xB,iBACL11B,EAAMsF,OAAO3B,KAAK+xB,gBAAgBwF,YAAav3B,KAEvD,EAEA0/C,OAAQ,WACJ,IACcl2C,EADV4L,EAAapV,KAsBjB,MAAO,CACHuF,KArBA6P,EAAW7P,MAAQ6P,EAAW7P,KAAKm6C,OAC5BtqC,EAAW7P,KAAKm6C,SAGhB,CACH7gD,GAFJ2K,EAAQ4L,EAAW+tC,cAENtkD,EACTC,EAAG0K,EAAM1K,GAgBbuG,GAZA+P,EAAW/P,IAAM+P,EAAW/P,GAAGq6C,OAC1BtqC,EAAW/P,GAAGq6C,SAGd,CACD7gD,GAFJ2K,EAAQ4L,EAAWguC,cAENvkD,EACTC,EAAG0K,EAAM1K,GAQrB,IAGA2oD,GAAUrL,EAAOt4C,OAAO,CACxBC,KAAM,SAASjB,EAAS4kD,GACpB,IAAIzzC,EAAOjU,KAEXlE,MAAM+xB,QAAQ/qB,GACds5C,EAAOnqC,GAAGlO,KAAK7G,KAAK+W,EAAMnR,EAAS4kD,GAEnCzzC,EAAK0zC,aAEL1zC,EAAK2zC,gBACL3zC,EAAK4zC,qBAAqB5zC,EAAKsL,SAC/BtL,EAAK6zC,cAAcJ,GACnBzzC,EAAK8zC,uBAEL9zC,EAAK+zC,cAEL/zC,EAAKkoB,UAAY,IAAIrR,EAAM,CACvBlZ,GAAI,eAERqC,EAAKihB,OAAO/K,OAAOlW,EAAKkoB,WAExBloB,EAAKmzC,gBAAkB,IAAIa,GAAeh0C,GAE1CA,EAAK+iB,KAAO,IAAI53B,EAChB6U,EAAK4qB,UAAY,GACjB5qB,EAAKi0C,aAAe,IAAIp9B,EAAM,CAC1BlZ,GAAI,kBAERqC,EAAKihB,OAAO/K,OAAOlW,EAAKi0C,cAExBj0C,EAAKk0C,kBAELl0C,EAAKsf,cAELtf,EAAKojB,iBAAmB,IAAIqJ,EAAgBzsB,EAAM,CAAEitB,SAAUjtB,EAAKsL,QAAQ2hB,WAC3EjtB,EAAK8kB,mBAAqB,IAAIiH,EAAkB/rB,GAEhDA,EAAKwwB,OAAOxwB,EAAKojB,kBAAkB,GACnCpjB,EAAKwwB,OAAOxwB,EAAK8kB,oBAAoB,GAErC9kB,EAAK4jB,SAAW,IAAI0M,EAAStwB,GAE7BA,EAAKm0C,WAAa,GAElBn0C,EAAKo0C,oBAAqB,EAE1Bp0C,EAAKq0C,kBAELr0C,EAAKs0C,uBAELt0C,EAAKu0C,wBAELv0C,EAAKxI,KAAKwI,EAAKsL,QAAQ9T,MAEvBwI,EAAKihB,OAAOvH,MAChB,EAEApO,QAAS,CACLrhB,KAAM,UACNuqD,MAAO,OACPn2B,OAAQ,GACRsI,SAAU,GACVnvB,KAAM,EACNqvB,QAAS,EACTC,QAAS,EACT2tB,WAAY,CAAC,EACbC,WAAW,EACXrJ,SAAU,GACVsJ,UAAU,EACV1nB,SAAU,CACNn2B,OAAQ,CAAC,EACTo2B,OAAQ,CAAC,EACTla,MAAM,EACNqS,MAAO,GACP2K,KAAM,CACFJ,KAAM,CACFzlC,KAAM,GACNqM,MAAO,KAGf9I,QAAQ,GAEZu0B,SAAU,CAAC,EACXyB,WAAY,CACR36B,IAAK,QAET6rD,QAAS,CAAE1yB,SAAS,EAAMtT,OAAQ,OAClCrO,KAAM,CACF2hB,SAAS,EACT2P,QAAS,GACTC,QAAS,IAEb9mB,cAAejjB,EAAQijB,cAAc,CAAEG,UAAU,IACjD0pC,mBAAoB,CAChB5nB,SAAU,CACN5H,MAAO,IAEX97B,KAAMq/C,GAEV3qB,OAAQ,GACRqF,YAAa,IAGjBxD,OAAQ,CACJupB,GACAD,GACAD,GAAKF,GACLC,GACA3tB,EACAstB,EACAC,EA10DU,aACA,aA40DV,eACA,OACA,SACA,OACA,SACA,MACA,YAp1DS,YAFN,OACI,WA21DXtpB,MAAO,WACH,OAAO53B,GACX,EAEA0sD,qBAAsB,WAClB,IAAIrnB,EAAWlhC,KAAKuf,QAAQ2hB,SAC5B,GAAIA,EAAU,CACV,IAAI5H,EAAQ4H,EAAS5H,OACjBt5B,KAAKugD,cAAyB,IAAVjnB,GAAqBA,GAA0B,IAAjBA,EAAMx7B,SACxDw7B,EAAQ,CAAC,cAAe,OAAQ,OAAQ,kBAAmB,wBAG3DA,GAASA,EAAMx7B,SACfkC,KAAK+oD,QAAU,IAAIC,GAAehpD,KAAM,CACpCs5B,MAAOA,GAAS,CAAC,EACjB2vB,MAAOjpD,KAAKkpD,cAAcp1B,KAAK9zB,MAC/BmpD,OAAO,IAGXnpD,KAAK+oD,QAAQjmD,QAAQs4B,IAAI,CACrBguB,UAAW,SAGfppD,KAAK8C,QAAQumD,QAAQrpD,KAAK+oD,QAAQjmD,SAClC9C,KAAKspD,UAEb,CACJ,EAEAC,YAAa,WACT,GAAKvpD,KAAKwpD,QAAUxpD,KAAKwpD,OAAOzoD,QAAWf,KAAKwpD,OAAQ,CACpD,IAAId,EAAa1oD,KAAK0oD,WAElBhmD,GADOgmD,EAAWe,QAAU,IACf3rD,OACbqiD,EAAQuJ,GAAYhB,EAAY,CAAC,GACjCt1C,EAAQpT,KAAK2pD,aAAaxJ,EAAO,CAAC,GAEtC,IAAKngD,KAAKiF,QAAQ,MAAO,CAAEmO,MAAOA,IAC9Bs1C,EAAW7lD,OAAOH,EAAOy9C,GACNngD,KAAKwlD,oBAAoBtB,SAAS/D,EAAMgE,KAC9CrhD,QAAUsQ,EACvBpT,KAAK4pD,KAAKx2C,EAElB,CACJ,EAEAu2C,aAAc,SAAS/K,EAAUr/B,GAI7B,OAHAA,EAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAAQN,cAAeM,IAC7Cq/B,SAAWA,EACP,IAAIhmB,GAAMrZ,EAASvf,KAEnC,EAEA6pD,iBAAkB,WACd,GAAM7pD,KAAKwpD,QAAUxpD,KAAKwpD,OAAOzoD,QAAWf,KAAKwpD,OAAS,CACtD,IAAIvF,EAAwBjkD,KAAKikD,sBAE7BvhD,GADOuhD,EAAsBwF,QAAU,IAC1B3rD,OACbqiD,EAAQuJ,GAAYzF,EAAuB,CAAC,GAC5C7uC,EAAapV,KAAKk4B,kBAAkBioB,GACnCngD,KAAKiF,QAAQ,MAAO,CAAEmQ,WAAYA,MACnCpV,KAAK8pD,oBAAoB3J,EAAMgE,KAAO/uC,EACtC6uC,EAAsBphD,OAAOH,EAAOy9C,GACpCngD,KAAK+pD,cAAc30C,GAAY,GAC/BpV,KAAK4pD,KAAKx0C,GAElB,CACJ,EAEA8iB,kBAAmB,SAAS0mB,EAAU3gD,EAAQgG,GAC1C,IAAIsb,EAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAAQupC,oBAK1C,OAJAvpC,EAAQq/B,SAAWA,EAEF,IAAIjjB,GAAW19B,GAAU,IAAImB,EAAS6E,GAAU,IAAI7E,EAASmgB,EAGlF,EAEAyqC,UAAW,SAASpL,EAAUqL,GAE1B,IAAIC,EAAS5K,EADbt/C,KAAKmqD,aAEL,IAAIjpB,EAAWlhC,KAAKuf,QAAQ2hB,SAE5B,GAAkB,SAAd+oB,EACAC,EAAUhpB,EAASkpB,aACnB9K,EAAWpe,EAASmpB,kBACjB,IAAkB,cAAdJ,EAKP,OAJA,IAAIK,EAA4BC,GAAmBz2B,KAAK9zB,MACxDkqD,EAAUhuD,EAAW,CAAC,EAAG,CAAEqJ,KAAM+kD,EAA2BjlD,GAAIilD,GAA6BppB,EAASspB,mBACtGlL,EAAWpe,EAASupB,kBAGxB,CAEAzqD,KAAKwpD,OAAS,IAAIkB,GAAY1qD,KAAK8C,QAAS,CACxCuD,OAAQrG,KAAK2qD,QAAQ72B,KAAK9zB,MAC1Bm0B,OAAQn0B,KAAK4qD,QAAQ92B,KAAK9zB,MAC1BmgD,MAAOvB,EACPphD,KAAMysD,EACNhmD,OAAQjE,KACRkqD,QAASA,EACT5K,SAAUA,IAGdt/C,KAAKiF,QAAQ,OAAQjF,KAAK6qD,YAC9B,EAEAjB,KAAM,SAAS7pD,GACX,GAAIA,EAAK6+C,SAAU,CACf,IAAIqL,EAAalqD,aAAgB64B,GAAQ,QAAU,aACnD54B,KAAKgqD,UAAUjqD,EAAK6+C,SAAUqL,EAClC,CACJ,EAEAE,WAAY,WACJnqD,KAAKwpD,SACLxpD,KAAK8qD,qBAAqBC,cAAc/qD,KAAKwpD,OAAOrJ,OAEpDngD,KAAKgrD,iBAEb,EAEAC,SAAU,WACFjrD,KAAKwpD,QAAUxpD,KAAKwpD,OAAOzoD,QAC1Bf,KAAKiF,QAAQ,OAAQjF,KAAK6qD,cAC3B7qD,KAAK8qD,qBAAqBI,MAElC,EAEAP,QAAS,WACD3qD,KAAKwpD,QAAUxpD,KAAKwpD,OAAOzoD,QAC1Bf,KAAKiF,QAAQ,OAAQjF,KAAK6qD,eAC3B7qD,KAAK8qD,qBAAqBI,OAC1BlrD,KAAKgrD,iBAEb,EAEAJ,QAAS,WACL,GAAI5qD,KAAKwpD,SAAWxpD,KAAKiF,QAAQ,SAAUjF,KAAK6qD,aAAc,CAC1D,IAAI1K,EAAQngD,KAAKwpD,OAAOrJ,MACxBngD,KAAK8qD,qBAAqBC,cAAc5K,GACxC,IAAIr9C,EAAU9C,KAAK8pD,oBAAoB3J,EAAMgE,MAAQnkD,KAAK2jD,SAASxD,EAAMvuC,IACrE9O,GACAA,EAAQo9C,qBAAqBC,GAEjCngD,KAAKgrD,gBACT,CACJ,EAEAF,mBAAoB,WAChB,MAAoC,UAA7B9qD,KAAKwpD,OAAOjqC,QAAQ/hB,KAAmBwC,KAAK0oD,WAAa1oD,KAAKikD,qBACzE,EAEA4G,UAAW,WACP,IAAIpoD,EAAS,CAAEyK,UAAWlN,KAAKwpD,OAAO2B,SAEtC,OADA1oD,EAAOzC,KAAKwpD,OAAOjqC,QAAQ/hB,MAAQwC,KAAKwpD,OAAOrJ,MACxC19C,CACX,EAEAuoD,eAAgB,WACRhrD,KAAKwpD,SACLxpD,KAAKwpD,OAAO4B,QACZprD,KAAKwpD,OAAS,KAEtB,EAEA5B,cAAe,WACX5nD,KAAKmrD,QAAUnrD,KAAK8C,QAAQwJ,QACvB8uB,IAAI,WAAY,YAChBiwB,KAAK,WAAY,GACjBC,SAAS,sBAEdtrD,KAAKo1B,WAAav5B,EAAE,WAAW0vD,SAASvrD,KAAK8C,QACjD,EAEAglD,cAAe,SAASJ,GACpB,IAAInoC,EAAUvf,KAAKuf,QACf2hB,EAAW3hB,EAAQ2hB,SACnBjiB,EAAgBM,EAAQN,cACxB6pC,EAAqBvpC,EAAQupC,mBAC7B0C,GAAqB9D,GAAe,CAAC,GAAGzoC,eAC3B,IAAbiiB,GACAjiB,EAAciiB,UAAW,EACzB4nB,EAAmB5nB,UAAW,IAE9BuqB,GAAmBvqB,EAAUjiB,EAAciiB,SAAU,CAAC,OAAQ,SAAU,YACxEuqB,GAAmBvqB,EAAU4nB,EAAmB5nB,SAAU,CAAC,OAAQ,YAGnEsqB,GAAqBA,EAAkBvvB,aACvC1c,EAAQN,cAAcgd,WAAauvB,EAAkBvvB,WAE7D,EAEA8rB,qBAAsB,WAClB,IAAIxoC,EAAUvf,KAAKuf,QACfoY,EAAapY,EAAQoY,WACrBzB,EAAW3W,EAAQ2W,SACnBw1B,EAAS5vD,MAAMk5B,QAAQC,SAEvB0C,IAAejW,EAAQiW,EAAWC,YAClCrY,EAAQoY,WAAaz7B,EAAW,CAC5B07B,UAAU8zB,GACXnsC,EAAQoY,aAGXzB,IAAaxU,EAAQwU,EAASl5B,OAC9BuiB,EAAQ2W,SAAWh6B,EAAW,CAC1Bc,IAAK0uD,EAAS,OAAS,QACxBnsC,EAAQ2W,UAEnB,EAEA8xB,YAAa,WACT,IAAI2D,EAAkB9vD,EAAE,+BAA+B0vD,SAASvrD,KAAKo1B,YAAY,GAC7Ew2B,EAAW5rD,KAAK6rD,WACpB7rD,KAAKk1B,OAAS,IAAI9H,EAAOu+B,EAAiB,CACtC3iD,MAAO4iD,EAAS5iD,OAniED,IAoiEfD,OAAQ6iD,EAAS7iD,QAniED,KAqiExB,EAEAo/C,gBAAiB,WACb,IAAIl0C,EAAOjU,KACGiU,EAAKnR,QAEXgpD,GAAGrO,GAAexpC,EAAK83C,OAAOj4B,KAAK7f,IAC1C63C,GAAG,UAAYlP,EAAI3oC,EAAK+3C,SAASl4B,KAAK7f,IAEvCA,EAAKg4C,YAAc,IAAInwD,MAAMowD,WAAWlsD,KAAKo1B,WAAY,CACrD+2B,YAAY,EACZC,SAAS,EACTC,IAAKp4C,EAAKq4C,KAAKx4B,KAAK7f,GACpBjT,MAAOiT,EAAKs4C,WAAWz4B,KAAK7f,GAC5BgZ,KAAMhZ,EAAKu4C,MAAM14B,KAAK7f,GACtBlT,IAAKkT,EAAKw4C,SAAS34B,KAAK7f,GACxBy4C,aAAcz4C,EAAK04C,cAAc74B,KAAK7f,GACtC24C,cAAe34C,EAAK44C,eAAe/4B,KAAK7f,GACxC64C,WAAY74C,EAAK84C,YAAYj5B,KAAK7f,GAClC+4C,UAAW/4C,EAAKg5C,WAAWn5B,KAAK7f,GAChCi5C,kBAAkB,IAGtBj5C,EAAKygB,YAAc,IAAI2E,EAAYplB,GAEnCjU,KAAKo1B,WACA02B,GAAG,YAAclP,EAAI3oC,EAAKk5C,WAAWr5B,KAAK7f,IAC1C63C,GAAG,WAAalP,EAAI3oC,EAAKm5C,UAAUt5B,KAAK7f,IACxC63C,GAAG,YAAclP,EAAI3oC,EAAKo5C,WAAWv5B,KAAK7f,IAC1C63C,GAAG,YAAclP,EAAI3oC,EAAKq5C,WAAWx5B,KAAK7f,IAC1C63C,GAAG,UAAYlP,EAAI3oC,EAAKs5C,SAASz5B,KAAK7f,IAE3CjU,KAAKwtD,aAAev5C,EAAKmmB,aAAatG,KAAK7f,GAE3CA,EAAKw5C,eAAiBx5C,EAAKktB,OAAOrN,KAAK7f,GAAM,GAC7CnY,MAAM4xD,SAASz5C,EAAKw5C,gBAEpBztD,KAAK8zB,KAAKupB,GAAYppC,EAAKomB,gBAAgBvG,KAAK7f,IAChDjU,KAAK8zB,KAAKspB,GAAKnpC,EAAKomB,gBAAgBvG,KAAK7f,GAC7C,EAEAs4C,WAAY,SAASl+C,GACjBrO,KAAK2tD,qBAAsB,EAC3B,IAAInkD,EAAQxJ,KAAK4tD,gBAAgBv/C,GAAG,GAEhCw/C,EAAQx/C,EAAEw/C,MACV7tD,KAAK00B,YAAY1zB,MAAMwI,EAAOxJ,KAAK8tD,MAAMD,MACzC7tD,KAAKq6B,kBACLwzB,EAAME,iBAEd,EAEAvB,MAAO,SAASn+C,GACZ,IAAI1P,EAAIqB,KAAK4tD,gBAAgBv/C,GACzBw/C,EAAQx/C,EAAEw/C,MACV7tD,KAAK00B,YAAYzH,KAAKtuB,EAAGqB,KAAK8tD,MAAMD,KACpCA,EAAME,gBAEd,EAEAtB,SAAU,SAASp+C,GACfrO,KAAK2tD,qBAAsB,EAC3B,IAAIhvD,EAAIqB,KAAK4tD,gBAAgBv/C,GACzBw/C,EAAQx/C,EAAEw/C,MACV7tD,KAAK00B,YAAY3zB,IAAIpC,EAAGqB,KAAK8tD,MAAMD,MACnC7tD,KAAKguD,iBACLH,EAAME,iBAEd,EAEAV,WAAY,SAASh/C,GACjB,IAAKrO,KAAK2tD,oBAAqB,CAC3B,IAAIhvD,EAAIqB,KAAK4tD,gBAAgBv/C,GAC7BrO,KAAK00B,YAAY8E,mBAAmB76B,GACpCqB,KAAK00B,YAAYgF,cAAc/6B,EACnC,CACJ,EAEA2uD,WAAY,WACRttD,KAAK2tD,qBAAsB,CAC/B,EAEAJ,SAAU,WACNvtD,KAAK2tD,qBAAsB,CAC/B,EAEArB,KAAM,SAASj+C,GACX,IAAIqmB,EAAc10B,KAAK00B,YACnBiD,EAAa33B,KAAKuf,QAAQoY,WAC1BnuB,EAAQxJ,KAAK4tD,gBAAgBv/C,GAC7B4/C,EAAUjuD,KAAK25B,QAInB,GAFAjF,EAAY8E,mBAAmBhwB,GAE3BkrB,EAAY4B,YAAa,CACzB,IAAIv2B,EAAO20B,EAAY4B,YAQvB,GANAt2B,KAAKiF,QAAQ,QAAS,CAClBlF,KAAMA,EACNyJ,MAAOA,EACPysB,KAAMj2B,KAAK8tD,MAAMz/C,EAAEw/C,SAGnBl2B,IAA0C,IAA5B53B,EAAKwf,QAAQoY,WAAsB,CACjD,IAAIC,GAAmC,IAAxBD,EAAWC,SACtBs2B,EAAcpyD,MAAMk5B,QAAQC,UAAYj1B,KAAK8tD,MAAMz/C,EAAEw/C,OAAOz3B,QAE5Dr2B,EAAK+3B,WACDo2B,GACAluD,KAAKq6B,kBACLt6B,EAAKyuB,QAAO,IAEZxuB,KAAKguD,eAAeC,IAGxBjuD,KAAKq6B,kBACLr6B,KAAKwuB,OAAOzuB,EAAM,CACdk7B,eAAgBrD,GAAYs2B,IAEhCluD,KAAKguD,eAAeC,GAE5B,CACJ,MAAWt2B,IACP33B,KAAKq6B,kBACLr6B,KAAK2yB,WAEb,EAEAq5B,SAAU,SAAS39C,GACXrO,KAAK00B,YAAYqF,QAAQ1rB,EAAE8/C,QAASnuD,KAAK8tD,MAAMz/C,KAC/CA,EAAE0/C,gBAEV,EAEAhC,OAAQ,SAAS19C,GACb,IAAI9C,EAtlEZ,SAAiB8C,GACb,IAAI+/C,EAAY//C,EAAEggD,cACd9iD,EAAQ,EASZ,OAPI6iD,EAAUE,WAEV/iD,GADAA,GAAS6iD,EAAUE,WAAa,IAChB,EAAI3R,EAAK7Q,KAAKvgC,GAASoxC,EAAKl9C,MAAM8L,GAC3C6iD,EAAUG,SACjBhjD,EAAQ6iD,EAAUG,QAGfhjD,CACX,CA0kEoBijD,CAAQngD,GAChB1P,EAAIqB,KAAK4tD,gBAAgBv/C,GACzB4nB,EAAO/5B,EAAW8D,KAAK8tD,MAAMz/C,GAAI,CAAE9C,MAAOA,IAE1CvL,KAAK00B,YAAYgG,MAAM/7B,EAAGs3B,IAC1B5nB,EAAE0/C,gBAEV,EAEAD,MAAO,SAASz/C,GACZ,MAAO,CAAE+nB,QAAS/nB,EAAE+nB,QAAS4D,QAAS3rB,EAAE2rB,QAASC,OAAQ5rB,EAAE4rB,OAAQ6K,SAAUz2B,EAAEy2B,SAAUtnC,KAAM6Q,EAAE7Q,KACrG,EAEAowD,gBAAiB,SAASv/C,EAAGrN,GACzB,IAAIwI,EACJ,GAAI6E,EAAEogD,MAAO,CACT,IAAIjsC,EAAQxhB,EAAQ,gBAAkB,WACtCwI,EAAQ,IAAIpK,EAAMiP,EAAExP,EAAE2jB,GAAQnU,EAAEvP,EAAE0jB,GACtC,KAAO,CACH,IAAIqrC,EAAQx/C,EAAEggD,cACd7kD,EAAQ,IAAIpK,EAAMyuD,EAAMa,MAAOb,EAAMc,MACzC,CAEA,OAAO3uD,KAAK4uD,gBAAgBplD,EAChC,EAEAmjD,cAAe,SAASt+C,GACpBrO,KAAKq6B,kBACLr6B,KAAKm1B,SAASa,UACd,IAAI64B,EAAgB7uD,KAAK4uD,gBAAgB,IAAIxvD,EAAMiP,EAAEvN,OAAOjC,EAAGwP,EAAEvN,OAAOhC,IACpEgwD,EAAY,CACZtlD,MAAOqlD,EACPpjD,KAAMzL,KAAKyL,QAGXzL,KAAKiF,QAAQo4C,GAAYyR,KAI7B9uD,KAAK+uD,SAAW1gD,EAChBrO,KAAKgvD,eAAiBH,EAC1B,EAEAhC,eAAgB,SAASx+C,GACrB,IAAI4gD,EAAkBjvD,KAAK+uD,SACvBF,EAAgB7uD,KAAKgvD,eACrBluD,EAASd,KAAKkvD,eAAe,IAAI9vD,EAAMiP,EAAEvN,OAAOjC,EAAGwP,EAAEvN,OAAOhC,IAC5DqwD,EAAa9gD,EAAEs9B,SAAWsjB,EAAgBtjB,SAC1ClgC,EAAOzL,KAAKovD,MACZC,GAAa,EAEb1S,EAAKlgD,IAAI0yD,EAAa,IA5sEX,MA6sEXnvD,KAAKovD,MAAQ3jD,EAAOzL,KAAKsvD,cAAc7jD,EAAO0jD,GAC9CnvD,KAAKuf,QAAQ9T,KAAOA,EACpBzL,KAAK+uD,SAAW1gD,EAChBghD,GAAa,GAGjB,IAAIE,EAAcV,EAAclnD,MAAM8D,GAClCunB,EAAMlyB,EAAO2G,MAAM8nD,IACnBF,GAAcrvD,KAAKg3B,KAAK2I,WAAW3M,IAptErB,KAqtEdhzB,KAAKwvD,cAAcx8B,GACnBhzB,KAAKyvD,mBAGTphD,EAAE0/C,gBACN,EAEAd,WAAY,SAAS5+C,GACjB,IAAIrS,EAAUgE,KACV0vD,EAAgB1vD,KAAK4tD,gBAAgBv/C,GACrCkR,EAAUvjB,EAAQujB,QAClBqb,EAAWrb,EAAQqb,SACnBnvB,EAAOzP,EAAQyP,OAASmvB,EAExBC,EAAc,CAAErxB,MAAOkmD,EAAez5B,KAD/Bj2B,KAAK8tD,MAAMz/C,GACgC5C,KAAMA,GAGxDzP,EAAQiJ,QAAQo4C,GAAYxiB,KAIhCpvB,EAAO3P,MAAM2lB,QAAQE,KAAKjS,MAAMlT,KAAKgJ,IAAI+Z,EAAQub,QAASt+B,KAAKiJ,IAAI8Z,EAAQwb,QAAStvB,IAAQ,GAC5FovB,EAAYpvB,KAAOA,EAEnBzP,EAAQyP,KAAKA,EAAMovB,GACnB7+B,EAAQiJ,QAAQq4C,GAAUziB,GAC9B,EAEAkyB,YAAa,YACqB,IAA1B/sD,KAAKuf,QAAQ2W,UACbl2B,KAAKm1B,SAASsB,SAElBz2B,KAAKiF,QAAQq4C,GAAU,CACnB9zC,MAAOxJ,KAAKgvD,eACZvjD,KAAMzL,KAAKyL,QAEnB,EAEA69C,QAAS,WACL,IAAIuC,EAAW7rD,KAAK6rD,WAChB7rD,KAAKk1B,QACLl1B,KAAKk1B,OAAO92B,KAAKytD,GAGjB7rD,KAAKo1B,YAAcp1B,KAAK+oD,SACxB/oD,KAAKo1B,WAAWrsB,OAAO8iD,EAAS9iD,OAExC,EAEAokD,WAAY,SAAS9+C,GACjB,IAAI2F,EAAO3F,EAAEpK,OAAO0rD,WAChB37C,GAAQA,EAAK47C,WAAWzqC,QACxBnR,EAAK47C,WAAWzqC,QAAO,EAAMnR,EAAK47C,WAE1C,EAEAxC,UAAW,SAAS/+C,GAChB,IAAI2F,EAAO3F,EAAEpK,OAAO0rD,WAChB37C,GAAQA,EAAK47C,WAAWzqC,QACxBnR,EAAK47C,WAAWzqC,QAAO,EAAOnR,EAAK47C,WAE3C,EAEAjI,WAAY,WACR,IAGIkI,EAHA57C,EAAOjU,KACP8vD,IAAc77C,EAAKsL,SAAW,CAAC,GAAGkpC,OAAS,IAAIl7C,cAC/CwiD,EAAS9zD,EAAQwK,GAAGspD,QAAU,CAAC,EAI/BF,GAD2C,GAA3C5zD,EAAQ+zD,YAAYluD,QAAQguD,GACb7zD,EAAQg0D,YAAYj0D,SAGnB+zD,EAAOD,IAAc,CAAC,GAAG9zD,QAG7CiY,EAAKsL,QAAUrjB,EAAW,CAAC,EAAG2zD,EAAc57C,EAAKsL,UACnB,IAA1BtL,EAAKsL,QAAQ2hB,UACbhlC,EAAW+X,EAAKsL,QAAS,CACrB2hB,UAAW2uB,GAAgB,CAAC,GAAG3uB,UAG3C,EAEAsnB,sBAAuB,WACnB,IAAIjpC,EAAUvf,KAAKuf,QACf2wC,EAAe3wC,EAAQ2S,OAAOp0B,OAE9BoyD,GACAlwD,KAAKmwD,gBAGL5wC,EAAQgY,YAAYz5B,QACpBkC,KAAKowD,qBAGLF,GAAgB3wC,EAAQ+S,QACxBtyB,KAAKsyB,OAAO/S,EAAQ+S,OAE5B,EAEA69B,cAAe,WACX,IAGI/8C,EAAO7U,EADP2zB,EAFOlyB,KACQuf,QACE2S,OAGrB,IAAK3zB,EAAI,EAAGA,EAAI2zB,EAAOp0B,OAAQS,IAC3B6U,EAAQ8e,EAAO3zB,GANRyB,KAOFqf,SAASjM,EAEtB,EAEAg9C,mBAAoB,WAChB,IAIIv/B,EAAM5yB,EAAQgG,EAAQ1F,EAJtBvC,EAAUgE,KACVuf,EAAUvjB,EAAQujB,QAClBm/B,EAAWn/B,EAAQupC,mBACnBvxB,EAAchY,EAAQgY,YAG1B,IAAKh5B,EAAI,EAAGA,EAAIg5B,EAAYz5B,OAAQS,IAChCsyB,EAAO0G,EAAYh5B,GACnBN,EAASjC,EAAQq0D,sBAAsBx/B,EAAKtrB,MAC5CtB,EAASjI,EAAQq0D,sBAAsBx/B,EAAKxrB,IAE5CrJ,EAAQwjB,QAAQvhB,EAAQgG,EAAQ/H,EAAW,CAAC,EAAGwiD,EAAU7tB,GAEjE,EAEAw/B,sBAAuB,SAAS9wC,GAE5B,IAEItb,EADA27C,EAAUziD,EAFdoiB,EAAUA,GAAW,CAAC,GAEYA,EAAUA,EAAQqgC,SAAWrgC,EAAQ3N,GAWvE,OATIguC,GACA37C,EAJUjE,KAIOiwB,aAAa2vB,GAC1BrgC,EAAQ0Y,YACRh0B,EAASA,EAAO40B,aAAatZ,EAAQ0Y,aAGzCh0B,EAAS,IAAI7E,EAAMmgB,EAAQ1gB,GAAK,EAAG0gB,EAAQzgB,GAAK,GAG7CmF,CACX,EAEA4pB,QAAS,WACL,IAAI5Z,EAAOjU,KACXo8C,EAAOnqC,GAAG4b,QAAQ3wB,KAAK+W,GAEnBjU,KAAKisD,aACLjsD,KAAKisD,YAAYp+B,UAGrB/xB,MAAMw0D,aAAar8C,EAAKw5C,gBAExBx5C,EAAKhR,QACLgR,EAAKnR,QAAQytD,IAAI3T,GACjB3oC,EAAKkhB,SAASg2B,QAAQoF,IAAI3T,GAC1B3oC,EAAKihB,OAAOrH,SAAQ,GACpB5Z,EAAKihB,OAAS1T,EAEdvN,EAAK+2C,iBACL/2C,EAAKu8C,kBACLv8C,EAAKw8C,wBACLx8C,EAAKomB,iBACT,EAEAm2B,gBAAiB,WACb,IAAIr7B,EAAWn1B,KAAKm1B,SAEfA,IAILA,EAAStH,UACTsH,EAASryB,QAAQnB,SACjB3B,KAAKm1B,SAAW,KACpB,EAEA9a,KAAM,WACF,IAII9b,EAAG6W,EAAYhC,EAJf4rC,EAAO,CACP9sB,OAAQ,GACRqF,YAAa,IAIjB,IAAKh5B,EAAI,EAAGA,EAAIyB,KAAKkyB,OAAOp0B,OAAQS,KAChC6U,EAAQpT,KAAKkyB,OAAO3zB,IACVghB,QAAQu/B,cACdE,EAAK9sB,OAAOtzB,KAAKwU,EAAMmM,SAI/B,IAAKhhB,EAAI,EAAGA,EAAIyB,KAAKu3B,YAAYz5B,OAAQS,IACrC6W,EAAapV,KAAKu3B,YAAYh5B,GAE9BygD,EAAKznB,YAAY34B,KAAK1C,EAAW,CAAC,EAAGkZ,EAAWmK,QAASnK,EAAWsqC,WAGxE,OAAOV,CACX,EAEArlB,MAAO,WACH,IAAK35B,KAAK8C,QAAQ4tD,GAAG50D,MAAM60D,kBAAmB,CAC1C,IAKIpyD,EALAuE,EAAU9C,KAAK8C,QACf8tD,EAAkB9tD,EAAQ,GAC1B0mC,EAAa,GACbqnB,EAAU,GACVC,EAAkBC,SAASD,gBAG/B,IACIF,EAAkBA,EAAgBI,YAEdC,aAAeL,EAAgB/wC,eAC/C2pB,EAAW5qC,KAAKgyD,GAChBC,EAAQjyD,KAAKgyD,EAAgB/5B,kBAE5B+5B,GAAmBE,GAI5B,IAFAhuD,EAAQmC,QAAQ,SAEX1G,EAAI,EAAGA,EAAIirC,EAAW1rC,OAAQS,IAC/BirC,EAAWjrC,GAAGs4B,UAAYg6B,EAAQtyD,GAEtC,OAAO,CACX,CACJ,EAEA2yD,KAAM,SAAS3xC,GACXvf,KAAKiD,QAELjD,KAAKmxD,WAAW5xC,GAChBvf,KAAKmwD,gBACLnwD,KAAKowD,oBACT,EAEAe,WAAY,SAAS5xC,GACjBrjB,EAAW8D,KAAKuf,QAASA,EAC7B,EAEAtc,MAAO,WACH,IAAIgR,EAAOjU,KAEXiU,EAAKua,QAAO,GACZva,EAAKkoB,UAAUl5B,QACfgR,EAAKmzC,gBAAgBnkD,QACrBgR,EAAKsf,aACT,EAQA/T,QAAS,SAASvhB,EAAQgG,EAAQsb,GAC9B,IAAInK,EACJ,GAAIpV,KAAKikD,uBAAyBjkD,KAAKugD,YAAa,CAChD,IAAI3B,EAAW5+C,KAAKikD,sBAAsBrzC,IAAI,CAAC,IAC/CwE,EAAapV,KAAK8pD,oBAAoBlL,EAASuF,MACpClmD,OAAOA,GAClBmX,EAAWnR,OAAOA,GAClBmR,EAAW4P,OAAOzF,GAClBnK,EAAWsc,aACf,MACItc,EAAa,IAAIumB,GAAW19B,EAAQgG,EAChC/H,EAAW,CAAE,EAAG8D,KAAKuf,QAAQupC,mBAAoBvpC,IAErDvf,KAAK+pD,cAAc30C,GAGvB,OAAOA,CACX,EAOAoG,UAAW,SAASvd,EAAQgG,GACxB,IAAK,IAAI1F,EAAI,EAAGA,EAAIyB,KAAKu3B,YAAYz5B,OAAQS,IAAK,CAC9C,IAAImC,EAAIV,KAAKu3B,YAAYh5B,GACzB,GAAImC,EAAE6E,MAAQtH,GAAUyC,EAAE2E,IAAMpB,EAC5B,OAAO,CAEf,CAEA,OAAO,CACX,EAOA8lD,cAAe,SAAS30C,EAAYgK,GAiBhC,OAhBiB,IAAbA,GACApf,KAAKw3B,gBAAgB5mB,IACjB,IAAI5U,EAAQy2B,kBAAkBrd,EAAYpV,OAAO,GAGzDoV,EAAWpZ,QAAUgE,KACrBoV,EAAW8qC,uBACX9qC,EAAWod,UACXxyB,KAAKm8B,UAAUhS,OAAO/U,EAAWsO,QACjC1jB,KAAKu3B,YAAY34B,KAAKwW,GAEtBpV,KAAKiF,QAAQ63C,EAAQ,CACjBsU,MAAO,CAACh8C,GACRi8C,QAAS,KAGNj8C,CACX,EAEAkK,eAAgB,SAASlK,EAAYgK,GACjC,IACIw/B,EADAqF,EAAwBjkD,KAAKikD,sBAEjC,GAAIA,GAAyBjkD,KAAKugD,aAK9B,GAJA3B,EAAW8K,GAAYzF,EAAuBrC,GAAcxsC,EAAWwpC,WACvExpC,EAAWwpC,SAAWA,EACtBxpC,EAAWsc,eAEN1xB,KAAKiF,QAAQ,MAAO,CAAEmQ,WAAYA,IAOnC,OANApV,KAAK8pD,oBAAoBlL,EAASuF,KAAO/uC,EAEzC6uC,EAAsBrzC,IAAIguC,GAC1B5+C,KAAK+pD,cAAc30C,EAAYgK,GAC/BhK,EAAWytC,oBAEJztC,OAER,IAAKpV,KAAKiF,QAAQ,MAAO,CAAEmQ,WAAYA,IAG1C,OAFApV,KAAK+pD,cAAc30C,EAAYgK,GAC/BhK,EAAWytC,oBACJztC,CAEf,EAQAiK,SAAU,SAAStf,EAAMqf,GACrB,IAAIhM,EACA6L,EAAgBjf,KAAKuf,QAAQN,cAEjC,GAAIlf,aAAgB64B,GAChBxlB,EAAQrT,EACRC,KAAKsxD,aAAal+C,EAAMM,cACrB,IAAM3T,aAAgBjE,MAAM+H,MAK/B,OAJAob,EAAgB/iB,EAAW,CAAC,EAAG+iB,EAAelf,GAAQ,CAAC,GACvDqT,EAAQ,IAAIwlB,GAAM3Z,EAAejf,MACjCA,KAAKsxD,aAAal+C,EAAMM,SAG5B,CAkBA,OAhBiB,IAAb0L,GACApf,KAAKw3B,gBAAgB5mB,IAAI,IAAI5U,EAAQ02B,aAAatf,EAAOpT,OAAO,GAGpEA,KAAKkyB,OAAOtzB,KAAKwU,GACbA,EAAMpX,UAAYgE,OAClBA,KAAKonD,gBAAgBvkD,OAAOuQ,GAC5BA,EAAMpX,QAAUgE,MAEpBA,KAAKm8B,UAAUhS,OAAO/W,EAAMsQ,QAE5B1jB,KAAKiF,QAAQ63C,EAAQ,CACjBsU,MAAO,CAACh+C,GACRi+C,QAAS,KAGNj+C,CACX,EAEA2L,UAAW,SAAS3L,EAAOgM,GACvB,IAEIw/B,EADA8J,EADO1oD,KACW0oD,WAEtB,GAAIA,GAAc1oD,KAAKugD,aAKnB,GAJA3B,EAAW8K,GAAYhB,EAAY9G,GAAcxuC,EAAMwrC,WACvDxrC,EAAMwrC,SAAWA,EACjBxrC,EAAMse,eAED1xB,KAAKiF,QAAQ,MAAO,CAAEmO,MAAOA,IAAU,CACxCpT,KAAK0oD,WAAW93C,IAAIguC,GACpB,IAAI2G,EAAevlD,KAAKwlD,oBAAoBtB,SAAStF,EAASuF,KAG9D,OAFAoB,EAAaziD,QAAUsQ,EACvBmyC,EAAanmC,SAAWA,EACjBhM,CACX,OACG,IAAKpT,KAAKiF,QAAQ,MAAO,CAAEmO,MAAOA,IACrC,OAAOpT,KAAKqf,SAASjM,EAAOgM,EAEpC,EAEAkyC,aAAc,SAAS59C,GACnBA,EAAO7U,EAAwB,iBAAb6U,EAAQ,EAAgB/V,WAAW+V,EAAO7U,GAAK6U,EAAO7U,EACxE6U,EAAO5U,EAAwB,iBAAb4U,EAAQ,EAAgB/V,WAAW+V,EAAO5U,GAAK4U,EAAO5U,CAC5E,EAOD6C,OAAQ,SAAS8xB,EAAOrU,GAEnB,IAGI7gB,EAHAypB,EAAWupC,GADf99B,EAAQt3B,EAAQs3B,GAASA,EAAMrqB,MAAM,GAAK,CAACqqB,IAEvCvB,EAASlK,EAASkK,OAClBqF,EAAcvP,EAASuP,YAY3B,IATK7V,EAAQtC,KACTA,GAAW,GAGXA,GACApf,KAAKw3B,gBAAgBvD,QAGzBj0B,KAAK0gD,uBACAniD,EAAI2zB,EAAOp0B,OAAS,EAAGS,GAAK,EAAGA,IACjCyB,KAAKwxD,YAAYt/B,EAAO3zB,GAAI6gB,EAAUmY,GAGzC,IAAKh5B,EAAIg5B,EAAYz5B,OAAS,EAAGS,GAAK,EAAGA,IACrCyB,KAAKwxD,YAAYj6B,EAAYh5B,GAAI6gB,GAGrCpf,KAAK2gD,sBAEDvhC,GACApf,KAAKw3B,gBAAgBpD,QAAO,GAGhCp0B,KAAKiF,QAAQ63C,EAAQ,CACjBsU,MAAO,GACPC,QAAS59B,GAEjB,EAEAg+B,qBAAsB,SAAS1xD,GACvBC,KAAKugD,cACLvgD,KAAK0oD,WAAW/mD,OAAO5B,EAAK6+C,iBACrB5+C,KAAK2jD,SAAS5jD,EAAK6+C,SAAShtC,IAE3C,EAEA8/C,0BAA2B,SAAS3xD,GAC5BC,KAAKugD,cACLvgD,KAAKikD,sBAAsBtiD,OAAO5B,EAAK6+C,iBAChC5+C,KAAK8pD,oBAAoB/pD,EAAK6+C,SAASuF,KAEtD,EAEAhqB,eAAgB,SAAS1G,GAIrB,IAHA,IACI1zB,EAAM22B,EAAMwK,EADZhH,EAAW,GAGN8B,EAAM,EAAGA,EAAMvI,EAAM31B,OAAQk+B,IAElCkF,GADAnhC,EAAO0zB,EAAMuI,IACGzc,QAAQ2hB,SAEpBxK,EADA32B,aAAgB64B,GACT,CAAExlB,MAAOrT,GAET,CAAEqV,WAAYrV,GAErBmhC,IAAgC,IAApBA,EAASv/B,SAAqB3B,KAAKiF,QAAQ,SAAUyxB,IACjEwD,EAASt7B,KAAKmB,GAGtB,OAAOm6B,CACX,EAKAzJ,KAAM,WACFzwB,KAAKw3B,gBAAgB/G,MACzB,EAIAE,KAAM,WACF3wB,KAAKw3B,gBAAgB7G,MACzB,EAOAnC,OAAQ,SAASzuB,EAAMwf,GACnB,IAAI7iB,EAAUqD,GA+BV,OAAOC,KAAK07B,eA5BZ,IAGIn9B,EAAGuE,EAFH2wB,EAAQ,GACRqN,EAAW,GAef,KAnBAvhB,EAAUrjB,EAAW,CAAE++B,gBAAgB,GAAS1b,IAEnB0b,gBAMzBj7B,KAAK2yB,WAGT3yB,KAAK8hD,oBAAqB,EAEtB/hD,aAAgB3D,MAChBq3B,EAAQ1zB,EACDA,aAAgB4+C,KACvBlrB,EAAQ,CAAE1zB,IAGTxB,EAAI,EAAGA,EAAIk1B,EAAM31B,OAAQS,KAC1BuE,EAAU2wB,EAAMl1B,IACJiwB,QAAO,IACfsS,EAASliC,KAAKkE,GAItB9C,KAAK+hD,kBAAkBjhB,EAAU,IAEjC9gC,KAAK8hD,oBAAqB,CAIlC,EAEAvnB,UAAW,WACPv6B,KAAKwuB,OAAOxuB,KAAKkyB,OAAO7U,OAAOrd,KAAKu3B,aACxC,EAEAQ,WAAY,SAASxtB,GACjB,IAAIhM,EAAGk1B,EAAO1zB,EACdC,KAAK8hD,oBAAqB,EAC1B,IAAIhhB,EAAW,GACf,GAAIv2B,aAAgB5B,EAEhB,IADA8qB,EAAQzzB,KAAKkyB,OAAO7U,OAAOrd,KAAKu3B,aAC3Bh5B,EAAI,EAAGA,EAAIk1B,EAAM31B,OAAQS,IAC1BwB,EAAO0zB,EAAMl1B,GACPgM,IAAQxK,EAAKq3B,SAAS7sB,KAAUxK,EAAKwf,QAAQkX,QAC3C12B,EAAKyuB,QAAO,IACZsS,EAASliC,KAAKmB,GAM9BC,KAAK+hD,kBAAkBjhB,EAAU,IACjC9gC,KAAK8hD,oBAAqB,CAC9B,EAEAnvB,SAAU,SAAS5yB,GACfC,KAAK8hD,oBAAqB,EAC1B,IAEIh/C,EAASvE,EAFTsjD,EAAa,GACbpuB,EAAQ,GAWZ,IARI1zB,aAAgB3D,MAChBq3B,EAAQ1zB,EACDA,aAAgB4+C,GACvBlrB,EAAM70B,KAAKmB,GACHrD,EAAUqD,KAClB0zB,EAAQzzB,KAAK07B,eAAetyB,MAAM,IAGjC7K,EAAI,EAAGA,EAAIk1B,EAAM31B,OAAQS,KAC1BuE,EAAU2wB,EAAMl1B,IACJiwB,QAAO,IACfqzB,EAAWjjD,KAAKkE,GAIxB9C,KAAK+hD,kBAAkB,GAAIF,GAC3B7hD,KAAK8hD,oBAAqB,CAC9B,EAMA/1B,QAAS,SAAS0H,EAAOrU,GAChBqU,IACDA,EAAQzzB,KAAK07B,eAAetyB,SAGhC,IAA2CkS,EAAvC7Y,EAASzC,KAAK2xD,iBAAiBl+B,GACnC,IAAK/R,EAAQtC,IAAaA,EAAU,CAChC9D,EAAUkjC,GAAex+C,KAAKm8B,UAAW15B,EAAOupB,SAChD,IAAInd,EAAO,IAAI2kB,EAAYxzB,KAAMyzB,EAAOnY,GACxCtb,KAAKw3B,gBAAgB5mB,IAAI/B,EAC7B,MACI7O,KAAKm8B,UAAUpQ,QAAQtpB,EAAOupB,SAC9BhsB,KAAK4xD,aAAanvD,GAAQ,EAElC,EAMAwpB,OAAQ,SAASwH,EAAOrU,GACfqU,IACDA,EAAQzzB,KAAK07B,eAAetyB,SAGhC,IAA2CkS,EAAvC7Y,EAASzC,KAAK2xD,iBAAiBl+B,GACnC,IAAK/R,EAAQtC,IAAaA,EAAU,CAChC9D,EAAUkjC,GAAex+C,KAAKm8B,UAAW15B,EAAOupB,SAChD,IAAInd,EAAO,IAAI+kB,EAAW5zB,KAAMyzB,EAAOnY,GACvCtb,KAAKw3B,gBAAgB5mB,IAAI/B,EAC7B,MACI7O,KAAKm8B,UAAUlQ,OAAOxpB,EAAOupB,SAC7BhsB,KAAK4xD,aAAanvD,GAAQ,EAElC,EAOAovD,cAAe,SAAS9xD,EAAMwf,GAC1B,IAEIzM,EAASvI,EAAMunD,EAAUC,EAFzBlG,EAAW7rD,KAAK6rD,WAChB7K,EAAU,IAAIhlD,EAAQiR,UAAU4+C,GAGb,IAAnBA,EAAS7iD,OAAmC,IAApB6iD,EAAS9iD,SAKhB,SADrBwW,EAAUrjB,EAAW,CAAEm0B,SAAS,EAAOljB,MAAO,iBAAmBoS,IACrDpS,QACRoS,EAAQpS,MAAQ,iBAGhBpN,aAAgB4+C,GAChBp0C,EAAOxK,EAAK2T,OAAO8pC,IACZrhD,EAAQ4D,GACfwK,EAAOvK,KAAKusB,YAAYxsB,GACjBA,aAAgB4I,IACvB4B,EAAOxK,EAAKwH,SAGhBuqD,EAAWvnD,EAAKhD,QAEhBgD,EAAKkB,KAAKzL,KAAKovD,QAEX7kD,EAAKvB,MAAQ6iD,EAAS7iD,OAASuB,EAAKxB,OAAS8iD,EAAS9iD,UACtD/I,KAAKovD,MAAQpvD,KAAKsvD,cAAc3S,EAAKl3C,IAAIomD,EAAS7iD,MAAQ8oD,EAAS9oD,MAAO6iD,EAAS9iD,OAAS+oD,EAAS/oD,SACrGwB,EAAOunD,EAASvqD,QAAQkE,KAAKzL,KAAKovD,QAGtCpvD,KAAKgyD,iBAELl/C,EAAUvI,EAAKhD,QACfy5C,EAAQ7zC,MAAM5C,EAAMgV,EAAQpS,OAE5B4kD,EAASxnD,EAAKL,UAAUzC,MAAMqL,EAAQ5I,WACtClK,KAAKgzB,IAAI++B,EAAOpqD,OAAO,GAAI4X,EAAQ8Q,SACvC,EAEA4hC,YAAa,SAASrjB,GACdhyC,EAAYgyC,KACZA,EAAY,QAEhB,IACIsjB,EACAnyD,EACAxB,EAHAk1B,EAAQzzB,KAAKwuB,SAKjB,GAAqB,IAAjBiF,EAAM31B,OAAV,CAIA,OAAQ8wC,EAAUrhC,eACd,IAAK,OACL,IAAK,MACD2kD,EAAM3hD,GACN,MACJ,IAAK,QACL,IAAK,SACD2hD,EAAMlc,GAId,IAAKz3C,EAAI,EAAGA,EAAIk1B,EAAM31B,OAAQS,IAE1B,IADAwB,EAAO0zB,EAAMl1B,cACOq6B,GAChB,OAAQgW,EAAUrhC,eACd,IAAK,OACD2kD,EAAMvV,EAAKl3C,IAAIysD,EAAKnyD,EAAKwf,QAAQ1gB,GACjC,MACJ,IAAK,MACDqzD,EAAMvV,EAAKl3C,IAAIysD,EAAKnyD,EAAKwf,QAAQzgB,GACjC,MACJ,IAAK,QACDozD,EAAMvV,EAAKn3C,IAAI0sD,EAAKnyD,EAAKwf,QAAQ1gB,GACjC,MACJ,IAAK,SACDqzD,EAAMvV,EAAKn3C,IAAI0sD,EAAKnyD,EAAKwf,QAAQzgB,GAKjD,IAAIqzB,EAAa,GACbD,EAAS,GACb,IAAK3zB,EAAI,EAAGA,EAAIk1B,EAAM31B,OAAQS,IAE1B,IADAwB,EAAO0zB,EAAMl1B,cACOq6B,GAGhB,OAFA1G,EAAOtzB,KAAKmB,GACZoyB,EAAWvzB,KAAKmB,EAAK2T,UACbk7B,EAAUrhC,eACd,IAAK,OACL,IAAK,QACDxN,EAAKgD,SAAS,IAAI3D,EAAM8yD,EAAKnyD,EAAKwf,QAAQzgB,IAC1C,MACJ,IAAK,MACL,IAAK,SACDiB,EAAKgD,SAAS,IAAI3D,EAAMW,EAAKwf,QAAQ1gB,EAAGqzD,IAKxD,IAAIrjD,EAAO,IAAI7S,EAAQi2B,cAAcC,EAAQC,GAC7CnyB,KAAKw3B,gBAAgB5mB,IAAI/B,GAAM,EApD/B,CAqDJ,EAEApD,KAAM,SAASA,EAAM8T,GACjB,GAAI9T,EAAM,CACN,IAAI+2B,EAAcjjB,EAAUA,EAAQ/V,MAAQ,IAAIxN,EAAQoD,MAAM,EAAG,GAIjE,GAFAqM,EAAOzL,KAAKovD,MAAQpvD,KAAKsvD,cAAc7jD,IAElC7O,EAAY4lC,GAAc,CAE3B,IAAI+sB,GADJ/sB,EAAc,IAAIxmC,EAAQoD,MAAMu9C,EAAKjtC,MAAM8yB,EAAY3jC,GAAI89C,EAAKjtC,MAAM8yB,EAAY1jC,KACpD6I,MAAM8D,GAEhC0mD,EADiBnyD,KAAK2kC,YAAYnC,GACb/6B,MAAM8nD,GAC/BvvD,KAAK82B,UAAU,IAAI96B,EAAQoD,MAAMu9C,EAAKjtC,MAAMyiD,EAAItzD,GAAI89C,EAAKjtC,MAAMyiD,EAAIrzD,IACvE,CAEIygB,IACAA,EAAQ9T,KAAOA,GAGnBzL,KAAKwvD,gBAELxvD,KAAKk1B,OAAO7H,QAAQ+kC,cAEpBpyD,KAAKyvD,iBACT,CAEA,OAAOzvD,KAAKovD,KAChB,EAEAiD,QAAS,SAASr/B,GAKd,OAJahzB,KAAKk1B,OACN3R,YACRyP,EAAMA,EAAIxrB,KAAKxH,KAAKg3B,OAEjBhE,CACX,EAEAA,IAAK,SAASA,EAAK3C,GACf,KAAI2C,aAAe5zB,GAef,OAAOY,KAAKg3B,KAAKrvB,OAAO,GAdxB,IAAIsM,EAAOjU,KACPm1B,EAAWlhB,EAAKkhB,SAEpBnC,GADAA,EAAM/e,EAAKo+C,QAAQr/B,IACTrrB,OAAO,GAEb0oB,EACA8E,EAASm9B,iBAAiBt/B,EAAIn0B,EAAGm0B,EAAIl0B,GAAG,WACpCmV,EAAKw7C,iBACT,KAEAt6B,EAASo9B,SAASv/B,EAAIn0B,EAAGm0B,EAAIl0B,GAC7BmV,EAAKw7C,kBAKjB,EAEA5D,SAAU,WACN,IAAI/oD,EAAU9C,KAAK8C,QACfkG,EAAQlG,EAAQkG,QAChBD,EAASjG,EAAQiG,SAMrB,OAJI/I,KAAK+oD,UACLhgD,GAAUwzC,EAAYv8C,KAAK+oD,QAAQjmD,UAGhC,IAAI6F,EAAK,EAAG,EAAGK,EAAOD,EACjC,EACAyL,KAAM,WACF,GAAIxU,KAAKuf,QAAQ/K,KAAK2hB,QAAS,CAC3Bn2B,KAAKooD,WAAa,GAClBpoD,KAAKwyD,YAAc,EACnB,IAAK,IAAIj0D,EAAI,EAAGA,EAAIyB,KAAK07B,eAAe59B,OAAQS,IAAK,CACjD,IAAIwB,EAAOC,KAAK07B,eAAen9B,GAC/ByB,KAAKooD,WAAWxpD,KAAKmB,EACzB,CACJ,CACJ,EACAy6B,IAAK,WACD,GAAIx6B,KAAKuf,QAAQ/K,KAAK2hB,QAAS,CAC3Bn2B,KAAKooD,WAAa,GAClBpoD,KAAKwyD,YAAc,EACnB,IAAK,IAAIj0D,EAAI,EAAGA,EAAIyB,KAAK07B,eAAe59B,OAAQS,IAAK,CACjD,IAAIwB,EAAOC,KAAK07B,eAAen9B,GAC/ByB,KAAKooD,WAAWxpD,KAAKmB,EACzB,CACAC,KAAK2B,OAAO3B,KAAKooD,YAAY,EACjC,CACJ,EAEA3tB,MAAO,WACH,GAAIz6B,KAAKooD,WAAWtqD,OAAS,EAAG,CAC5B,IAAIiC,EAAM0yD,EAAQl0D,EACdm0D,EAAU,CAAC,EACX1qC,EAAWupC,GAAqBvxD,KAAKooD,YACrC7wB,EAAcvP,EAASuP,YACvBrF,EAASlK,EAASkK,OAClBxqB,EAAS,CACT7I,EAAGmB,KAAKwyD,YAAcxyD,KAAKuf,QAAQ/K,KAAKsxB,QACxChnC,EAAGkB,KAAKwyD,YAAcxyD,KAAKuf,QAAQ/K,KAAKuxB,SAI5C,IAFA/lC,KAAK2yB,WAEAp0B,EAAI,EAAGA,EAAI2zB,EAAOp0B,OAAQS,IAE3Bk0D,GADA1yD,EAAOmyB,EAAO3zB,IACAgJ,QACdmrD,EAAQ3yD,EAAK6R,IAAM6gD,EACnBA,EAAO1vD,SAAS,IAAI3D,EAAMW,EAAKwf,QAAQ1gB,EAAI6I,EAAO7I,EAAGkB,EAAKwf,QAAQzgB,EAAI4I,EAAO5I,IAC7E2zD,EAAOz2D,QAAUgE,MACjByyD,EAASzyD,KAAK+e,UAAU0zC,KAEpBA,EAAOjkC,SAIf,IAAKjwB,EAAI,EAAGA,EAAIg5B,EAAYz5B,OAAQS,IAChCwB,EAAOw3B,EAAYh5B,IACnBk0D,EAASzyD,KAAKsf,eAAevf,EAAKwH,YAE9BvH,KAAK2yD,wBAAwBF,EAAQ1yD,EAAM,SAAU2yD,EAAShrD,GAC9D1H,KAAK2yD,wBAAwBF,EAAQ1yD,EAAM,SAAU2yD,EAAShrD,GAE9D+qD,EAAOjkC,QAAO,GACdikC,EAAO/gC,eAIf1xB,KAAKo6B,eAELp6B,KAAKwyD,aAAe,CACxB,CACJ,EAEAG,wBAAyB,SAASv9C,EAAYw9C,EAAkBvN,EAAeqN,EAAShrD,GACpF,IAAIg+C,EAAYH,EAAcrlC,EAC1Bjc,EAAS2uD,EAAiBvN,KAC1BrpD,EAAUgE,KACViE,aAAkB07C,IAAa+S,EAAQzuD,EAAOmP,MAAMxB,KACpDsO,EAAcwyC,EAAQzuD,EAAOmP,MAAMxB,IAC/B5V,EAAQi0B,aAAa/P,EAAYtO,IACjCwD,EAAWiwC,GAAenlC,EAAY2Y,aAAa50B,EAAOsb,QAAQrhB,QAElEqnD,EAAevpD,EAAQwpD,oBAAoBtB,SAAShkC,EAAY0+B,SAASuF,QAErEuB,EAAa,SAAS3lD,GAClBmgB,EAAclkB,EAAQ2nD,SAAS5jD,EAAK6R,IACpCwD,EAAWiwC,GAAenlC,EAAY2Y,aAAa50B,EAAOsb,QAAQrhB,OAClEkX,EAAWsc,aACf,EACA11B,EAAQypD,2BAA2B7mD,KAAK2mD,EAAaG,WAAWA,MAIxEtwC,EAAWiwC,GAAe,IAAIjmD,EAAMwzD,EAAiBvN,EAAgB,WAAWxmD,EAAI6I,EAAO7I,EAAG+zD,EAAiBvN,EAAgB,WAAWvmD,EAAI4I,EAAO5I,GAE7J,EAOAytB,YAAa,SAASkH,EAAOxtB,GACzB,IAAyBsC,EAArBgC,EAAO5B,EAAK2D,QACZumD,EAAKn2D,EAAU+2B,GAASzzB,KAAK2xD,iBAAiBl+B,GAAS,CAAEvB,OAAQlyB,KAAKkyB,QAC1E,GAAI2gC,EAAG3gC,OAAOp0B,OAAS,EAAG,CACtB,IAAIiC,EAAO8yD,EAAG3gC,OAAO,GACrB3nB,EAAOxK,EAAK2T,OAAO+b,IACnB,IAAK,IAAIlxB,EAAI,EAAGA,EAAIs0D,EAAG3gC,OAAOp0B,OAAQS,IAElCgK,GADAxI,EAAO8yD,EAAG3gC,OAAO3zB,IACLmV,OAAO+b,KACJ,IAAXxpB,IACAsC,EAAK1J,GAAKkB,EAAK0hC,gBAAgB5iC,EAC/B0J,EAAKzJ,GAAKiB,EAAK0hC,gBAAgB3iC,GAEnCyL,EAAOA,EAAKzB,MAAMP,EAE1B,CACA,OAAOgC,CACX,EAEAuoD,iBAAkB,WACd,IAAIC,EAAkB/yD,KAAK8C,QAAQ4E,SAInC,OAHI1H,KAAK+oD,UACLgK,EAAgB/oD,KAAOuyC,EAAYv8C,KAAK+oD,QAAQjmD,UAE7CiwD,CACX,EAEA7D,eAAgB,SAAS1lD,GACrB,IAAIupD,EAAkB/yD,KAAK8yD,mBAE3B,OAAO,IAAI1zD,EAAMoK,EAAM3K,EAAIk0D,EAAgBzpD,KAAME,EAAM1K,EAAIi0D,EAAgB/oD,IAC/E,EACAgpD,eAAgB,SAASxpD,GACrB,IAAIupD,EAAkB/yD,KAAK8yD,mBAE3B,OAAO,IAAI1zD,EAAMoK,EAAM3K,EAAIk0D,EAAgBzpD,KAAME,EAAM1K,EAAIi0D,EAAgB/oD,IAC/E,EACAipD,YAAa,SAASzpD,GAClB,OAAOxJ,KAAKkzD,qBAAqB1pD,EAAOxJ,KAAKmzD,cACjD,EACAxuB,YAAa,SAASn7B,GAClB,OAAOxJ,KAAKkzD,qBAAqB1pD,EAAOxJ,KAAKozD,QACjD,EACArzB,aAAc,SAASv2B,GACnB,OAAOxJ,KAAKkzD,qBAAqB1pD,EAAOxJ,KAAKqzD,aACjD,EACAC,aAAc,SAAS9pD,GACnB,OAAOxJ,KAAKkzD,qBAAqB1pD,EAAOxJ,KAAKuzD,mBACjD,EACA3E,gBAAiB,SAASplD,GACtB,IAAIgqD,EAAYxzD,KAAKkvD,eAAe1lD,GAKpC,OAJKxJ,KAAKk1B,OAAO3R,YACbiwC,EAAU30D,EAAI20D,EAAU30D,EAAImB,KAAKm1B,SAASyB,WAC1C48B,EAAU10D,EAAI00D,EAAU10D,EAAIkB,KAAKm1B,SAAS0B,WAEvC72B,KAAKizD,YAAYO,EAC5B,EACAC,gBAAiB,SAASjqD,GACtB,OAAOxJ,KAAKgzD,eAAehzD,KAAK2kC,YAAYn7B,GAChD,EACA0pD,qBAAsB,SAAS1pD,EAAO0b,GAClC,IAAIziB,EAAS+G,EACb,GAAIA,aAAiBpK,EACb8lB,IACAziB,EAASyiB,EAAO1hB,MAAMgG,QAGzB,CACD,IAAImB,EAAK3K,KAAKkzD,qBAAqB1pD,EAAMU,UAAWgb,GAChDra,EAAK7K,KAAKkzD,qBAAqB1pD,EAAMa,cAAe6a,GACxDziB,EAASkG,EAAK4D,WAAW5B,EAAIE,EACjC,CACA,OAAOpI,CACX,EAEAixD,cAAe,SAAShL,GACpB1oD,KAAKuf,QAAQmpC,WAAaA,EAC1B1oD,KAAK2zD,cACD3zD,KAAKuf,QAAQqpC,UACb5oD,KAAK0oD,WAAWkL,OAExB,EAEAC,yBAA0B,SAASnL,GAC/B1oD,KAAKuf,QAAQ0kC,sBAAwByE,EACrC1oD,KAAK8zD,wBACD9zD,KAAKuf,QAAQqpC,UACb5oD,KAAKikD,sBAAsB2P,OAEnC,EAOAthC,OAAQ,SAAS/S,GAGb,IAAI/hB,EAUAmrC,EACJ,OAbA3oC,KAAK0hD,YAAa,EAGd9kD,EAAY2iB,KACZA,EAAUvf,KAAKuf,QAAQ+S,SAGvB90B,EADAZ,EAAY2iB,IAAY3iB,EAAY2iB,EAAQ/hB,MACrC,OAGA+hB,EAAQ/hB,MAGN+P,eACT,IAAK,OACDo7B,EAAI,IAAI3sC,EAAQ8zC,WAAW9vC,MAC3B,MAEJ,IAAK,UACD2oC,EAAI,IAAI3sC,EAAQm0C,cAAcnwC,MAC9B,MAEJ,IAAK,gBACL,IAAK,QACL,IAAK,SACL,IAAK,iBACD2oC,EAAI,IAAI3sC,EAAQmkB,aAAangB,MAC7B,MACJ,QACI,KAAM,qBAAuBxC,EAAO,sBAE5C,IAAI2yB,EAAe,IAAIn0B,EAAQyuC,YAAYzqC,MACvCowB,EAAauY,EAAErW,OAAO/S,GAC1B,GAAI6Q,EAAY,CACZ,IAAIvhB,EAAO,IAAI7S,EAAQk0B,eAAeC,EAAcC,EAAY7Q,EAAUA,EAAQ8Q,QAAU,MAC5FrwB,KAAKw3B,gBAAgB5mB,IAAI/B,EAC7B,CACA7O,KAAK0hD,YAAa,EAClB1hD,KAAK+zD,oBACT,EAMA9jC,aAAc,SAASre,GACnB,IAAIwF,EAIJ,OAHAA,EAAQ/a,EAAMsG,MAAM3C,KAAKkyB,QAAQ,SAASjzB,GACtC,OAAOA,EAAEykB,OAAO9R,KAAOA,CAC3B,KAEWwF,EAEXA,EAAQ/a,EAAMsG,MAAM3C,KAAKu3B,aAAa,SAAS72B,GAC3C,OAAOA,EAAEgjB,OAAO9R,KAAOA,CAC3B,GAEJ,EAEAoiD,kBAAmB,SAASpiD,GASxB,OAPI5R,KAAKugD,YACGvgD,KAAK2jD,SAAS/xC,GAEdvV,EAAMsG,MAAM3C,KAAKkyB,QAAQ,SAAS9e,GACtC,OAAQA,EAAMwrC,UAAY,CAAC,GAAGhtC,KAAOA,CACzC,GAGR,EAEAqiD,mBAAoB,SAAS9P,GASzB,OAPInkD,KAAKugD,YACGlkD,EAAMsG,MAAM3C,KAAKkyB,QAAQ,SAAS9e,GACtC,OAAQA,EAAMwrC,UAAY,CAAC,GAAGuF,MAAQA,CAC1C,IAEQnkD,KAAK2jD,SAASQ,EAG9B,EAEA+P,uBAAwB,SAAStiD,GAC7B,IAAIwD,EAMJ,OALIpV,KAAKikD,wBACL7uC,EAAa/Y,EAAMsG,MAAM3C,KAAKu3B,aAAa,SAASniB,GAChD,OAAQA,EAAWwpC,UAAY,CAAC,GAAGhtC,KAAOA,CAC9C,KAEGwD,CACX,EAEA++C,wBAAyB,SAAShQ,GAC9B,IAAI/uC,EAIJ,OAHIpV,KAAKikD,wBACL7uC,EAAapV,KAAK8pD,oBAAoB3F,IAEnC/uC,CACX,EAEAyyC,qBAAsB,SAAStoC,GACvBA,EAAQ+S,SACR/S,EAAQ+S,OAASp2B,EAAW,CAAC,EAAGF,EAAQkpC,WAAWjzB,GAAGkzB,gBAAkB,CAAC,EAAG5lB,EAAQ+S,QAE5F,EAEAyvB,kBAAmB,SAASjhB,EAAU+gB,IAC9B/gB,EAAShjC,QAAU+jD,EAAW/jD,SAC9BkC,KAAKiF,QAAQi4C,GAAQ,CAAEpc,SAAUA,EAAU+gB,WAAYA,GAE/D,EACAyN,cAAe,SAAS7jD,GACpB,OAAOkxC,EAAKl3C,IAAIk3C,EAAKn3C,IAAIiG,EAAMzL,KAAKuf,QAAQub,SAAU96B,KAAKuf,QAAQwb,QACvE,EACAy0B,cAAe,SAAS9rD,GACpB,IAAI1H,EAAUgE,KACVgzB,EAAMtvB,GAAO1H,EAAQg7B,KAErBh7B,EAAQk5B,OAAO3R,WACfvnB,EAAQm5B,SAASo9B,SAASv/B,EAAIn0B,EAAGm0B,EAAIl0B,GACrC9C,EAAQg2D,mBAERh2D,EAAQ86B,UAAU9D,GAClBh3B,EAAQo4D,sBAEhB,EAEAC,WAAY,WACRr0D,KAAKiF,QAAQm4C,GAAK,CAAExD,MAAO55C,KAAKg3B,KAAMzrB,MAAO+E,OAAOgkD,KACxD,EACAx9B,UAAW,SAAS9D,GAChBhzB,KAAKg3B,KAAOhE,EACZhzB,KAAKu0D,kBACT,EACAvC,eAAgB,WACZ,IAAIvmD,EAAOzL,KAAKovD,MAEZ5rC,EAAY,IAAIF,EAAmB,EAAG,EAAG7X,EAAMA,GACnD+X,EAAUC,OAAOzjB,KAAKm8B,WACtBn8B,KAAKw0D,kBAAkBhxC,GACvBxjB,KAAKu0D,kBACT,EACAH,oBAAqB,WACjB,IAAIphC,EAAMhzB,KAAKg3B,KACXvrB,EAAOzL,KAAKovD,MAEZ5rC,EAAY,IAAIF,EAAmB0P,EAAIn0B,EAAGm0B,EAAIl0B,EAAG2M,EAAMA,GAC3D+X,EAAUC,OAAOzjB,KAAKm8B,WACtBn8B,KAAKw0D,kBAAkBhxC,GACvBxjB,KAAKu0D,kBACT,EACAC,kBAAmB,SAASC,GACxBz0D,KAAKqzD,aAAeoB,EAAgB7xC,WACpC5iB,KAAKuzD,mBAAqBkB,EAAgB3xC,SAASF,UACvD,EACA2xC,iBAAkB,WACd,IAAIvhC,EAAMhzB,KAAKg3B,KACXvrB,EAAOzL,KAAKovD,MAEZ5rC,EAAY,IAAIF,EAAmB0P,EAAIn0B,EAAGm0B,EAAIl0B,EAAG2M,EAAMA,GAC3DzL,KAAKozD,QAAU5vC,EAAUZ,WACzB5iB,KAAKmzD,cAAgB3vC,EAAUV,SAASF,UAC5C,EACA+Q,SAAU,SAASF,EAAOnY,GACtB,IAAI7Y,EAASzC,KAAK2xD,iBAAiBl+B,GACnCzzB,KAAKm8B,UAAUhQ,QAAQ1pB,EAAOupB,QAAS1Q,GACvCtb,KAAK4xD,aAAanvD,GAAQ,EAC9B,EACAmvD,aAAc,SAASnvD,EAAQspB,GAC3B,IAEIxtB,EAAGwB,EAFH20D,EAAW3oC,EAAU/rB,KAAKkyB,OAAOp0B,OAAS,EAAI,EAC9C62D,EAAS5oC,EAAU/rB,KAAKu3B,YAAYz5B,OAAS,EAAI,EAErD,IAAKS,EAAI,EAAGA,EAAIkE,EAAOyvB,OAAOp0B,OAAQS,IAClCwB,EAAO0C,EAAOyvB,OAAO3zB,GACrBlC,EAAMsF,OAAO3B,KAAKkyB,OAAQnyB,GAC1B1D,EAAMwG,OAAO7C,KAAKkyB,OAAQnyB,EAAM20D,GAEpC,IAAKn2D,EAAI,EAAGA,EAAIkE,EAAO2/C,KAAKtkD,OAAQS,IAChCwB,EAAO0C,EAAO2/C,KAAK7jD,GACnBlC,EAAMsF,OAAO3B,KAAKu3B,YAAax3B,GAC/B1D,EAAMwG,OAAO7C,KAAKu3B,YAAax3B,EAAM40D,EAE7C,EACAhD,iBAAkB,SAASl+B,GACvB,IAAIl1B,EAAGkE,EAAS,CAAC,EAAGi0B,EAAOjD,EAW3B,IAVAhxB,EAAOupB,QAAU,GACjBvpB,EAAOyvB,OAAS,GAChBzvB,EAAO2/C,KAAO,GAET3uB,EAEOt3B,EAAQs3B,KAChBiD,EAAO,CAACjD,IAFRiD,EAAO12B,KAAK07B,eAAetyB,QAK1B7K,EAAI,EAAGA,EAAIm4B,EAAK54B,OAAQS,IAAK,CAC9B,IAAIwB,EAAO22B,EAAKn4B,GACZwB,aAAgB64B,IAChBn2B,EAAOyvB,OAAOtzB,KAAKmB,GACnB0C,EAAOupB,QAAQptB,KAAKmB,EAAK2jB,SAClB3jB,aAAgB47B,KACvBl5B,EAAO2/C,KAAKxjD,KAAKmB,GACjB0C,EAAOupB,QAAQptB,KAAKmB,EAAK2jB,QAEjC,CAEA,OAAOjhB,CACX,EAEA+uD,YAAa,SAASzxD,EAAMqf,EAAUw1C,GAClC70D,EAAKyuB,QAAO,GACRzuB,aAAgB64B,IAChB54B,KAAKyxD,qBAAqB1xD,GAC1BC,KAAK60D,aAAa90D,EAAMqf,EAAUw1C,IAC3B70D,aAAgB47B,KACvB37B,KAAK0xD,0BAA0B3xD,GAC/BC,KAAK80D,kBAAkB/0D,EAAMqf,IAGjCpf,KAAKm8B,UAAUx6B,OAAO5B,EAAK2jB,OAC/B,EAEAmxC,aAAc,SAASzhD,EAAOgM,EAAUw1C,GACpC,IAAIr2D,EAAG6W,EAAY6iB,EACflb,EAAU,GAAIJ,EAAU,GAS5B,IARA3c,KAAK00B,YAAY6D,eAEbnZ,GACApf,KAAKw3B,gBAAgBjD,iBAAiB,IAAIvC,EAAgB5e,IAE9D/W,EAAMsF,OAAO3B,KAAKkyB,OAAQ9e,GAC1BpT,KAAKonD,gBAAgBzlD,OAAOyR,GAEvB7U,EAAI,EAAGA,EAAI6U,EAAM6oB,WAAWn+B,OAAQS,IAAK,CAC1C05B,EAAY7kB,EAAM6oB,WAAW19B,GAC7B,IAAK,IAAIsI,EAAI,EAAGA,EAAIoxB,EAAUV,YAAYz5B,OAAQ+I,IAC9CuO,EAAa6iB,EAAUV,YAAY1wB,GAC9B+tD,GAAuB34D,EAAQgG,QAAQmT,EAAYw/C,KAChDx/C,EAAWujB,iBAAmBV,EAC9Blb,EAAQne,KAAKwW,GACNA,EAAW2c,iBAAmBkG,GACrCtb,EAAQ/d,KAAKwW,GAI7B,CAEA,IAAK7W,EAAI,EAAGA,EAAIwe,EAAQjf,OAAQS,IAC5Bwe,EAAQxe,GAAGN,OAAO,KAAMmhB,GACxBrC,EAAQxe,GAAGmzB,cAEf,IAAKnzB,EAAI,EAAGA,EAAIoe,EAAQ7e,OAAQS,IAC5Boe,EAAQpe,GAAG0F,OAAO,KAAMmb,GACxBzC,EAAQpe,GAAGmzB,aAEnB,EAEAojC,kBAAmB,SAAS1/C,EAAYgK,GAChChK,EAAWujB,iBACXt8B,EAAMsF,OAAOyT,EAAWujB,gBAAgBpB,YAAaniB,GAErDA,EAAW2c,iBACX11B,EAAMsF,OAAOyT,EAAW2c,gBAAgBwF,YAAaniB,GAErDgK,GACApf,KAAKw3B,gBAAgBjD,iBAAiB,IAAIzC,EAAqB1c,IAGnE/Y,EAAMsF,OAAO3B,KAAKu3B,YAAaniB,EACnC,EAEA2/C,iBAAkB,SAASthC,EAAOuhC,GAC9B,IAAIj1D,EAAMsU,EAAUjB,EAAO4oB,EAG3B,IAFAvI,EAAQt3B,EAAQs3B,GAASA,EAAQ,CAACA,GAE3BA,EAAM31B,QAGT,GAFAiC,EAAO0zB,EAAMwd,SACb79B,EAAQpT,KAAK2jD,SAAS5jD,EAAKokD,QAEvBnkD,KAAKi1D,wBAAwB7hD,GAC7BpT,KAAKwxD,YAAYp+C,GAAO,UACjBpT,KAAK2jD,SAAS5jD,EAAKokD,KACtB6Q,GAAaj1D,EAAKm1D,aAAen1D,EAAKo1D,UAEtC,IADA9gD,EAAWtU,EAAKsU,SAASV,OACpBqoB,EAAM,EAAGA,EAAM3nB,EAASvW,OAAQk+B,IACjCvI,EAAM70B,KAAKyV,EAAS2nB,GAKxC,EAEAi5B,wBAAyB,SAAS7hD,GAC9B,IACI4oB,EADAzE,EAAcnkB,EAAMmkB,cAGxB,GAAIA,EACA,IAAKyE,EAAM,EAAGA,EAAMzE,EAAYz5B,OAAQk+B,IACpCh8B,KAAKwxD,YAAYj6B,EAAYyE,IAAM,EAG/C,EAEAo5B,aAAc,SAASxW,EAAUx/B,GAC7B,GAAKsC,EAAQk9B,GAAb,CAIA,IAAIxrC,EAAQpT,KAAK2jD,SAAS/E,EAAShtC,IACnC,GAAIwB,EACA,OAAOA,EAGX,IAAImM,EAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAAQN,eAK1C,OAJAM,EAAQq/B,SAAWA,EACnBxrC,EAAQ,IAAIwlB,GAAMrZ,EAASvf,MAC3BA,KAAKqf,SAASjM,GAAoB,IAAbgM,GACrBpf,KAAK2jD,SAAS/E,EAAShtC,IAAMwB,EACtBA,CAZP,CAaJ,EAEAiiD,kBAAmB,SAASzW,GACxB,GAAKl9B,EAAQk9B,GAAb,CAIA,IAAIxrC,EAAQpT,KAAK2jD,SAAS/E,EAASuF,KACnC,GAAI/wC,EACA,OAAOA,EAGX,IAAImM,EAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAAQN,eAK1C,OAJAM,EAAQq/B,SAAWA,EACnBxrC,EAAQ,IAAIwlB,GAAMrZ,EAASvf,MAC3BA,KAAKqf,SAASjM,GACdpT,KAAK2jD,SAAS/E,EAASuF,KAAO/wC,EACvBA,CAZP,CAaJ,EAEAkiD,cAAe,SAAS7hC,EAAO/S,GAC3B,IAAI3gB,EAAMi8B,EAAK5oB,EAAOmiD,EACtB,IAAKv5B,EAAM,EAAGA,EAAMvI,EAAM31B,OAAQk+B,IAC9Bj8B,EAAO0zB,EAAMuI,GACb5oB,EAAQpT,KAAKq1D,kBAAkBt1D,IAC/Bw1D,EAAcv1D,KAAKq1D,kBAAkB30C,MACjB1gB,KAAKwb,UAAU+5C,EAAaniD,IAC/BpT,KAAKwf,QAAQ+1C,EAAaniD,EAGnD,EAEAoiD,eAAgB,SAASnnD,GACrB,IAKI2tB,EACAy5B,EANAxhD,EAAOjU,KACPgU,EAAO3F,EAAE2F,KACT+G,EAAS1M,EAAE0M,OACX0Y,EAAQplB,EAAEolB,MACVlU,EAAUtL,EAAKsL,QAInB,GAAIlR,EAAEmU,MACF,IAAKwZ,EAAM,EAAGA,EAAMvI,EAAM31B,OAAQk+B,IAC1Bh8B,KAAK2jD,SAASlwB,EAAMuI,GAAKmoB,MACzBnkD,KAAK2jD,SAASlwB,EAAMuI,GAAKmoB,KAAK7D,mBAH1C,CASA,GAAc,UAAVvlC,EACA/a,KAAK+0D,iBAAiB1mD,EAAEolB,OAAO,QAc/B,IAXM1Y,GAAqB,eAAXA,GAA6B/a,KAAK01D,gBAC9C11D,KAAK01D,eAAgB,EACrBD,GAAY,GAGX16C,GAAW/G,GACZC,EAAKhR,QAGTjD,KAAKs1D,cAAc7hC,EAAOzf,GAErBgoB,EAAM,EAAGA,EAAMvI,EAAM31B,OAAQk+B,IAC9BvI,EAAMuI,GAAKk1B,OAIf3xC,EAAQ+S,SAAWmjC,GAAuB,UAAV16C,GAAgC,OAAVA,IACtD9G,EAAKqe,OAAO/S,EAAQ+S,QAGpBmjC,IACAz1D,KAAKiF,QAAQ,aACbjF,KAAK01D,eAAgB,EA5BzB,CA8BJ,EAEAC,SAAU,SAAS51D,GACXA,aAAgB64B,GAChB54B,KAAKqf,SAAStf,GACPA,aAAgB47B,IACvB37B,KAAK+pD,cAAchqD,EAE3B,EAEAiuD,eAAgB,SAAS4H,GACrB,IAAI55D,EAAUgE,KAAK00B,YAAY14B,QAE/B,IAAKgE,KAAK61D,eAA6C,IAA5B75D,EAAQwyB,SAAS1wB,OAAc,CACtD,IAAIgF,EAAU9G,EAAQwyB,SAAS,GAC/B,GAAI1rB,IAAwC,IAA7BA,EAAQyc,QAAQ2hB,SAAoB,CAC/C,IAAIA,EAAWp+B,EAAQyc,QAAQ2hB,SAC3B5H,EAAQ4H,EAAS5H,MAarB,GAZIt5B,KAAKugD,aAAgC,IAAjBjnB,EAAMx7B,SACtBgF,aAAmB81B,GACnBU,EAAQ,CAAC,OAAQ,kBAAmB,uBAC7Bx2B,aAAmB64B,KAC1BrC,EAAQ,CAAC,SAGT4H,IAAgC,IAApBA,EAASv/B,QACrB23B,EAAM16B,KAAK,WAIf06B,GAASA,EAAMx7B,OAAQ,CACvB,IACI0L,EACJxJ,KAAK61D,cAAgB,IAAI7M,GAAehtD,EAAS,CAC7Cs9B,MAAOA,EACP2vB,MAAOjpD,KAAKkpD,cAAcp1B,KAAK9zB,MAC/BmpD,OAAO,EACP2M,YAAaz2D,SAASrD,EAAQ8G,QAAQizD,QAAQ,aAAa36B,IAAI,UAAW,IAAM,KAEpF,IAAI46B,EAAa3Z,EAAWr8C,KAAK61D,cAAcI,OAAOnzD,SAClDozD,EAAc3Z,EAAYv8C,KAAK61D,cAAcI,OAAOnzD,SACxD,GAAIA,aAAmB81B,GAAO,CAC1B,IAAIgF,EAAc59B,KAAK2kC,YAAY7hC,EAAQ4Q,OAAO+b,KAClDjmB,EAAQ,IAAIpK,EAAMw+B,EAAY/+B,EAAG++B,EAAY9+B,GAAG2I,MAAM,IAAIrI,GACrD42D,EAAap4B,EAAY50B,OAAS,EACnCktD,EAdM,IAed,MAAO,GAAIpzD,aAAmB64B,GAAY,CACtC,IAAIw6B,EAAmBn2D,KAAK2kC,YAAY7hC,EAAQ4Q,UAEhDlK,EAAQ,IAAIpK,EAAM+2D,EAAiBt3D,EAAGs3D,EAAiBr3D,GAClD2I,MAAM,IAAIrI,GACN42D,EAAaG,EAAiBntD,MAAQ,IAAM,EAC7CktD,EArBE,IAuBd,CAEI1sD,GACKxJ,KAAKk1B,OAAO3R,YACb/Z,EAAQA,EAAM/B,MAAM,IAAIrI,EAAMY,KAAKm1B,SAASyB,WAAY52B,KAAKm1B,SAAS0B,aAE1ErtB,EAAQxJ,KAAKgzD,eAAexpD,GAC5BA,EAAQ,IAAIpK,EAAMu9C,EAAKn3C,IAAIgE,EAAM3K,EAAG,GAAI89C,EAAKn3C,IAAIgE,EAAM1K,EAAG,IAC1DkB,KAAK61D,cAAcO,OAAO5sD,GACtBosD,GACA51D,KAAK61D,cAAcI,OAAOI,IAAI,QAAStI,KAG3C/tD,KAAKq6B,iBAEb,CACJ,CACJ,CACJ,EAEA6uB,cAAe,SAAS76C,GACpBrO,KAAKiF,QAAQ,eAAgBoJ,GAC7BrO,KAAKq6B,iBACT,EAEAi8B,oBAAqB,SAAS9sD,GAC1B,OAAOA,EAAM7B,MAAM,EAAI3H,KAAKyL,OAChC,EAEA8nB,YAAa,WACTvzB,KAAKkyB,OAAS,GACdlyB,KAAK07B,eAAiB,GACtB17B,KAAKu3B,YAAc,GACnBv3B,KAAK2jD,SAAW,CAAC,EACjB3jD,KAAK8pD,oBAAsB,CAAC,EAC5B9pD,KAAKwlD,oBAAsB,IAAI+Q,GAC/Bv2D,KAAKylD,2BAA6B,GAClCzlD,KAAKw3B,gBAAkB,IAAI3D,EAAgB,CACvC2iC,OAAQx2D,KAAKwtD,aACbiJ,OAAQz2D,KAAKwtD,eAEjBxtD,KAAK4R,GAAK5V,EAAQuT,UACtB,EAEA+4C,gBAAiB,WACb,IAAIr0C,EAAOjU,KACXiU,EAAK0/C,cAED1/C,EAAKssC,aACLtsC,EAAK6/C,wBAGL7/C,EAAKsL,QAAQqpC,WACT30C,EAAKssC,aACLvgD,KAAK02D,gBAAiB,EACtB12D,KAAK22D,qBAAsB,EAC3B1iD,EAAKy0C,WAAWkL,QAChB3/C,EAAKgwC,sBAAsB2P,SAE3B3/C,EAAKy0C,WAAWkL,QAG5B,EAEAD,YAAa,WACT,GAAIjyC,EAAQ1hB,KAAKuf,QAAQ0kC,uBAAwB,CAC7CjkD,KAAKugD,aAAc,EACnB,IAAIqW,EAAY52D,KAAKuf,QAAQmpC,YAAc,CAAC,EACxCmO,EAAK16D,EAAQy6D,GAAa,CAAEjjD,KAAMijD,GAAcA,EAEhD52D,KAAK0oD,YAAc1oD,KAAK82D,sBACxB92D,KAAK0oD,WACAloB,OAAO,SAAUxgC,KAAK82D,uBACtBt2B,OAAO,eAAgBxgC,KAAK+2D,4BAC5Bv2B,OAAO,QAASxgC,KAAKg3D,sBAE1Bh3D,KAAK82D,sBAAwB92D,KAAKi3D,eAAenjC,KAAK9zB,MACtDA,KAAK+2D,2BAA6B/2D,KAAKk3D,oBAAoBpjC,KAAK9zB,MAChEA,KAAKg3D,oBAAsBh3D,KAAKm3D,OAAOrjC,KAAK9zB,OAGhDA,KAAK0oD,WAAa5sD,MAAM6X,KAAKyjD,WAAWh0C,OAAOyzC,GAC1C/iC,KAAK,SAAU9zB,KAAK82D,uBACpBhjC,KAAK,eAAgB9zB,KAAK+2D,4BAC1BjjC,KAAK,QAAS9zB,KAAKg3D,oBAC5B,MACIh3D,KAAKq3D,kBACLr3D,KAAKugD,aAAc,CAE3B,EAEAuT,sBAAuB,WACnB,IAAI8C,EAAY52D,KAAKuf,QAAQ0kC,sBAC7B,GAAI2S,EAAW,CACX,IAAIC,EAAK16D,EAAQy6D,GAAa,CAAEjjD,KAAMijD,GAAcA,EAEhD52D,KAAKikD,uBAAyBjkD,KAAKs3D,2BACnCt3D,KAAKikD,sBACAzjB,OAAO,SAAUxgC,KAAKs3D,4BACtB92B,OAAO,eAAgBxgC,KAAKu3D,iCAC5B/2B,OAAO,QAASxgC,KAAKw3D,2BAE1Bx3D,KAAKs3D,2BAA6Bt3D,KAAKy3D,oBAAoB3jC,KAAK9zB,MAChEA,KAAKu3D,gCAAkCv3D,KAAK03D,yBAAyB5jC,KAAK9zB,MAC1EA,KAAKw3D,yBAA2Bx3D,KAAK23D,kBAAkB7jC,KAAK9zB,OAGhEA,KAAKikD,sBAAwBnoD,MAAM6X,KAAKyjD,WAAWh0C,OAAOyzC,GACrD/iC,KAAK,SAAU9zB,KAAKs3D,4BACpBxjC,KAAK,eAAgB9zB,KAAKu3D,iCAC1BzjC,KAAK,QAAS9zB,KAAKw3D,yBAC5B,CACJ,EAEAN,oBAAqB,SAAS7oD,GACZ,QAAVA,EAAE7Q,OACFwC,KAAK02D,gBAAiB,EAE9B,EAEAgB,yBAA0B,SAASrpD,GACjB,QAAVA,EAAE7Q,OACFwC,KAAK22D,qBAAsB,EAEnC,EAEAQ,OAAQ,WACJn3D,KAAK02D,gBAAiB,CAC1B,EAEAiB,kBAAmB,WACf33D,KAAK22D,qBAAsB,CAC/B,EAEAM,eAAgB,SAAS5oD,GACJ,WAAbA,EAAE0M,OACE/a,KAAK43D,kBACL53D,KAAK63D,cAAcxpD,EAAEolB,OAEL,eAAbplB,EAAE0M,OACL/a,KAAK43D,kBACL53D,KAAK83D,cAAczpD,EAAEolB,MAAOplB,EAAEmU,OAEd,QAAbnU,EAAE0M,OACT/a,KAAKwlD,oBAAoB50C,IAAIvC,EAAEolB,OACX,SAAbplB,EAAE0M,OACT/a,KAAK+3D,YAAY1pD,EAAEolB,OAEnBzzB,KAAKwyB,SAEb,EAEAolC,eAAgB,WACZ,OAAQ53D,KAAKg4D,UACjB,EAEAtX,qBAAsB,WAClB1gD,KAAKg4D,YAAch4D,KAAKg4D,YAAc,GAAK,CAC/C,EAEArX,oBAAqB,WACjB3gD,KAAKg4D,WAAarb,EAAKn3C,KAAKxF,KAAKg4D,YAAc,GAAK,EAAG,EAC3D,EAEAxlC,QAAS,WACLxyB,KAAK02D,gBAAiB,EACjB12D,KAAK22D,qBACN32D,KAAKi4D,6BAEb,EAEAA,4BAA6B,WACzBj4D,KAAKiD,QACLjD,KAAKk4D,WAAWl4D,KAAK0oD,WAAWe,QAC5BzpD,KAAKikD,uBACLjkD,KAAKm4D,gBAAgBn4D,KAAKikD,sBAAsBwF,QAAQ,GAGxDzpD,KAAKuf,QAAQ+S,OACbtyB,KAAKsyB,OAAOtyB,KAAKuf,QAAQ+S,QAEzBtyB,KAAK+zD,qBAET/zD,KAAKiF,QAAQ,YACjB,EAEA08C,mBAAoB,WAChB3hD,KAAK22D,qBAAsB,EACtB32D,KAAK02D,gBACN12D,KAAKi4D,6BAEb,EAEAlE,mBAAoB,WAEhB,IADA,IAAIx8B,EAAcv3B,KAAKu3B,YACdyE,EAAM,EAAGA,EAAMzE,EAAYz5B,OAAQk+B,IACxCzE,EAAYyE,GAAKxJ,SAEzB,EAEAqlC,cAAe,SAASpkC,GACpB,IACI1zB,EAAMxB,EADNmlD,EAAU1jD,KAAK2jD,SAEnB,IAAKplD,EAAI,EAAGA,EAAIk1B,EAAM31B,OAAQS,IAEtBmlD,GADJ3jD,EAAO0zB,EAAMl1B,IACIqT,MACb5R,KAAK2B,OAAO+hD,EAAQ3jD,EAAK6R,KAAK,GAC9B8xC,EAAQ3jD,EAAK6R,IAAM,KAG/B,EAEAmmD,YAAa,WACT,IAAI/7D,EAAUgE,KACVo4D,EAAgBp8D,EAAQwpD,oBAC5B4S,EAAc/2D,SAAQ,SAASkkD,GAC3B,IAAI3G,EAAW2G,EAAa3G,SACxBxrC,EAAQmyC,EAAaziD,QACpB87C,EAAStjB,UACNloB,GACAA,EAAM8sC,uBACNlkD,EAAQqjB,SAASjM,EAAOmyC,EAAanmC,UACrCpjB,EAAQ2nD,SAAS/E,EAAShtC,IAAMwB,GAEhCpX,EAAQo5D,aAAaxW,GAEzB2G,EAAa8S,WACbD,EAAcz2D,OAAOi9C,GAE7B,GACJ,EAEAkZ,cAAe,SAASrkC,EAAOjR,GAC3B,IAAK,IAAIjkB,EAAI,EAAGA,EAAIk1B,EAAM31B,OAAQS,IAAK,CACnC,IAAIqgD,EAAWnrB,EAAMl1B,GAEjB6U,EAAQpT,KAAK2jD,SAAS/E,EAAShtC,IAC/BwB,GACAA,EAAM0sC,uBAAuBlB,EAAUp8B,EAE/C,CACJ,EAEA01C,WAAY,SAASI,GACjB,IAAK,IAAI/5D,EAAI,EAAGA,EAAI+5D,EAAUx6D,OAAQS,IAClCyB,KAAKo1D,aAAakD,EAAU/5D,IAAI,EAExC,EAEAk5D,oBAAqB,SAASppD,GACT,WAAbA,EAAE0M,OACE/a,KAAK43D,kBACL53D,KAAKu4D,mBAAmBlqD,EAAEolB,OAEV,QAAbplB,EAAE0M,OACT/a,KAAKm4D,gBAAgB9pD,EAAEolB,OACH,SAAbplB,EAAE0M,SAEW,eAAb1M,EAAE0M,OACL/a,KAAK43D,kBACL53D,KAAKw4D,mBAAmBnqD,EAAEolB,OAG9BzzB,KAAK2hD,qBAEb,EAEA4W,mBAAoB,SAAS9kC,GACzB,IAAK,IAAIl1B,EAAI,EAAGA,EAAIk1B,EAAM31B,OAAQS,IAC9ByB,KAAK2B,OAAO3B,KAAK8pD,oBAAoBr2B,EAAMl1B,GAAG4lD,MAAM,GACpDnkD,KAAK8pD,oBAAoBr2B,EAAMl1B,GAAG4lD,KAAO,IAEjD,EAEAqU,mBAAoB,SAAS/kC,GACzB,IAAK,IAAIl1B,EAAI,EAAGA,EAAIk1B,EAAM31B,OAAQS,IAAK,CACnC,IAAIqgD,EAAWnrB,EAAMl1B,GAEJyB,KAAK8pD,oBAAoBlL,EAASuF,KACxCrE,uBAAuBlB,EACtC,CACJ,EAEAuZ,gBAAiB,SAAS5gC,EAAanY,GAGnC,IAFA,IAAIthB,EAASy5B,EAAYz5B,OAEhBS,EAAI,EAAGA,EAAIT,EAAQS,IAAK,CAC7B,IAAIqgD,EAAWrnB,EAAYh5B,GAC3ByB,KAAKy4D,uBAAuB7Z,EAAUx/B,EAC1C,CACJ,EAEAq5C,uBAAwB,SAAS7Z,EAAUx/B,GACvC,IAAKpf,KAAK8pD,oBAAoBlL,EAASuF,KAAM,CACzC,IAAI5+C,EAAOvF,KAAK04D,mBAAmB9Z,EAASr5C,MACvCmc,EAAQnc,IAAkB,OAATA,IAClBA,EAAO,IAAInG,EAAMw/C,EAASgF,MAAOhF,EAASiF,QAG9C,IAAIx+C,EAAKrF,KAAK04D,mBAAmB9Z,EAASv5C,IAK1C,GAJKqc,EAAQrc,IAAc,OAAPA,IAChBA,EAAK,IAAIjG,EAAMw/C,EAASkF,IAAKlF,EAASmF,MAGtCriC,EAAQnc,IAASmc,EAAQrc,GAAK,CAC9B,IAAIka,EAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAAQupC,oBAC1CvpC,EAAQq/B,SAAWA,EACnB,IAAIxpC,EAAa,IAAIumB,GAAWp2B,EAAMF,EAAIka,GAE1Cvf,KAAK8pD,oBAAoBlL,EAASuF,KAAO/uC,EACzCpV,KAAK+pD,cAAc30C,EAAYgK,EACnC,CACJ,CACJ,EAEAs5C,mBAAoB,SAASr6D,GACzB,IAAI45B,EAMJ,OAJIvW,EAAQrjB,IAAoB,OAAVA,IAClB45B,EAAYj4B,KAAK2jD,SAAStlD,IAGvB45B,CACX,EAEAo/B,gBAAiB,WACb,IAAIpjD,EAAOjU,KAEP0oD,EADUz0C,EAAKsL,QACMmpC,WAIzB,IAFAA,EAAavsD,EAAQusD,GAAc,CAAE/0C,KAAM+0C,GAAeA,aAEhC5sD,MAAM6X,KAAKyjD,cAAgB1O,aAAsB5sD,MAAM6X,KAAK8oC,wBAClF,MAAM,IAAIrqC,MAAM,qQAGfs2C,EAAWnmC,SACZmmC,EAAWnmC,OAAS,CAChB,CAAEC,MAAO,QACT,CAAEA,MAAO,OACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,cAGbvO,EAAKy0C,YAAcz0C,EAAKgsB,iBACxBhsB,EAAK0kD,oBAGT1kD,EAAKgsB,gBAAkBhsB,EAAKuhD,eAAe1hC,KAAK7f,GAChDA,EAAK2kD,cAAgB3kD,EAAKkjD,OAAOrjC,KAAK7f,GAEtCA,EAAKy0C,WAAajM,EAAuBr5B,OAAOslC,GAC3C50B,KAAKgpB,EAAQ7oC,EAAKgsB,iBAClBnM,KAAKkpB,EAAO/oC,EAAK2kD,cAC1B,EAEAD,kBAAmB,WACf,IAAI1kD,EAAOjU,KAEXiU,EAAKy0C,WAAWloB,OAAOsc,EAAQ7oC,EAAKgsB,iBAAiBO,OAAOwc,EAAO/oC,EAAK2kD,cAC5E,EAEAn0B,OAAQ,SAASrS,EAAS6G,GAClBA,IAAazX,GAAe4Q,IACxB6G,GACAj5B,KAAK6+B,UAAUjgC,KAAKwzB,GACpBpyB,KAAKkoD,aAAa/9B,OAAOiI,EAAQ1O,UAGjCrnB,EAAMsF,OAAO3B,KAAK6+B,UAAWzM,GAC7BpyB,KAAKkoD,aAAavmD,OAAOywB,EAAQ1O,SAG7C,EAEAo/B,gBAAiB,SAAS1vC,EAAO/U,GACzBA,EACA2B,KAAK+4B,mBAAmB9S,KAAK7S,GAE7BpT,KAAK+4B,mBAAmBlL,SAEhC,EAEA4hC,gBAAiB,WAGb,IAFA,IAAIoJ,EAAW74D,KAAK6+B,UAEXtgC,EAAI,EAAGA,EAAIs6D,EAAS/6D,OAAQS,IAAK,CACtC,IAAI6zB,EAAUymC,EAASt6D,GAEnB6zB,EAAQG,eACRH,EAAQG,gBAEZH,EAAQI,SACZ,CACJ,EAEAsmC,SAAU,WACN,IAAK,IAAIv6D,EAAI,EAAGA,EAAIyB,KAAKu3B,YAAYz5B,OAAQS,IACzCyB,KAAKu3B,YAAYh5B,GAAGi0B,SAE5B,EAEA6H,gBAAiB,WACTr6B,KAAK61D,gBACL71D,KAAK61D,cAAckD,OACnB/4D,KAAK61D,cAAchoC,UACnB7tB,KAAK61D,cAAgB,KAE7B,EAEApF,sBAAuB,WACfzwD,KAAK+oD,UACL/oD,KAAK+oD,QAAQgQ,OACb/4D,KAAK+oD,QAAQl7B,UACb7tB,KAAK+oD,QAAU,KAEvB,EAEAiQ,gBAAiB,WACb,IAAIvrC,EAAUztB,KAAKk1B,OAAO1H,SACtByrC,EAAe9c,EAAK34B,YACAD,WAAWkK,EAAQ5uB,GAAI4uB,EAAQ3uB,GAEnDo6D,EAAW,IAAI/c,EAAKxzC,KAAK,CAAC,EAAG,GAAI,CAAC8kB,EAAQzkB,MAAOykB,EAAQ1kB,SACzDowD,EAAWxrC,EAAK/F,KAAKwxC,SAASF,GAC9BG,EAAO,IAAI1rC,EAAK7C,MAAM,CAAEtH,UAAWy1C,IACnCK,EAAW,IAAI3rC,EAAK7C,MAAM,CAAEyuC,KAAMJ,IAClChiD,EAAOnX,KAAKk1B,OAAOjQ,eAAe5Q,SAAS,GAO/C,OALAilD,EAASnvC,OAAOkvC,GAGhBA,EAAKhlD,SAASzV,KAAKuY,GAEZmiD,CACX,EAEAE,aAAc,WACV,IAAIvuD,EAAQkxC,EAAK34B,YAAYvY,MAAM,EAAIjL,KAAKovD,OACxCiK,EAAO,IAAI1rC,EAAK7C,MAAM,CACtBtH,UAAWvY,IAGXkM,EAAOnX,KAAKm8B,UAAUlX,eAG1B,OAFAo0C,EAAKhlD,SAASzV,KAAKuY,GAEZkiD,CACX,EAEAj/B,aAAc,WACVp6B,KAAKmkC,oBACLnkC,KAAK84B,wBACT,EAEAqL,kBAAmB,WACXnkC,KAAK0oD,YAAc1oD,KAAKugD,aACxBvgD,KAAK0oD,WAAWwC,MAExB,EAEApyB,uBAAwB,WACpB,IAAI7kB,EAAOjU,KACPiU,EAAKgwC,uBAAyBhwC,EAAKssC,cACnC1kD,EAAE49D,KAAKj2D,MAAM3H,EAAGoY,EAAKwxC,4BAA4BiU,MAAK,WAClDzlD,EAAKgwC,sBAAsBiH,MAC/B,IACAj3C,EAAK0lD,0BAA4B,GAEzC,IASJ,SAAStZ,GAAoBzB,GACzB,IAAIn8C,EAAS,CAAC,EA4Bd,OAxBIif,GAFJk9B,EAAWA,GAAY,CAAC,GAEH33B,OAA2B,OAAlB23B,EAAS33B,OACnCxkB,EAAOwkB,KAAO23B,EAAS33B,MAGvBvF,EAAQk9B,EAAS//C,IAAqB,OAAf+/C,EAAS//C,IAChC4D,EAAO5D,EAAI+/C,EAAS//C,GAGpB6iB,EAAQk9B,EAAS9/C,IAAqB,OAAf8/C,EAAS9/C,IAChC2D,EAAO3D,EAAI8/C,EAAS9/C,GAGpB4iB,EAAQk9B,EAAS51C,QAA6B,OAAnB41C,EAAS51C,QACpCvG,EAAOuG,MAAQ41C,EAAS51C,OAGxB0Y,EAAQk9B,EAAS71C,SAA+B,OAApB61C,EAAS71C,SACrCtG,EAAOsG,OAAS61C,EAAS71C,QAGzB2Y,EAAQk9B,EAASphD,OAA2B,OAAlBohD,EAASphD,OACnCiF,EAAOjF,KAAOohD,EAASphD,MAGpBiF,CACX,CApCAxG,EAAQ29D,YAAY91D,OAAO2jD,GAAQx1C,IAAI,GAEnCnW,MAAM+9D,UACN/9D,MAAM+9D,SAAS/1D,OAAO2jD,GAAQx1C,IAoFlC,IAAI+2C,GAAiBltD,MAAMiW,WAAWjO,OAAO,CACzCC,KAAM,SAAS/H,EAASujB,GACpBzjB,MAAMiW,WAAWE,GAAGlO,KAAK7G,KAAK8C,MAC9BA,KAAKhE,QAAUA,EACfgE,KAAKuf,QAAUrjB,EAAW,CAAC,EAAG8D,KAAKuf,QAASA,GAC5Cvf,KAAK85D,OAAS,GACd95D,KAAK+5D,gBACL/5D,KAAKg6D,cACLh6D,KAAKi6D,cAEDj6D,KAAKuf,QAAQ4pC,OACbnpD,KAAKk6D,cAGTl6D,KAAK8zB,KAAK9zB,KAAK+zB,OAAQxU,EAC3B,EAEAwU,OAAQ,CAAC,SAETmmC,YAAa,WACTl6D,KAAKkN,UAAYrR,EAAE,UAAUsuB,OAAOnqB,KAAK8C,SACzC9C,KAAKi2D,OAASj2D,KAAKkN,UAAUitD,WAAW,CAAC,GAAGC,eAChD,EAEAH,YAAa,WACT,IAAK,IAAI17D,EAAI,EAAGA,EAAIyB,KAAK85D,OAAOh8D,OAAQS,IAAK,CACzC,IAAIu2B,EAAO90B,KAAK85D,OAAOv7D,IACnBu2B,EAAKulC,SAAWvlC,EAAKulC,QAAQv8D,SAAW4jB,EAAQoT,EAAKulC,WACrDr6D,KAAKs6D,SAAS1pD,IAAIkkB,EAE1B,CACJ,EAEAilC,cAAe,WACX/5D,KAAK8C,QAAUjH,EAAE,UACjBmE,KAAKs6D,SAAWt6D,KAAK8C,QAChBy3D,aAAa,CACVtR,MAAOjpD,KAAKipD,MAAMn1B,KAAK9zB,MACvBw6D,WAAW,IACZC,kBAEPz6D,KAAK8C,QAAQs4B,IAAI,SAAU,OAC/B,EAEA4+B,YAAa,WACT,IAAK,IAAIz7D,EAAI,EAAGA,EAAIyB,KAAKuf,QAAQ+Z,MAAMx7B,OAAQS,IAC3CyB,KAAK06D,WAAW16D,KAAKuf,QAAQ+Z,MAAM/6B,GAE3C,EAEAm8D,WAAY,SAAS5lC,GACZ4nB,EAAc5nB,KACfA,EAAO,CACH52B,KAAM42B,IAGd,IAAI6lC,EAAW7lC,EAAK52B,KAAO,OACvB8B,KAAK26D,GACL36D,KAAK26D,GAAU7lC,GAEf90B,KAAK85D,OAAOl7D,KAAK1C,EAAW,CAAC,EAAG44B,EAAM,CAClC8lC,WAAY56D,KAAK66D,eAAe,CAAE9/C,OAAQ+Z,EAAK52B,SAG3D,EAEAk4D,OAAQ,SAAS5sD,GACb,IAAIssD,EAAcz2D,SAASW,KAAKuf,QAAQu2C,YAAa,IAEjD91D,KAAKi2D,SACLj2D,KAAKi2D,OAAO6E,KAAKtxD,EAAM3K,EAAG2K,EAAM1K,GAE5Bg3D,GACA91D,KAAKi2D,OAAO9K,QAAQ/vB,IAAI,SAAU06B,GAG9C,EAEAiD,KAAM,WACE/4D,KAAKi2D,QACLj2D,KAAKi2D,OAAO7K,OAEpB,EAEA2P,SAAU,WACN,MAAO,CACHv9D,KAAM,cACN68D,QAAS,GAEjB,EAEAW,SAAU,WACNh7D,KAAK85D,OAAOl7D,KAAK,CACbg/C,KAAM,SACNqd,SAAU,WACVz9D,KAAM,SACNypB,KAAM,OACN2zC,WAAY56D,KAAK66D,eAAe,CAAE9/C,OAAQ,UAElD,EAEAmgD,WAAY,WACRl7D,KAAK85D,OAAOl7D,KAAK,CACbg/C,KAAM,IACNqd,SAAU,WACVz9D,KAAM,SACNypB,KAAM,SACN2zC,WAAY56D,KAAK66D,eAAe,CAAE9/C,OAAQ,YAElD,EAEAogD,wBAAyB,SAAS57C,GAC9Bvf,KAAKo7D,aAAa,UAClBp7D,KAAKq7D,aAAahB,QAAQz7D,KAAK,CAC3Bg/C,KAAM,cACNqd,SAAU,WACVh0C,KAAM,sBACNmF,MAAO,SACPwuC,WAAY56D,KAAK66D,eAAe,CAAE9/C,OAAQ,sBAAuBpU,KAAM4Y,EAAQ5Y,QAEvF,EAEA20D,oBAAqB,SAAS/7C,GAC1Bvf,KAAKo7D,aAAa,UAClBp7D,KAAKq7D,aAAahB,QAAQz7D,KAAK,CAC3Bg/C,KAAM,eACNgd,WAAY56D,KAAK66D,eAAe,CAAE9/C,OAAQ,kBAAmBpU,KAAM4Y,EAAQ5Y,OAC3Es0D,SAAU,WACVh0C,KAAM,kBACNmF,MAAO,UAEf,EAEAmvC,gBAAiB,WACbv7D,KAAKo7D,aAAa,UAClBp7D,KAAKw7D,aAAanB,QAAQz7D,KAAK,CAC3Bg/C,KAAM,SACNqd,SAAU,WACVh0C,KAAM,cACNmF,MAAO,SACPwuC,WAAY56D,KAAK66D,eAAe,CAAE9/C,OAAQ,iBAElD,EAEA0gD,qBAAsB,WAClBz7D,KAAKo7D,aAAa,UAClBp7D,KAAKw7D,aAAanB,QAAQz7D,KAAK,CAC3Bg/C,KAAM,YACNqd,SAAU,WACVh0C,KAAM,mBACNmF,MAAO,SACPwuC,WAAY56D,KAAK66D,eAAe,CAAE9/C,OAAQ,sBAElD,EAEA2gD,SAAU,WACN17D,KAAKo7D,aAAa,WAClBp7D,KAAK27D,cAActB,QAAQz7D,KAAK,CAC5Bg/C,KAAM,OACNqd,SAAU,WACVh0C,KAAM,OACNmF,MAAO,UACPwuC,WAAY56D,KAAK66D,eAAe,CAAE9/C,OAAQ,UAElD,EAEA6gD,SAAU,WACN57D,KAAKo7D,aAAa,WAClBp7D,KAAK27D,cAActB,QAAQz7D,KAAK,CAC5Bg/C,KAAM,OACNqd,SAAU,WACVh0C,KAAM,OACNmF,MAAO,UACPwuC,WAAY56D,KAAK66D,eAAe,CAAE9/C,OAAQ,UAElD,EAEAqgD,aAAc,SAASl9D,GACnB,IAAI29D,EAAO,IAAM39D,EAAO,QACnB8B,KAAK67D,KACN77D,KAAK67D,GAAQ77D,KAAK+6D,WAClB/6D,KAAK85D,OAAOl7D,KAAKoB,KAAK67D,IAE9B,EAEAhB,eAAgB,SAASD,GACrB,IAAIvP,EAAO,CAAC,EAUZ,OARIuP,EAAW7/C,SACXswC,EAAKvvD,MAAMuvD,KAAK,WAAauP,EAAW7/C,QAGxC6/C,EAAWj0D,OACX0kD,EAAKvvD,MAAMuvD,KAAK,SAAWuP,EAAWj0D,MAGnC0kD,CACX,EAEAyQ,eAAgB,SAASh5D,GACrB,IAAIuoD,EAAO,CAAC,EAERtwC,EAASjY,EAAQuoD,KAAKvvD,MAAMuvD,KAAK,WACjCtwC,IACAswC,EAAKtwC,OAASA,GAGlB,IAAIpU,EAAO7D,EAAQuoD,KAAKvvD,MAAMuvD,KAAK,SAKnC,OAJI1kD,IACA0kD,EAAK1kD,KAAOA,GAGT0kD,CACX,EAEApC,MAAO,SAAS56C,GACZ,IAAIusD,EAAa56D,KAAK87D,eAAejgE,EAAEwS,EAAEpK,SACrC8W,EAAS6/C,EAAW7/C,OAEpBA,GAAU/a,KAAK+a,IACf/a,KAAK+a,GAAQ6/C,GAGjB56D,KAAKiF,QAAQ,QAASjF,KAAK+7D,UAAUhhD,EAAQ1M,EAAEpK,QACnD,EAEA83D,UAAW,SAAShhD,EAAQ9W,GAKxB,IAJA,IAEmCnB,EAF/BklB,EAAWhoB,KAAKg8D,mBAChBl+D,EAASkqB,EAASlqB,OAClBo0B,EAAS,GAAIqF,EAAc,GAEtByE,EAAM,EAAGA,EAAMl+B,EAAQk+B,KAC5Bl5B,EAAUklB,EAASgU,cACIpD,GACnB1G,EAAOtzB,KAAKkE,GAEZy0B,EAAY34B,KAAKkE,GAIzB,MAAO,CACHovB,OAAQA,EACRqF,YAAaA,EACbxc,OAAQA,EACR9W,OAAQA,EAEhB,EAEAg4D,OAAU,WACN,IACI/hC,EADUl6B,KAAKhE,QACIm+B,eAAen6B,KAAKg8D,oBACvC9hC,EAASp8B,SACTkC,KAAKhE,QAAQ2F,OAAOu4B,GAAU,GAC9Bl6B,KAAKhE,QAAQo+B,eAErB,EAEAwvB,KAAM,WACF,IAAIsS,EAAkBl8D,KAAKg8D,mBACI,IAA3BE,EAAgBp+D,QAChBkC,KAAKhE,QAAQ4tD,KAAKsS,EAAgB,GAE1C,EAEAC,gBAAiB,SAAS58C,GACtB,IAAI9U,EAAQ9M,WAAW4hB,EAAQ5Y,MAAQ,IACvC3G,KAAK4gD,QAAQn2C,EACjB,EAEA2xD,oBAAqB,SAAS78C,GAC1B,IAAI9U,EAAQ9M,WAAW4hB,EAAQ5Y,MAAQ,IACvC3G,KAAK4gD,SAASn2C,EAClB,EAEAm2C,QAAS,SAASn2C,GACd,IAAI2nB,EAAUpyB,KAAKhE,QAAQq7B,iBAC3BjF,EAAQ3nB,MAAM2nB,EAAQ3nB,QAAUA,GAChC2nB,EAAQrnB,QACZ,EAEAixD,iBAAkB,WACd,OAAOh8D,KAAKhE,QAAQwyB,QACxB,EAEA+6B,YAAa,WACTvpD,KAAKhE,QAAQutD,aACjB,EAEAM,iBAAkB,WACd7pD,KAAKhE,QAAQ6tD,kBACjB,EAEAp5B,KAAM,WACFzwB,KAAKhE,QAAQy0B,MACjB,EAEAE,KAAM,WACF3wB,KAAKhE,QAAQ20B,MACjB,EAEA9C,QAAS,WACL7tB,KAAKhE,QAAU,KACfgE,KAAK8C,QAAU,KACf9C,KAAKuf,QAAU,KAEXvf,KAAKs6D,UACLt6D,KAAKs6D,SAASzsC,UAGd7tB,KAAKi2D,QACLj2D,KAAKi2D,OAAOpoC,SAEpB,IAGAwuC,GAASvgE,MAAMiW,WAAWjO,OAAO,CACjCC,KAAM,SAASjB,EAASyc,GACpBzjB,MAAMiW,WAAWE,GAAGlO,KAAK7G,KAAK8C,MAE9BA,KAAKuf,QAAUzb,GAAO,EAAM,CAAC,EAAG9D,KAAKuf,QAASA,GAC9Cvf,KAAK8C,QAAUA,EACf9C,KAAKmgD,MAAQngD,KAAKuf,QAAQ4gC,MAC1BngD,KAAKuiB,OAASviB,KAAKs8D,aACnBt8D,KAAKu8D,iBACLv8D,KAAKw8D,gBACT,EAEAj9C,QAAS,CACL2qC,QAAS,CAAC,GAGdqS,eAAgB,WACZv8D,KAAKmrD,QAAUnrD,KAAK8C,OACxB,EAEA05D,eAAgB,WACZ,IAAIj9C,EAAUvf,KAAKuf,QAEnBvf,KAAKkhC,SAAW,IAAIplC,MAAM2K,GAAGg2D,SAASz8D,KAAKmrD,QAAS,CAChD5oC,OAAQviB,KAAKuiB,OACbte,OAAQsb,EAAQtb,OAChBy4D,gBAAgB,EAChBvc,MAAOngD,KAAKmgD,OAEpB,EAEAI,YAAa,SAAS/9B,GAClB,OAAOxiB,KAAKmgD,MAAMjf,UAAYlhC,KAAKmgD,MAAMjf,SAAS1e,EACtD,EAEA85C,WAAY,WACR,IAAI/5C,EAAS,GACTo6C,EAAc38D,KAAKmgD,MAAM59B,OAE7B,IAAK,IAAIC,KAASm6C,EAAa,CAC3B,IAAIl6D,EAAS,CAAC,EACd,GAAIzC,KAAKugD,YAAY/9B,GAAQ,CACzB,IAAIgnC,EAASxpD,KAAKuf,QAAQ2qC,QAAQ1nC,GAC9BgnC,IACA/mD,EAAO+mD,OAASA,GAEpB/mD,EAAO+f,MAAQA,EACfD,EAAO3jB,KAAK6D,EAChB,CACJ,CAEA,OAAO8f,CACX,EAEAxhB,IAAK,WACD,OAAOf,KAAKkhC,SAASngC,KACzB,EAEA8sB,QAAS,WACL7tB,KAAKkhC,SAASrT,UACd7tB,KAAKkhC,SAASp+B,QAAQN,KAAK,IAAM1G,MAAMuvD,KAAK,iBAAmB,KAAK/+C,QACpEtM,KAAKmgD,MAAQngD,KAAKmrD,QAAUnrD,KAAK8C,QAAU9C,KAAK48D,QAAU58D,KAAKkhC,SAAW,IAC9E,IAGAwpB,GAAc2R,GAAOv4D,OAAO,CAC5BC,KAAM,SAASjB,EAASyc,GACpB88C,GAAOpqD,GAAGlO,KAAK7G,KAAK8C,KAAM8C,EAASyc,GACnCvf,KAAK8zB,KAAK9zB,KAAK+zB,OAAQ/zB,KAAKuf,SAE5Bvf,KAAK86D,MACT,EAEA/mC,OAAQ,CAAE,SAAU,UAEpBxU,QAAS,CACLxjB,OAAQ,CACJotD,OAAO,EACPqR,WAAW,EACX7R,WAAW,EACXn4B,MAAO,OACP1L,SAAS,IAIjBy3C,eAAgB,WACZ,IAAItoD,EAAOjU,KACXA,KAAKmrD,QAAUtvD,EAAE,oCACZwvD,KAAKvvD,MAAMuvD,KAAK,OAAQrrD,KAAKmgD,MAAMgE,KAExC,IAAI0Y,EAAc,GAEd78D,KAAKuf,QAAQ+/B,UACbud,GAAe78D,KAAK88D,kBACpB98D,KAAKuiB,OAAS,IAEds6C,GAAe78D,KAAK+8D,gBAGxBF,GAAe78D,KAAKg9D,iBAEpBh9D,KAAKmrD,QAAQhhC,OACTtuB,EAAE,wCAAwCsuB,OAAO0yC,IAErD78D,KAAKjE,OAAS,IAAID,MAAM2K,GAAGw2D,OAAOj9D,KAAKmrD,QAAQI,SAASvrD,KAAK8C,SAAU9C,KAAKuf,QAAQxjB,QACpFiE,KAAKjE,OAAO+3B,KAAK,SAAS,SAASzlB,GAE3BA,EAAE6uD,gBACF7uD,EAAE8uD,OAAOr6D,QAAQmC,QAAQ,SACzBgP,EAAKmpD,aAAa/uD,GAE1B,IAEArO,KAAKq9D,qBACT,EAEAP,gBAAiB,WACb,IAAIxd,EAAWt/C,KAAKuf,QAAQ+/B,SAQ5B,MANwB,iBAAbA,IACPA,EAAWxjD,MAAMwhE,SAAShe,IAG9BA,EAAWxjD,MAAMwjD,SAASA,EAAfxjD,CAAyBkE,KAAKmgD,MAG7C,EAEA4c,cAAe,WAEX,IADA,IAAIQ,EAAO,GACFh/D,EAAI,EAAGA,EAAIyB,KAAKuiB,OAAOzkB,OAAQS,IAAK,CACzC,IAAIikB,EAAQxiB,KAAKuiB,OAAOhkB,GAExBg/D,GAAQ,yCAA2C/6C,EAAMA,MAAQ,MAAQA,EAAMA,OAAS,IAAM,iBAE1FxiB,KAAKugD,YAAY/9B,EAAMA,SACvB+6C,GAAQ,QAAUzhE,MAAMuvD,KAAK,iBAAmB,KAAO7oC,EAAMA,MAC7D,gCAER,CAEA,OAAO+6C,CACX,EAEAP,eAAgB,WACZ,IAAIO,EAAO,+BAIX,OAHAA,GAAQv9D,KAAKw9D,cAAc,UAC3BD,GAAQv9D,KAAKw9D,cAAc,UAC3BD,GAAQ,QAEZ,EAEAC,cAAe,SAASt/D,GACpB,OAAOpC,MAAMwjD,SAAS5B,GAAf5hD,CAAgCoiD,GAAehgD,GAC1D,EAEAm/D,oBAAqB,WACjBr9D,KAAKy9D,oBAAsBz9D,KAAKo9D,aAAatpC,KAAK9zB,MAClDA,KAAKjE,OAAO+G,QAAQgpD,GAAG/O,EAAQH,EAAI,0BAA2B58C,KAAKy9D,qBAEnEz9D,KAAK09D,oBAAsB19D,KAAK29D,aAAa7pC,KAAK9zB,MAClDA,KAAKjE,OAAO+G,QAAQgpD,GAAG/O,EAAQH,EAAI,0BAA2B58C,KAAK09D,oBACvE,EAEAC,aAAc,SAAStvD,GACnBA,EAAE0/C,iBACF/tD,KAAKiF,QAAQ,SACjB,EAEAm4D,aAAc,SAAS/uD,GACnBA,EAAE0/C,iBACF/tD,KAAKiF,QAAQ,SACjB,EAEA61D,KAAM,WACF96D,KAAKjE,OAAO+E,SAASg6D,MACzB,EAEA1P,MAAO,WACHprD,KAAKjE,OAAO+3B,KAAK,aAAc9zB,KAAK6tB,QAAQiG,KAAK9zB,OAAOorD,OAC5D,EAEAv9B,QAAS,WACL7tB,KAAKjE,OAAOqvD,QAAQv9B,UACpB7tB,KAAKjE,OAAO+G,QAAQytD,IAAIxT,EAAQH,EAAI,qBAAsB58C,KAAKy9D,qBAC/Dz9D,KAAKjE,OAAO+G,QAAQytD,IAAIxT,EAAQH,EAAI,qBAAsB58C,KAAK09D,qBAC/D19D,KAAKy9D,oBAAsB,KAC3Bz9D,KAAK49D,wBAA0B,KAC/B59D,KAAKjE,OAAS,KACdsgE,GAAOpqD,GAAG4b,QAAQ3wB,KAAK8C,KAC3B,IAGJ,SAASuqD,GAAmBr9C,EAAWqS,GACnC,IAAI4gC,EAAQngD,KAAK0oD,WAAWmV,OAAO1d,MACnC,GAAIA,EAAO,CACP,IAAI2d,EAAY3d,EAAMluC,GAAGsQ,OAAO0E,KAAO,OAASk5B,EAAM4d,QACtDliE,EAAE,gBAAkB0jB,EAAQiD,MAAQ,QAC/B+oC,SAASr+C,GAAW8wD,kBAAkB,CACnCC,eAAgB9d,EAAM4d,QACtBG,cAAeJ,EACfpV,WAAY1oD,KAAK0oD,WAAW/0C,OAAO+rC,SACnCye,YAAa,IACbC,gBAAgB,GAE5B,CACJ,CAEA,SAASC,GAAazf,GAClB5+C,KAAK4+C,SAAWA,EAChB5+C,KAAKs+D,UAAY,EACrB,CAwBA,SAAS/H,KACLv2D,KAAKyzB,MAAQ,CAAC,CAClB,CAxBA4qC,GAAapsD,GAAKosD,GAAajhE,UAAY,CACvCsoD,WAAY,SAAS6Y,GACjB,IAAIC,EAAW3iE,EAAE4iE,WAKjB,OAJAz+D,KAAKs+D,UAAU1/D,KAAK,CAChB2/D,SAAUA,EACVG,SAAUF,IAEPA,CACX,EAEAnG,SAAU,WAGN,IAFA,IACIt4D,EADAu+D,EAAYt+D,KAAKs+D,UAEZtiC,EAAM,EAAGA,EAAMsiC,EAAUxgE,OAAQk+B,KACtCj8B,EAAOC,KAAKs+D,UAAUtiC,IACjBuiC,SAASv+D,KAAK4+C,UACnB7+C,EAAK2+D,SAASC,UAElB3+D,KAAKs+D,UAAY,EACrB,GAOJ/H,GAAwBtkD,GAAKskD,GAAwBn5D,UAAY,CAC7DwT,IAAK,SAAS6iB,GACV,IAAK,IAAIuI,EAAM,EAAGA,EAAMvI,EAAM31B,OAAQk+B,IAClCh8B,KAAKyzB,MAAMA,EAAMuI,GAAKmoB,KAAO,IAAIka,GAAa5qC,EAAMuI,GAE5D,EAEA36B,QAAS,SAASk9D,GACd,IAAK,IAAIpa,KAAOnkD,KAAKyzB,MACjB8qC,EAASv+D,KAAKyzB,MAAM0wB,GAE5B,EAEAD,SAAU,SAASC,GACf,OAAOnkD,KAAKyzB,MAAM0wB,EACtB,EAEAxiD,OAAQ,SAAS5B,UACNC,KAAKyzB,MAAM1zB,EAAKokD,IAC3B,GAGJ,IAAIya,GAAW/6D,EAAMC,OAAO,CACxBC,KAAM,WACF/D,KAAKkyB,OAAS,EAClB,EAEA2sC,KAAM,SAASzrD,EAAOM,GAClB1T,KAAKkyB,OAAOtzB,KAAK,CACb8U,OAAQA,EACRN,MAAOA,IAEXA,EAAM0rD,UAAY9+D,IACtB,EAEA6C,OAAQ,SAASuQ,EAAOM,GACpB1T,KAAK6+D,KAAKzrD,EAAOM,EACrB,EAEA/R,OAAQ,SAASyR,GAIb,IAHA,IAAI8e,EAASlyB,KAAKkyB,OACdp0B,EAASo0B,EAAOp0B,OAEXk+B,EAAM,EAAGA,EAAMl+B,EAAQk+B,IAC5B,GAAI9J,EAAO8J,GAAK5oB,QAAUA,EAAO,CAC7B8e,EAAOnwB,OAAOi6B,EAAK,GACnB,KACJ,CAER,EAEAqrB,YAAa,SAAS98C,EAAM28C,GAIxB,IAHA,IAAIh1B,EAASlyB,KAAKkyB,OACdp0B,EAASo0B,EAAOp0B,OAEXS,EAAI,EAAGA,EAAIT,EAAQS,IACxB,GAAIyB,KAAK++D,UAAU7sC,EAAO3zB,GAAG6U,MAAO7I,KAAUtO,EAAQgG,QAAQiwB,EAAO3zB,GAAG6U,MAAO8zC,GAC3E,OAAO,CAGnB,EAEA6X,UAAW,SAAS3rD,EAAO7I,GACvB,IAAIE,EAAQ2I,EAAMrI,SAASN,MACvBiJ,EAASN,EAAMM,SAOnB,OALKjJ,EAGK+B,EAAUI,MAAMrC,EAAMmJ,GAASjJ,GAF/BiJ,EAAOhI,SAASnB,EAK9B,IAGAy0D,GAAWJ,GAAS96D,OAAO,CAC3BC,KAAM,SAASwG,GACXq0D,GAAS3sD,GAAGlO,KAAK7G,KAAK8C,MACtBA,KAAKqU,SAAW,GAChBrU,KAAKuK,KAAOA,CAChB,EAEA00D,SAAU,SAAS10D,GACf,IAAI20D,EAAWl/D,KAAKuK,KAChB40D,EAAkBD,EAAS70D,cAC3BA,EAAcE,EAAKF,cAGvB,OAFe60D,EAASrgE,GAAK0L,EAAK1L,GAAKqgE,EAASpgE,GAAKyL,EAAKzL,GAAKuL,EAAYxL,GAAKsgE,EAAgBtgE,GAC5FwL,EAAYvL,GAAKqgE,EAAgBrgE,CAEzC,EAEAsgE,eAAgB,SAAS70D,GACrB,OAAOvK,KAAKuK,KAAKmB,SAASnB,EAC9B,EAEA1H,OAAQ,SAASuQ,EAAOM,GACpB,IAAI2rD,GAAW,EACXhrD,EAAWrU,KAAKqU,SAChBvW,EAASuW,EAASvW,OACtB,GAAIkC,KAAKi/D,SAASvrD,GAAS,CACvB,IAAK5V,GAAUkC,KAAKkyB,OAAOp0B,OAAS,EAChCkC,KAAK6+D,KAAKzrD,EAAOM,OACd,CACE5V,GACDkC,KAAKs/D,gBAGT,IAAK,IAAItjC,EAAM,EAAGA,EAAM3nB,EAASvW,OAAQk+B,IACrC,GAAI3nB,EAAS2nB,GAAKn5B,OAAOuQ,EAAOM,GAAS,CACrC2rD,GAAW,EACX,KACJ,CAGCA,GACDr/D,KAAK6+D,KAAKzrD,EAAOM,EAEzB,CACA2rD,GAAW,CACf,CAEA,OAAOA,CACX,EAEAC,cAAe,WACX,IAMIC,EAAUC,EANVj1D,EAAOvK,KAAKuK,KACZ8J,EAAWrU,KAAKqU,SAChB6d,EAASlyB,KAAKkyB,OACdpxB,EAASyJ,EAAKzJ,SACd2+D,EAAYl1D,EAAKvB,MAAQ,EACzB02D,EAAan1D,EAAKxB,OAAS,EAS/B,IANAsL,EAASzV,KACL,IAAIogE,GAAS,IAAIr2D,EAAK4B,EAAK1L,EAAG0L,EAAKzL,EAAG2gE,EAAWC,IACjD,IAAIV,GAAS,IAAIr2D,EAAK7H,EAAOjC,EAAG0L,EAAKzL,EAAG2gE,EAAWC,IACnD,IAAIV,GAAS,IAAIr2D,EAAK4B,EAAK1L,EAAGiC,EAAOhC,EAAG2gE,EAAWC,IACnD,IAAIV,GAAS,IAAIr2D,EAAK7H,EAAOjC,EAAGiC,EAAOhC,EAAG2gE,EAAWC,KAEpDF,EAAWttC,EAAOp0B,OAAS,EAAG0hE,GAAY,EAAGA,IAC9C,IAAKD,EAAW,EAAGA,EAAWlrD,EAASvW,OAAQyhE,IAC3C,GAAIlrD,EAASkrD,GAAU18D,OAAOqvB,EAAOstC,GAAUpsD,MAAO8e,EAAOstC,GAAU9rD,QAAS,CAC5Ewe,EAAOnwB,OAAOy9D,EAAU,GACxB,KACJ,CAGZ,EAEAnY,YAAa,SAAS98C,EAAM28C,GACxB,IAAIlrB,EACA3nB,EAAWrU,KAAKqU,SAChBvW,EAASuW,EAASvW,OAClBy9B,GAAM,EAEV,GAAIv7B,KAAKo/D,eAAe70D,GACpB,GAAIq0D,GAAS3sD,GAAGo1C,YAAYnqD,KAAK8C,KAAMuK,EAAM28C,GACzC3rB,GAAM,OAEL,IAAKS,EAAM,EAAGA,EAAMl+B,EAAQk+B,IACzB,GAAI3nB,EAAS2nB,GAAKqrB,YAAY98C,EAAM28C,GAAU,CAC3C3rB,GAAM,EACN,KACH,CAKZ,OAAOA,CACX,IAGA0sB,GAAiBpkD,EAAMC,OAAO,CAC9B67D,UAAW,IAEX57D,KAAM,SAAS/H,GACX,IAAI4jE,EAAsB5/D,KAAK6/D,cAAc/rC,KAAK9zB,MAClDhE,EAAQ83B,KAAKtE,EAAkBowC,GAC/B5jE,EAAQ83B,KAAKqpB,GAAYyiB,GACzB5/D,KAAK8/D,WACT,EAEAA,UAAW,WACP9/D,KAAK+/D,QAAU,CAAC,EAChB//D,KAAKmX,KAAO,IAAIynD,EACpB,EAEA37D,MAAO,WACHjD,KAAK8/D,WACT,EAEAD,cAAe,SAASxxD,GAChBA,EAAEtO,KAAK++D,WACPzwD,EAAEtO,KAAK++D,UAAUn9D,OAAO0M,EAAEtO,MAE9BC,KAAK6C,OAAOwL,EAAEtO,KAClB,EAEA8C,OAAQ,SAASuQ,GACb,IAAIM,EAASN,EAAMM,OAAO+b,IACtBuwC,EAAWhgE,KAAK2/D,UAChBM,EAAUjgE,KAAKkgE,WAAWxsD,GAC1B7U,EAAIohE,EAAQ,GAAG,GACfnhE,EAAImhE,EAAQ,GAAG,GAEfjgE,KAAKmgE,OAAOF,GACZjgE,KAAKmX,KAAKtU,OAAOuQ,EAAOM,IAEnB1T,KAAK+/D,QAAQlhE,KACdmB,KAAK+/D,QAAQlhE,GAAK,CAAC,GAGlBmB,KAAK+/D,QAAQlhE,GAAGC,KACjBkB,KAAK+/D,QAAQlhE,GAAGC,GAAK,IAAIkgE,GACrB,IAAIr2D,EAAK9J,EAAImhE,EAAUlhE,EAAIkhE,EAAUA,EAAUA,KAIvDhgE,KAAK+/D,QAAQlhE,GAAGC,GAAG+D,OAAOuQ,EAAOM,GAEzC,EAEA/R,OAAQ,SAASyR,GACTA,EAAM0rD,WACN1rD,EAAM0rD,UAAUn9D,OAAOyR,EAE/B,EAEA+sD,OAAQ,SAASF,GACb,OAAOA,EAAQ,GAAGniE,OAAS,GAAKmiE,EAAQ,GAAGniE,OAAS,CACxD,EAEAoiE,WAAY,SAAS31D,GAMjB,IALA,IAAIy1D,EAAWhgE,KAAK2/D,UAChBt1D,EAAcE,EAAKF,cACnB+1D,EAAUzjB,EAAKl9C,MAAM4K,EAAYxL,EAAImhE,GACrCK,EAAU1jB,EAAKl9C,MAAM4K,EAAYvL,EAAIkhE,GACrCC,EAAU,CAAC,GAAG,IACTphE,EAAI89C,EAAKl9C,MAAM8K,EAAK1L,EAAImhE,GAAWnhE,GAAKuhE,EAASvhE,IACtDohE,EAAQ,GAAGrhE,KAAKC,GAEpB,IAAK,IAAIC,EAAI69C,EAAKl9C,MAAM8K,EAAKzL,EAAIkhE,GAAWlhE,GAAKuhE,EAASvhE,IACtDmhE,EAAQ,GAAGrhE,KAAKE,GAEpB,OAAOmhE,CACX,EAEA5Y,YAAa,SAAS98C,EAAM28C,GACxB,IACIoZ,EAAMC,EAAM1hE,EAAGC,EACfqY,EAFA8oD,EAAUjgE,KAAKkgE,WAAW31D,GAI9B,GAAIvK,KAAKmX,KAAKkwC,YAAY98C,EAAM28C,GAC5B,OAAO,EAGX,IAAKoZ,EAAO,EAAGA,EAAOL,EAAQ,GAAGniE,OAAQwiE,IAErC,IADAzhE,EAAIohE,EAAQ,GAAGK,GACVC,EAAO,EAAGA,EAAON,EAAQ,GAAGniE,OAAQyiE,IAGrC,GAFAzhE,EAAImhE,EAAQ,GAAGM,IACfppD,GAAQnX,KAAK+/D,QAAQlhE,IAAM,CAAC,GAAGC,KACnBqY,EAAKkwC,YAAY98C,EAAM28C,GAC/B,OAAO,EAKnB,OAAO,CACX,IAGJ,SAAStF,GAAchD,GACnB,IAAIn8C,EAASm8C,EAKb,OAJIA,aAAoB9iD,MAAM6X,KAAK6sD,SAC/B/9D,EAASm8C,EAASc,UACXd,EAASmf,SAAWnf,EAAS6hB,YAEjCh+D,CACX,CAEA,SAAS8uD,GAAqBvpC,GAC1B,IAEIllB,EAASk5B,EAFTzE,EAAc,GACdrF,EAAS,GAEb,IAAK8J,EAAM,EAAGA,EAAMhU,EAASlqB,OAAQk+B,KACjCl5B,EAAUklB,EAASgU,cACIpD,GACnB1G,EAAOtzB,KAAKkE,GAEZy0B,EAAY34B,KAAKkE,GAGzB,MAAO,CACHovB,OAAQA,EACRqF,YAAaA,EAErB,CAEA,SAASmyB,GAAYhB,EAAYvI,GAC7B,OAAIuI,EAAWmV,OAAO1d,MACX,IAAIuI,EAAWmV,OAAO1d,MAAMA,GAGhC,IAAIrkD,MAAM6X,KAAK+sD,iBAAiBvgB,EAC3C,CAEA,SAASiE,GAAW5hC,EAAO29B,GACnBz+B,EAAQy+B,EAAM39B,KACd29B,EAAMnvC,IAAIwR,EAAO,KAEzB,CAEA,SAASipC,GAAmBkV,EAAal+C,EAAgBF,GAErD,IADA,IAAIC,EACKwZ,EAAM,EAAGA,EAAMzZ,EAAOzkB,OAAQk+B,IACnCxZ,EAAQD,EAAOyZ,GACXvZ,IAAmBf,EAAQe,EAAeD,MAC1CC,EAAeD,GAASm+C,EAAYn+C,GAGhD,CASA,SAASurC,GAAe1/C,GACpBA,EAAE0/C,gBACN,CAEA9xD,EAAQwK,GAAGm6D,OAAOnZ,IAElBvrD,EAAWF,EAAS,CAChB48B,MAAOA,GACP+C,WAAYA,GACZgkB,UAAWA,GACXqJ,eAAgBA,GAChBgW,SAAUA,GACVJ,SAAUA,GACV3W,eAAgBA,GAChByC,YAAaA,IAExB,CAzoKD,CAyoKG3uD,OAAOD,MAAMkL,QAEhB,MAAM65D,SAAW,CACTjvD,GAAI,kBACJ1T,KAAM,UACN4iE,SAAU,UACVC,YAAa,6BACbC,QAAS,CAAE,OAAQ,aAAc,kBAAmB,cAAe,UAAW,eAAgB,iBAAkB,WAChHC,SAAU,CAAC,CACPrvD,GAAI,6BACJ1T,KAAM,aACN6iE,YAAa,wBACbC,QAAS,CAAE,QACb,CACEpvD,GAAI,0BACJ1T,KAAM,UACN6iE,YAAa,4BACbC,QAAS,CAAE,WAAY,SAAU,mBAGzC,IAAIE,QAAUplE,aAET+kE,SAAUK","ignoreList":[],"sourcesContent":["import './kendo.data.js';\nimport './kendo.draganddrop.js';\nimport './kendo.userevents.js';\nimport './kendo.mobile.scroller.js';\nimport './kendo.core.js';\nimport './kendo.dataviz.core.js';\nimport './kendo.drawing.js';\nimport './kendo.toolbar.js';\nimport './kendo.editable.js';\nimport './kendo.window.js';\nimport './kendo.dropdownlist.js';\nimport './kendo.dataviz.themes.js';\nimport './kendo.html.button.js';\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        diagram = kendo.dataviz.diagram = {},\n        deepExtend = kendo.deepExtend,\n        isArray = Array.isArray,\n        EPSILON = 1e-06;\n\n    /*-------------------Diverse utilities----------------------------*/\n    var Utils = {\n    };\n\n    deepExtend(Utils, {\n        isNearZero: function(num) {\n            return Math.abs(num) < EPSILON;\n        },\n        isDefined: function(obj) {\n            return typeof obj !== 'undefined';\n        },\n\n        isUndefined: function(obj) {\n            return (typeof obj === 'undefined') || obj === null;\n        },\n        /**\n         * Returns whether the given object is an object or a value.\n         */\n        isObject: function(obj) {\n            return obj === Object(obj);\n        },\n        /**\n         * Returns whether the object has a property with the given name.\n         */\n        has: function(obj, key) {\n            return Object.hasOwnProperty.call(obj, key);\n        },\n        /**\n         * Returns whether the given object is a string.\n         */\n        isString: function(obj) {\n            return Object.prototype.toString.call(obj) == '[object String]';\n        },\n        isBoolean: function(obj) {\n            return Object.prototype.toString.call(obj) == '[object Boolean]';\n        },\n        isType: function(obj, type) {\n            return Object.prototype.toString.call(obj) == '[object ' + type + ']';\n        },\n        /**\n         * Returns whether the given object is a number.\n         */\n        isNumber: function(obj) {\n            return !isNaN(parseFloat(obj)) && isFinite(obj);\n        },\n        /**\n         * Return whether the given object (array or dictionary).\n         */\n        isEmpty: function(obj) {\n            if (obj === null) {\n                return true;\n            }\n            if (isArray(obj) || Utils.isString(obj)) {\n                return obj.length === 0;\n            }\n            for (var key in obj) {\n                if (Utils.has(obj, key)) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        simpleExtend: function(destination, source) {\n            if (!Utils.isObject(source)) {\n                return;\n            }\n\n            for (var name in source) {\n                destination[name] = source[name];\n            }\n        },\n        /**\n         * Returns an array of the specified size and with each entry set to the given value.\n         * @param size\n         * @param value\n         * @returns {Array}\n         */\n        initArray: function createIdArray(size, value) {\n            var array = [];\n            for (var i = 0; i < size; ++i) {\n                array[i] = value;\n            }\n            return array;\n        },\n        serializePoints: function(points) {\n            var res = [];\n            for (var i = 0; i < points.length; i++) {\n                var p = points[i];\n                res.push(p.x + \";\" + p.y);\n            }\n            return res.join(\";\");\n        },\n        deserializePoints: function(s) {\n            var v = s.split(\";\"), points = [];\n            if (v.length % 2 !== 0) {\n                throw \"Not an array of points.\";\n            }\n            for (var i = 0; i < v.length; i += 2) {\n                points.push(new diagram.Point(\n                    parseInt(v[i], 10),\n                    parseInt(v[i + 1], 10)\n                ));\n            }\n            return points;\n        },\n        /**\n         * Returns an integer within the given bounds.\n         * @param lower The inclusive lower bound.\n         * @param upper The exclusive upper bound.\n         * @returns {number}\n         */\n        randomInteger: function(lower, upper) {\n            return parseInt(Math.floor(Math.random() * upper) + lower, 10);\n        } ,\n        /*\n         Depth-first traversal of the given node.\n         */\n        DFT: function(el, func) {\n            func(el);\n            if (el.childNodes) {\n                for (var i = 0; i < el.childNodes.length; i++) {\n                    var item = el.childNodes[i];\n                    this.DFT(item, func);\n                }\n            }\n        },\n        /*\n         Returns the angle in degrees for the given matrix\n         */\n        getMatrixAngle: function(m) {\n            if (m === null || m.d === 0) {\n                return 0;\n            }\n            return Math.atan2(m.b, m.d) * 180 / Math.PI;\n        },\n\n        /*\n         Returns the scaling factors for the given matrix.\n         */\n        getMatrixScaling: function(m) {\n            var sX = Math.sqrt(m.a * m.a + m.c * m.c);\n            var sY = Math.sqrt(m.b * m.b + m.d * m.d);\n            return [sX, sY];\n        }\n\n    });\n\n    /**\n     * The Range defines an array of equally separated numbers.\n     * @param start The start-value of the Range.\n     * @param stop The end-value of the Range.\n     * @param step The separation between the values (default:1).\n     * @returns {Array}\n     */\n    function Range(start, stop, step) {\n        if (typeof start == 'undefined' || typeof stop == 'undefined') {\n            return [];\n        }\n        if (step && Utils.sign(stop - start) != Utils.sign(step)) {\n            throw \"The sign of the increment should allow to reach the stop-value.\";\n        }\n        step = step || 1;\n        start = start || 0;\n        stop = stop || start;\n        if ((stop - start) / step === Infinity) {\n            throw \"Infinite range defined.\";\n        }\n        var range = [], i = -1, j;\n\n        function rangeIntegerScale(x) {\n            var k = 1;\n            while (x * k % 1) {\n                k *= 10;\n            }\n            return k;\n        }\n\n        var k = rangeIntegerScale(Math.abs(step));\n        start *= k;\n        stop *= k;\n        step *= k;\n        if (start > stop && step > 0) {\n            step = -step;\n        }\n        if (step < 0) {\n            while ((j = start + step * ++i) >= stop) {\n                range.push(j / k);\n            }\n        }\n        else {\n            while ((j = start + step * ++i) <= stop) {\n                range.push(j / k);\n            }\n        }\n        return range;\n    }\n\n    /*-------------------Diverse math functions----------------------------*/\n\n    function findRadian(start, end) {\n        if (start == end) {\n            return 0;\n        }\n        var sngXComp = end.x - start.x,\n            sngYComp = start.y - end.y,\n            atan = Math.atan(sngXComp / sngYComp);\n        if (sngYComp >= 0) {\n            return sngXComp < 0 ? atan + (2 * Math.PI) : atan;\n        }\n        return atan + Math.PI;\n    }\n\n    Utils.sign = function(number) {\n        return number ? number < 0 ? -1 : 1 : 0;\n    };\n\n    Utils.findAngle = function(center, end) {\n        return findRadian(center, end) * 180 / Math.PI;\n    };\n\n    /*-------------------Array Helpers ----------------------------*/\n\n    Utils.forEach = function(arr, iterator, thisRef) {\n        for (var i = 0; i < arr.length; i++) {\n            iterator.call(thisRef, arr[i], i, arr);\n        }\n    };\n\n    Utils.any = function(arr, predicate) {\n        for (var i = 0; i < arr.length; ++i) {\n            if (predicate(arr[i])) {\n                return arr[i];\n            }\n        }\n        return null;\n    };\n\n    Utils.remove = function(arr, what) {\n        var ax;\n        while ((ax = Utils.indexOf(arr, what)) !== -1) {\n            arr.splice(ax, 1);\n        }\n        return arr;\n    };\n\n    Utils.contains = function(arr, obj) {\n        return Utils.indexOf(arr, obj) !== -1;\n    };\n\n    Utils.indexOf = function(arr, what) {\n        return $.inArray(what, arr);\n    };\n\n    Utils.fold = function(list, iterator, acc, context) {\n        var initial = arguments.length > 2;\n\n        for (var i = 0; i < list.length; i++) {\n            var value = list[i];\n            if (!initial) {\n                acc = value;\n                initial = true;\n            }\n            else {\n                acc = iterator.call(context, acc, value, i, list);\n            }\n        }\n\n        if (!initial) {\n            throw 'Reduce of empty array with no initial value';\n        }\n\n        return acc;\n    };\n\n    Utils.find = function(arr, iterator, context) {\n        var result;\n        Utils.any(arr, function(value, index, list) {\n            if (iterator.call(context, value, index, list)) {\n                result = value;\n                return true;\n            }\n            return false;\n        });\n        return result;\n    };\n\n    Utils.first = function(arr, constraint, context) {\n        if (arr.length === 0) {\n            return null;\n        }\n        if (Utils.isUndefined(constraint)) {\n            return arr[0];\n        }\n\n        return Utils.find(arr, constraint, context);\n    };\n\n    /**\n     * Inserts the given element at the specified position and returns the result.\n     */\n    Utils.insert = function(arr, element, position) {\n        arr.splice(position, 0, element);\n        return arr;\n    };\n\n    Utils.all = function(arr, iterator, context) {\n        var result = true;\n        var value;\n\n        for (var i = 0; i < arr.length; i++) {\n            value = arr[i];\n            result = result && iterator.call(context, value, i, arr);\n\n            if (!result) {\n                break;\n            }\n        }\n\n        return result;\n    };\n\n    Utils.clear = function(arr) {\n        arr.splice(0, arr.length);\n    };\n\n    /**\n     * Sort the arrays on the basis of the first one (considered as keys and the other array as values).\n     * @param a\n     * @param b\n     * @param sortfunc (optiona) sorting function for the values in the first array\n     */\n    Utils.bisort = function(a, b, sortfunc) {\n        if (Utils.isUndefined(a)) {\n            throw \"First array is not specified.\";\n        }\n        if (Utils.isUndefined(b)) {\n            throw \"Second array is not specified.\";\n        }\n        if (a.length != b.length) {\n            throw \"The two arrays should have equal length\";\n        }\n\n        var all = [], i;\n\n        for (i = 0; i < a.length; i++) {\n            all.push({ 'x': a[i], 'y': b[i] });\n        }\n        if (Utils.isUndefined(sortfunc)) {\n            all.sort(function(m, n) {\n                return m.x - n.x;\n            });\n        }\n        else {\n            all.sort(function(m, n) {\n                return sortfunc(m.x, n.x);\n            });\n        }\n\n        Utils.clear(a);\n        Utils.clear(b);\n\n        for (i = 0; i < all.length; i++) {\n            a.push(all[i].x);\n            b.push(all[i].y);\n        }\n    };\n\n    Utils.addRange = function(arr, range) {\n        arr.push.apply(arr, range);\n    };\n\n    var Easing = {\n        easeInOut: function(pos) {\n            return ((-Math.cos(pos * Math.PI) / 2) + 0.5);\n        }\n    };\n\n    /**\n     * An animation ticker driving an adapter which sets a particular\n     * property in function of the tick.\n     * @type {*}\n     */\n    var Ticker = kendo.Class.extend({\n        init: function() {\n            this.adapters = [];\n            this.target = 0;\n            this.tick = 0;\n            this.interval = 20;\n            this.duration = 800;\n            this.lastTime = null;\n            this.handlers = [];\n            var _this = this;\n            this.transition = Easing.easeInOut;\n            this.timerDelegate = function() {\n                _this.onTimerEvent();\n            };\n        },\n        addAdapter: function(a) {\n            this.adapters.push(a);\n        },\n        onComplete: function(handler) {\n            this.handlers.push(handler);\n        },\n        removeHandler: function(handler) {\n            this.handlers = $.grep(this.handlers, function(h) {\n                return h !== handler;\n            });\n        },\n        trigger: function() {\n            var _this = this;\n            if (this.handlers) {\n                Utils.forEach(this.handlers, function(h) {\n                    return h.call(_this.caller !== null ? _this.caller : _this);\n                });\n            }\n        },\n        onStep: function() {\n        },\n        seekTo: function(to) {\n            this.seekFromTo(this.tick, to);\n        },\n        seekFromTo: function(from, to) {\n            this.target = Math.max(0, Math.min(1, to));\n            this.tick = Math.max(0, Math.min(1, from));\n            this.lastTime = new Date().getTime();\n            if (!this.intervalId) {\n                this.intervalId = window.setInterval(this.timerDelegate, this.interval);\n            }\n        },\n        stop: function() {\n            if (this.intervalId) {\n                window.clearInterval(this.intervalId);\n                this.intervalId = null;\n\n                //this.trigger.call(this);\n                this.trigger();\n                // this.next();\n            }\n        },\n        play: function(origin) {\n            if (this.adapters.length === 0) {\n                return;\n            }\n            if (origin !== null) {\n                this.caller = origin;\n            }\n            this.initState();\n            this.seekFromTo(0, 1);\n        },\n        reverse: function() {\n            this.seekFromTo(1, 0);\n        },\n        initState: function() {\n            if (this.adapters.length === 0) {\n                return;\n            }\n            for (var i = 0; i < this.adapters.length; i++) {\n                this.adapters[i].initState();\n            }\n        },\n        propagate: function() {\n            var value = this.transition(this.tick);\n\n            for (var i = 0; i < this.adapters.length; i++) {\n                this.adapters[i].update(value);\n            }\n        },\n        onTimerEvent: function() {\n            var now = new Date().getTime();\n            var timePassed = now - this.lastTime;\n            this.lastTime = now;\n            var movement = (timePassed / this.duration) * (this.tick < this.target ? 1 : -1);\n            if (Math.abs(movement) >= Math.abs(this.tick - this.target)) {\n                this.tick = this.target;\n            } else {\n                this.tick += movement;\n            }\n\n            try {\n                this.propagate();\n            } finally {\n                this.onStep.call(this);\n                if (this.target == this.tick) {\n                    this.stop();\n                }\n            }\n        }\n    });\n\n    kendo.deepExtend(diagram, {\n        init: function(element) {\n            kendo.init(element, diagram.ui);\n        },\n\n        Utils: Utils,\n        Range: Range,\n        Ticker: Ticker\n    });\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    // Imports ================================================================\n    var kendo = window.kendo,\n        diagram = kendo.dataviz.diagram,\n        Class = kendo.Class,\n        deepExtend = kendo.deepExtend,\n        Utils = diagram.Utils,\n        Point = kendo.geometry.Point,\n        isFunction = kendo.isFunction,\n        contains = Utils.contains,\n        map = $.map;\n\n    // Constants ==============================================================\n    var HITTESTAREA = 3,\n        EPSILON = 1e-06;\n\n    class ExtendedPoint extends Point {\n        constructor(x, y) {\n            super(x, y);\n        }\n\n        clone() {\n            return new ExtendedPoint(this.x, this.y);\n        }\n\n        plus(p) {\n            return new ExtendedPoint(this.x + p.x, this.y + p.y);\n        }\n\n        minus(p) {\n            return new ExtendedPoint(this.x - p.x, this.y - p.y);\n        }\n\n        offset(value) {\n            return new ExtendedPoint(this.x - value, this.y - value);\n        }\n\n        times(s) {\n            return new ExtendedPoint(this.x * s, this.y * s);\n        }\n\n        normalize() {\n            if (this.length() === 0) {\n                return new ExtendedPoint();\n            }\n            return this.times(1 / this.length());\n        }\n\n        length() {\n            return Math.sqrt(this.x * this.x + this.y * this.y);\n        }\n\n        toString() {\n            return \"(\" + this.x + \",\" + this.y + \")\";\n        }\n\n        lengthSquared() {\n            return (this.x * this.x + this.y * this.y);\n        }\n\n        middleOf(p, q) {\n            return new ExtendedPoint(q.x - p.x, q.y - p.y).times(0.5).plus(p);\n        }\n\n        toPolar(useDegrees) {\n            var factor = 1;\n            if (useDegrees) {\n                factor = 180 / Math.PI;\n            }\n            var a = Math.atan2(Math.abs(this.y), Math.abs(this.x));\n            var halfpi = Math.PI / 2;\n            var len = this.length();\n            if (this.x === 0) {\n                // note that the angle goes down and not the usual mathematical convention\n\n                if (this.y === 0) {\n                    return new Polar(0, 0);\n                }\n                if (this.y > 0) {\n                    return new Polar(len, factor * halfpi);\n                }\n                if (this.y < 0) {\n                    return new Polar(len, factor * 3 * halfpi);\n                }\n            }\n            else if (this.x > 0) {\n                if (this.y === 0) {\n                    return new Polar(len, 0);\n                }\n                if (this.y > 0) {\n                    return new Polar(len, factor * a);\n                }\n                if (this.y < 0) {\n                    return new Polar(len, factor * (4 * halfpi - a));\n                }\n            }\n            else {\n                if (this.y === 0) {\n                    return new Polar(len, 2 * halfpi);\n                }\n                if (this.y > 0) {\n                    return new Polar(len, factor * (2 * halfpi - a));\n                }\n                if (this.y < 0) {\n                    return new Polar(len, factor * (2 * halfpi + a));\n                }\n            }\n        }\n        isOnLine(from, to) {\n            if (from.x > to.x) { // from must be the leftmost point\n                var temp = to;\n                to = from;\n                from = temp;\n            }\n            var r1 = new Rect(from.x, from.y).inflate(HITTESTAREA, HITTESTAREA),\n                r2 = new Rect(to.x, to.y).inflate(HITTESTAREA, HITTESTAREA), o1, u1;\n            if (r1.union(r2).contains(this)) {\n                if (from.x === to.x || from.y === to.y) {\n                    return true;\n                }\n                else if (from.y < to.y) {\n                    o1 = r1.x + (((r2.x - r1.x) * (this.y - (r1.y + r1.height))) / ((r2.y + r2.height) - (r1.y + r1.height)));\n                    u1 = (r1.x + r1.width) + ((((r2.x + r2.width) - (r1.x + r1.width)) * (this.y - r1.y)) / (r2.y - r1.y));\n                }\n                else {\n                    o1 = r1.x + (((r2.x - r1.x) * (this.y - r1.y)) / (r2.y - r1.y));\n                    u1 = (r1.x + r1.width) + ((((r2.x + r2.width) - (r1.x + r1.width)) * (this.y - (r1.y + r1.height))) / ((r2.y + r2.height) - (r1.y + r1.height)));\n                }\n                return (this.x > o1 && this.x < u1);\n            }\n            return false;\n        }\n        parse(str) {\n            var tempStr = str.slice(1, str.length - 1),\n                xy = tempStr.split(\",\"),\n                x = parseInt(xy[0], 10),\n                y = parseInt(xy[1], 10);\n            if (!isNaN(x) && !isNaN(y)) {\n                return new ExtendedPoint(x, y);\n            }\n        }\n    }\n\n    /**\n     * Structure combining a Point with two additional points representing the handles or tangents attached to the first point.\n     * If the additional points are null or equal to the first point the path will be sharp.\n     * Left and right correspond to the direction of the underlying path.\n     */\n    var PathDefiner = Class.extend(\n        {\n            init: function(p, left, right) {\n                this.point = p;\n                this.left = left;\n                this.right = right;\n            }\n        }\n    );\n\n    /**\n     * Defines a rectangular region.\n     */\n    var Rect = Class.extend({\n        init: function(x, y, width, height) {\n            this.x = x || 0;\n            this.y = y || 0;\n            this.width = width || 0;\n            this.height = height || 0;\n        },\n        contains: function(point) {\n            return ((point.x >= this.x) && (point.x <= (this.x + this.width)) && (point.y >= this.y) && (point.y <= (this.y + this.height)));\n        },\n        inflate: function(dx, dy) {\n            if (dy === undefined$1) {\n                dy = dx;\n            }\n\n            this.x -= dx;\n            this.y -= dy;\n            this.width += 2 * dx + 1;\n            this.height += 2 * dy + 1;\n            return this;\n        },\n        offset: function(dx, dy) {\n            var x = dx, y = dy;\n            if (dx instanceof ExtendedPoint) {\n                x = dx.x;\n                y = dx.y;\n            }\n            this.x += x;\n            this.y += y;\n            return this;\n        },\n        union: function(r) {\n            var x1 = Math.min(this.x, r.x);\n            var y1 = Math.min(this.y, r.y);\n            var x2 = Math.max((this.x + this.width), (r.x + r.width));\n            var y2 = Math.max((this.y + this.height), (r.y + r.height));\n            return new Rect(x1, y1, x2 - x1, y2 - y1);\n        },\n        center: function() {\n            return new ExtendedPoint(this.x + this.width / 2, this.y + this.height / 2);\n        },\n        top: function() {\n            return new ExtendedPoint(this.x + this.width / 2, this.y);\n        },\n        right: function() {\n            return new ExtendedPoint(this.x + this.width, this.y + this.height / 2);\n        },\n        bottom: function() {\n            return new ExtendedPoint(this.x + this.width / 2, this.y + this.height);\n        },\n        left: function() {\n            return new ExtendedPoint(this.x, this.y + this.height / 2);\n        },\n        topLeft: function() {\n            return new ExtendedPoint(this.x, this.y);\n        },\n        topRight: function() {\n            return new ExtendedPoint(this.x + this.width, this.y);\n        },\n        bottomLeft: function() {\n            return new ExtendedPoint(this.x, this.y + this.height);\n        },\n        bottomRight: function() {\n            return new ExtendedPoint(this.x + this.width, this.y + this.height);\n        },\n        clone: function() {\n            return new Rect(this.x, this.y, this.width, this.height);\n        },\n        isEmpty: function() {\n            return !this.width && !this.height;\n        },\n        equals: function(rect) {\n            return this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height;\n        },\n        rotatedBounds: function(angle) {\n            var rect = this.clone(),\n                points = this.rotatedPoints(angle),\n                tl = points[0],\n                tr = points[1],\n                br = points[2],\n                bl = points[3];\n\n            rect.x = Math.min(br.x, tl.x, tr.x, bl.x);\n            rect.y = Math.min(br.y, tl.y, tr.y, bl.y);\n            rect.width = Math.max(br.x, tl.x, tr.x, bl.x) - rect.x;\n            rect.height = Math.max(br.y, tl.y, tr.y, bl.y) - rect.y;\n\n            return rect;\n        },\n        rotatedPoints: function(angle) {\n            var rect = this,\n                c = rect.center(),\n                br = rect.bottomRight().rotate(angle, c),\n                tl = rect.topLeft().rotate(angle, c),\n                tr = rect.topRight().rotate(angle, c),\n                bl = rect.bottomLeft().rotate(angle, c);\n\n            return [tl, tr, br, bl];\n        },\n        toString: function(delimiter) {\n            delimiter = delimiter || \" \";\n\n            return this.x + delimiter + this.y + delimiter + this.width + delimiter + this.height;\n        },\n        scale: function(scaleX, scaleY, staicPoint, adornerCenter, angle) {\n            var tl = this.topLeft();\n            var thisCenter = this.center();\n            tl.rotate(angle, thisCenter).rotate(angle, adornerCenter);\n\n            var delta = staicPoint.minus(tl);\n            var scaled = new ExtendedPoint(delta.x * scaleX, delta.y * scaleY);\n            var position = delta.minus(scaled);\n            tl = tl.plus(position);\n            tl.rotate(angle, adornerCenter).rotate(angle, thisCenter);\n\n            this.x = tl.x;\n            this.y = tl.y;\n\n            this.width *= scaleX;\n            this.height *= scaleY;\n        },\n\n        zoom: function(zoom) {\n            this.x *= zoom;\n            this.y *= zoom;\n            this.width *= zoom;\n            this.height *= zoom;\n            return this;\n        },\n\n        overlaps: function(rect) {\n            var bottomRight = this.bottomRight();\n            var rectBottomRight = rect.bottomRight();\n            var overlaps = !(bottomRight.x < rect.x || bottomRight.y < rect.y ||\n                rectBottomRight.x < this.x || rectBottomRight.y < this.y);\n            return overlaps;\n        }\n    });\n\n    var Size = Class.extend({\n        init: function(width, height) {\n            this.width = width;\n            this.height = height;\n        }\n    });\n\n    Size.prototype.Empty = new Size(0, 0);\n\n    Rect.toRect = function(rect) {\n        if (!(rect instanceof Rect)) {\n            rect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        }\n\n        return rect;\n    };\n\n    Rect.empty = function() {\n        return new Rect(0, 0, 0, 0);\n    };\n\n    Rect.fromPoints = function(p, q) {\n        if (isNaN(p.x) || isNaN(p.y) || isNaN(q.x) || isNaN(q.y)) {\n            throw \"Some values are NaN.\";\n        }\n        return new Rect(Math.min(p.x, q.x), Math.min(p.y, q.y), Math.abs(p.x - q.x), Math.abs(p.y - q.y));\n    };\n\n    function isNearZero(num) {\n        return Math.abs(num) < EPSILON;\n    }\n\n    function intersectLine(start1, end1, start2, end2, isSegment) {\n        var tangensdiff = ((end1.x - start1.x) * (end2.y - start2.y)) - ((end1.y - start1.y) * (end2.x - start2.x));\n        if (isNearZero(tangensdiff)) {\n            //parallel lines\n            return;\n        }\n\n        var num1 = ((start1.y - start2.y) * (end2.x - start2.x)) - ((start1.x - start2.x) * (end2.y - start2.y));\n        var num2 = ((start1.y - start2.y) * (end1.x - start1.x)) - ((start1.x - start2.x) * (end1.y - start1.y));\n        var r = num1 / tangensdiff;\n        var s = num2 / tangensdiff;\n\n        if (isSegment && (r < 0 || r > 1 || s < 0 || s > 1)) {\n            //r < 0 => line 1 is below line 2\n            //r > 1 => line 1 is above line 2\n            //s < 0 => line 2 is below line 1\n            //s > 1 => line 2 is above line 1\n            return;\n        }\n\n        return new ExtendedPoint(start1.x + (r * (end1.x - start1.x)), start1.y + (r * (end1.y - start1.y)));\n    }\n\n    var Intersect = {\n        lines: function(start1, end1, start2, end2) {\n            return intersectLine(start1, end1, start2, end2);\n        },\n        segments: function(start1, end1, start2, end2) {\n            return intersectLine(start1, end1, start2, end2, true);\n        },\n        rectWithLine: function(rect, start, end) {\n            return Intersect.segments(start, end, rect.topLeft(), rect.topRight()) ||\n                Intersect.segments(start, end, rect.topRight(), rect.bottomRight()) ||\n                Intersect.segments(start, end, rect.bottomLeft(), rect.bottomRight()) ||\n                Intersect.segments(start, end, rect.topLeft(), rect.bottomLeft());\n        },\n        rects: function(rect1, rect2, angle) {\n            var tl = rect2.topLeft(),\n                tr = rect2.topRight(),\n                bl = rect2.bottomLeft(),\n                br = rect2.bottomRight();\n            var center = rect2.center();\n            if (angle) {\n                tl = tl.rotate(angle, center);\n                tr = tr.rotate(angle, center);\n                bl = bl.rotate(angle, center);\n                br = br.rotate(angle, center);\n            }\n\n            var intersect = rect1.contains(tl) ||\n                rect1.contains(tr) ||\n                rect1.contains(bl) ||\n                rect1.contains(br) ||\n                Intersect.rectWithLine(rect1, tl, tr) ||\n                Intersect.rectWithLine(rect1, tl, bl) ||\n                Intersect.rectWithLine(rect1, tr, br) ||\n                Intersect.rectWithLine(rect1, bl, br);\n\n            if (!intersect) {//last possible case is rect1 to be completely within rect2\n                tl = rect1.topLeft();\n                tr = rect1.topRight();\n                bl = rect1.bottomLeft();\n                br = rect1.bottomRight();\n\n                if (angle) {\n                    var reverseAngle = 360 - angle;\n                    tl = tl.rotate(reverseAngle, center);\n                    tr = tr.rotate(reverseAngle, center);\n                    bl = bl.rotate(reverseAngle, center);\n                    br = br.rotate(reverseAngle, center);\n                }\n\n                intersect = rect2.contains(tl) ||\n                    rect2.contains(tr) ||\n                    rect2.contains(bl) ||\n                    rect2.contains(br);\n            }\n\n            return intersect;\n        }\n    };\n\n    /**\n     * Aligns two rectangles, where one is the container and the other is content.\n     */\n    var RectAlign = Class.extend({\n        init: function(container) {\n            this.container = Rect.toRect(container);\n        },\n\n        align: function(content, alignment) {\n            var alignValues = alignment.toLowerCase().split(\" \");\n\n            for (var i = 0; i < alignValues.length; i++) {\n                content = this._singleAlign(content, alignValues[i]);\n            }\n\n            return content;\n        },\n        _singleAlign: function(content, alignment) {\n            if (isFunction(this[alignment])) {\n                return this[alignment](content);\n            }\n            else {\n                return content;\n            }\n        },\n\n        left: function(content) {\n            return this._align(content, this._left);\n        },\n        center: function(content) {\n            return this._align(content, this._center);\n        },\n        right: function(content) {\n            return this._align(content, this._right);\n        },\n        stretch: function(content) {\n            return this._align(content, this._stretch);\n        },\n        top: function(content) {\n            return this._align(content, this._top);\n        },\n        middle: function(content) {\n            return this._align(content, this._middle);\n        },\n        bottom: function(content) {\n            return this._align(content, this._bottom);\n        },\n\n        _left: function(container, content) {\n            content.x = container.x;\n        },\n        _center: function(container, content) {\n            content.x = ((container.width - content.width) / 2) || 0;\n        },\n        _right: function(container, content) {\n            content.x = container.width - content.width;\n        },\n        _top: function(container, content) {\n            content.y = container.y;\n        },\n        _middle: function(container, content) {\n            content.y = ((container.height - content.height) / 2) || 0;\n        },\n        _bottom: function(container, content) {\n            content.y = container.height - content.height;\n        },\n        _stretch: function(container, content) {\n            content.x = 0;\n            content.y = 0;\n            content.height = container.height;\n            content.width = container.width;\n        },\n        _align: function(content, alignCalc) {\n            content = Rect.toRect(content);\n            alignCalc(this.container, content);\n\n            return content;\n        }\n    });\n\n    var Polar = Class.extend({\n        init: function(r, a) {\n            this.r = r;\n            this.angle = a;\n        }\n    });\n\n    /**\n     * SVG transformation matrix.\n     */\n    var Matrix = Class.extend({\n        init: function(a, b, c, d, e, f) {\n            this.a = a || 0;\n            this.b = b || 0;\n            this.c = c || 0;\n            this.d = d || 0;\n            this.e = e || 0;\n            this.f = f || 0;\n        },\n        plus: function(m) {\n            this.a += m.a;\n            this.b += m.b;\n            this.c += m.c;\n            this.d += m.d;\n            this.e += m.e;\n            this.f += m.f;\n        },\n        minus: function(m) {\n            this.a -= m.a;\n            this.b -= m.b;\n            this.c -= m.c;\n            this.d -= m.d;\n            this.e -= m.e;\n            this.f -= m.f;\n        },\n        times: function(m) {\n            return new Matrix(\n                this.a * m.a + this.c * m.b,\n                this.b * m.a + this.d * m.b,\n                this.a * m.c + this.c * m.d,\n                this.b * m.c + this.d * m.d,\n                this.a * m.e + this.c * m.f + this.e,\n                this.b * m.e + this.d * m.f + this.f\n            );\n        },\n        apply: function(p) {\n            return new ExtendedPoint(this.a * p.x + this.c * p.y + this.e, this.b * p.x + this.d * p.y + this.f);\n        },\n        applyRect: function(r) {\n            return Rect.fromPoints(this.apply(r.topLeft()), this.apply(r.bottomRight()));\n        },\n        toString: function() {\n            return \"matrix(\" + this.a + \" \" + this.b + \" \" + this.c + \" \" + this.d + \" \" + this.e + \" \" + this.f + \")\";\n        }\n    });\n\n    deepExtend(Matrix, {\n        fromSVGMatrix: function(vm) {\n            var m = new Matrix();\n            m.a = vm.a;\n            m.b = vm.b;\n            m.c = vm.c;\n            m.d = vm.d;\n            m.e = vm.e;\n            m.f = vm.f;\n            return m;\n        },\n        fromMatrixVector: function(v) {\n            var m = new Matrix();\n            m.a = v.a;\n            m.b = v.b;\n            m.c = v.c;\n            m.d = v.d;\n            m.e = v.e;\n            m.f = v.f;\n            return m;\n        },\n        fromList: function(v) {\n            if (v.length !== 6) {\n                throw \"The given list should consist of six elements.\";\n            }\n            var m = new Matrix();\n            m.a = v[0];\n            m.b = v[1];\n            m.c = v[2];\n            m.d = v[3];\n            m.e = v[4];\n            m.f = v[5];\n            return m;\n        },\n        translation: function(x, y) {\n            var m = new Matrix();\n            m.a = 1;\n            m.b = 0;\n            m.c = 0;\n            m.d = 1;\n            m.e = x;\n            m.f = y;\n            return m;\n        },\n        unit: function() {\n            return new Matrix(1, 0, 0, 1, 0, 0);\n        },\n        rotation: function(angle, x, y) {\n            var m = new Matrix();\n            m.a = Math.cos(angle * Math.PI / 180);\n            m.b = Math.sin(angle * Math.PI / 180);\n            m.c = -m.b;\n            m.d = m.a;\n            m.e = (x - x * m.a + y * m.b) || 0;\n            m.f = (y - y * m.a - x * m.b) || 0;\n            return m;\n        },\n        scaling: function(scaleX, scaleY) {\n            var m = new Matrix();\n            m.a = scaleX;\n            m.b = 0;\n            m.c = 0;\n            m.d = scaleY;\n            m.e = 0;\n            m.f = 0;\n            return m;\n        },\n        parse: function(v) {\n            var parts, nums;\n            if (v) {\n                v = v.trim();\n                // of the form \"matrix(...)\"\n                if (v.slice(0, 6).toLowerCase() === \"matrix\") {\n                    nums = v.slice(7, v.length - 1).trim();\n                    parts = nums.split(\",\");\n                    if (parts.length === 6) {\n                        return Matrix.fromList(map(parts, function(p) {\n                            return parseFloat(p);\n                        }));\n                    }\n                    parts = nums.split(\" \");\n                    if (parts.length === 6) {\n                        return Matrix.fromList(map(parts, function(p) {\n                            return parseFloat(p);\n                        }));\n                    }\n                }\n                // of the form \"(...)\"\n                if (v.slice(0, 1) === \"(\" && v.slice(v.length - 1) === \")\") {\n                    v = v.substr(1, v.length - 1);\n                }\n                if (v.indexOf(\",\") > 0) {\n                    parts = v.split(\",\");\n                    if (parts.length === 6) {\n                        return Matrix.fromList(map(parts, function(p) {\n                            return parseFloat(p);\n                        }));\n                    }\n                }\n                if (v.indexOf(\" \") > 0) {\n                    parts = v.split(\" \");\n                    if (parts.length === 6) {\n                        return Matrix.fromList(map(parts, function(p) {\n                            return parseFloat(p);\n                        }));\n                    }\n                }\n            }\n            return parts;\n        }\n    });\n\n    /**\n     * SVG transformation represented as a vector.\n     */\n    var MatrixVector = Class.extend({\n        init: function(a, b, c, d, e, f) {\n            this.a = a || 0;\n            this.b = b || 0;\n            this.c = c || 0;\n            this.d = d || 0;\n            this.e = e || 0;\n            this.f = f || 0;\n        },\n        fromMatrix: function FromMatrix(m) {\n            var v = new MatrixVector();\n            v.a = m.a;\n            v.b = m.b;\n            v.c = m.c;\n            v.d = m.d;\n            v.e = m.e;\n            v.f = m.f;\n            return v;\n        }\n    });\n\n    /**\n     * Returns a value with Gaussian (normal) distribution.\n     * @param mean The mean value of the distribution.\n     * @param deviation The deviation (spreading at half-height) of the distribution.\n     * @returns {number}\n     */\n    function normalVariable(mean, deviation) {\n        var x, y, r;\n        do {\n            x = Math.random() * 2 - 1;\n            y = Math.random() * 2 - 1;\n            r = x * x + y * y;\n        }\n        while (!r || r > 1);\n        return mean + deviation * x * Math.sqrt(-2 * Math.log(r) / r);\n    }\n\n    /**\n     * Returns a random identifier which can be used as an ID of objects, eventually augmented with a prefix.\n     * @returns {string}\n     */\n    function randomId(length) {\n        if (Utils.isUndefined(length)) {\n            length = 10;\n        }\n        // old version return Math.floor((1 + Math.random()) * 0x1000000).toString(16).substring(1);\n        var result = '';\n        var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        for (var i = length; i > 0; --i) {\n            result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n        }\n        return result;\n    }\n\n    var Geometry = {\n\n        /**\n         * Returns the squared distance to the line defined by the two given Points.\n         * @param p An arbitrary Point.\n         * @param a An endpoint of the line or segment.\n         * @param b The complementary endpoint of the line or segment.\n         */\n        _distanceToLineSquared: function(p, a, b) {\n            function d2(pt1, pt2) {\n                return (pt1.x - pt2.x) * (pt1.x - pt2.x) + (pt1.y - pt2.y) * (pt1.y - pt2.y);\n            }\n\n            if (a === b) { // returns the distance of p to a\n                return d2(p, a);\n            }\n\n            var vx = b.x - a.x,\n                vy = b.y - a.y,\n                dot = (p.x - a.x) * vx + (p.y - a.y) * vy;\n            if (dot < 0) {\n                return d2(a, p); // sits on side of a\n            }\n\n            dot = (b.x - p.x) * vx + (b.y - p.y) * vy;\n            if (dot < 0) {\n                return d2(b, p); // sits on side of b\n            }\n            // regular case, use crossproduct to get the sine out\n            dot = (b.x - p.x) * vy - (b.y - p.y) * vx;\n            return dot * dot / (vx * vx + vy * vy);\n        },\n\n        /**\n         * Returns the distance to the line defined by the two given Points.\n         * @param p An arbitrary Point.\n         * @param a An endpoint of the line or segment.\n         * @param b The complementary endpoint of the line or segment.\n         */\n        distanceToLine: function(p, a, b) {\n            return Math.sqrt(this._distanceToLineSquared(p, a, b));\n        },\n\n        /**\n         * Returns the distance of the given points to the polyline defined by the points.\n         * @param p An arbitrary point.\n         * @param points The points defining the polyline.\n         * @returns {Number}\n         */\n        distanceToPolyline: function(p, points) {\n            var minimum = Number.MAX_VALUE;\n            if (Utils.isUndefined(points) || points.length === 0) {\n                return Number.MAX_VALUE;\n            }\n            for (var s = 0; s < points.length - 1; s++) {\n                var p1 = points[s];\n                var p2 = points[s + 1];\n\n                var d = this._distanceToLineSquared(p, p1, p2);\n                if (d < minimum) {\n                    minimum = d;\n                }\n            }\n            return Math.sqrt(minimum);\n        }\n    };\n\n    /*---------------The HashTable structure--------------------------------*/\n\n    /**\n     * Represents a collection of key-value pairs that are organized based on the hash code of the key.\n     * _buckets[hashId] = {key: key, value:...}\n     * Important: do not use the standard Array access method, use the get/set methods instead.\n     * See http://en.wikipedia.org/wiki/Hash_table\n     */\n    var HashTable = kendo.Class.extend({\n        init: function() {\n            this._buckets = [];\n            this.length = 0;\n        },\n\n        /**\n         * Adds the literal object with the given key (of the form {key: key,....}).\n         */\n        add: function(key, value) {\n\n            var obj = this._createGetBucket(key);\n            if (Utils.isDefined(value)) {\n                obj.value = value;\n            }\n            return obj;\n        },\n\n        /**\n         * Gets the literal object with the given key.\n         */\n        get: function(key) {\n            if (this._bucketExists(key)) {\n                return this._createGetBucket(key);\n            }\n            return null;\n        },\n\n        /**\n         * Set the key-value pair.\n         * @param key The key of the entry.\n         * @param value The value to set. If the key already exists the value will be overwritten.\n         */\n        set: function(key, value) {\n            this.add(key, value);\n        },\n\n        /**\n         * Determines whether the HashTable contains a specific key.\n         */\n        containsKey: function(key) {\n            return this._bucketExists(key);\n        },\n\n        /**\n         * Removes the element with the specified key from the hashtable.\n         * Returns the removed bucket.\n         */\n        remove: function(key) {\n            if (this._bucketExists(key)) {\n                var hashId = this._hash(key);\n                delete this._buckets[hashId];\n                this.length--;\n                return key;\n            }\n        },\n\n        /**\n         * Foreach with an iterator working on the key-value pairs.\n         * @param func\n         */\n        forEach: function(func) {\n            var hashes = this._hashes();\n            for (var i = 0, len = hashes.length; i < len; i++) {\n                var hash = hashes[i];\n                var bucket = this._buckets[hash];\n                if (Utils.isUndefined(bucket)) {\n                    continue;\n                }\n                func(bucket);\n            }\n        },\n\n        /**\n         * Returns a (shallow) clone of the current HashTable.\n         * @returns {HashTable}\n         */\n        clone: function() {\n            var ht = new HashTable();\n            var hashes = this._hashes();\n            for (var i = 0, len = hashes.length; i < len; i++) {\n                var hash = hashes[i];\n                var bucket = this._buckets[hash];\n                if (Utils.isUndefined(bucket)) {\n                    continue;\n                }\n                ht.add(bucket.key, bucket.value);\n            }\n            return ht;\n        },\n\n        /**\n         * Returns the hashes of the buckets.\n         * @returns {Array}\n         * @private\n         */\n        _hashes: function() {\n            var hashes = [];\n            for (var hash in this._buckets) {\n                if (this._buckets.hasOwnProperty(hash)) {\n                    hashes.push(hash);\n                }\n            }\n            return hashes;\n        },\n\n        _bucketExists: function(key) {\n            var hashId = this._hash(key);\n            return Utils.isDefined(this._buckets[hashId]);\n        },\n\n        /**\n         * Returns-adds the createGetBucket with the given key. If not present it will\n         * be created and returned.\n         * A createGetBucket is a literal object of the form {key: key, ...}.\n         */\n        _createGetBucket: function(key) {\n            var hashId = this._hash(key);\n            var bucket = this._buckets[hashId];\n            if (Utils.isUndefined(bucket)) {\n                bucket = { key: key };\n                this._buckets[hashId] = bucket;\n                this.length++;\n            }\n            return bucket;\n        },\n\n        /**\n         * Hashing of the given key.\n         */\n        _hash: function(key) {\n            if (Utils.isNumber(key)) {\n                return key;\n            }\n            if (Utils.isString(key)) {\n                return this._hashString(key);\n            }\n            if (Utils.isObject(key)) {\n                return this._objectHashId(key);\n            }\n            throw \"Unsupported key type.\";\n        },\n\n        /**\n         * Hashing of a string.\n         */\n        _hashString: function(s) {\n            // see for example http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n            var result = 0;\n            if (s.length === 0) {\n                return result;\n            }\n            for (var i = 0; i < s.length; i++) {\n                var ch = s.charCodeAt(i);\n                result = ((result * 32) - result) + ch;\n            }\n            return result;\n        },\n\n        /**\n         * Returns the unique identifier for an object. This is automatically assigned and add on the object.\n         */\n        _objectHashId: function(key) {\n            var id = key._hashId;\n            if (Utils.isUndefined(id)) {\n                id = randomId();\n                key._hashId = id;\n            }\n            return id;\n        }\n    });\n\n    /*---------------The Dictionary structure--------------------------------*/\n\n    /**\n     * Represents a collection of key-value pairs.\n     * Important: do not use the standard Array access method, use the get/Set methods instead.\n     */\n    var Dictionary = kendo.Observable.extend({\n        /**\n         * Initializes a new instance of the Dictionary class.\n         * @param dictionary Loads the content of the given dictionary into this new one.\n         */\n        init: function(dictionary) {\n            var that = this;\n            kendo.Observable.fn.init.call(that);\n            this._hashTable = new HashTable();\n            this.length = 0;\n            if (Utils.isDefined(dictionary)) {\n                if (Array.isArray(dictionary)) {\n                    for (var i = 0; i < dictionary.length; i++) {\n                        this.add(dictionary[i]);\n                    }\n                } else {\n                    dictionary.forEach(function(k, v) {\n                        this.add(k, v);\n                    }, this);\n                }\n            }\n        },\n\n        /**\n         * Adds a key-value to the dictionary.\n         * If the key already exists this will assign the given value to the existing entry.\n         */\n        add: function(key, value) {\n            var entry = this._hashTable.get(key);\n            if (!entry) {\n                entry = this._hashTable.add(key);\n                this.length++;\n                this.trigger('changed');\n            }\n            entry.value = value;\n        },\n\n        /**\n         * Set the key-value pair.\n         * @param key The key of the entry.\n         * @param value The value to set. If the key already exists the value will be overwritten.\n         */\n        set: function(key, value) {\n            this.add(key, value);\n        },\n\n        /**\n         * Gets the value associated with the given key in the dictionary.\n         */\n        get: function(key) {\n            var entry = this._hashTable.get(key);\n            if (entry) {\n                return entry.value;\n            }\n            throw new Error(\"Cannot find key \" + key);\n        },\n\n        /**\n         * Returns whether the dictionary contains the given key.\n         */\n        containsKey: function(key) {\n            return this._hashTable.containsKey(key);\n        },\n\n        /**\n         * Removes the element with the specified key from the dictionary.\n         */\n        remove: function(key) {\n            if (this.containsKey(key)) {\n                this.trigger(\"changed\");\n                this.length--;\n                return this._hashTable.remove(key);\n            }\n        },\n\n        /**\n         * The functional gets the key and value as parameters.\n         */\n        forEach: function(func, thisRef) {\n            this._hashTable.forEach(function(entry) {\n                func.call(thisRef, entry.key, entry.value);\n            });\n        },\n\n        /**\n         * Same as forEach except that only the value is passed to the functional.\n         */\n        forEachValue: function(func, thisRef) {\n            this._hashTable.forEach(function(entry) {\n                func.call(thisRef, entry.value);\n            });\n        },\n\n        /**\n         * Calls a defined callback function for each key in the dictionary.\n         */\n        forEachKey: function(func, thisRef) {\n            this._hashTable.forEach(function(entry) {\n                func.call(thisRef, entry.key);\n            });\n        },\n\n        /**\n         * Gets an array with all keys in the dictionary.\n         */\n        keys: function() {\n            var keys = [];\n            this.forEachKey(function(key) {\n                keys.push(key);\n            });\n            return keys;\n        }\n    });\n\n    /*---------------Queue structure--------------------------------*/\n\n    var Queue = kendo.Class.extend({\n\n        init: function() {\n            this._tail = null;\n            this._head = null;\n            this.length = 0;\n        },\n\n        /**\n         * Enqueues an object to the end of the queue.\n         */\n        enqueue: function(value) {\n            var entry = { value: value, next: null };\n            if (!this._head) {\n                this._head = entry;\n                this._tail = this._head;\n            }\n            else {\n                this._tail.next = entry;\n                this._tail = this._tail.next;\n            }\n            this.length++;\n        },\n\n        /**\n         * Removes and returns the object at top of the queue.\n         */\n        dequeue: function() {\n            if (this.length < 1) {\n                throw new Error(\"The queue is empty.\");\n            }\n            var value = this._head.value;\n            this._head = this._head.next;\n            this.length--;\n            return value;\n        },\n\n        contains: function(item) {\n            var current = this._head;\n            while (current) {\n                if (current.value === item) {\n                    return true;\n                }\n                current = current.next;\n            }\n            return false;\n        }\n    });\n\n\n    /**\n     * While other data structures can have multiple times the same item a Set owns only\n     * once a particular item.\n     * @type {*}\n     */\n    var Set = kendo.Observable.extend({\n        init: function(resource) {\n            var that = this;\n            kendo.Observable.fn.init.call(that);\n            this._hashTable = new HashTable();\n            this.length = 0;\n            if (Utils.isDefined(resource)) {\n                if (resource instanceof HashTable) {\n                    resource.forEach(function(d) {\n                        this.add(d);\n                    });\n                }\n                else if (resource instanceof Dictionary) {\n                    resource.forEach(function(k, v) {\n                        this.add({ key: k, value: v });\n                    }, this);\n                }\n            }\n        },\n\n        contains: function(item) {\n            return this._hashTable.containsKey(item);\n        },\n\n        add: function(item) {\n            var entry = this._hashTable.get(item);\n            if (!entry) {\n                this._hashTable.add(item, item);\n                this.length++;\n                this.trigger('changed');\n            }\n        },\n\n        get: function(item) {\n            if (this.contains(item)) {\n                return this._hashTable.get(item).value;\n            }\n            else {\n                return null;\n            }\n        },\n\n        /**\n         * Returns the hash of the item.\n         * @param item\n         * @returns {*}\n         */\n        hash: function(item) {\n            return this._hashTable._hash(item);\n        },\n\n        /**\n         * Removes the given item from the set. No exception is thrown if the item is not in the Set.\n         * @param item\n         */\n        remove: function(item) {\n            if (this.contains(item)) {\n                this._hashTable.remove(item);\n                this.length--;\n                this.trigger('changed');\n            }\n        },\n        /**\n         * Foreach with an iterator working on the key-value pairs.\n         * @param func\n         */\n        forEach: function(func, context) {\n            this._hashTable.forEach(function(kv) {\n                func(kv.value);\n            }, context);\n        },\n        toArray: function() {\n            var r = [];\n            this.forEach(function(d) {\n                r.push(d);\n            });\n            return r;\n        }\n    });\n\n    /*----------------Node-------------------------------*/\n\n    /**\n     * Defines the node (vertex) of a Graph.\n     */\n    var Node = kendo.Class.extend({\n\n        init: function(id, shape) {\n\n            /**\n             * Holds all the links incident with the current node.\n             * Do not use this property to manage the incoming links, use the appropriate add/remove methods instead.\n             */\n            this.links = [];\n\n            /**\n             * Holds the links from the current one to another Node .\n             * Do not use this property to manage the incoming links, use the appropriate add/remove methods instead.\n             */\n            this.outgoing = [];\n\n            /**\n             * Holds the links from another Node to the current one.\n             * Do not use this property to manage the incoming links, use the appropriate add/remove methods instead.\n             */\n            this.incoming = [];\n\n            /**\n             * Holds the weight of this Node.\n             */\n            this.weight = 1;\n\n            if (Utils.isDefined(id)) {\n                this.id = id;\n            }\n            else {\n                this.id = randomId();\n            }\n            if (Utils.isDefined(shape)) {\n                this.associatedShape = shape;\n                // transfer the shape's bounds to the runtime props\n                var b = shape.bounds();\n                this.width = b.width;\n                this.height = b.height;\n                this.x = b.x;\n                this.y = b.y;\n            }\n            else {\n                this.associatedShape = null;\n            }\n            /**\n             * The payload of the node.\n             * @type {null}\n             */\n            this.data = null;\n            this.type = \"Node\";\n            this.shortForm = \"Node '\" + this.id + \"'\";\n            /**\n             * Whether this is an injected node during the analysis or layout process.\n             * @type {boolean}\n             */\n            this.isVirtual = false;\n        },\n\n        /**\n         * Returns whether this node has no links attached.\n         */\n        isIsolated: function() {\n            return Utils.isEmpty(this.links);\n        },\n\n        /**\n         * Gets or sets the bounding rectangle of this node.\n         * This should be considered as runtime data, the property is not hotlinked to a SVG item.\n         */\n        bounds: function(r) {\n            if (!Utils.isDefined(r)) {\n                return new diagram.Rect(this.x, this.y, this.width, this.height);\n            }\n\n            this.x = r.x;\n            this.y = r.y;\n            this.width = r.width;\n            this.height = r.height;\n        },\n\n        /**\n         * Returns whether there is at least one link with the given (complementary) node. This can be either an\n         * incoming or outgoing link.\n         */\n        isLinkedTo: function(node) {\n            var that = this;\n            return Utils.any(that.links, function(link) {\n                return link.getComplement(that) === node;\n            });\n        },\n\n        /**\n         * Gets the children of this node, defined as the adjacent nodes with a link from this node to the adjacent one.\n         * @returns {Array}\n         */\n        getChildren: function() {\n            if (this.outgoing.length === 0) {\n                return [];\n            }\n            var children = [];\n            for (var i = 0, len = this.outgoing.length; i < len; i++) {\n                var link = this.outgoing[i];\n                children.push(link.getComplement(this));\n            }\n            return children;\n        },\n\n        /**\n         * Gets the parents of this node, defined as the adjacent nodes with a link from the adjacent node to this one.\n         * @returns {Array}\n         */\n        getParents: function() {\n            if (this.incoming.length === 0) {\n                return [];\n            }\n            var parents = [];\n            for (var i = 0, len = this.incoming.length; i < len; i++) {\n                var link = this.incoming[i];\n                parents.push(link.getComplement(this));\n            }\n            return parents;\n        },\n\n        /**\n         * Returns a clone of the Node. Note that the identifier is not cloned since it's a different Node instance.\n         * @returns {Node}\n         */\n        clone: function() {\n            var copy = new Node();\n            if (Utils.isDefined(this.weight)) {\n                copy.weight = this.weight;\n            }\n            if (Utils.isDefined(this.balance)) {\n                copy.balance = this.balance;\n            }\n            if (Utils.isDefined(this.owner)) {\n                copy.owner = this.owner;\n            }\n            copy.associatedShape = this.associatedShape;\n            copy.x = this.x;\n            copy.y = this.y;\n            copy.width = this.width;\n            copy.height = this.height;\n            return copy;\n        },\n\n        /**\n         * Returns whether there is a link from the current node to the given node.\n         */\n        adjacentTo: function(node) {\n            return this.isLinkedTo(node) !== null;\n        },\n\n        /**\n         * Removes the given link from the link collection this node owns.\n         * @param link\n         */\n        removeLink: function(link) {\n            if (link.source === this) {\n                Utils.remove(this.links, link);\n                Utils.remove(this.outgoing, link);\n                link.source = null;\n            }\n\n            if (link.target === this) {\n                Utils.remove(this.links, link);\n                Utils.remove(this.incoming, link);\n                link.target = null;\n            }\n        },\n\n        /**\n         * Returns whether there is a (outgoing) link from the current node to the given one.\n         */\n        hasLinkTo: function(node) {\n            return Utils.any(this.outgoing, function(link) {\n                return link.target === node;\n            });\n        },\n\n        /**\n         * Returns the degree of this node, i.e. the sum of incoming and outgoing links.\n         */\n        degree: function() {\n            return this.links.length;\n        },\n\n        /**\n         * Returns whether this node is either the source or the target of the given link.\n         */\n        incidentWith: function(link) {\n            return contains(this.links, link);\n        },\n\n        /**\n         * Returns the links between this node and the given one.\n         */\n        getLinksWith: function(node) {\n            return Utils.all(this.links, function(link) {\n                return link.getComplement(this) === node;\n            }, this);\n        },\n\n        /**\n         * Returns the nodes (either parent or child) which are linked to the current one.\n         */\n        getNeighbors: function() {\n            var neighbors = [];\n            Utils.forEach(this.incoming, function(e) {\n                neighbors.push(e.getComplement(this));\n            }, this);\n            Utils.forEach(this.outgoing, function(e) {\n                neighbors.push(e.getComplement(this));\n            }, this);\n            return neighbors;\n        }\n    });\n\n    /**\n     * Defines a directed link (edge, connection) of a Graph.\n     */\n    var Link = kendo.Class.extend({\n\n        init: function(source, target, id, connection) {\n            if (Utils.isUndefined(source)) {\n                throw \"The source of the new link is not set.\";\n            }\n            if (Utils.isUndefined(target)) {\n                throw \"The target of the new link is not set.\";\n            }\n            var sourceFound, targetFound;\n            if (Utils.isString(source)) {\n                sourceFound = new Node(source);\n            }\n            else {\n                sourceFound = source;\n            }\n            if (Utils.isString(target)) {\n                targetFound = new Node(target);\n            }\n            else {\n                targetFound = target;\n            }\n\n            this.source = sourceFound;\n            this.target = targetFound;\n            this.source.links.push(this);\n            this.target.links.push(this);\n            this.source.outgoing.push(this);\n            this.target.incoming.push(this);\n            if (Utils.isDefined(id)) {\n                this.id = id;\n            }\n            else {\n                this.id = randomId();\n            }\n            if (Utils.isDefined(connection)) {\n                this.associatedConnection = connection;\n            }\n            else {\n                this.associatedConnection = null;\n            }\n            this.type = \"Link\";\n            this.shortForm = \"Link '\" + this.source.id + \"->\" + this.target.id + \"'\";\n        },\n\n        /**\n         * Returns the complementary node of the given one, if any.\n         */\n        getComplement: function(node) {\n            if (this.source !== node && this.target !== node) {\n                throw \"The given node is not incident with this link.\";\n            }\n            return this.source === node ? this.target : this.source;\n        },\n\n        /**\n         * Returns the overlap of the current link with the given one, if any.\n         */\n        getCommonNode: function(link) {\n            if (this.source === link.source || this.source === link.target) {\n                return this.source;\n            }\n            if (this.target === link.source || this.target === link.target) {\n                return this.target;\n            }\n            return null;\n        },\n\n        /**\n         * Returns whether the current link is bridging the given nodes.\n         */\n        isBridging: function(v1, v2) {\n            return this.source === v1 && this.target === v2 || this.source === v2 && this.target === v1;\n        },\n\n        /**\n         * Returns the source and target of this link as a tuple.\n         */\n        getNodes: function() {\n            return [this.source, this.target];\n        },\n\n        /**\n         * Returns whether the given node is either the source or the target of the current link.\n         */\n        incidentWith: function(node) {\n            return this.source === node || this.target === node;\n        },\n\n        /**\n         * Returns whether the given link is a continuation of the current one. This can be both\n         * via an incoming or outgoing link.\n         */\n        adjacentTo: function(link) {\n            return contains(this.source.links, link) || contains(this.target.links, link);\n        },\n\n        /**\n         * Changes the source-node of this link.\n         */\n        changeSource: function(node) {\n            Utils.remove(this.source.links, this);\n            Utils.remove(this.source.outgoing, this);\n\n            node.links.push(this);\n            node.outgoing.push(this);\n\n            this.source = node;\n        },\n\n        /**\n         * Changes the target-node of this link.\n         * @param node\n         */\n        changeTarget: function(node) {\n            Utils.remove(this.target.links, this);\n            Utils.remove(this.target.incoming, this);\n\n            node.links.push(this);\n            node.incoming.push(this);\n\n            this.target = node;\n        },\n\n        /**\n         * Changes both the source and the target nodes of this link.\n         */\n        changesNodes: function(v, w) {\n            if (this.source === v) {\n                this.changeSource(w);\n            }\n            else if (this.target === v) {\n                this.changeTarget(w);\n            }\n        },\n\n        /**\n         * Reverses the direction of this link.\n         */\n        reverse: function() {\n            var oldSource = this.source;\n            var oldTarget = this.target;\n\n            this.source = oldTarget;\n            Utils.remove(oldSource.outgoing, this);\n            this.source.outgoing.push(this);\n\n            this.target = oldSource;\n            Utils.remove(oldTarget.incoming, this);\n            this.target.incoming.push(this);\n            return this;\n        },\n\n        /**\n         * Ensures that the given target defines the endpoint of this link.\n         */\n        directTo: function(target) {\n            if (this.source !== target && this.target !== target) {\n                throw \"The given node is not incident with this link.\";\n            }\n            if (this.target !== target) {\n                this.reverse();\n            }\n        },\n\n        /**\n         * Returns a reversed clone of this link.\n         */\n        createReverseEdge: function() {\n            var r = this.clone();\n            r.reverse();\n            r.reversed = true;\n            return r;\n        },\n\n        /**\n         * Returns a clone of this link.\n         */\n        clone: function() {\n            var clone = new Link(this.source, this.target);\n            return clone;\n        }\n    });\n\n    /*--------------Graph structure---------------------------------*/\n    /**\n     * Defines a directed graph structure.\n     * Note that the incidence structure resides in the nodes through the incoming and outgoing links collection, rahter than\n     * inside the Graph.\n     */\n    var Graph = kendo.Class.extend({\n        init: function(idOrDiagram) {\n            /**\n             * The links or edge collection of this Graph.\n             * @type {Array}\n             */\n            this.links = [];\n            /**\n             * The node or vertex collection of this Graph.\n             * @type {Array}\n             */\n            this.nodes = [];\n\n            this._nodeMap = new Dictionary();\n            /**\n             * The optional reference to the Diagram on which this Graph is based.\n             * @type {null}\n             */\n            this.diagram = null;\n\n            /**\n             * The root of this Graph. If not set explicitly the first Node with zero incoming links will be taken.\n             * @type {null}\n             * @private\n             */\n            this._root = null;\n            if (Utils.isDefined(idOrDiagram)) {\n                if (Utils.isString(idOrDiagram)) {\n                    this.id = idOrDiagram;\n                }\n                else {\n                    this.diagram = idOrDiagram;\n                    this.id = idOrDiagram.id;\n                }\n            }\n            else {\n                this.id = randomId();\n            }\n\n            /**\n             * The bounds of this graph if the nodes have spatial extension defined.\n             * @type {Rect}\n             */\n            this.bounds = new Rect();\n            // keeps track whether the children & parents have been created\n            this._hasCachedRelationships = false;\n            this.type = \"Graph\";\n        },\n        /**\n         * Caches the relational information of parents and children in the 'parents' and 'children'\n         * properties.\n         * @param forceRebuild If set to true the relational info will be rebuild even if already present.\n         */\n        cacheRelationships: function(forceRebuild) {\n            if (Utils.isUndefined(forceRebuild)) {\n                forceRebuild = false;\n            }\n            if (this._hasCachedRelationships && !forceRebuild) {\n                return;\n            }\n            for (var i = 0, len = this.nodes.length; i < len; i++) {\n                var node = this.nodes[i];\n                node.children = this.getChildren(node);\n                node.parents = this.getParents(node);\n            }\n            this._hasCachedRelationships = true;\n        },\n\n        /**\n         * Assigns tree-levels to the nodes assuming this is a tree graph.\n         * If not connected or not a tree the process will succeed but\n         * will have little meaning.\n         * @param startNode The node from where the level numbering starts, usually the root of the tree.\n         * @param visited The collection of visited nodes.\n         * @param offset The offset or starting counter of the level info.\n         */\n        assignLevels: function(startNode, offset, visited) {\n            if (!startNode) {\n                throw \"Start node not specified.\";\n            }\n            if (Utils.isUndefined(offset)) {\n                offset = 0;\n            }\n            // if not done before, cache the parents and children\n            this.cacheRelationships();\n            if (Utils.isUndefined(visited)) {\n                visited = new Dictionary();\n                Utils.forEach(this.nodes, function(n) {\n                    visited.add(n, false);\n                });\n            }\n            visited.set(startNode, true);\n            startNode.level = offset;\n            var children = startNode.children;\n            for (var i = 0, len = children.length; i < len; i++) {\n                var child = children[i];\n                if (!child || visited.get(child)) {\n                    continue;\n                }\n                this.assignLevels(child, offset + 1, visited);\n            }\n        },\n\n        /**\n         * Gets or set the root of this graph.\n         * If not set explicitly the first Node with zero incoming links will be taken.\n         * @param value\n         * @returns {*}\n         */\n        root: function(value) {\n            if (Utils.isUndefined(value)) {\n                if (!this._root) {\n                    // TODO: better to use the longest path for the most probable root?\n                    var found = Utils.first(this.nodes, function(n) {\n                        return n.incoming.length === 0;\n                    });\n                    if (found) {\n                        return found;\n                    }\n                    return Utils.first(this.nodes);\n                }\n                else {\n                    return this._root;\n                }\n            }\n            else {\n                this._root = value;\n            }\n        },\n\n        /**\n         * Returns the connected components of this graph.\n         * Note that the returned graphs are made up of the nodes and links of this graph, i.e. a pointer to the items of this graph.\n         * If you alter the items of the components you'll alter the original graph and vice versa.\n         * @returns {Array}\n         */\n        getConnectedComponents: function() {\n            this.componentIndex = 0;\n            this.setItemIndices();\n            var componentId = Utils.initArray(this.nodes.length, -1);\n\n            for (var v = 0; v < this.nodes.length; v++) {\n                if (componentId[v] === -1) {\n                    this._collectConnectedNodes(componentId, v);\n                    this.componentIndex++;\n                }\n            }\n\n            var components = [], i;\n            for (i = 0; i < this.componentIndex; ++i) {\n                components[i] = new Graph();\n            }\n            for (i = 0; i < componentId.length; ++i) {\n                var graph = components[componentId[i]];\n                graph.addNodeAndOutgoings(this.nodes[i]);\n            }\n            // sorting the components in decreasing order of node count\n            components.sort(function(a, b) {\n                return b.nodes.length - a.nodes.length;\n            });\n            return components;\n        },\n\n        _collectConnectedNodes: function(setIds, nodeIndex) {\n            setIds[nodeIndex] = this.componentIndex; // part of the current component\n            var node = this.nodes[nodeIndex];\n            Utils.forEach(node.links,\n                function(link) {\n                    var next = link.getComplement(node);\n                    var nextId = next.index;\n                    if (setIds[nextId] === -1) {\n                        this._collectConnectedNodes(setIds, nextId);\n                    }\n                }, this);\n        },\n\n        /**\n         * Calculates the bounds of this Graph if the Nodes have spatial dimensions defined.\n         * @returns {Rect}\n         */\n        calcBounds: function() {\n            if (this.isEmpty()) {\n                this.bounds = new Rect();\n                return this.bounds;\n            }\n            var b = null;\n            for (var i = 0, len = this.nodes.length; i < len; i++) {\n                var node = this.nodes[i];\n                if (!b) {\n                    b = node.bounds();\n                }\n                else {\n                    b = b.union(node.bounds());\n                }\n            }\n            this.bounds = b;\n            return this.bounds;\n        },\n\n        /**\n         * Creates a spanning tree for the current graph.\n         * Important: this will not return a spanning forest if the graph is disconnected.\n         * Prim's algorithm  finds a minimum-cost spanning tree of an edge-weighted, connected, undirected graph;\n         * see http://en.wikipedia.org/wiki/Prim%27s_algorithm .\n         * @param root The root of the spanning tree.\n         * @returns {Graph}\n         */\n        getSpanningTree: function(root) {\n            var tree = new Graph();\n            var map = new Dictionary(), source, target;\n            tree.root = root.clone();\n            tree.root.level = 0;\n            tree.root.id = root.id;\n            map.add(root, tree.root);\n            root.level = 0;\n\n            var visited = [];\n            var remaining = [];\n            tree._addNode(tree.root);\n            visited.push(root);\n            remaining.push(root);\n\n            var levelCount = 1;\n            while (remaining.length > 0) {\n                var next = remaining.pop();\n                for (var ni = 0; ni < next.links.length; ni++) {\n                    var link = next.links[ni];\n                    var cn = link.getComplement(next);\n                    if (contains(visited, cn)) {\n                        continue;\n                    }\n\n                    cn.level = next.level + 1;\n                    if (levelCount < cn.level + 1) {\n                        levelCount = cn.level + 1;\n                    }\n                    if (!contains(remaining, cn)) {\n                        remaining.push(cn);\n                    }\n                    if (!contains(visited, cn)) {\n                        visited.push(cn);\n                    }\n                    if (map.containsKey(next)) {\n                        source = map.get(next);\n                    }\n                    else {\n                        source = next.clone();\n                        source.level = next.level;\n                        source.id = next.id;\n                        map.add(next, source);\n                    }\n                    if (map.containsKey(cn)) {\n                        target = map.get(cn);\n                    }\n                    else {\n                        target = cn.clone();\n                        target.level = cn.level;\n                        target.id = cn.id;\n                        map.add(cn, target);\n                    }\n                    var newLink = new Link(source, target);\n                    tree.addLink(newLink);\n                }\n\n            }\n\n            var treeLevels = [];\n            for (var i = 0; i < levelCount; i++) {\n                treeLevels.push([]);\n            }\n\n            Utils.forEach(tree.nodes, function(node) {\n                treeLevels[node.level].push(node);\n            });\n\n            tree.treeLevels = treeLevels;\n            tree.cacheRelationships();\n            return tree;\n        },\n\n        /**\n         * Returns a random node in this graph.\n         * @param excludedNodes The collection of nodes which should not be considered.\n         * @param incidenceLessThan The maximum degree or incidence the random node should have.\n         * @returns {*}\n         */\n        takeRandomNode: function(excludedNodes, incidenceLessThan) {\n            if (Utils.isUndefined(excludedNodes)) {\n                excludedNodes = [];\n            }\n            if (Utils.isUndefined(incidenceLessThan)) {\n                incidenceLessThan = 4;\n            }\n            if (this.nodes.length === 0) {\n                return null;\n            }\n            if (this.nodes.length === 1) {\n                return contains(excludedNodes, this.nodes[0]) ? null : this.nodes[0];\n            }\n            var pool = $.grep(this.nodes, function(node) {\n                return !contains(excludedNodes, node) && node.degree() <= incidenceLessThan;\n            });\n            if (Utils.isEmpty(pool)) {\n                return null;\n            }\n            return pool[Utils.randomInteger(0, pool.length)];\n        },\n\n        /**\n         * Returns whether this is an empty graph.\n         */\n        isEmpty: function() {\n            return Utils.isEmpty(this.nodes);\n        },\n\n        /**\n         * Checks whether the endpoints of the links are all in the nodes collection.\n         */\n        isHealthy: function() {\n            return Utils.all(this.links, function(link) {\n                return contains(this.nodes, link.source) && contains(this.nodes, link.target);\n            }, this);\n        },\n\n        /**\n         * Gets the parents of this node, defined as the adjacent nodes with a link from the adjacent node to this one.\n         * @returns {Array}\n         */\n        getParents: function(n) {\n            if (!this.hasNode(n)) {\n                throw \"The given node is not part of this graph.\";\n            }\n            return n.getParents();\n        },\n\n        /**\n         * Gets the children of this node, defined as the adjacent nodes with a link from this node to the adjacent one.\n         * @returns {Array}\n         */\n        getChildren: function(n) {\n            if (!this.hasNode(n)) {\n                throw \"The given node is not part of this graph.\";\n            }\n            return n.getChildren();\n        },\n\n        /**\n         * Adds a new link to the graph between the given nodes.\n         */\n        addLink: function(sourceOrLink, target, owner) {\n\n            if (Utils.isUndefined(sourceOrLink)) {\n                throw \"The source of the link is not defined.\";\n            }\n            if (Utils.isUndefined(target)) {\n                // can only be undefined if the first one is a Link\n                if (Utils.isDefined(sourceOrLink.type) && sourceOrLink.type === \"Link\") {\n                    this.addExistingLink(sourceOrLink);\n                    return;\n                }\n                else {\n                    throw \"The target of the link is not defined.\";\n                }\n            }\n\n            var foundSource = this.getNode(sourceOrLink);\n            if (Utils.isUndefined(foundSource)) {\n                foundSource = this.addNode(sourceOrLink);\n            }\n            var foundTarget = this.getNode(target);\n            if (Utils.isUndefined(foundTarget)) {\n                foundTarget = this.addNode(target);\n            }\n\n            var newLink = new Link(foundSource, foundTarget);\n\n            if (Utils.isDefined(owner)) {\n                newLink.owner = owner;\n            }\n\n            /*newLink.source.outgoing.push(newLink);\n             newLink.source.links.push(newLink);\n             newLink.target.incoming.push(newLink);\n             newLink.target.links.push(newLink);*/\n\n            this.links.push(newLink);\n\n            return newLink;\n        },\n\n        /**\n         * Removes all the links in this graph.\n         */\n        removeAllLinks: function() {\n            while (this.links.length > 0) {\n                var link = this.links[0];\n                this.removeLink(link);\n            }\n        },\n\n        /**\n         * Adds the given link to the current graph.\n         */\n        addExistingLink: function(link) {\n\n            if (this.hasLink(link)) {\n                return;\n            }\n            this.links.push(link);\n            if (this.hasNode(link.source.id)) {\n                // priority to the existing node with the id even if other props are different\n                var s = this.getNode(link.source.id);\n                link.changeSource(s);\n            }\n            else {\n                this.addNode(link.source);\n            }\n\n            if (this.hasNode(link.target.id)) {\n                var t = this.getNode(link.target.id);\n                link.changeTarget(t);\n            }\n            else {\n                this.addNode(link.target);\n            }\n\n            /*  if (!link.source.outgoing.contains(link)) {\n             link.source.outgoing.push(link);\n             }\n             if (!link.source.links.contains(link)) {\n             link.source.links.push(link);\n             }\n             if (!link.target.incoming.contains(link)) {\n             link.target.incoming.push(link);\n             }\n             if (!link.target.links.contains(link)) {\n             link.target.links.push(link);\n             }*/\n        },\n\n        /**\n         * Returns whether the given identifier or Link is part of this graph.\n         * @param linkOrId An identifier or a Link object.\n         * @returns {*}\n         */\n        hasLink: function(linkOrId) {\n            if (Utils.isString(linkOrId)) {\n                return Utils.any(this.links, function(link) {\n                    return link.id === linkOrId;\n                });\n            }\n            if (linkOrId.type === \"Link\") {\n                return contains(this.links, linkOrId);\n            }\n            throw \"The given object is neither an identifier nor a Link.\";\n        },\n        /**\n         * Gets the node with the specified Id or null if not part of this graph.\n         */\n        getNode: function(nodeOrId) {\n            var id = nodeOrId.id || nodeOrId;\n            if (this._nodeMap.containsKey(id)) {\n                return this._nodeMap.get(id);\n            }\n        },\n\n        /**\n         * Returns whether the given node or node Id is part of this graph.\n         */\n        hasNode: function(nodeOrId) {\n            var id = nodeOrId.id || nodeOrId;\n            return this._nodeMap.containsKey(id);\n        },\n\n        _addNode: function(node) {\n            this.nodes.push(node);\n            this._nodeMap.add(node.id, node);\n        },\n\n        _removeNode: function(node) {\n            Utils.remove(this.nodes, node);\n            this._nodeMap.remove(node.id);\n        },\n\n        /**\n         * Removes the given node from this graph.\n         * The node can be specified as an object or as an identifier (string).\n         */\n        removeNode: function(nodeOrId) {\n            var n = nodeOrId;\n            if (Utils.isString(nodeOrId)) {\n                n = this.getNode(nodeOrId);\n            }\n\n            if (Utils.isDefined(n)) {\n                var links = n.links;\n                n.links = [];\n                for (var i = 0, len = links.length; i < len; i++) {\n                    var link = links[i];\n                    this.removeLink(link);\n                }\n                this._removeNode(n);\n            }\n            else {\n                throw \"The identifier should be a Node or the Id (string) of a node.\";\n            }\n        },\n\n        /**\n         * Returns whether the given nodes are connected with a least one link independently of the direction.\n         */\n        areConnected: function(n1, n2) {\n            return Utils.any(this.links, function(link) {\n                return link.source == n1 && link.target == n2 || link.source == n2 && link.target == n1;\n            });\n        },\n\n        /**\n         * Removes the given link from this graph.\n         */\n        removeLink: function(link) {\n            /*    if (!this.links.contains(link)) {\n             throw \"The given link is not part of the Graph.\";\n             }\n             */\n            Utils.remove(this.links, link);\n\n            Utils.remove(link.source.outgoing, link);\n            Utils.remove(link.source.links, link);\n            Utils.remove(link.target.incoming, link);\n            Utils.remove(link.target.links, link);\n        },\n\n        /**\n         * Adds a new node to this graph, if not already present.\n         * The node can be an existing Node or the identifier of a new node.\n         * No error is thrown if the node is already there and the existing one is returned.\n         */\n        addNode: function(nodeOrId, layoutRect, owner) {\n\n            var newNode = null;\n\n            if (!Utils.isDefined(nodeOrId)) {\n                throw \"No Node or identifier for a new Node is given.\";\n            }\n\n            if (Utils.isString(nodeOrId)) {\n                if (this.hasNode(nodeOrId)) {\n                    return this.getNode(nodeOrId);\n                }\n                newNode = new Node(nodeOrId);\n            }\n            else {\n                if (this.hasNode(nodeOrId)) {\n                    return this.getNode(nodeOrId);\n                }\n                // todo: ensure that the param is a Node?\n                newNode = nodeOrId;\n            }\n\n            if (Utils.isDefined(layoutRect)) {\n                newNode.bounds(layoutRect);\n            }\n\n            if (Utils.isDefined(owner)) {\n                newNode.owner = owner;\n            }\n            this._addNode(newNode);\n            return newNode;\n        },\n\n        /**\n         * Adds the given Node and its outgoing links.\n         */\n        addNodeAndOutgoings: function(node) {\n            if (!this.hasNode(node)) {\n                this._addNode(node);\n            }\n\n            var newLinks = node.outgoing;\n            node.outgoing = [];\n            Utils.forEach(newLinks, function(link) {\n                this.addExistingLink(link);\n            }, this);\n        },\n\n        /**\n         * Sets the 'index' property on the links and nodes of this graph.\n         */\n        setItemIndices: function() {\n            var i;\n            for (i = 0; i < this.nodes.length; ++i) {\n                this.nodes[i].index = i;\n            }\n\n            for (i = 0; i < this.links.length; ++i) {\n                this.links[i].index = i;\n            }\n        },\n\n        /**\n         * Returns a clone of this graph.\n         */\n        clone: function(saveMapping) {\n            var copy = new Graph();\n            var save = Utils.isDefined(saveMapping) && saveMapping === true;\n            if (save) {\n                copy.nodeMap = new Dictionary();\n                copy.linkMap = new Dictionary();\n            }\n            // we need a map even if the saveMapping is not set\n            var map = new Dictionary();\n            Utils.forEach(this.nodes, function(nOriginal) {\n                var nCopy = nOriginal.clone();\n                map.set(nOriginal, nCopy);\n                copy._addNode(nCopy);\n\n                if (save) {\n                    copy.nodeMap.set(nCopy, nOriginal);\n                }\n            });\n\n            Utils.forEach(this.links, function(linkOriginal) {\n                if (map.containsKey(linkOriginal.source) && map.containsKey(linkOriginal.target)) {\n                    var linkCopy = copy.addLink(map.get(linkOriginal.source), map.get(linkOriginal.target));\n                    if (save) {\n                        copy.linkMap.set(linkCopy, linkOriginal);\n                    }\n                }\n            });\n\n            return copy;\n        },\n\n        /**\n         * The parsing allows a quick way to create graphs.\n         *  - [\"n1->n2\", \"n2->n3\"]: creates the three nodes and adds the links\n         *  - [\"n1->n2\", {id: \"QSDF\"}, \"n2->n3\"]: same as previous but also performs a deep extend of the link between n1 and n2 with the given object.\n         */\n        linearize: function(addIds) {\n            return Graph.Utils.linearize(this, addIds);\n        },\n\n        /**\n         * Performs a depth-first traversal starting at the given node.\n         * @param startNode a node or id of a node in this graph\n         * @param action\n         */\n        depthFirstTraversal: function(startNode, action) {\n            if (Utils.isUndefined(startNode)) {\n                throw \"You need to supply a starting node.\";\n            }\n            if (Utils.isUndefined(action)) {\n                throw \"You need to supply an action.\";\n            }\n            if (!this.hasNode(startNode)) {\n                throw \"The given start-node is not part of this graph\";\n            }\n            var foundNode = this.getNode(startNode);// case the given one is an Id\n            var visited = [];\n            this._dftIterator(foundNode, action, visited);\n        },\n\n        _dftIterator: function(node, action, visited) {\n\n            action(node);\n            visited.push(node);\n            var children = node.getChildren();\n            for (var i = 0, len = children.length; i < len; i++) {\n                var child = children[i];\n                if (contains(visited, child)) {\n                    continue;\n                }\n                this._dftIterator(child, action, visited);\n            }\n        },\n\n        /**\n         * Performs a breadth-first traversal starting at the given node.\n         * @param startNode a node or id of a node in this graph\n         * @param action\n         */\n        breadthFirstTraversal: function(startNode, action) {\n\n            if (Utils.isUndefined(startNode)) {\n                throw \"You need to supply a starting node.\";\n            }\n            if (Utils.isUndefined(action)) {\n                throw \"You need to supply an action.\";\n            }\n\n            if (!this.hasNode(startNode)) {\n                throw \"The given start-node is not part of this graph\";\n            }\n            var foundNode = this.getNode(startNode);// case the given one is an Id\n            var queue = new Queue();\n            var visited = [];\n            queue.enqueue(foundNode);\n\n            while (queue.length > 0) {\n                var node = queue.dequeue();\n                action(node);\n                visited.push(node);\n                var children = node.getChildren();\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (contains(visited, child) || contains(queue, child)) {\n                        continue;\n                    }\n                    queue.enqueue(child);\n                }\n            }\n        },\n\n        /**\n         * This is the classic Tarjan algorithm for strongly connected components.\n         * See e.g. http://en.wikipedia.org/wiki/Tarjan's_strongly_connected_components_algorithm\n         * @param excludeSingleItems Whether isolated nodes should be excluded from the analysis.\n         * @param node The start node from which the analysis starts.\n         * @param indices  Numbers the nodes consecutively in the order in which they are discovered.\n         * @param lowLinks The smallest index of any node known to be reachable from the node, including the node itself\n         * @param connected The current component.\n         * @param stack The bookkeeping stack of things to visit.\n         * @param index The counter of visited nodes used to assign the indices.\n         * @private\n         */\n        _stronglyConnectedComponents: function(excludeSingleItems, node, indices, lowLinks, connected, stack, index) {\n            indices.add(node, index);\n            lowLinks.add(node, index);\n            index++;\n\n            stack.push(node);\n\n            var children = node.getChildren(), next;\n            for (var i = 0, len = children.length; i < len; i++) {\n                next = children[i];\n                if (!indices.containsKey(next)) {\n                    this._stronglyConnectedComponents(excludeSingleItems, next, indices, lowLinks, connected, stack, index);\n                    lowLinks.add(node, Math.min(lowLinks.get(node), lowLinks.get(next)));\n                }\n                else if (contains(stack, next)) {\n                    lowLinks.add(node, Math.min(lowLinks.get(node), indices.get(next)));\n                }\n            }\n            // If v is a root node, pop the stack and generate a strong component\n            if (lowLinks.get(node) === indices.get(node)) {\n                var component = [];\n                do {\n                    next = stack.pop();\n                    component.push(next);\n                }\n                while (next !== node);\n                if (!excludeSingleItems || (component.length > 1)) {\n                    connected.push(component);\n                }\n            }\n        },\n\n        /**\n         * Returns the cycles found in this graph.\n         * The returned arrays consist of the nodes which are strongly coupled.\n         * @param excludeSingleItems Whether isolated nodes should be excluded.\n         * @returns {Array} The array of cycles found.\n         */\n        findCycles: function(excludeSingleItems) {\n            if (Utils.isUndefined(excludeSingleItems)) {\n                excludeSingleItems = true;\n            }\n            var indices = new Dictionary();\n            var lowLinks = new Dictionary();\n            var connected = [];\n            var stack = [];\n            for (var i = 0, len = this.nodes.length; i < len; i++) {\n                var node = this.nodes[i];\n                if (indices.containsKey(node)) {\n                    continue;\n                }\n                this._stronglyConnectedComponents(excludeSingleItems, node, indices, lowLinks, connected, stack, 0);\n            }\n            return connected;\n        },\n\n        /**\n         * Returns whether this graph is acyclic.\n         * @returns {*}\n         */\n        isAcyclic: function() {\n            return Utils.isEmpty(this.findCycles());\n        },\n\n        /**\n         * Returns whether the given graph is a subgraph of this one.\n         * @param other Another graph instance.\n         */\n        isSubGraph: function(other) {\n            var otherArray = other.linearize();\n            var thisArray = this.linearize();\n            return Utils.all(otherArray, function(s) {\n                return contains(thisArray, s);\n            });\n        },\n\n        /**\n         *  Makes an acyclic graph from the current (connected) one.\n         * * @returns {Array} The reversed links.\n         */\n        makeAcyclic: function() {\n            // if empty or almost empty\n            if (this.isEmpty() || this.nodes.length <= 1 || this.links.length <= 1) {\n                return [];\n            }\n            // singular case of just two nodes\n            if (this.nodes.length == 2) {\n                var result = [];\n                if (this.links.length > 1) {\n                    var oneLink = this.links[0];\n                    var oneNode = oneLink.source;\n                    for (var i = 0, len = this.links.length; i < len; i++) {\n                        var link = this.links[i];\n                        if (link.source == oneNode) {\n                            continue;\n                        }\n                        var rev = link.reverse();\n                        result.push(rev);\n                    }\n                }\n                return result;\n            }\n\n            var copy = this.clone(true); // copy.nodeMap tells you the mapping\n            var N = this.nodes.length;\n\n            var intensityCatalog = new Dictionary();\n\n            /**\n             * If there are both incoming and outgoing links this will return the flow intensity (out-in).\n             * Otherwise the node acts as a flow source with N specifying the (equal) intensity.\n             * @param node\n             * @returns {number}\n             */\n            var flowIntensity = function(node) {\n                if (node.outgoing.length === 0) {\n                    return (2 - N);\n                }\n                else if (node.incoming.length === 0) {\n                    return (N - 2);\n                }\n                else {\n                    return node.outgoing.length - node.incoming.length;\n                }\n            };\n\n            /**\n             * Collects the nodes with the same intensity.\n             * @param node\n             * @param intensityCatalog\n             */\n            var catalogEqualIntensity = function(node, intensityCatalog) {\n                var intensity = flowIntensity(node, N);\n                if (!intensityCatalog.containsKey(intensity)) {\n                    intensityCatalog.set(intensity, []);\n                }\n                intensityCatalog.get(intensity).push(node);\n            };\n\n            Utils.forEach(copy.nodes, function(v) {\n                catalogEqualIntensity(v, intensityCatalog);\n            });\n\n            var sourceStack = [];\n            var targetStack = [];\n\n            while (copy.nodes.length > 0) {\n                var source, target, intensity;\n                if (intensityCatalog.containsKey(2 - N)) {\n                    var targets = intensityCatalog.get(2 - N); // nodes without outgoings\n                    while (targets.length > 0) {\n                        target = targets.pop();\n                        for (var li = 0; li < target.links.length; li++) {\n                            var targetLink = target.links[li];\n                            source = targetLink.getComplement(target);\n                            intensity = flowIntensity(source, N);\n                            Utils.remove(intensityCatalog.get(intensity), source);\n                            source.removeLink(targetLink);\n                            catalogEqualIntensity(source, intensityCatalog);\n                        }\n                        copy._removeNode(target);\n                        targetStack.unshift(target);\n                    }\n                }\n\n                // move sources to sourceStack\n                if (intensityCatalog.containsKey(N - 2)) {\n                    var sources = intensityCatalog.get(N - 2); // nodes without incomings\n                    while (sources.length > 0) {\n                        source = sources.pop();\n                        for (var si = 0; si < source.links.length; si++) {\n                            var sourceLink = source.links[si];\n                            target = sourceLink.getComplement(source);\n                            intensity = flowIntensity(target, N);\n                            Utils.remove(intensityCatalog.get(intensity), target);\n                            target.removeLink(sourceLink);\n                            catalogEqualIntensity(target, intensityCatalog);\n                        }\n                        sourceStack.push(source);\n                        copy._removeNode(source);\n                    }\n                }\n\n                if (copy.nodes.length > 0) {\n                    for (var k = N - 3; k > 2 - N; k--) {\n                        if (intensityCatalog.containsKey(k) &&\n                            intensityCatalog.get(k).length > 0) {\n                            var maxdiff = intensityCatalog.get(k);\n                            var v = maxdiff.pop();\n                            for (var ri = 0; ri < v.links.length; ri++) {\n                                var ril = v.links[ri];\n                                var u = ril.getComplement(v);\n                                intensity = flowIntensity(u, N);\n                                Utils.remove(intensityCatalog.get(intensity), u);\n                                u.removeLink(ril);\n                                catalogEqualIntensity(u, intensityCatalog);\n                            }\n                            sourceStack.push(v);\n                            copy._removeNode(v);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            sourceStack = sourceStack.concat(targetStack);\n\n            var vertexOrder = new Dictionary();\n            for (var kk = 0; kk < this.nodes.length; kk++) {\n                vertexOrder.set(copy.nodeMap.get(sourceStack[kk]), kk);\n            }\n\n            var reversedEdges = [];\n            Utils.forEach(this.links, function(link) {\n                if (vertexOrder.get(link.source) > vertexOrder.get(link.target)) {\n                    link.reverse();\n                    reversedEdges.push(link);\n                }\n            });\n            return reversedEdges;\n        }\n    });\n\n    /**\n     * A collection of predefined graphs for demo and testing purposes.\n     */\n    Graph.Predefined = {\n        /**\n         * Eight-shapes graph all connected in a cycle.\n         * @returns {*}\n         * @constructor\n         */\n        EightGraph: function() {\n            return Graph.Utils.parse([ \"1->2\", \"2->3\", \"3->4\", \"4->1\", \"3->5\", \"5->6\", \"6->7\", \"7->3\"]);\n        },\n\n        /**\n         * Creates a typical mindmap diagram.\n         * @returns {*}\n         * @constructor\n         */\n        Mindmap: function() {\n            return Graph.Utils.parse([\"0->1\", \"0->2\", \"0->3\", \"0->4\", \"0->5\", \"1->6\", \"1->7\", \"7->8\", \"2->9\", \"9->10\", \"9->11\", \"3->12\",\n                \"12->13\", \"13->14\", \"4->15\", \"4->16\", \"15->17\", \"15->18\", \"18->19\", \"18->20\", \"14->21\", \"14->22\", \"5->23\", \"23->24\", \"23->25\", \"6->26\"]);\n        },\n\n        /**\n         * Three nodes connected in a cycle.\n         * @returns {*}\n         * @constructor\n         */\n        ThreeGraph: function() {\n            return Graph.Utils.parse([ \"1->2\", \"2->3\", \"3->1\"]);\n        },\n\n        /**\n         * A tree with each node having two children.\n         * @param levels How many levels the binary tree should have.\n         * @returns {diagram.Graph}\n         * @constructor\n         */\n        BinaryTree: function(levels) {\n            if (Utils.isUndefined(levels)) {\n                levels = 5;\n            }\n            return Graph.Utils.createBalancedTree(levels, 2);\n        },\n\n        /**\n         * A linear graph (discrete line segment).\n         * @param length How many segments (the node count is hence (length+1)).\n         * @returns {diagram.Graph}\n         * @constructor\n         */\n        Linear: function(length) {\n            if (Utils.isUndefined(length)) {\n                length = 10;\n            }\n            return Graph.Utils.createBalancedTree(length, 1);\n        },\n\n        /**\n         * A standard tree-graph with the specified levels and children (siblings) count.\n         * Note that for a balanced tree of level N and sibling count s, counting the root as level zero:\n         *  - NodeCount = (1-s^(N+1))/(1-s)]\n         *  - LinkCount = s.(1-s^N)/(1-s)\n         * @param levels How many levels the tree should have.\n         * @param siblingsCount How many siblings each level should have.\n         * @returns {diagram.Graph}\n         * @constructor\n         */\n        Tree: function(levels, siblingsCount) {\n            return Graph.Utils.createBalancedTree(levels, siblingsCount);\n        },\n\n        /**\n         * Creates a forest.\n         * Note that for a balanced forest of level N, sibling count s and tree count t, counting the root as level zero:\n         *  - NodeCount = t.(1-s^(N+1))/(1-s)]\n         *  - LinkCount = t.s.(1-s^N)/(1-s)\n         * @param levels How many levels the tree should have.\n         * @param siblingsCount How many siblings each level should have.\n         * @param trees The amount of trees the forest should have.\n         * @returns {diagram.Graph}\n         * @constructor\n         */\n        Forest: function(levels, siblingsCount, trees) {\n            return Graph.Utils.createBalancedForest(levels, siblingsCount, trees);\n        },\n\n        /**\n         * A workflow-like graph with cycles.\n         * @returns {*}\n         * @constructor\n         */\n        Workflow: function() {\n            return Graph.Utils.parse(\n                [\"0->1\", \"1->2\", \"2->3\", \"1->4\", \"4->3\", \"3->5\", \"5->6\", \"6->3\", \"6->7\", \"5->4\"]\n            );\n        },\n\n        /**\n         * A grid graph with the direction of the links avoiding cycles.\n         * Node count: (n+1).(m+1)\n         * Link count: n.(m+1) + m.(n+1)\n         * @param n Horizontal count of grid cells. If zero this will result in a linear graph.\n         * @param m Vertical count of grid cells. If zero this will result in a linear graph.\n         * @constructor\n         */\n        Grid: function(n, m) {\n            var g = new diagram.Graph();\n            if (n <= 0 && m <= 0) {\n                return g;\n            }\n\n            for (var i = 0; i < n + 1; i++) {\n                var previous = null;\n                for (var j = 0; j < m + 1; j++) {\n                    // using x-y coordinates to name the nodes\n                    var node = new Node(i.toString() + \".\" + j.toString());\n                    g.addNode(node);\n                    if (previous) {\n                        g.addLink(previous, node);\n                    }\n                    if (i > 0) {\n                        var left = g.getNode((i - 1).toString() + \".\" + j.toString());\n                        g.addLink(left, node);\n                    }\n                    previous = node;\n                }\n            }\n            return g;\n        }\n\n    };\n\n    /**\n     * Graph generation and other utilities.\n     */\n    Graph.Utils = {\n        /**\n         * The parsing allows a quick way to create graphs.\n         *  - [\"n1->n2\", \"n2->n3\"]: creates the three nodes and adds the links\n         *  - [\"n1->n2\", {id: \"id177\"}, \"n2->n3\"]: same as previous but also performs a deep extend of the link between n1 and n2 with the given object.\n         */\n        parse: function(graphString) {\n\n            var previousLink, graph = new diagram.Graph(), parts = graphString.slice();\n            for (var i = 0, len = parts.length; i < len; i++) {\n                var part = parts[i];\n                if (Utils.isString(part)) // link spec\n                {\n                    if (part.indexOf(\"->\") < 0) {\n                        throw \"The link should be specified as 'a->b'.\";\n                    }\n                    var p = part.split(\"->\");\n                    if (p.length != 2) {\n                        throw \"The link should be specified as 'a->b'.\";\n                    }\n                    previousLink = new Link(p[0], p[1]);\n                    graph.addLink(previousLink);\n                }\n                if (Utils.isObject(part)) {\n                    if (!previousLink) {\n                        throw \"Specification found before Link definition.\";\n                    }\n                    kendo.deepExtend(previousLink, part);\n                }\n            }\n            return graph;\n        },\n\n        /**\n         * Returns a linearized representation of the given Graph.\n         * See also the Graph.Utils.parse method for the inverse operation.\n         */\n        linearize: function(graph, addIds) {\n            if (Utils.isUndefined(graph)) {\n                throw \"Expected an instance of a Graph object in slot one.\";\n            }\n            if (Utils.isUndefined(addIds)) {\n                addIds = false;\n            }\n            var lin = [];\n            for (var i = 0, len = graph.links.length; i < len; i++) {\n                var link = graph.links[i];\n                lin.push(link.source.id + \"->\" + link.target.id);\n                if (addIds) {\n                    lin.push({ id: link.id });\n                }\n            }\n            return lin;\n        },\n\n        /**\n         * The method used by the diagram creation to instantiate a shape.\n         * @param kendoDiagram The Kendo diagram where the diagram will be created.\n         * @param p The position at which to place the shape.\n         * @param shapeDefaults Optional Shape options.\n         * @param id Optional identifier of the shape.\n         * @returns {*}\n         * @private\n         */\n        _addShape: function(kendoDiagram, p, id, shapeDefaults) {\n            if (Utils.isUndefined(p)) {\n                p = new ExtendedPoint(0, 0);\n            }\n\n            if (Utils.isUndefined(id)) {\n                id = randomId();\n            }\n\n            shapeDefaults = kendo.deepExtend({\n                width: 20,\n                height: 20,\n                id: id,\n                radius: 10,\n                fill: \"#778899\",\n                data: \"circle\",\n                undoable: false,\n                x: p.x,\n                y: p.y\n            }, shapeDefaults);\n\n            return kendoDiagram.addShape(shapeDefaults);\n        },\n        /**\n         * The method used by the diagram creation to instantiate a connection.\n         * @param diagram he Kendo diagram where the diagram will be created.\n         * @param from The source shape.\n         * @param to The target shape.\n         * @param options Optional Connection options.\n         * @returns {*}\n         * @private\n         */\n        _addConnection: function(diagram, from, to, options) {\n            return diagram.connect(from, to, options);\n        },\n\n        /**\n         * Creates a diagram from the given Graph.\n         * @param diagram The Kendo diagram where the diagram will be created.\n         * @param graph The graph structure defining the diagram.\n         */\n        createDiagramFromGraph: function(diagram, graph, doLayout, randomSize) {\n\n            if (Utils.isUndefined(diagram)) {\n                throw \"The diagram surface is undefined.\";\n            }\n            if (Utils.isUndefined(graph)) {\n                throw \"No graph specification defined.\";\n            }\n            if (Utils.isUndefined(doLayout)) {\n                doLayout = true;\n            }\n            if (Utils.isUndefined(randomSize)) {\n                randomSize = false;\n            }\n\n            var width = diagram.element.clientWidth || 200;\n            var height = diagram.element.clientHeight || 200;\n            var map = [], node, shape;\n            for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                node = graph.nodes[i];\n                var p = node.position;\n                if (Utils.isUndefined(p)) {\n                    if (Utils.isDefined(node.x) && Utils.isDefined(node.y)) {\n                        p = new ExtendedPoint(node.x, node.y);\n                    }\n                    else {\n                        p = new ExtendedPoint(Utils.randomInteger(10, width - 20), Utils.randomInteger(10, height - 20));\n                    }\n                }\n                var opt = {};\n\n                if (node.id === \"0\") {\n                    /* kendo.deepExtend(opt,\n                     {\n                     fill: \"Orange\",\n                     data: 'circle',\n                     width: 100,\n                     height: 100,\n                     center: new Point(50, 50)\n                     });*/\n                }\n                else if (randomSize) {\n                    kendo.deepExtend(opt, {\n                        width: Math.random() * 150 + 20,\n                        height: Math.random() * 80 + 50,\n                        data: 'rectangle',\n                        fill: {\n                            color: \"#778899\"\n                        }\n                    });\n                }\n\n                shape = this._addShape(diagram, p, node.id, opt);\n                //shape.content(node.id);\n\n                var bounds = shape.bounds();\n                if (Utils.isDefined(bounds)) {\n                    node.x = bounds.x;\n                    node.y = bounds.y;\n                    node.width = bounds.width;\n                    node.height = bounds.height;\n                }\n                map[node.id] = shape;\n            }\n            for (var gli = 0; gli < graph.links.length; gli++) {\n                var link = graph.links[gli];\n                var sourceShape = map[link.source.id];\n                if (Utils.isUndefined(sourceShape)) {\n                    continue;\n                }\n                var targetShape = map[link.target.id];\n                if (Utils.isUndefined(targetShape)) {\n                    continue;\n                }\n                this._addConnection(diagram, sourceShape, targetShape, { id: link.id });\n\n            }\n            if (doLayout) {\n                var l = new diagram.SpringLayout(diagram);\n                l.layoutGraph(graph, { limitToView: false });\n                for (var shi = 0; shi < graph.nodes.length; shi++) {\n                    node = graph.nodes[shi];\n                    shape = map[node.id];\n                    shape.bounds(new Rect(node.x, node.y, node.width, node.height));\n                }\n            }\n        },\n\n        /**\n         * Creates a balanced tree with the specified number of levels and siblings count.\n         * Note that for a balanced tree of level N and sibling count s, counting the root as level zero:\n         *  - NodeCount = (1-s^(N+1))/(1-s)]\n         *  - LinkCount = s.(1-s^N)/(1-s)\n         * @param levels How many levels the tree should have.\n         * @param siblingsCount How many siblings each level should have.\n         * @returns {diagram.Graph}\n         */\n        createBalancedTree: function(levels, siblingsCount) {\n            if (Utils.isUndefined(levels)) {\n                levels = 3;\n            }\n            if (Utils.isUndefined(siblingsCount)) {\n                siblingsCount = 3;\n            }\n\n            var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n            if (levels <= 0 || siblingsCount <= 0) {\n                return g;\n            }\n            var root = new Node((++counter).toString());\n            g.addNode(root);\n            g.root = root;\n            lastAdded.push(root);\n            for (var i = 0; i < levels; i++) {\n                news = [];\n                for (var j = 0; j < lastAdded.length; j++) {\n                    var parent = lastAdded[j];\n                    for (var k = 0; k < siblingsCount; k++) {\n                        var item = new Node((++counter).toString());\n                        g.addLink(parent, item);\n                        news.push(item);\n                    }\n                }\n                lastAdded = news;\n            }\n            return g;\n        },\n\n        /**\n         * Creates a balanced tree with the specified number of levels and siblings count.\n         * Note that for a balanced forest of level N, sibling count s and tree count t, counting the root as level zero:\n         *  - NodeCount = t.(1-s^(N+1))/(1-s)]\n         *  - LinkCount = t.s.(1-s^N)/(1-s)\n         * @param levels How many levels the tree should have.\n         * @param siblingsCount How many siblings each level should have.\n         * @returns {diagram.Graph}\n         * @param treeCount The number of trees the forest should have.\n         */\n        createBalancedForest: function(levels, siblingsCount, treeCount) {\n            if (Utils.isUndefined(levels)) {\n                levels = 3;\n            }\n            if (Utils.isUndefined(siblingsCount)) {\n                siblingsCount = 3;\n            }\n            if (Utils.isUndefined(treeCount)) {\n                treeCount = 5;\n            }\n            var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n            if (levels <= 0 || siblingsCount <= 0 || treeCount <= 0) {\n                return g;\n            }\n\n            for (var t = 0; t < treeCount; t++) {\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                lastAdded = [root];\n                for (var i = 0; i < levels; i++) {\n                    news = [];\n                    for (var j = 0; j < lastAdded.length; j++) {\n                        var parent = lastAdded[j];\n                        for (var k = 0; k < siblingsCount; k++) {\n                            var item = new Node((++counter).toString());\n                            g.addLink(parent, item);\n                            news.push(item);\n                        }\n                    }\n                    lastAdded = news;\n                }\n            }\n            return g;\n        },\n\n        /**\n         * Creates a random graph (uniform distribution) with the specified amount of nodes.\n         * @param nodeCount The amount of nodes the random graph should have.\n         * @param maxIncidence The maximum allowed degree of the nodes.\n         * @param isTree Whether the return graph should be a tree (default: false).\n         * @returns {diagram.Graph}\n         */\n        createRandomConnectedGraph: function(nodeCount, maxIncidence, isTree) {\n\n            /* Swa's Mathematica export of random Bernoulli graphs\n             gr[n_,p_]:=Module[{g=RandomGraph[BernoulliGraphDistribution[n,p],VertexLabels->\"Name\",DirectedEdges->True]},\n             While[Not[ConnectedGraphQ[g]],g=RandomGraph[BernoulliGraphDistribution[n,p],VertexLabels->\"Name\",DirectedEdges->True]];g];\n             project[a_]:=(\"\\\"\"<>ToString[Part[#,1]]<>\"->\"<>ToString[Part[#,2]]<>\"\\\"\")&     @ a;\n             export[g_]:=project/@ EdgeList[g]\n             g = gr[12,.1]\n             export [g]\n             */\n\n            if (Utils.isUndefined(nodeCount)) {\n                nodeCount = 40;\n            }\n            if (Utils.isUndefined(maxIncidence)) {\n                maxIncidence = 4;\n            }\n            if (Utils.isUndefined(isTree)) {\n                isTree = false;\n            }\n\n            var g = new diagram.Graph(), counter = -1;\n            if (nodeCount <= 0) {\n                return g;\n            }\n\n            var root = new Node((++counter).toString());\n            g.addNode(root);\n            if (nodeCount === 1) {\n                return g;\n            }\n            if (nodeCount > 1) {\n                // random tree\n                for (var i = 1; i < nodeCount; i++) {\n                    var poolNode = g.takeRandomNode([], maxIncidence);\n                    if (!poolNode) {\n                        //failed to find one so the graph will have less nodes than specified\n                        break;\n                    }\n                    var newNode = g.addNode(i.toString());\n                    g.addLink(poolNode, newNode);\n                }\n                if (!isTree && nodeCount > 1) {\n                    var randomAdditions = Utils.randomInteger(1, nodeCount);\n                    for (var ri = 0; ri < randomAdditions; ri++) {\n                        var n1 = g.takeRandomNode([], maxIncidence);\n                        var n2 = g.takeRandomNode([], maxIncidence);\n                        if (n1 && n2 && !g.areConnected(n1, n2)) {\n                            g.addLink(n1, n2);\n                        }\n                    }\n                }\n                return g;\n            }\n        },\n\n        /**\n         * Generates a random diagram.\n         * @param diagram The host diagram.\n         * @param shapeCount The number of shapes the random diagram should contain.\n         * @param maxIncidence The maximum degree the shapes can have.\n         * @param isTree Whether the generated diagram should be a tree\n         * @param layoutType The optional layout type to apply after the diagram is generated.\n         */\n        randomDiagram: function(diagram, shapeCount, maxIncidence, isTree, randomSize) {\n            var g = kendo.dataviz.diagram.Graph.Utils.createRandomConnectedGraph(shapeCount, maxIncidence, isTree);\n            Graph.Utils.createDiagramFromGraph(diagram, g, false, randomSize);\n        }\n    };\n\n    kendo.deepExtend(diagram, {\n        init: function(element) {\n            kendo.init(element, diagram.ui);\n        },\n\n        Point: ExtendedPoint,\n        Intersect: Intersect,\n        Geometry: Geometry,\n        Rect: Rect,\n        Size: Size,\n        RectAlign: RectAlign,\n        Matrix: Matrix,\n        MatrixVector: MatrixVector,\n        normalVariable: normalVariable,\n        randomId: randomId,\n        Dictionary: Dictionary,\n        HashTable: HashTable,\n        Queue: Queue,\n        Set: Set,\n        Node: Node,\n        Link: Link,\n        Graph: Graph,\n        PathDefiner: PathDefiner\n    });\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    // Imports ================================================================\n    var kendo = window.kendo,\n        diagram = kendo.dataviz.diagram,\n        Class = kendo.Class,\n        deepExtend = kendo.deepExtend,\n        Point = diagram.Point,\n        Rect = diagram.Rect,\n        Matrix = diagram.Matrix,\n        Utils = diagram.Utils,\n        isNumber = Utils.isNumber,\n        isString = Utils.isString,\n        MatrixVector = diagram.MatrixVector,\n\n        g = kendo.geometry,\n        d = kendo.drawing,\n\n        defined = d.util.defined,\n\n        inArray = $.inArray;\n\n    // Constants ==============================================================\n    var TRANSPARENT = \"transparent\",\n        Markers = {\n            none: \"none\",\n            arrowStart: \"ArrowStart\",\n            filledCircle: \"FilledCircle\",\n            arrowEnd: \"ArrowEnd\"\n        },\n        FULL_CIRCLE_ANGLE = 360,\n        START = \"start\",\n        END = \"end\",\n        WIDTH = \"width\",\n        HEIGHT = \"height\",\n        X = \"x\",\n        Y = \"y\";\n\n    diagram.Markers = Markers;\n\n    function diffNumericOptions(options, fields) {\n        var elementOptions = this.options;\n        var hasChanges = false;\n        var value, field;\n        for (var i = 0; i < fields.length; i++) {\n            field = fields[i];\n            value = options[field];\n            if (isNumber(value) && elementOptions[field] !== value) {\n                elementOptions[field] = value;\n                hasChanges = true;\n            }\n        }\n\n        return hasChanges;\n    }\n\n    var Scale = Class.extend({\n        init: function(x, y) {\n            this.x = x;\n            this.y = y;\n        },\n        toMatrix: function() {\n            return Matrix.scaling(this.x, this.y);\n        },\n        toString: function() {\n            return kendo.format(\"scale({0},{1})\", this.x, this.y);\n        },\n        invert: function() {\n            return new Scale(1 / this.x, 1 / this.y);\n        }\n    });\n\n    var Translation = Class.extend({\n        init: function(x, y) {\n            this.x = x;\n            this.y = y;\n        },\n        toMatrixVector: function() {\n            return new MatrixVector(0, 0, 0, 0, this.x, this.y);\n        },\n        toMatrix: function() {\n            return Matrix.translation(this.x, this.y);\n        },\n        toString: function() {\n            return kendo.format(\"translate({0},{1})\", this.x, this.y);\n        },\n        plus: function(delta) {\n            this.x += delta.x;\n            this.y += delta.y;\n        },\n        times: function(factor) {\n            this.x *= factor;\n            this.y *= factor;\n        },\n        length: function() {\n            return Math.sqrt(this.x * this.x + this.y * this.y);\n        },\n        normalize: function() {\n            if (this.Length === 0) {\n                return;\n            }\n            this.times(1 / this.length());\n        },\n        invert: function() {\n            return new Translation(-this.x, -this.y);\n        }\n    });\n\n    var Rotation = Class.extend({\n        init: function(angle, x, y) {\n            this.x = x || 0;\n            this.y = y || 0;\n            this.angle = angle;\n        },\n        toString: function() {\n            if (this.x && this.y) {\n                return kendo.format(\"rotate({0},{1},{2})\", this.angle, this.x, this.y);\n            } else {\n                return kendo.format(\"rotate({0})\", this.angle);\n            }\n        },\n        toMatrix: function() {\n            return Matrix.rotation(this.angle, this.x, this.y); // T*R*T^-1\n        },\n        center: function() {\n            return new Point(this.x, this.y);\n        },\n        invert: function() {\n            return new Rotation(FULL_CIRCLE_ANGLE - this.angle, this.x, this.y);\n        }\n    });\n\n    Rotation.ZERO = new Rotation(0);\n\n    Rotation.create = function(rotation) {\n        return new Rotation(rotation.angle, rotation.x, rotation.y);\n    };\n\n    Rotation.parse = function(str) {\n        var values = str.slice(1, str.length - 1).split(\",\"),\n            angle = values[0],\n            x = values[1],\n            y = values[2];\n        var rotation = new Rotation(angle, x, y);\n        return rotation;\n    };\n\n    var CompositeTransform = Class.extend({\n        init: function(x, y, scaleX, scaleY, angle, center) {\n            this.translate = new Translation(x, y);\n            if (scaleX !== undefined$1 && scaleY !== undefined$1) {\n                this.scale = new Scale(scaleX, scaleY);\n            }\n            if (angle !== undefined$1) {\n                this.rotate = center ? new Rotation(angle, center.x, center.y) : new Rotation(angle);\n            }\n        },\n        toString: function() {\n            var toString = function(transform) {\n                return transform ? transform.toString() : \"\";\n            };\n\n            return toString(this.translate) +\n                toString(this.rotate) +\n                toString(this.scale);\n        },\n\n        render: function(visual) {\n            visual._transform = this;\n            visual._renderTransform();\n        },\n\n        toMatrix: function() {\n            var m = Matrix.unit();\n\n            if (this.translate) {\n                m = m.times(this.translate.toMatrix());\n            }\n            if (this.rotate) {\n                m = m.times(this.rotate.toMatrix());\n            }\n            if (this.scale) {\n                m = m.times(this.scale.toMatrix());\n            }\n            return m;\n        },\n        invert: function() {\n            var rotate = this.rotate ? this.rotate.invert() : undefined$1,\n                rotateMatrix = rotate ? rotate.toMatrix() : Matrix.unit(),\n                scale = this.scale ? this.scale.invert() : undefined$1,\n                scaleMatrix = scale ? scale.toMatrix() : Matrix.unit();\n\n            var translatePoint = new Point(-this.translate.x, -this.translate.y);\n            translatePoint = rotateMatrix.times(scaleMatrix).apply(translatePoint);\n            var translate = new Translation(translatePoint.x, translatePoint.y);\n\n            var transform = new CompositeTransform();\n            transform.translate = translate;\n            transform.rotate = rotate;\n            transform.scale = scale;\n\n            return transform;\n        }\n    });\n\n    var AutoSizeableMixin = {\n        _setScale: function() {\n            var options = this.options;\n            var originWidth = this._originWidth;\n            var originHeight = this._originHeight;\n            var scaleX = options.width / originWidth;\n            var scaleY = options.height / originHeight;\n\n            if (!isNumber(scaleX)) {\n                scaleX = 1;\n            }\n            if (!isNumber(scaleY)) {\n                scaleY = 1;\n            }\n\n            this._transform.scale = new Scale(scaleX, scaleY);\n        },\n\n        _setTranslate: function() {\n            var options = this.options;\n            var x = options.x || 0;\n            var y = options.y || 0;\n            this._transform.translate = new Translation(x, y);\n        },\n\n        _initSize: function() {\n            var options = this.options;\n            var transform = false;\n            if (options.autoSize !== false && (defined(options.width) || defined(options.height))) {\n                this._measure(true);\n                this._setScale();\n                transform = true;\n            }\n\n            if (defined(options.x) || defined(options.y)) {\n                this._setTranslate();\n                transform = true;\n            }\n\n            if (transform) {\n                this._renderTransform();\n            }\n        },\n\n        _updateSize: function(options) {\n            var update = false;\n\n            if (this.options.autoSize !== false && this._diffNumericOptions(options, [WIDTH, HEIGHT])) {\n                update = true;\n                this._measure(true);\n                this._setScale();\n            }\n\n            if (this._diffNumericOptions(options, [X, Y])) {\n                update = true;\n                this._setTranslate();\n            }\n\n            if (update) {\n                this._renderTransform();\n            }\n\n            return update;\n        }\n    };\n\n    var Element = Class.extend({\n        init: function(options) {\n            var element = this;\n            element.options = deepExtend({}, element.options, options);\n            element.id = element.options.id;\n            element._originSize = Rect.empty();\n            element._transform = new CompositeTransform();\n        },\n\n        visible: function(value) {\n            return this.drawingContainer().visible(value);\n        },\n\n        redraw: function(options) {\n            if (options && options.id) {\n                 this.id = options.id;\n            }\n        },\n\n        position: function(x, y) {\n            var options = this.options;\n            if (!defined(x)) {\n               return new Point(options.x, options.y);\n            }\n\n            if (defined(y)) {\n                options.x = x;\n                options.y = y;\n            } else if (x instanceof Point) {\n                options.x = x.x;\n                options.y = x.y;\n            }\n\n            this._transform.translate = new Translation(options.x, options.y);\n            this._renderTransform();\n        },\n\n        rotate: function(angle, center) {\n            if (defined(angle)) {\n                this._transform.rotate = new Rotation(angle, center.x, center.y);\n                this._renderTransform();\n            }\n            return this._transform.rotate || Rotation.ZERO;\n        },\n\n        drawingContainer: function() {\n            return this.drawingElement;\n        },\n\n        _renderTransform: function() {\n            var matrix = this._transform.toMatrix();\n            this.drawingContainer().transform(new g.Matrix(matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f));\n        },\n\n        _hover: function() {},\n\n        _diffNumericOptions: diffNumericOptions,\n\n        _measure: function(force) {\n            var rect;\n            if (!this._measured || force) {\n                var box = this._boundingBox() || new g.Rect();\n                var startPoint = box.topLeft();\n                rect = new Rect(startPoint.x, startPoint.y, box.width(), box.height());\n                this._originSize = rect;\n                this._originWidth = rect.width;\n                this._originHeight = rect.height;\n                this._measured = true;\n            } else {\n                rect = this._originSize;\n            }\n            return rect;\n        },\n\n        _boundingBox: function() {\n            return this.drawingElement.rawBBox();\n        }\n    });\n\n    var VisualBase = Element.extend({\n        init: function(options) {\n            Element.fn.init.call(this, options);\n\n            options = this.options;\n            options.fill = normalizeDrawingOptions(options.fill);\n            options.stroke = normalizeDrawingOptions(options.stroke);\n        },\n\n        options: {\n            stroke: {\n                color: \"gray\",\n                width: 1\n            },\n            fill: {\n                color: TRANSPARENT\n            }\n        },\n\n        fill: function(color, opacity) {\n            this._fill({\n                color: getColor(color),\n                opacity: opacity\n            });\n        },\n\n        stroke: function(color, width, opacity) {\n            this._stroke({\n                color: getColor(color),\n                width: width,\n                opacity: opacity\n            });\n        },\n\n        redraw: function(options) {\n            if (options) {\n                var stroke = options.stroke;\n                var fill = options.fill;\n                if (stroke) {\n                    this._stroke(normalizeDrawingOptions(stroke));\n                }\n                if (fill) {\n                    this._fill(normalizeDrawingOptions(fill));\n                }\n\n                Element.fn.redraw.call(this, options);\n            }\n        },\n\n        _hover: function(show) {\n            var drawingElement = this.drawingElement;\n            var options = this.options;\n            var hover = options.hover;\n\n            if (hover && hover.fill) {\n                var fill = show ? normalizeDrawingOptions(hover.fill) : options.fill;\n                drawingElement.fill(fill.color, fill.opacity);\n            }\n        },\n\n        _stroke: function(strokeOptions) {\n            var options = this.options;\n            deepExtend(options, {\n                stroke: strokeOptions\n            });\n\n            strokeOptions = options.stroke;\n\n            var stroke = null;\n            if (strokeOptions.width > 0) {\n                stroke = {\n                    color: strokeOptions.color,\n                    width: strokeOptions.width,\n                    opacity: strokeOptions.opacity,\n                    dashType: strokeOptions.dashType\n                };\n            }\n\n            this.drawingElement.options.set(\"stroke\", stroke);\n        },\n\n        _fill: function(fillOptions) {\n            var options = this.options;\n            deepExtend(options, {\n                fill: fillOptions || {}\n            });\n            var fill = options.fill;\n\n            if (fill.gradient) {\n                var gradient = fill.gradient;\n                var GradientClass = (gradient.type === \"radial\" ? d.RadialGradient : d.LinearGradient);\n                this.drawingElement.fill(new GradientClass(gradient));\n            } else {\n                this.drawingElement.fill(fill.color, fill.opacity);\n            }\n        }\n    });\n\n    var TextBlock = VisualBase.extend({\n        init: function(options) {\n            options = this._textColor(options);\n            VisualBase.fn.init.call(this, options);\n\n            this._font();\n            this._initText();\n            this._initSize();\n        },\n\n        options: {\n            fontSize: 15,\n            fontFamily: \"sans-serif\",\n            stroke: {\n                width: 0\n            },\n            fill: {\n                color: \"black\"\n            },\n            autoSize: true\n        },\n\n        _initText: function() {\n            var options = this.options;\n\n            this.drawingElement = new d.Text(defined(options.text) ? options.text : \"\", new g.Point(), {\n                font: options.font\n            });\n\n            this._fill();\n            this._stroke();\n        },\n\n        _textColor: function(options) {\n            if (options && options.color) {\n                options = deepExtend({}, options, {\n                    fill: {\n                        color: options.color\n                    }\n                });\n            }\n            return options;\n        },\n\n        _font: function() {\n            var options = this.options;\n            if (options.fontFamily && defined(options.fontSize)) {\n                var fontOptions = [];\n\n                if (options.fontStyle) {\n                    fontOptions.push(options.fontStyle);\n                }\n\n                if (options.fontWeight) {\n                    fontOptions.push(options.fontWeight);\n                }\n\n                fontOptions.push(options.fontSize + (isNumber(options.fontSize) ? \"px\" : \"\"));\n                fontOptions.push(options.fontFamily);\n\n                options.font = fontOptions.join(\" \");\n            } else {\n                delete options.font;\n            }\n        },\n\n        content: function(text) {\n            return this.drawingElement.content(text);\n        },\n\n        redraw: function(options) {\n            if (options) {\n                var sizeChanged = false;\n                var textOptions = this.options;\n\n                options = this._textColor(options);\n\n                VisualBase.fn.redraw.call(this, options);\n\n                if (options.fontFamily || defined(options.fontSize) || options.fontStyle || options.fontWeight) {\n                    deepExtend(textOptions, {\n                        fontFamily: options.fontFamily,\n                        fontSize: options.fontSize,\n                        fontStyle: options.fontStyle,\n                        fontWeight: options.fontWeight\n                    });\n                    this._font();\n                    this.drawingElement.options.set(\"font\", textOptions.font);\n                    sizeChanged = true;\n                }\n\n                if (options.text) {\n                    this.content(options.text);\n                    sizeChanged = true;\n                }\n\n                if (!this._updateSize(options) && sizeChanged) {\n                    this._initSize();\n                }\n            }\n        }\n    });\n\n    deepExtend(TextBlock.fn, AutoSizeableMixin);\n\n    var Rectangle = VisualBase.extend({\n        init: function(options) {\n            VisualBase.fn.init.call(this, options);\n            this._initPath();\n            this._setPosition();\n        },\n\n        _setPosition: function() {\n            var options = this.options;\n            var x = options.x;\n            var y = options.y;\n            if (defined(x) || defined(y)) {\n                this.position(x || 0, y || 0);\n            }\n        },\n\n        redraw: function(options) {\n            if (options) {\n                VisualBase.fn.redraw.call(this, options);\n                if (this._diffNumericOptions(options, [WIDTH, HEIGHT])) {\n                    this._drawPath();\n                }\n                if (this._diffNumericOptions(options, [X, Y])) {\n                    this._setPosition();\n                }\n            }\n        },\n\n        _initPath: function() {\n            var options = this.options;\n            this.drawingElement = new d.Path({\n                stroke: options.stroke,\n                closed: true\n            });\n\n            this._fill();\n            this._drawPath();\n        },\n\n        _drawPath: function() {\n            var drawingElement = this.drawingElement;\n            var sizeOptions = sizeOptionsOrDefault(this.options);\n            var width = sizeOptions.width;\n            var height = sizeOptions.height;\n\n            drawingElement.segments.elements([\n                createSegment(0, 0),\n                createSegment(width, 0),\n                createSegment(width, height),\n                createSegment(0, height)\n            ]);\n        }\n    });\n\n    var MarkerBase = VisualBase.extend({\n        init: function(options) {\n           VisualBase.fn.init.call(this, options);\n           var anchor = this.options.anchor;\n           this.anchor = new g.Point(anchor.x, anchor.y);\n           this.createElement();\n        },\n\n        options: {\n           stroke: {\n                color: TRANSPARENT,\n                width: 0\n           },\n           fill: {\n                color: \"black\"\n           }\n        },\n\n        _transformToPath: function(point, path) {\n            var transform = path.transform();\n            if (point && transform) {\n                point = point.transformCopy(transform);\n            }\n            return point;\n        },\n\n        redraw: function(options) {\n            if (options) {\n                if (options.position) {\n                    this.options.position = options.position;\n                }\n\n                VisualBase.fn.redraw.call(this, options);\n            }\n        }\n    });\n\n    var CircleMarker = MarkerBase.extend({\n        options: {\n            radius: 4,\n            anchor: {\n                x: 0,\n                y: 0\n            }\n        },\n\n        createElement: function() {\n            var options = this.options;\n            this.drawingElement = new d.Circle(new g.Circle(this.anchor, options.radius), {\n                fill: options.fill,\n                stroke: options.stroke\n            });\n        },\n\n        positionMarker: function(path) {\n            var options = this.options;\n            var position = options.position;\n            var segments = path.segments;\n            var targetSegment;\n            var point;\n\n            if (position == START) {\n                targetSegment = segments[0];\n            } else {\n                targetSegment = segments[segments.length - 1];\n            }\n            if (targetSegment) {\n                point = this._transformToPath(targetSegment.anchor(), path);\n                this.drawingElement.transform(g.transform().translate(point.x, point.y));\n            }\n        }\n    });\n\n    var ArrowMarker = MarkerBase.extend({\n        options: {\n            path: \"M 0 0 L 10 5 L 0 10 L 3 5 z\" ,\n            anchor: {\n                x: 10,\n                y: 5\n            }\n        },\n\n        createElement: function() {\n            var options = this.options;\n            this.drawingElement = d.Path.parse(options.path, {\n                fill: options.fill,\n                stroke: options.stroke\n            });\n        },\n\n        positionMarker: function(path) {\n            var points = this._linePoints(path);\n            var start = points.start;\n            var end = points.end;\n            var transform = g.transform();\n            if (start) {\n                transform.rotate(lineAngle(start, end), end);\n            }\n\n            if (end) {\n                var anchor = this.anchor;\n                var translate = end.clone().translate(-anchor.x, -anchor.y);\n                transform.translate(translate.x, translate.y);\n            }\n            this.drawingElement.transform(transform);\n        },\n\n        _linePoints: function(path) {\n            var options = this.options;\n            var segments = path.segments;\n            var startPoint, endPoint, targetSegment;\n            if (options.position == START) {\n                targetSegment = segments[0];\n                if (targetSegment) {\n                    endPoint = targetSegment.anchor();\n                    startPoint = targetSegment.controlOut();\n                    var nextSegment = segments[1];\n                    if (!startPoint && nextSegment) {\n                        startPoint = nextSegment.anchor();\n                    }\n                }\n            } else {\n                targetSegment = segments[segments.length - 1];\n                if (targetSegment) {\n                    endPoint = targetSegment.anchor();\n                    startPoint = targetSegment.controlIn();\n                    var prevSegment = segments[segments.length - 2];\n                    if (!startPoint && prevSegment) {\n                        startPoint = prevSegment.anchor();\n                    }\n                }\n            }\n            if (endPoint) {\n                return {\n                    start: this._transformToPath(startPoint, path),\n                    end: this._transformToPath(endPoint, path)\n                };\n            }\n        }\n    });\n\n    var MarkerPathMixin = {\n        _getPath: function(position) {\n            var path = this.drawingElement;\n            if (path instanceof d.MultiPath) {\n                if (position == START) {\n                    path = path.paths[0];\n                } else {\n                    path = path.paths[path.paths.length - 1];\n                }\n            }\n            if (path && path.segments.length) {\n                return path;\n            }\n        },\n\n        _normalizeMarkerOptions: function(options) {\n            var startCap = options.startCap;\n            var endCap = options.endCap;\n\n            if (isString(startCap)) {\n                options.startCap = {\n                    type: startCap\n                };\n            }\n\n            if (isString(endCap)) {\n                options.endCap = {\n                    type: endCap\n                };\n            }\n        },\n\n        _removeMarker: function(position) {\n            var marker = this._markers[position];\n            if (marker) {\n                this.drawingContainer().remove(marker.drawingElement);\n                delete this._markers[position];\n            }\n        },\n\n        _createMarkers: function() {\n            var options = this.options;\n            this._normalizeMarkerOptions(options);\n\n            this._markers = {};\n            this._markers[START] = this._createMarker(options.startCap, START);\n            this._markers[END] = this._createMarker(options.endCap, END);\n        },\n\n        _createMarker: function(options, position) {\n            var type = (options || {}).type;\n            var path = this._getPath(position);\n            var markerType, marker;\n            if (!path) {\n                this._removeMarker(position);\n                return;\n            }\n\n            if (type == Markers.filledCircle) {\n                markerType = CircleMarker;\n            } else if (type == Markers.arrowStart || type == Markers.arrowEnd) {\n                markerType = ArrowMarker;\n            } else {\n                this._removeMarker(position);\n            }\n            if (markerType) {\n                marker = new markerType(deepExtend({}, options, {\n                    position: position\n                }));\n                marker.positionMarker(path);\n                this.drawingContainer().append(marker.drawingElement);\n\n                return marker;\n            }\n        },\n\n        _positionMarker: function(position) {\n            var marker = this._markers[position];\n\n            if (marker) {\n                var path = this._getPath(position);\n                if (path) {\n                    marker.positionMarker(path);\n                } else {\n                    this._removeMarker(position);\n                }\n            }\n        },\n\n        _capMap: {\n            start: \"startCap\",\n            end: \"endCap\"\n        },\n\n        _redrawMarker: function(pathChange, position, options) {\n            this._normalizeMarkerOptions(options);\n\n            var pathOptions = this.options;\n            var cap = this._capMap[position];\n            var pathCapType = (pathOptions[cap] || {}).type;\n            var optionsCap = options[cap];\n            var created = false;\n            if (optionsCap) {\n                pathOptions[cap] = deepExtend({}, pathOptions[cap], optionsCap);\n                if (optionsCap.type && pathCapType != optionsCap.type) {\n                    this._removeMarker(position);\n                    this._markers[position] = this._createMarker(pathOptions[cap], position);\n                    created = true;\n                } else if (this._markers[position]) {\n                   this._markers[position].redraw(optionsCap);\n                }\n            } else if (pathChange && !this._markers[position] && pathOptions[cap]) {\n                this._markers[position] = this._createMarker(pathOptions[cap], position);\n                created = true;\n            }\n            return created;\n        },\n\n        _redrawMarkers: function(pathChange, options) {\n            if (!this._redrawMarker(pathChange, START, options) && pathChange) {\n                this._positionMarker(START);\n            }\n            if (!this._redrawMarker(pathChange, END, options) && pathChange) {\n                this._positionMarker(END);\n            }\n        }\n    };\n\n    var Path = VisualBase.extend({\n        init: function(options) {\n            VisualBase.fn.init.call(this, options);\n            this.container = new d.Group();\n            this._createElements();\n            this._initSize();\n        },\n\n        options: {\n            autoSize: true\n        },\n\n        drawingContainer: function() {\n            return this.container;\n        },\n\n        data: function(value) {\n            var options = this.options;\n            if (value) {\n                if (options.data != value) {\n                   options.data = value;\n                   this._setData(value);\n                   this._initSize();\n                   this._redrawMarkers(true, {});\n                }\n            } else {\n                return options.data;\n            }\n        },\n\n        redraw: function(options) {\n            if (options) {\n                VisualBase.fn.redraw.call(this, options);\n\n                var pathOptions = this.options;\n                var data = options.data;\n\n                if (defined(data) && pathOptions.data != data) {\n                    pathOptions.data = data;\n                    this._setData(data);\n                    if (!this._updateSize(options)) {\n                        this._initSize();\n                    }\n                    this._redrawMarkers(true, options);\n                } else {\n                    this._updateSize(options);\n                    this._redrawMarkers(false, options);\n                }\n            }\n        },\n\n        _createElements: function() {\n            var options = this.options;\n\n            this.drawingElement = d.Path.parse(options.data || \"\", {\n                stroke: options.stroke\n            });\n\n            this._fill();\n            this.container.append(this.drawingElement);\n            this._createMarkers();\n        },\n\n        _setData: function(data) {\n            var drawingElement = this.drawingElement;\n            var multipath = d.Path.parse(data || \"\");\n            var paths = multipath.paths.slice(0);\n            multipath.paths.elements([]);\n            drawingElement.paths.elements(paths);\n        }\n    });\n\n    deepExtend(Path.fn, AutoSizeableMixin);\n    deepExtend(Path.fn, MarkerPathMixin);\n\n    var Line = VisualBase.extend({\n        init: function(options) {\n            VisualBase.fn.init.call(this, options);\n            this.container = new d.Group();\n            this._initPath();\n            this._createMarkers();\n        },\n\n        drawingContainer: function() {\n            return this.container;\n        },\n\n        redraw: function(options) {\n            if (options) {\n                options = options || {};\n                var from = options.from;\n                var to = options.to;\n                if (from) {\n                    this.options.from = from;\n                }\n\n                if (to) {\n                    this.options.to = to;\n                }\n\n                if (from || to) {\n                    this._drawPath();\n                    this._redrawMarkers(true, options);\n                } else {\n                    this._redrawMarkers(false, options);\n                }\n\n                VisualBase.fn.redraw.call(this, options);\n            }\n        },\n\n        _initPath: function() {\n            var options = this.options;\n            var drawingElement = this.drawingElement = new d.Path({\n                stroke: options.stroke\n            });\n\n            this._fill();\n            this._drawPath();\n            this.container.append(drawingElement);\n        },\n\n        _drawPath: function() {\n            var options = this.options;\n            var drawingElement = this.drawingElement;\n            var from = options.from || new Point();\n            var to = options.to || new Point();\n\n            drawingElement.segments.elements([\n                createSegment(from.x, from.y),\n                createSegment(to.x, to.y)\n            ]);\n        }\n    });\n\n    deepExtend(Line.fn, MarkerPathMixin);\n\n    var Polyline = VisualBase.extend({\n        init: function(options) {\n            VisualBase.fn.init.call(this, options);\n            this.container = new d.Group();\n            this._initPath();\n            this._createMarkers();\n        },\n\n        drawingContainer: function() {\n            return this.container;\n        },\n\n        points: function(points) {\n            var options = this.options;\n            if (points) {\n                options.points = points;\n                this._updatePath();\n            } else {\n                return options.points;\n            }\n        },\n\n        redraw: function(options) {\n            if (options) {\n                var points = options.points;\n                VisualBase.fn.redraw.call(this, options);\n\n                if (points && this._pointsDiffer(points)) {\n                    this.points(points);\n                    this._redrawMarkers(true, options);\n                } else {\n                    this._redrawMarkers(false, options);\n                }\n            }\n        },\n\n        _initPath: function() {\n            var options = this.options;\n            this.drawingElement = new d.Path({\n                stroke: options.stroke\n            });\n\n            this._fill();\n            this.container.append(this.drawingElement);\n\n            if (options.points) {\n                this._updatePath();\n            }\n        },\n\n        _pointsDiffer: function(points) {\n            var currentPoints = this.options.points;\n            var differ = currentPoints.length !== points.length;\n            if (!differ) {\n                for (var i = 0; i < points.length; i++) {\n                    if (currentPoints[i].x !== points[i].x || currentPoints[i].y !== points[i].y) {\n                        differ = true;\n                        break;\n                    }\n                }\n            }\n\n            return differ;\n        },\n\n        _updatePath: function() {\n            var drawingElement = this.drawingElement;\n            var options = this.options;\n            var points = options.points;\n            var segments = [];\n            var point;\n            for (var i = 0; i < points.length; i++) {\n                point = points[i];\n                segments.push(createSegment(point.x, point.y));\n            }\n\n            drawingElement.segments.elements(segments);\n        },\n\n        options: {\n            points: []\n        }\n    });\n\n    deepExtend(Polyline.fn, MarkerPathMixin);\n\n    var Image = Element.extend({\n        init: function(options) {\n            Element.fn.init.call(this, options);\n\n            this._initImage();\n        },\n\n        redraw: function(options) {\n            if (options) {\n                if (options.source) {\n                    this.drawingElement.src(options.source);\n                }\n\n                if (this._diffNumericOptions(options, [WIDTH, HEIGHT, X, Y])) {\n                    this.drawingElement.rect(this._rect());\n                }\n\n                Element.fn.redraw.call(this, options);\n            }\n        },\n\n        _initImage: function() {\n            var options = this.options;\n            var rect = this._rect();\n\n            this.drawingElement = new d.Image(options.source, rect, {});\n        },\n\n        _rect: function() {\n            var sizeOptions = sizeOptionsOrDefault(this.options);\n            var origin = new g.Point(sizeOptions.x, sizeOptions.y);\n            var size = new g.Size(sizeOptions.width, sizeOptions.height);\n\n            return new g.Rect(origin, size);\n        }\n    });\n\n    var Group = Element.extend({\n        init: function(options) {\n            this.children = [];\n            Element.fn.init.call(this, options);\n            this.drawingElement = new d.Group();\n            this._initSize();\n        },\n\n        options: {\n            autoSize: false\n        },\n\n        append: function(visual) {\n            this.drawingElement.append(visual.drawingContainer());\n            this.children.push(visual);\n            this._childrenChange = true;\n        },\n\n        remove: function(visual) {\n            if (this._remove(visual)) {\n                this._childrenChange = true;\n            }\n        },\n\n        _remove: function(visual) {\n            var index = inArray(visual, this.children);\n            if (index >= 0) {\n                this.drawingElement.removeAt(index);\n                this.children.splice(index, 1);\n                return true;\n            }\n        },\n\n        clear: function() {\n            this.drawingElement.clear();\n            this.children = [];\n            this._childrenChange = true;\n        },\n\n        toFront: function(visuals) {\n            var visual;\n\n            for (var i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                if (this._remove(visual)) {\n                    this.append(visual);\n                }\n            }\n        },\n        //TO DO: add drawing group support for moving and inserting children\n        toBack: function(visuals) {\n            this._reorderChildren(visuals, 0);\n        },\n\n        toIndex: function(visuals, indices) {\n            this._reorderChildren(visuals, indices);\n        },\n\n        _reorderChildren: function(visuals, indices) {\n            var group = this.drawingElement;\n            var drawingChildren = group.children.slice(0);\n            var children = this.children;\n            var fixedPosition = isNumber(indices);\n            var i, index, toIndex, drawingElement, visual;\n\n            for (i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                drawingElement = visual.drawingContainer();\n\n                index = inArray(visual, children);\n                if (index >= 0) {\n                    drawingChildren.splice(index, 1);\n                    children.splice(index, 1);\n\n                    toIndex = fixedPosition ? indices : indices[i];\n\n                    drawingChildren.splice(toIndex, 0, drawingElement);\n                    children.splice(toIndex, 0, visual);\n                }\n            }\n            group.clear();\n            group.append.apply(group, drawingChildren);\n        },\n\n        redraw: function(options) {\n            if (options) {\n                if (this._childrenChange) {\n                    this._childrenChange = false;\n                    if (!this._updateSize(options)) {\n                        this._initSize();\n                    }\n                } else {\n                    this._updateSize(options);\n                }\n\n                Element.fn.redraw.call(this, options);\n            }\n        },\n\n        _boundingBox: function() {\n            var children = this.children;\n            var boundingBox;\n            var visual, childBoundingBox;\n            for (var i = 0; i < children.length; i++) {\n                visual = children[i];\n                if (visual.visible() && visual._includeInBBox !== false) {\n                    childBoundingBox = visual.drawingContainer().clippedBBox(null);\n                    if (childBoundingBox) {\n                        if (boundingBox) {\n                            boundingBox = g.Rect.union(boundingBox, childBoundingBox);\n                        } else {\n                            boundingBox = childBoundingBox;\n                        }\n                    }\n                }\n            }\n\n            return boundingBox;\n        }\n    });\n\n    deepExtend(Group.fn, AutoSizeableMixin);\n\n    var Layout = Group.extend({\n        init: function(rect, options) {\n            this.children = [];\n            Element.fn.init.call(this, options);\n            this.drawingElement = new d.Layout(toDrawingRect(rect), options);\n            this._initSize();\n        },\n\n        rect: function(rect) {\n            if (rect) {\n                this.drawingElement.rect(toDrawingRect(rect));\n            } else {\n                var drawingRect = this.drawingElement.rect();\n                if (drawingRect) {\n                    return new Rect(drawingRect.origin.x, drawingRect.origin.y, drawingRect.size.width, drawingRect.size.height);\n                }\n            }\n        },\n\n        reflow: function() {\n            this.drawingElement.reflow();\n        },\n\n        redraw: function(options) {\n            kendo.deepExtend(this.drawingElement.options, options);\n            Group.fn.redraw.call(this, options);\n        }\n    });\n\n    var Circle = VisualBase.extend({\n        init: function(options) {\n            VisualBase.fn.init.call(this, options);\n            this._initCircle();\n            this._initSize();\n        },\n\n        redraw: function(options) {\n            if (options) {\n                var circleOptions = this.options;\n\n                if (options.center) {\n                    deepExtend(circleOptions, {\n                        center: options.center\n                    });\n                    this._center.move(circleOptions.center.x, circleOptions.center.y);\n                }\n\n                if (this._diffNumericOptions(options, [\"radius\"])) {\n                    this._circle.setRadius(circleOptions.radius);\n                }\n\n                this._updateSize(options);\n\n                VisualBase.fn.redraw.call(this, options);\n            }\n        },\n\n        _initCircle: function() {\n            var options = this.options;\n            var width = options.width;\n            var height = options.height;\n            var radius = options.radius;\n            if (!defined(radius)) {\n                if (!defined(width)) {\n                    width = height;\n                }\n                if (!defined(height)) {\n                    height = width;\n                }\n                options.radius = radius = Math.min(width, height) / 2;\n            }\n\n            var center = options.center || { x: radius, y: radius };\n            this._center = new g.Point(center.x, center.y);\n            this._circle = new g.Circle(this._center, radius);\n            this.drawingElement = new d.Circle(this._circle, {\n                stroke: options.stroke\n            });\n\n            this._fill();\n        }\n    });\n    deepExtend(Circle.fn, AutoSizeableMixin);\n\n    var Canvas = Class.extend({\n        init: function(element, options) {\n            options = options || {};\n            this.element = element;\n            this.surface = d.Surface.create(element, options);\n            if (kendo.isFunction(this.surface.translate)) {\n                this.translate = this._translate;\n            }\n\n            this.drawingElement = new d.Group();\n            this._viewBox = new Rect(0, 0, options.width, options.height);\n            this.size(this._viewBox);\n        },\n\n        bounds: function() {\n            var box = this.drawingElement.clippedBBox();\n            return new Rect(0, 0, box.width(), box.height());\n        },\n\n        size: function(size) {\n            var viewBox = this._viewBox;\n            if (defined(size)) {\n                viewBox.width = size.width;\n                viewBox.height = size.height;\n                this.surface.setSize(size);\n            }\n            return {\n                width: viewBox.width,\n                height: viewBox.height\n            };\n        },\n\n        _translate: function(x, y) {\n            var viewBox = this._viewBox;\n            if (defined(x) && defined(y)) {\n                viewBox.x = x;\n                viewBox.y = y;\n                this.surface.translate({ x: x, y: y });\n            }\n            return {\n                x: viewBox.x,\n                y: viewBox.y\n            };\n        },\n\n        draw: function() {\n            this.surface.draw(this.drawingElement);\n        },\n\n        append: function(visual) {\n            this.drawingElement.append(visual.drawingContainer());\n            return this;\n        },\n\n        remove: function(visual) {\n            this.drawingElement.remove(visual.drawingContainer());\n        },\n\n        insertBefore: function() {\n\n        },\n\n        clear: function() {\n            this.drawingElement.clear();\n        },\n\n        destroy: function(clearHtml) {\n            this.surface.destroy();\n            if (clearHtml) {\n                $(this.element).remove();\n            }\n        }\n    });\n\n    // Helper functions ===========================================\n\n    function sizeOptionsOrDefault(options) {\n        return {\n            x: options.x || 0,\n            y: options.y || 0,\n            width: options.width || 0,\n            height: options.height || 0\n        };\n    }\n\n    function normalizeDrawingOptions(options) {\n        if (options) {\n            var drawingOptions = options;\n\n            if (isString(drawingOptions)) {\n                drawingOptions = {\n                    color: drawingOptions\n                };\n            }\n\n            if (drawingOptions.color) {\n                drawingOptions.color = getColor(drawingOptions.color);\n            }\n            return drawingOptions;\n        }\n    }\n\n    function getColor(value) {\n        var color;\n        if (value != TRANSPARENT) {\n            color = new d.Color(value).toHex();\n        } else {\n            color = value;\n        }\n        return color;\n    }\n\n    function lineAngle(p1, p2) {\n        var xDiff = p2.x - p1.x;\n        var yDiff = p2.y - p1.y;\n        var angle = d.util.deg(Math.atan2(yDiff, xDiff));\n        return angle;\n    }\n\n    function createSegment(x, y) {\n        return new g.Segment(new g.Point(x, y));\n    }\n\n    function toDrawingRect(rect) {\n        if (rect) {\n            return new g.Rect([rect.x, rect.y], [rect.width, rect.height]);\n        }\n    }\n\n    // Exports ================================================================\n    kendo.deepExtend(diagram, {\n        init: function(element) {\n            kendo.init(element, diagram.ui);\n        },\n        diffNumericOptions: diffNumericOptions,\n        Element: Element,\n        Scale: Scale,\n        Translation: Translation,\n        Rotation: Rotation,\n        Circle: Circle,\n        Group: Group,\n        Rectangle: Rectangle,\n        Canvas: Canvas,\n        Path: Path,\n        Layout: Layout,\n        Line: Line,\n        MarkerBase: MarkerBase,\n        ArrowMarker: ArrowMarker,\n        CircleMarker: CircleMarker,\n        Polyline: Polyline,\n        CompositeTransform: CompositeTransform,\n        TextBlock: TextBlock,\n        Image: Image,\n        VisualBase: VisualBase\n    });\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n        // Imports ================================================================\n        var kendo = window.kendo,\n            dataviz = kendo.dataviz,\n            diagram = dataviz.diagram,\n            Class = kendo.Class,\n            Group = diagram.Group,\n            Rect = diagram.Rect,\n            Rectangle = diagram.Rectangle,\n            Utils = diagram.Utils,\n            isUndefined = Utils.isUndefined,\n            Point = diagram.Point,\n            Circle = diagram.Circle,\n            Ticker = diagram.Ticker,\n            deepExtend = kendo.deepExtend,\n            Movable = kendo.ui.Movable,\n            util = kendo.drawing.util,\n            defined = util.defined,\n            inArray = $.inArray;\n\n        // Constants ==============================================================\n        var Cursors = {\n                arrow: \"default\",\n                grip: \"pointer\",\n                cross: \"pointer\",\n                add: \"pointer\",\n                move: \"move\",\n                select: \"pointer\",\n                south: \"s-resize\",\n                east: \"e-resize\",\n                west: \"w-resize\",\n                north: \"n-resize\",\n                rowresize: \"row-resize\",\n                colresize: \"col-resize\"\n            },\n            HIT_TEST_DISTANCE = 10,\n            AUTO = \"Auto\",\n            TOP = \"Top\",\n            RIGHT = \"Right\",\n            LEFT = \"Left\",\n            BOTTOM = \"Bottom\",\n            DEFAULT_SNAP_SIZE = 10,\n            DEFAULT_SNAP_ANGLE = 10,\n            DRAG_START = \"dragStart\",\n            DRAG = \"drag\",\n            DRAG_END = \"dragEnd\",\n            ITEMROTATE = \"itemRotate\",\n            ITEMBOUNDSCHANGE = \"itemBoundsChange\",\n            MIN_SNAP_SIZE = 5,\n            MIN_SNAP_ANGLE = 5,\n            MOUSE_ENTER = \"mouseEnter\",\n            MOUSE_LEAVE = \"mouseLeave\",\n            ZOOM_START = \"zoomStart\",\n            ZOOM_END = \"zoomEnd\",\n            SCROLL_MIN = -20000,\n            SCROLL_MAX = 20000,\n            FRICTION = 0.90,\n            FRICTION_MOBILE = 0.93,\n            VELOCITY_MULTIPLIER = 5,\n            TRANSPARENT = \"transparent\",\n            PAN = \"pan\",\n            ROTATED = \"rotated\",\n            SOURCE = \"source\",\n            TARGET = \"target\",\n            HANDLE_NAMES = {\n                \"-1\": SOURCE,\n                \"1\": TARGET\n            };\n\n        diagram.Cursors = Cursors;\n\n        var PositionAdapter = kendo.Class.extend({\n            init: function(layoutState) {\n                this.layoutState = layoutState;\n                this.diagram = layoutState.diagram;\n            },\n            initState: function() {\n                this.froms = [];\n                this.tos = [];\n                this.subjects = [];\n                function pusher(id, bounds) {\n                    var shape = this.diagram.getShapeById(id);\n                    if (shape) {\n                        this.subjects.push(shape);\n                        this.froms.push(shape.bounds().topLeft());\n                        this.tos.push(bounds.topLeft());\n                    }\n                }\n\n                this.layoutState.nodeMap.forEach(pusher, this);\n            },\n            update: function(tick) {\n                if (this.subjects.length <= 0) {\n                    return;\n                }\n                for (var i = 0; i < this.subjects.length; i++) {\n                    //todo: define a Lerp function instead\n                    this.subjects[i].position(\n                        new Point(this.froms[i].x + (this.tos[i].x - this.froms[i].x) * tick, this.froms[i].y + (this.tos[i].y - this.froms[i].y) * tick)\n                    );\n                }\n            }\n        });\n\n        var LayoutUndoUnit = Class.extend({\n            init: function(initialState, finalState, animate) {\n                if (isUndefined(animate)) {\n                    this.animate = false;\n                }\n                else {\n                    this.animate = animate;\n                }\n                this._initialState = initialState;\n                this._finalState = finalState;\n                this.title = \"Diagram layout\";\n            },\n            undo: function() {\n                this.setState(this._initialState);\n            },\n            redo: function() {\n                this.setState(this._finalState);\n            },\n            setState: function(state) {\n                var diagram = state.diagram;\n                if (this.animate) {\n                    state.linkMap.forEach(\n                        function(id, points) {\n                            var conn = diagram.getShapeById(id);\n                            conn.visible(false);\n                            if (conn) {\n                                conn.points(points);\n                            }\n                        }\n                    );\n                    var ticker = new Ticker();\n                    ticker.addAdapter(new PositionAdapter(state));\n                    ticker.onComplete(function() {\n                        state.linkMap.forEach(\n                            function(id) {\n                                var conn = diagram.getShapeById(id);\n                                conn.visible(true);\n                            }\n                        );\n                    });\n                    ticker.play();\n                }\n                else {\n                    state.nodeMap.forEach(function(id, bounds) {\n                        var shape = diagram.getShapeById(id);\n                        if (shape) {\n                            shape.position(bounds.topLeft());\n                        }\n                    });\n                    state.linkMap.forEach(\n                        function(id, points) {\n                            var conn = diagram.getShapeById(id);\n                            if (conn) {\n                                conn.points(points);\n                            }\n                        }\n                    );\n                }\n            }\n        });\n\n        var CompositeUnit = Class.extend({\n            init: function(unit) {\n                this.units = [];\n                this.title = \"Composite unit\";\n                if (unit !== undefined$1) {\n                    this.units.push(unit);\n                }\n            },\n            add: function(undoUnit) {\n                this.units.push(undoUnit);\n            },\n            undo: function() {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].undo();\n                }\n            },\n            redo: function() {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].redo();\n                }\n            }\n        });\n\n        var ConnectionEditUnit = Class.extend({\n            init: function(item, redoSource, redoTarget) {\n                this.item = item;\n                this._redoSource = redoSource;\n                this._redoTarget = redoTarget;\n                if (defined(redoSource)) {\n                    this._undoSource = item.source();\n                }\n\n                if (defined(redoTarget)) {\n                    this._undoTarget = item.target();\n                }\n                this.title = \"Connection Editing\";\n            },\n            undo: function() {\n                if (this._undoSource !== undefined$1) {\n                    this.item._updateConnector(this._undoSource, \"source\");\n                }\n\n                if (this._undoTarget !== undefined$1) {\n                    this.item._updateConnector(this._undoTarget, \"target\");\n                }\n\n                this.item.updateModel();\n            },\n            redo: function() {\n                if (this._redoSource !== undefined$1) {\n                    this.item._updateConnector(this._redoSource, \"source\");\n                }\n\n                if (this._redoTarget !== undefined$1) {\n                    this.item._updateConnector(this._redoTarget, \"target\");\n                }\n\n                this.item.updateModel();\n            }\n        });\n\n        var ConnectionEditUndoUnit = Class.extend({\n            init: function(item, undoSource, undoTarget) {\n                this.item = item;\n                this._undoSource = undoSource;\n                this._undoTarget = undoTarget;\n                this._redoSource = item.source();\n                this._redoTarget = item.target();\n                this.title = \"Connection Editing\";\n            },\n            undo: function() {\n                this.item._updateConnector(this._undoSource, \"source\");\n                this.item._updateConnector(this._undoTarget, \"target\");\n                this.item.updateModel();\n            },\n            redo: function() {\n                this.item._updateConnector(this._redoSource, \"source\");\n                this.item._updateConnector(this._redoTarget, \"target\");\n                this.item.updateModel();\n            }\n        });\n\n        var DeleteConnectionUnit = Class.extend({\n            init: function(connection) {\n                this.connection = connection;\n                this.diagram = connection.diagram;\n                this.targetConnector = connection.targetConnector;\n                this.title = \"Delete connection\";\n            },\n            undo: function() {\n                this.diagram._addConnection(this.connection, false);\n            },\n            redo: function() {\n                this.diagram.remove(this.connection, false);\n            }\n        });\n\n        var DeleteShapeUnit = Class.extend({\n            init: function(shape) {\n                this.shape = shape;\n                this.diagram = shape.diagram;\n                this.title = \"Deletion\";\n            },\n            undo: function() {\n                this.diagram._addShape(this.shape, false);\n                this.shape.select(false);\n            },\n            redo: function() {\n                this.shape.select(false);\n                this.diagram.remove(this.shape, false);\n            }\n        });\n        /**\n         * Holds the undoredo state when performing a rotation, translation or scaling. The adorner is optional.\n         * @type {*}\n         */\n        var TransformUnit = Class.extend({\n            init: function(shapes, undoStates, adorner) {\n                this.shapes = shapes;\n                this.undoStates = undoStates;\n                this.title = \"Transformation\";\n                this.redoStates = [];\n                this.adorner = adorner;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoStates.push(shape.bounds());\n                }\n            },\n            undo: function() {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.undoStates[i]);\n                    if (shape.hasOwnProperty(\"layout\")) {\n                        shape.layout(shape, this.redoStates[i], this.undoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function() {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.redoStates[i]);\n                    // the 'layout' property, if implemented, lets the shape itself work out what to do with the new bounds\n                    if (shape.hasOwnProperty(\"layout\")) {\n                        shape.layout(shape, this.undoStates[i], this.redoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            }\n        });\n\n        var AddConnectionUnit = Class.extend({\n            init: function(connection, diagram) {\n                this.connection = connection;\n                this.diagram = diagram;\n                this.title = \"New connection\";\n            },\n\n            undo: function() {\n                this.diagram.remove(this.connection, false);\n            },\n\n            redo: function() {\n                this.diagram._addConnection(this.connection, false);\n            }\n        });\n\n        var AddShapeUnit = Class.extend({\n            init: function(shape, diagram) {\n                this.shape = shape;\n                this.diagram = diagram;\n                this.title = \"New shape\";\n            },\n\n            undo: function() {\n                this.diagram.deselect();\n                this.diagram.remove(this.shape, false);\n            },\n\n            redo: function() {\n                this.diagram._addShape(this.shape, false);\n            }\n        });\n\n        var PanUndoUnit = Class.extend({\n            init: function(initialPosition, finalPosition, diagram) {\n                this.initial = initialPosition;\n                this.finalPos = finalPosition;\n                this.diagram = diagram;\n                this.title = \"Pan Unit\";\n            },\n            undo: function() {\n                this.diagram.pan(this.initial);\n            },\n            redo: function() {\n                this.diagram.pan(this.finalPos);\n            }\n        });\n\n        var RotateUnit = Class.extend({\n            init: function(adorner, shapes, undoRotates) {\n                this.shapes = shapes;\n                this.undoRotates = undoRotates;\n                this.title = \"Rotation\";\n                this.redoRotates = [];\n                this.redoAngle = adorner._angle;\n                this.adorner = adorner;\n                this.center = adorner._innerBounds.center();\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoRotates.push(shape.rotate().angle);\n                }\n            },\n            undo: function() {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.undoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty(\"layout\")) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function() {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.redoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty(\"layout\")) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            }\n        });\n\n        var ToFrontUnit = Class.extend({\n            init: function(diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = \"Rotate Unit\";\n            },\n            undo: function() {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function() {\n                this.diagram.toFront(this.items, false);\n            }\n        });\n\n        var ToBackUnit = Class.extend({\n            init: function(diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = \"Rotate Unit\";\n            },\n            undo: function() {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function() {\n                this.diagram.toBack(this.items, false);\n            }\n        });\n\n        /**\n         * Undo-redo service.\n         */\n        var UndoRedoService = kendo.Observable.extend({\n            init: function(options) {\n                kendo.Observable.fn.init.call(this, options);\n                this.bind(this.events, options);\n                this.stack = [];\n                this.index = 0;\n                this.capacity = 100;\n            },\n\n            events: [\"undone\", \"redone\"],\n\n            /**\n             * Starts the collection of units. Add those with\n             * the addCompositeItem method and call commit. Or cancel to forget about it.\n             */\n            begin: function() {\n                this.composite = new CompositeUnit();\n            },\n\n            /**\n             * Cancels the collection process of unit started with 'begin'.\n             */\n            cancel: function() {\n                this.composite = undefined$1;\n            },\n\n            /**\n             * Commits a batch of units.\n             */\n            commit: function(execute) {\n                if (this.composite.units.length > 0) {\n                    this._restart(this.composite, execute);\n                }\n                this.composite = undefined$1;\n            },\n\n            /**\n             * Adds a unit as part of the begin-commit batch.\n             * @param undoUnit\n             */\n            addCompositeItem: function(undoUnit) {\n                if (this.composite) {\n                    this.composite.add(undoUnit);\n                } else {\n                    this.add(undoUnit);\n                }\n            },\n\n            /**\n             * Standard addition of a unit. See also the batch version; begin-addCompositeUnit-commit methods.\n             * @param undoUnit The unit to be added.\n             * @param execute If false, the unit will be added but not executed.\n             */\n            add: function(undoUnit, execute) {\n                this._restart(undoUnit, execute);\n            },\n\n            /**\n             * Returns the number of undoable unit in the stack.\n             * @returns {Number}\n             */\n\n            pop: function() {\n                if (this.index > 0) {\n                    this.stack.pop();\n                    this.index--;\n                }\n            },\n\n            count: function() {\n                return this.stack.length;\n            },\n\n            /**\n             * Rollback of the unit on top of the stack.\n             */\n            undo: function() {\n                if (this.index > 0) {\n                    this.index--;\n                    this.stack[this.index].undo();\n                    this.trigger(\"undone\");\n                }\n            },\n\n            /**\n             * Redo of the last undone action.\n             */\n            redo: function() {\n                if (this.stack.length > 0 && this.index < this.stack.length) {\n                    this.stack[this.index].redo();\n                    this.index++;\n                    this.trigger(\"redone\");\n                }\n            },\n\n            _restart: function(composite, execute) {\n                // throw away anything beyond this point if this is a new branch\n                this.stack.splice(this.index, this.stack.length - this.index);\n                this.stack.push(composite);\n                if (execute !== false) {\n                    this.redo();\n                } else {\n                    this.index++;\n                }\n                // check the capacity\n                if (this.stack.length > this.capacity) {\n                    this.stack.splice(0, this.stack.length - this.capacity);\n                    this.index = this.capacity; //points to the end of the stack\n                }\n            },\n\n            /**\n             * Clears the stack.\n             */\n            clear: function() {\n                this.stack = [];\n                this.index = 0;\n            }\n        });\n\n// Tools =========================================\n\n        var EmptyTool = Class.extend({\n            init: function(toolService) {\n                this.toolService = toolService;\n            },\n            start: function() {\n            },\n            move: function() {\n            },\n            end: function() {\n            },\n            tryActivate: function() {\n                return false;\n            },\n            getCursor: function() {\n                return Cursors.arrow;\n            }\n        });\n\n        var ScrollerTool = EmptyTool.extend({\n            init: function(toolService) {\n                var tool = this;\n                var friction = kendo.support.mobileOS ? FRICTION_MOBILE : FRICTION;\n                EmptyTool.fn.init.call(tool, toolService);\n\n                var diagram = tool.toolService.diagram,\n                    canvas = diagram.canvas;\n\n                var scroller = diagram.scroller = tool.scroller = $(diagram.scrollable).kendoMobileScroller({\n                    friction: friction,\n                    velocityMultiplier: VELOCITY_MULTIPLIER,\n                    mousewheelScrolling: false,\n                    zoom: false,\n                    scroll: tool._move.bind(tool)\n                }).data(\"kendoMobileScroller\");\n\n                if (canvas.translate) {\n                    tool.movableCanvas = new Movable(canvas.element);\n                }\n\n                var virtualScroll = function(dimension, min, max) {\n                    dimension.makeVirtual();\n                    dimension.virtualSize(min || SCROLL_MIN, max || SCROLL_MAX);\n                };\n\n                virtualScroll(scroller.dimensions.x);\n                virtualScroll(scroller.dimensions.y);\n                scroller.disable();\n            },\n\n            tryActivate: function(p, meta) {\n                var toolService = this.toolService;\n                var options = toolService.diagram.options.pannable;\n                var enabled = meta.ctrlKey;\n\n                if (defined(options.key)) {\n                    if (!options.key || options.key == \"none\") {\n                        enabled = noMeta(meta) && !defined(toolService.hoveredItem);\n                    } else {\n                        enabled = meta[options.key + \"Key\"];\n                    }\n                }\n\n                return options !== false && enabled && !defined(toolService.hoveredAdorner) && !defined(toolService._hoveredConnector);\n            },\n\n            start: function() {\n                this.scroller.enable();\n            },\n            move: function() {\n            },//the tool itself should not handle the scrolling. Let kendo scroller take care of this part. Check _move\n            _move: function(args) {\n                var tool = this,\n                    diagram = tool.toolService.diagram,\n                    canvas = diagram.canvas,\n                    scrollPos = new Point(args.scrollLeft, args.scrollTop);\n\n                if (canvas.translate) {\n                    diagram._storePan(scrollPos.times(-1));\n                    tool.movableCanvas.moveTo(scrollPos);\n                    canvas.translate(scrollPos.x, scrollPos.y);\n                } else {\n                    scrollPos = scrollPos.plus(diagram._pan.times(-1));\n                }\n\n                diagram.trigger(PAN, { pan: scrollPos });\n            },\n            end: function() {\n                this.scroller.disable();\n            },\n            getCursor: function() {\n                return Cursors.move;\n            }\n        });\n\n        /**\n         * The tool handling the transformations via the adorner.\n         * @type {*}\n         */\n        var PointerTool = Class.extend({\n            init: function(toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function() {\n                return true; // the pointer tool is last and handles all others requests.\n            },\n            start: function(p, meta) {\n                var toolService = this.toolService,\n                    diagram = toolService.diagram,\n                    hoveredItem = toolService.hoveredItem;\n\n                if (hoveredItem) {\n                    toolService.selectSingle(hoveredItem, meta);\n                    if (hoveredItem.adorner) { //connection\n                        this.adorner = hoveredItem.adorner;\n                        this.handle = this.adorner._hitTest(p);\n                    }\n                }\n\n                if (!this.handle) {\n                    this.handle = diagram._resizingAdorner._hitTest(p);\n                    if (this.handle) {\n                        this.adorner = diagram._resizingAdorner;\n                    }\n                }\n\n                if (this.adorner) {\n                    if (!this.adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_START, { shapes: this.adorner.shapes, connections: [] })) {\n                        this.adorner.start(p);\n                    } else {\n                        toolService.startPoint = p;\n                        toolService.end(p);\n                    }\n                }\n            },\n\n            move: function(p) {\n                if (this.adorner) {\n                    this.adorner.move(this.handle, p);\n                    if (this.adorner.isDragHandle(this.handle)) {\n                        this.toolService.diagram.trigger(DRAG, { shapes: this.adorner.shapes, connections: [] });\n                    }\n                }\n            },\n\n            end: function() {\n                var diagram = this.toolService.diagram,\n                    adorner = this.adorner,\n                    unit;\n\n                if (adorner) {\n                    if (!adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_END, { shapes: adorner.shapes, connections: [] })) {\n                        unit = adorner.stop();\n                        if (unit) {\n                            diagram.undoRedoService.add(unit, false);\n                        }\n                    } else {\n                        adorner.cancel();\n                    }\n                }\n\n                this.adorner = undefined$1;\n                this.handle = undefined$1;\n            },\n            getCursor: function(p) {\n                return this.toolService.hoveredItem ? this.toolService.hoveredItem._getCursor(p) : Cursors.arrow;\n            }\n        });\n\n        var SelectionTool = Class.extend({\n            init: function(toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function(p, meta) {\n                var toolService = this.toolService;\n                var selectable = toolService.diagram.options.selectable;\n                var enabled = selectable && selectable.multiple !== false;\n\n                if (enabled) {\n                    if (selectable.key && selectable.key != \"none\") {\n                        enabled = meta[selectable.key + \"Key\"];\n                    } else {\n                        enabled = noMeta(meta);\n                    }\n                }\n\n                return enabled && !defined(toolService.hoveredItem) && !defined(toolService.hoveredAdorner);\n            },\n            start: function(p) {\n                var diagram = this.toolService.diagram;\n                diagram.deselect();\n                diagram.selector.start(p);\n            },\n            move: function(p) {\n                var diagram = this.toolService.diagram;\n                diagram.selector.move(p);\n            },\n            end: function(p, meta) {\n                var diagram = this.toolService.diagram, hoveredItem = this.toolService.hoveredItem;\n                var rect = diagram.selector.bounds();\n                if ((!hoveredItem || !hoveredItem.isSelected) && !meta.ctrlKey) {\n                    diagram.deselect();\n                }\n                if (!rect.isEmpty()) {\n                    diagram.selectArea(rect);\n                }\n                diagram.selector.end();\n            },\n            getCursor: function() {\n                return Cursors.arrow;\n            }\n        });\n\n        var ConnectionTool = Class.extend({\n            init: function(toolService) {\n                this.toolService = toolService;\n                this.type = \"ConnectionTool\";\n            },\n            tryActivate: function() {\n                return this.toolService._hoveredConnector;\n            },\n            start: function(p, meta) {\n                var toolService = this.toolService,\n                    diagram = toolService.diagram,\n                    connector = toolService._hoveredConnector,\n                    connection = diagram._createConnection({}, connector._c, p);\n\n                if (canDrag(connection) && !diagram.trigger(DRAG_START, { shapes: [], connections: [connection], connectionHandle: TARGET }) && diagram._addConnection(connection)) {\n                    toolService._connectionManipulation(connection, connector._c.shape, true);\n                    toolService._removeHover();\n                    toolService.selectSingle(toolService.activeConnection, meta);\n                    if (meta.type == \"touchmove\") {\n                        diagram._cachedTouchTarget = connector.visual;\n                    }\n                } else {\n                    connection.source(null);\n                    toolService.end(p);\n                }\n            },\n\n            move: function(p) {\n                var toolService = this.toolService;\n                var connection = toolService.activeConnection;\n\n                connection.target(p);\n                toolService.diagram.trigger(DRAG, { shapes: [], connections: [connection], connectionHandle: TARGET });\n                return true;\n            },\n\n            end: function(p) {\n                var toolService = this.toolService,\n                    d = toolService.diagram,\n                    connection = toolService.activeConnection,\n                    hoveredItem = toolService.hoveredItem,\n                    connector = toolService._hoveredConnector,\n                    target,\n                    cachedTouchTarget = d._cachedTouchTarget;\n\n                if (!connection) {\n                    return;\n                }\n\n                if (connector && connector._c != connection.sourceConnector) {\n                    target = connector._c;\n                } else if (hoveredItem && hoveredItem instanceof diagram.Shape) {\n                    target = hoveredItem.getConnector(AUTO) || hoveredItem.getConnector(p);\n                } else {\n                    target = p;\n                }\n\n                connection.target(target);\n\n                if (!d.trigger(DRAG_END, { shapes: [], connections: [connection], connectionHandle: TARGET })) {\n                    connection.updateModel();\n                    d._syncConnectionChanges();\n                } else {\n                    d.remove(connection, false);\n                    d.undoRedoService.pop();\n                }\n                toolService._connectionManipulation();\n\n                if (cachedTouchTarget) {\n                    d._connectorsAdorner.visual.remove(cachedTouchTarget);\n                    d._cachedTouchTarget = null;\n                }\n            },\n\n            getCursor: function() {\n                return Cursors.arrow;\n            }\n        });\n\n        var ConnectionEditTool = Class.extend({\n            init: function(toolService) {\n                this.toolService = toolService;\n                this.type = \"ConnectionTool\";\n            },\n\n            tryActivate: function(p, meta) {\n                var toolService = this.toolService,\n                    diagram = toolService.diagram,\n                    selectable = diagram.options.selectable,\n                    item = toolService.hoveredItem,\n                    isActive = selectable !== false &&\n                               item && item.path && !(item.isSelected && meta.ctrlKey);\n\n                if (isActive) {\n                    this._c = item;\n                }\n\n                return isActive;\n            },\n\n            start: function(p, meta) {\n                var toolService = this.toolService;\n                var connection = this._c;\n\n                toolService.selectSingle(connection, meta);\n\n                var adorner = connection.adorner;\n\n                var handle, name;\n                if (adorner) {\n                    handle = adorner._hitTest(p);\n                    name = HANDLE_NAMES[handle];\n                }\n\n                if (canDrag(connection) && adorner && !toolService.diagram.trigger(DRAG_START, { shapes: [], connections: [connection], connectionHandle: name })) {\n                    this.handle = handle;\n                    this.handleName = name;\n                    adorner.start(p);\n                } else {\n                    toolService.startPoint = p;\n                    toolService.end(p);\n                }\n            },\n\n            move: function(p) {\n                var adorner = this._c.adorner;\n                if (canDrag(this._c) && adorner) {\n                    adorner.move(this.handle, p);\n                    this.toolService.diagram.trigger(DRAG, { shapes: [], connections: [this._c], connectionHandle: this.handleName });\n\n                    return true;\n                }\n            },\n\n            end: function(p) {\n                var connection = this._c;\n                var adorner = connection.adorner;\n                var toolService = this.toolService;\n                var diagram = toolService.diagram;\n\n                if (adorner) {\n                    if (canDrag(connection)) {\n                        var unit = adorner.stop(p);\n                        if (!diagram.trigger(DRAG_END, { shapes: [], connections: [connection], connectionHandle: this.handleName })) {\n                            diagram.undoRedoService.add(unit, false);\n                            connection.updateModel();\n                            diagram._syncConnectionChanges();\n                        } else {\n                            unit.undo();\n                        }\n                    }\n                }\n            },\n\n            getCursor: function() {\n                return Cursors.move;\n            }\n        });\n\n        function testKey(key, str) {\n            return str.charCodeAt(0) == key || str.toUpperCase().charCodeAt(0) == key;\n        }\n\n        /**\n         * The service managing the tools.\n         * @type {*}\n         */\n        var ToolService = Class.extend({\n            init: function(diagram) {\n                this.diagram = diagram;\n                this.tools = [\n                    new ScrollerTool(this),\n                    new ConnectionEditTool(this),\n                    new ConnectionTool(this),\n                    new SelectionTool(this),\n                    new PointerTool(this)\n                ]; // the order matters.\n\n                this.activeTool = undefined$1;\n            },\n\n            start: function(p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this._updateHoveredItem(p);\n                this._activateTool(p, meta);\n                this.activeTool.start(p, meta);\n                this._updateCursor(p);\n                this.diagram.focus();\n                this.diagram.canvas.surface.suspendTracking();\n                this.startPoint = p;\n                return true;\n            },\n\n            move: function(p, meta) {\n                meta = deepExtend({}, meta);\n                var updateHovered = true;\n                if (this.activeTool) {\n                    updateHovered = this.activeTool.move(p, meta);\n                }\n                if (updateHovered) {\n                    this._updateHoveredItem(p);\n                }\n                this._updateCursor(p);\n                return true;\n            },\n\n            end: function(p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this.diagram.canvas.surface.resumeTracking();\n                this.activeTool = undefined$1;\n                this._updateCursor(p);\n                return true;\n            },\n\n            keyDown: function(key, meta) {\n                var diagram = this.diagram;\n                meta = deepExtend({ ctrlKey: false, metaKey: false, altKey: false }, meta);\n                if ((meta.ctrlKey || meta.metaKey) && !meta.altKey) {// ctrl or option\n                    if (testKey(key, \"a\")) {// A: select all\n                        diagram.selectAll();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, \"z\")) {// Z: undo\n                        diagram.undo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, \"y\")) {// y: redo\n                        diagram.redo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, \"c\")) {\n                        diagram.copy();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, \"x\")) {\n                        diagram.cut();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, \"v\")) {\n                        diagram.paste();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, \"l\")) {\n                        diagram.layout();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, \"d\")) {\n                        diagram._destroyToolBar();\n                        diagram.copy();\n                        diagram.paste();\n                    }\n                } else if (key === 46 || key === 8) {// del: deletion\n                    var toRemove = this.diagram._triggerRemove(diagram.select());\n                    if (toRemove.length) {\n                        this.diagram.remove(toRemove, true);\n                        this.diagram._syncChanges();\n                        this.diagram._destroyToolBar();\n                    }\n\n                    return true;\n                } else if (key === 27) {// ESC: stop any action\n                    this._discardNewConnection();\n                    diagram.deselect();\n                    diagram._destroyToolBar();\n                    return true;\n                }\n\n            },\n            wheel: function(p, meta) {\n                var diagram = this.diagram,\n                    delta = meta.delta,\n                    z = diagram.zoom(),\n                    options = diagram.options,\n                    zoomRate = options.zoomRate,\n                    zoomOptions = { point: p, meta: meta, zoom: z };\n\n                if (diagram.trigger(ZOOM_START, zoomOptions)) {\n                    return;\n                }\n\n                if (delta < 0) {\n                    z += zoomRate;\n                } else {\n                    z -= zoomRate;\n                }\n\n                z = kendo.drawing.util.round(Math.max(options.zoomMin, Math.min(options.zoomMax, z)), 2);\n                zoomOptions.zoom = z;\n\n                diagram.zoom(z, zoomOptions);\n                diagram.trigger(ZOOM_END, zoomOptions);\n\n                return true;\n            },\n            setTool: function(tool, index) {\n                tool.toolService = this;\n                this.tools[index] = tool;\n            },\n\n            selectSingle: function(item, meta) {\n                var diagram = this.diagram;\n                var selectable = diagram.options.selectable;\n                if (selectable && !item.isSelected && item.options.selectable !== false) {\n                    var addToSelection = meta.ctrlKey && selectable.multiple !== false;\n                    diagram.select(item, { addToSelection: addToSelection });\n                }\n            },\n\n            _discardNewConnection: function() {\n                if (this.newConnection) {\n                    this.diagram.remove(this.newConnection);\n                    this.newConnection = undefined$1;\n                }\n            },\n            _activateTool: function(p, meta) {\n                for (var i = 0; i < this.tools.length; i++) {\n                    var tool = this.tools[i];\n                    if (tool.tryActivate(p, meta)) {\n                        this.activeTool = tool;\n                        break; // activating the first available tool in the loop.\n                    }\n                }\n            },\n            _updateCursor: function(p) {\n                var element = this.diagram.element;\n                var cursor = this.activeTool ? this.activeTool.getCursor(p) : (this.hoveredAdorner ? this.hoveredAdorner._getCursor(p) : (this.hoveredItem ? this.hoveredItem._getCursor(p) : Cursors.arrow));\n\n                element.css({ cursor: cursor });\n            },\n            _connectionManipulation: function(connection, disabledShape, isNew) {\n                this.activeConnection = connection;\n                this.disabledShape = disabledShape;\n                if (isNew) {\n                    this.newConnection = this.activeConnection;\n                } else {\n                    this.newConnection = undefined$1;\n                }\n            },\n            _updateHoveredItem: function(p) {\n                var hit = this._hitTest(p);\n                var diagram = this.diagram;\n\n                if (hit != this.hoveredItem && (!this.disabledShape || hit != this.disabledShape)) {\n                    if (this.hoveredItem) {\n                        diagram.trigger(MOUSE_LEAVE, { item: this.hoveredItem });\n                        this.hoveredItem._hover(false);\n                    }\n\n                    if (hit && hit.options.enable) {\n                        diagram.trigger(MOUSE_ENTER, { item: hit });\n\n                        this.hoveredItem = hit; // Shape, connection or connector\n                        this.hoveredItem._hover(true);\n                    } else {\n                        this.hoveredItem = undefined$1;\n                    }\n                }\n            },\n            _removeHover: function() {\n                if (this.hoveredItem) {\n                    this.hoveredItem._hover(false);\n                    this.hoveredItem = undefined$1;\n                }\n            },\n            _hitTest: function(point) {\n                var hit, d = this.diagram, item, i;\n\n                // connectors\n                if (this._hoveredConnector) {\n                    this._hoveredConnector._hover(false);\n                    this._hoveredConnector = undefined$1;\n                }\n                if (d._connectorsAdorner._visible) {\n                    hit = d._connectorsAdorner._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n\n                hit = this.diagram._resizingAdorner._hitTest(point);\n                if (hit) {\n                    this.hoveredAdorner = d._resizingAdorner;\n                    if (hit.x !== 0 || hit.y !== 0) { // hit testing for resizers or rotator, otherwise if (0,0) than pass through.\n                        return;\n                    }\n                    hit = undefined$1;\n                } else {\n                    this.hoveredAdorner = undefined$1;\n                }\n\n                if (!this.activeTool || this.activeTool.type !== \"ConnectionTool\") {\n                    var selectedConnections = []; // only the connections should have higher presence because the connection edit point is on top of connector.\n                    // TODO: This should be reworked. The connection adorner should be one for all selected connections and should be hit tested prior the connections and shapes itself.\n                    for (i = 0; i < d._selectedItems.length; i++) {\n                        item = d._selectedItems[i];\n                        if (item instanceof diagram.Connection) {\n                            selectedConnections.push(item);\n                        }\n                    }\n                    hit = this._hitTestItems(selectedConnections, point);\n                }\n\n                return hit || this._hitTestElements(point);\n            },\n\n            _hitTestElements: function(point) {\n                var diagram = this.diagram;\n                var shapeHit = this._hitTestItems(diagram.shapes, point);\n                var connectionHit = this._hitTestItems(diagram.connections, point);\n                var hit;\n\n                if ((!this.activeTool || this.activeTool.type != \"ConnectionTool\") && shapeHit && connectionHit && !hitTestShapeConnectors(shapeHit, point)) {\n                    var mainLayer = diagram.mainLayer;\n                    var shapeIdx = inArray(shapeHit.visual, mainLayer.children);\n                    var connectionIdx = inArray(connectionHit.visual, mainLayer.children);\n                    hit = shapeIdx > connectionIdx ? shapeHit : connectionHit;\n                }\n                return hit || shapeHit || connectionHit;\n            },\n\n            _hitTestItems: function(array, point) {\n                var i, item, hit;\n                for (i = array.length - 1; i >= 0; i--) {\n                    item = array[i];\n                    hit = item._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n            }\n        });\n\n// Routing =========================================\n\n        /**\n         * Base class for connection routers.\n         */\n        var ConnectionRouterBase = kendo.Class.extend({\n            init: function() {\n            }\n            /*route: function (connection) {\n             },\n             hitTest: function (p) {\n\n             },\n             getBounds: function () {\n\n             }*/\n        });\n\n        /**\n         * Base class for polyline and cascading routing.\n         */\n        var LinearConnectionRouter = ConnectionRouterBase.extend({\n            init: function(connection) {\n                var that = this;\n                ConnectionRouterBase.fn.init.call(that);\n                this.connection = connection;\n            },\n            /**\n             * Hit testing for polyline paths.\n             */\n            hitTest: function(p) {\n                var rec = this.getBounds().inflate(HIT_TEST_DISTANCE);\n                if (!rec.contains(p)) {\n                    return false;\n                }\n                return diagram.Geometry.distanceToPolyline(p, this.connection.allPoints()) < HIT_TEST_DISTANCE;\n            },\n\n            /**\n             * Bounds of a polyline.\n             * @returns {kendo.dataviz.diagram.Rect}\n             */\n            getBounds: function() {\n                var points = this.connection.allPoints(),\n                    s = points[0],\n                    e = points[points.length - 1],\n                    right = Math.max(s.x, e.x),\n                    left = Math.min(s.x, e.x),\n                    top = Math.min(s.y, e.y),\n                    bottom = Math.max(s.y, e.y);\n\n                for (var i = 1; i < points.length - 1; ++i) {\n                    right = Math.max(right, points[i].x);\n                    left = Math.min(left, points[i].x);\n                    top = Math.min(top, points[i].y);\n                    bottom = Math.max(bottom, points[i].y);\n                }\n\n                return new Rect(left, top, right - left, bottom - top);\n            }\n        });\n\n        /**\n         * A simple poly-linear routing which does not alter the intermediate points.\n         * Does hold the underlying hit, bounds....logic.\n         * @type {*|Object|void|extend|Zepto.extend|b.extend}\n         */\n        var PolylineRouter = LinearConnectionRouter.extend({\n            init: function(connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            route: function() {\n                // just keep the points as is\n            }\n        });\n\n        var CascadingRouter = LinearConnectionRouter.extend({\n            SAME_SIDE_DISTANCE_RATIO: 5,\n\n            init: function(connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n\n            routePoints: function(start, end, sourceConnector, targetConnector) {\n                var result;\n\n                if (sourceConnector && targetConnector) {\n                    result = this._connectorPoints(start, end, sourceConnector, targetConnector);\n                } else {\n                    result = this._floatingPoints(start, end, sourceConnector);\n                }\n                return result;\n            },\n\n            route: function() {\n                var sourceConnector = this.connection._resolvedSourceConnector;\n                var targetConnector = this.connection._resolvedTargetConnector;\n                var start = this.connection.sourcePoint();\n                var end = this.connection.targetPoint();\n                var points = this.routePoints(start, end, sourceConnector, targetConnector);\n                this.connection.points(points);\n            },\n\n            _connectorSides: [{\n                name: \"Top\",\n                axis: \"y\",\n                boundsPoint: \"topLeft\",\n                secondarySign: 1\n            }, {\n                name: \"Left\",\n                axis: \"x\",\n                boundsPoint: \"topLeft\",\n                secondarySign: 1\n            }, {\n                name: \"Bottom\",\n                axis: \"y\",\n                boundsPoint: \"bottomRight\",\n                secondarySign: -1\n            }, {\n                name: \"Right\",\n                axis: \"x\",\n                boundsPoint: \"bottomRight\",\n                secondarySign: -1\n            }],\n\n            _connectorSide: function(connector, targetPoint) {\n                var position = connector.position();\n                var shapeBounds = connector.shape.bounds(ROTATED);\n                var bounds = {\n                    topLeft: shapeBounds.topLeft(),\n                    bottomRight: shapeBounds.bottomRight()\n                };\n                var sides = this._connectorSides;\n                var min = util.MAX_NUM;\n                var sideDistance;\n                var minSide;\n                var axis;\n                var side;\n                for (var idx = 0; idx < sides.length; idx++) {\n                    side = sides[idx];\n                    axis = side.axis;\n                    sideDistance = Math.round(Math.abs(position[axis] - bounds[side.boundsPoint][axis]));\n                    if (sideDistance < min) {\n                        min = sideDistance;\n                        minSide = side;\n                    } else if (sideDistance === min &&\n                        (position[axis] - targetPoint[axis]) * side.secondarySign > (position[minSide.axis] - targetPoint[minSide.axis]) * minSide.secondarySign) {\n                        minSide = side;\n                    }\n                }\n                return minSide.name;\n            },\n\n            _sameSideDistance: function(connector) {\n                var bounds = connector.shape.bounds(ROTATED);\n                return Math.min(bounds.width, bounds.height) / this.SAME_SIDE_DISTANCE_RATIO;\n            },\n\n            _connectorPoints: function(start, end, sourceConnector, targetConnector) {\n                var sourceConnectorSide = this._connectorSide(sourceConnector, end);\n                var targetConnectorSide = this._connectorSide(targetConnector, start);\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var sameSideDistance = this._sameSideDistance(sourceConnector);\n                var result = [];\n                var pointX, pointY;\n\n                if (sourceConnectorSide === TOP || sourceConnectorSide == BOTTOM) {\n                    if (targetConnectorSide == TOP || targetConnectorSide == BOTTOM) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == TOP) {\n                                pointY = Math.min(start.y, end.y) - sameSideDistance;\n                            } else {\n                                pointY = Math.max(start.y, end.y) + sameSideDistance;\n                            }\n                            result = [new Point(start.x, pointY), new Point(end.x, pointY)];\n                        } else {\n                            result = [new Point(start.x, start.y + deltaY / 2), new Point(end.x, start.y + deltaY / 2)];\n                        }\n                    } else {\n                        result = [new Point(start.x, end.y)];\n                    }\n                } else {\n                    if (targetConnectorSide == LEFT || targetConnectorSide == RIGHT) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == LEFT) {\n                                pointX = Math.min(start.x, end.x) - sameSideDistance;\n                            } else {\n                                pointX = Math.max(start.x, end.x) + sameSideDistance;\n                            }\n                            result = [new Point(pointX, start.y), new Point(pointX, end.y)];\n                        } else {\n                            result = [new Point(start.x + deltaX / 2, start.y), new Point(start.x + deltaX / 2, start.y + deltaY)];\n                        }\n                    } else {\n                        result = [new Point(end.x, start.y)];\n                    }\n                }\n                return result;\n            },\n\n            _floatingPoints: function(start, end, sourceConnector) {\n                var sourceConnectorSide = sourceConnector ? this._connectorSide(sourceConnector, end) : null;\n                var cascadeStartHorizontal = this._startHorizontal(start, end, sourceConnectorSide);\n                var points = [start, start, end, end];\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var length = points.length;\n                var shiftX;\n                var shiftY;\n\n                // note that this is more generic than needed for only two intermediate points.\n                for (var idx = 1; idx < length - 1; ++idx) {\n                    if (cascadeStartHorizontal) {\n                        if (idx % 2 !== 0) {\n                            shiftX = deltaX / (length / 2);\n                            shiftY = 0;\n                        }\n                        else {\n                            shiftX = 0;\n                            shiftY = deltaY / ((length - 1) / 2);\n                        }\n                    }\n                    else {\n                        if (idx % 2 !== 0) {\n                            shiftX = 0;\n                            shiftY = deltaY / (length / 2);\n                        }\n                        else {\n                            shiftX = deltaX / ((length - 1) / 2);\n                            shiftY = 0;\n                        }\n                    }\n                    points[idx] = new Point(points[idx - 1].x + shiftX, points[idx - 1].y + shiftY);\n                }\n                // need to fix the wrong 1.5 factor of the last intermediate point\n                idx--;\n                if ((cascadeStartHorizontal && (idx % 2 !== 0)) || (!cascadeStartHorizontal && (idx % 2 === 0))) {\n                    points[length - 2] = new Point(points[length - 1].x, points[length - 2].y);\n                } else {\n                    points[length - 2] = new Point(points[length - 2].x, points[length - 1].y);\n                }\n\n                return [points[1], points[2]];\n            },\n\n            _startHorizontal: function(start, end, sourceSide) {\n                var horizontal;\n                if (sourceSide !== null && (sourceSide === RIGHT || sourceSide === LEFT)) {\n                    horizontal = true;\n                } else {\n                    horizontal = Math.abs(start.x - end.x) > Math.abs(start.y - end.y);\n                }\n\n                return horizontal;\n            }\n        });\n\n// Adorners =========================================\n\n        var AdornerBase = Class.extend({\n            init: function(diagram, options) {\n                var that = this;\n                that.diagram = diagram;\n                that.options = deepExtend({}, that.options, options);\n                that.visual = new Group();\n                that.diagram._adorners.push(that);\n            },\n            refresh: function() {\n\n            }\n        });\n\n        var ConnectionEditAdorner = AdornerBase.extend({\n            init: function(connection, options) {\n                var that = this, diagram;\n                that.connection = connection;\n                diagram = that.connection.diagram;\n                that._ts = diagram.toolService;\n                AdornerBase.fn.init.call(that, diagram, options);\n                var sp = that.connection.sourcePoint();\n                var tp = that.connection.targetPoint();\n                that.spVisual = new Circle(deepExtend(that.options.handles, { center: sp }));\n                that.epVisual = new Circle(deepExtend(that.options.handles, { center: tp }));\n                that.visual.append(that.spVisual);\n                that.visual.append(that.epVisual);\n            },\n\n            options: {\n                handles: {}\n            },\n\n            _getCursor: function() {\n                return Cursors.move;\n            },\n\n            start: function(p) {\n                this.handle = this._hitTest(p);\n                this.startPoint = p;\n                this._initialSource = this.connection.source();\n                this._initialTarget = this.connection.target();\n                switch (this.handle) {\n                    case -1:\n                        if (this.connection.targetConnector) {\n                            this._ts._connectionManipulation(this.connection, this.connection.targetConnector.shape);\n                        }\n                        break;\n                    case 1:\n                        if (this.connection.sourceConnector) {\n                            this._ts._connectionManipulation(this.connection, this.connection.sourceConnector.shape);\n                        }\n                        break;\n                }\n            },\n\n            move: function(handle, p) {\n                switch (handle) {\n                    case -1:\n                        this.connection.source(p);\n                        break;\n                    case 1:\n                        this.connection.target(p);\n                        break;\n                    default:\n                        var delta = p.minus(this.startPoint);\n                        this.startPoint = p;\n                        if (!this.connection.sourceConnector) {\n                            this.connection.source(this.connection.sourcePoint().plus(delta));\n                        }\n                        if (!this.connection.targetConnector) {\n                            this.connection.target(this.connection.targetPoint().plus(delta));\n                        }\n                        break;\n                }\n                this.refresh();\n                return true;\n            },\n\n            stop: function(p) {\n                var ts = this.diagram.toolService, item = ts.hoveredItem, target;\n                if (ts._hoveredConnector) {\n                    target = ts._hoveredConnector._c;\n                } else if (item && item instanceof diagram.Shape) {\n                    target = item.getConnector(AUTO) || item.getConnector(p);\n                } else {\n                    target = p;\n                }\n\n                if (this.handle === -1) {\n                    this.connection.source(target);\n                } else if (this.handle === 1) {\n                    this.connection.target(target);\n                }\n\n                this.handle = undefined$1;\n                this._ts._connectionManipulation();\n                return new ConnectionEditUndoUnit(this.connection, this._initialSource, this._initialTarget);\n            },\n\n            _hitTest: function(point) {\n                var sourcePoint = this.connection.sourcePoint();\n                var targetPoint = this.connection.targetPoint();\n                var radiusX = this.options.handles.width / 2 + HIT_TEST_DISTANCE;\n                var radiusY = this.options.handles.height / 2 + HIT_TEST_DISTANCE;\n                var sourcePointDistance = sourcePoint.distanceTo(point);\n                var targetPointDistance = targetPoint.distanceTo(point);\n                var sourceHandle = new Rect(sourcePoint.x, sourcePoint.y).inflate(radiusX, radiusY).contains(point);\n                var targetHandle = new Rect(targetPoint.x, targetPoint.y).inflate(radiusX, radiusY).contains(point);\n                var handle = 0;\n\n                if (sourceHandle && (!targetHandle || sourcePointDistance < targetPointDistance)) {\n                    handle = -1;\n                } else if (targetHandle && (!sourceHandle || targetPointDistance < sourcePointDistance)) {\n                    handle = 1;\n                }\n\n                return handle;\n            },\n\n            refresh: function() {\n                this.spVisual.redraw({ center: this.diagram.modelToLayer(this.connection.sourcePoint()) });\n                this.epVisual.redraw({ center: this.diagram.modelToLayer(this.connection.targetPoint()) });\n            }\n        });\n\n        var ConnectorsAdorner = AdornerBase.extend({\n            init: function(diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._refreshHandler = function(e) {\n                    if (e.item == that.shape) {\n                        that.refresh();\n                    }\n                };\n            },\n\n            show: function(shape) {\n                var that = this, len, i, ctr;\n                that._visible = true;\n                that.shape = shape;\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                len = shape.connectors.length;\n                that.connectors = [];\n                that._clearVisual();\n                for (i = 0; i < len; i++) {\n                    ctr = new ConnectorVisual(shape.connectors[i]);\n                    that.connectors.push(ctr);\n                    that.visual.append(ctr.visual);\n                }\n                that.visual.visible(true);\n                that.refresh();\n            },\n\n            _clearVisual: function() {\n                var that = this;\n                if (that.diagram._cachedTouchTarget) {\n                    that._keepCachedTouchTarget();\n                } else {\n                    that.visual.clear();\n                }\n            },\n\n            _keepCachedTouchTarget: function() {\n                var that = this,\n                    visualChildren = that.visual.children;\n                var childrenCount = visualChildren.length;\n                var index = inArray(that.diagram._cachedTouchTarget, visualChildren);\n                for (var i = childrenCount - 1; i >= 0; i--) {\n                    if (i == index) {\n                        continue;\n                    }\n                    that.visual.remove(visualChildren[i]);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n                that.diagram.unbind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                that.shape = undefined$1;\n                that._visible = undefined$1;\n                that.visual.visible(false);\n            },\n\n            _hitTest: function(p) {\n                var ctr, i;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    if (ctr._hitTest(p)) {\n                        ctr._hover(true);\n                        this.diagram.toolService._hoveredConnector = ctr;\n                        break;\n                    }\n                }\n            },\n\n            refresh: function() {\n                if (this.shape) {\n                    var bounds = this.shape.bounds();\n                        bounds = this.diagram.modelToLayer(bounds);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.connectors, function() {\n                        this.refresh();\n                    });\n                }\n            }\n        });\n\n        function hitToOppositeSide(hit, bounds) {\n            var result;\n\n            if (hit.x == -1 && hit.y == -1) {\n                result = bounds.bottomRight();\n            } else if (hit.x == 1 && hit.y == 1) {\n                result = bounds.topLeft();\n            } else if (hit.x == -1 && hit.y == 1) {\n                result = bounds.topRight();\n            } else if (hit.x == 1 && hit.y == -1) {\n                result = bounds.bottomLeft();\n            } else if (hit.x === 0 && hit.y == -1) {\n                result = bounds.bottom();\n            } else if (hit.x === 0 && hit.y == 1) {\n                result = bounds.top();\n            } else if (hit.x == 1 && hit.y === 0) {\n                result = bounds.left();\n            } else if (hit.x == -1 && hit.y === 0) {\n                result = bounds.right();\n            }\n\n            return result;\n        }\n\n        var ResizingAdorner = AdornerBase.extend({\n            init: function(diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._manipulating = false;\n                that.map = [];\n                that.shapes = [];\n\n                that._initSelection();\n                that._createHandles();\n                that.redraw();\n                that.diagram.bind(\"select\", function(e) {\n                    that._initialize(e.selected);\n                });\n\n                that._refreshHandler = function() {\n                    if (!that._internalChange) {\n                        that.refreshBounds();\n                        that.refresh();\n                    }\n                };\n\n                that._rotatedHandler = function() {\n                    if (that.shapes.length == 1) {\n                        that._angle = that.shapes[0].rotate().angle;\n                    }\n                    that._refreshHandler();\n                };\n\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler).bind(ITEMROTATE, that._rotatedHandler);\n                that.refreshBounds();\n                that.refresh();\n            },\n\n            options: {\n                handles: {\n                    fill: {\n                        color: \"#fff\"\n                    },\n                    stroke: {\n                        color: \"#282828\"\n                    },\n                    height: 7,\n                    width: 7,\n                    hover: {\n                        fill: {\n                            color: \"#282828\"\n                        },\n                        stroke: {\n                            color: \"#282828\"\n                        }\n                    }\n                },\n                selectable: {\n                    stroke: {\n                        color: \"#778899\",\n                        width: 1,\n                        dashType: \"dash\"\n                    },\n                    fill: {\n                        color: TRANSPARENT\n                    }\n                },\n                offset: 10\n            },\n\n            _initSelection: function() {\n                var that = this;\n                var diagram = that.diagram;\n                var selectable = diagram.options.selectable;\n                var options = deepExtend({}, that.options.selectable, selectable);\n                that.rect = new Rectangle(options);\n                that.visual.append(that.rect);\n            },\n\n            _resizable: function() {\n                return this.options.editable && this.options.editable.resize !== false;\n            },\n\n            _handleOptions: function() {\n                return (this.options.editable.resize || {}).handles || this.options.handles;\n            },\n\n            _createHandles: function() {\n                var handles, item, y, x;\n\n                if (this._resizable()) {\n                    handles = this._handleOptions();\n                    for (x = -1; x <= 1; x++) {\n                        for (y = -1; y <= 1; y++) {\n                            if ((x !== 0) || (y !== 0)) { // (0, 0) element, (-1, -1) top-left, (+1, +1) bottom-right\n                                item = new Rectangle(handles);\n                                item.drawingElement._hover = this._hover.bind(this);\n                                this.map.push({ x: x, y: y, visual: item });\n                                this.visual.append(item);\n                            }\n                        }\n                    }\n                }\n            },\n\n            bounds: function(value) {\n                if (value) {\n                    this._innerBounds = value.clone();\n                    this._bounds = this.diagram.modelToLayer(value).inflate(this.options.offset, this.options.offset);\n                } else {\n                    return this._bounds;\n                }\n            },\n\n            _hitTest: function(p) {\n                var tp = this.diagram.modelToLayer(p),\n                    i, hit, handleBounds, handlesCount = this.map.length, handle;\n\n                if (this._angle) {\n                    tp = tp.clone().rotate(this._angle, this._bounds.center());\n                }\n\n                if (this._resizable()) {\n                    for (i = 0; i < handlesCount; i++) {\n                        handle = this.map[i];\n                        hit = new Point(handle.x, handle.y);\n                        handleBounds = this._getHandleBounds(hit); //local coordinates\n                        handleBounds.offset(this._bounds.x, this._bounds.y);\n                        if (handleBounds.contains(tp)) {\n                            return hit;\n                        }\n                    }\n                }\n\n                if (this._bounds.contains(tp)) {\n                    return new Point(0, 0);\n                }\n            },\n\n            _getHandleBounds: function(p) {\n                if (this._resizable()) {\n                    var handles = this._handleOptions(),\n                        w = handles.width,\n                        h = handles.height,\n                        r = new Rect(0, 0, w, h);\n\n                    if (p.x < 0) {\n                        r.x = - w / 2;\n                    } else if (p.x === 0) {\n                        r.x = Math.floor(this._bounds.width / 2) - w / 2;\n                    } else if (p.x > 0) {\n                        r.x = this._bounds.width + 1.0 - w / 2;\n                    } if (p.y < 0) {\n                        r.y = - h / 2;\n                    } else if (p.y === 0) {\n                        r.y = Math.floor(this._bounds.height / 2) - h / 2;\n                    } else if (p.y > 0) {\n                        r.y = this._bounds.height + 1.0 - h / 2;\n                    }\n\n                    return r;\n                }\n            },\n\n            _getCursor: function(point) {\n                var hit = this._hitTest(point);\n                if (hit && (hit.x >= -1) && (hit.x <= 1) && (hit.y >= -1) && (hit.y <= 1) && this._resizable()) {\n                    var angle = this._angle;\n                    if (angle) {\n                        hit.rotate(angle, new Point(0, 0));\n                        hit = new Point(Math.round(hit.x), Math.round(hit.y));\n                    }\n\n                    if (hit.x == -1 && hit.y == -1) {\n                        return \"nw-resize\";\n                    }\n                    if (hit.x == 1 && hit.y == 1) {\n                        return \"se-resize\";\n                    }\n                    if (hit.x == -1 && hit.y == 1) {\n                        return \"sw-resize\";\n                    }\n                    if (hit.x == 1 && hit.y == -1) {\n                        return \"ne-resize\";\n                    }\n                    if (hit.x === 0 && hit.y == -1) {\n                        return \"n-resize\";\n                    }\n                    if (hit.x === 0 && hit.y == 1) {\n                        return \"s-resize\";\n                    }\n                    if (hit.x == 1 && hit.y === 0) {\n                        return \"e-resize\";\n                    }\n                    if (hit.x == -1 && hit.y === 0) {\n                        return \"w-resize\";\n                    }\n                }\n                return this._manipulating ? Cursors.move : Cursors.select;\n            },\n\n            _initialize: function() {\n                var that = this, i, item,\n                    items = that.diagram.select();\n\n                that.shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof diagram.Shape) {\n                        that.shapes.push(item);\n                        item._rotationOffset = new Point();\n                    }\n                }\n\n                that._angle = that.shapes.length == 1 ? that.shapes[0].rotate().angle : 0;\n                that._startAngle = that._angle;\n                that._rotates();\n                that._positions();\n                that.refreshBounds();\n                that.refresh();\n                that.redraw();\n            },\n\n            _rotates: function() {\n                var that = this, i, shape;\n                that.initialRotates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialRotates.push(shape.rotate().angle);\n                }\n            },\n\n            _positions: function() {\n                var that = this, i, shape;\n                that.initialStates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialStates.push(shape.bounds());\n                }\n            },\n\n            _hover: function(value, element) {\n                if (this._resizable()) {\n                    var handleOptions = this._handleOptions(),\n                        hover = handleOptions.hover,\n                        stroke = handleOptions.stroke,\n                        fill = handleOptions.fill;\n\n                    if (value && Utils.isDefined(hover.stroke)) {\n                        stroke = deepExtend({}, stroke, hover.stroke);\n                    }\n\n                    if (value && Utils.isDefined(hover.fill)) {\n                        fill = hover.fill;\n                    }\n                    element.stroke(stroke.color, stroke.width, stroke.opacity);\n                    element.fill(fill.color, fill.opacity);\n                }\n            },\n\n            start: function(p) {\n                this._sp = p;\n                this._cp = p;\n                this._lp = p;\n                this._manipulating = true;\n                this._internalChange = true;\n                this.shapeStates = [];\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.shapeStates.push(shape.bounds());\n                }\n            },\n\n            redraw: function() {\n                var i, handle,\n                    visibleHandles = this._resizable();\n\n                for (i = 0; i < this.map.length; i++) {\n                    handle = this.map[i];\n                    handle.visual.visible(visibleHandles);\n                }\n            },\n\n            angle: function(value) {\n                if (defined(value)) {\n                    this._angle = value;\n                }\n\n                return this._angle;\n            },\n\n            rotate: function() {\n                var center = this._innerBounds.center();\n                var currentAngle = this.angle();\n                this._internalChange = true;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    currentAngle = (currentAngle + this.initialRotates[i] - this._startAngle) % 360;\n                    shape.rotate(currentAngle, center);\n                }\n                this.refresh();\n            },\n\n            move: function(handle, p) {\n                var delta, dragging,\n                    dtl = new Point(),\n                    dbr = new Point(),\n                    bounds, center, shape,\n                    i, angle, newBounds,\n                    changed = 0, staticPoint,\n                    scaleX, scaleY;\n\n                if (handle.y === -2 && handle.x === -1) {\n                    center = this._innerBounds.center();\n                    this._angle = this._truncateAngle(Utils.findAngle(center, p));\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        angle = (this._angle + this.initialRotates[i] - this._startAngle) % 360;\n                        shape.rotate(angle, center);\n                        if (shape.hasOwnProperty(\"layout\")) {\n                            shape.layout(shape);\n                        }\n                        this._rotating = true;\n                    }\n                    this.refresh();\n                } else {\n                    if (this.shouldSnap()) {\n                        var thr = this._truncateDistance(p.minus(this._lp));\n                        // threshold\n                        if (thr.x === 0 && thr.y === 0) {\n                            this._cp = p;\n                            return;\n                        }\n                        delta = thr;\n                        this._lp = new Point(this._lp.x + thr.x, this._lp.y + thr.y);\n                    } else {\n                        delta = p.minus(this._cp);\n                    }\n\n                    if (this.isDragHandle(handle)) {\n                        dbr = dtl = delta; // dragging\n                        dragging = true;\n                    } else {\n                        if (this._angle) { // adjust the delta so that resizers resize in the correct direction after rotation.\n                            delta.rotate(this._angle, new Point(0, 0));\n                        }\n                        if (handle.x == -1) {\n                            dtl.x = delta.x;\n                        } else if (handle.x == 1) {\n                            dbr.x = delta.x;\n                        }\n                        if (handle.y == -1) {\n                            dtl.y = delta.y;\n                        } else if (handle.y == 1) {\n                            dbr.y = delta.y;\n                        }\n                    }\n\n                    if (!dragging) {\n                        staticPoint = hitToOppositeSide(handle, this._innerBounds);\n                        scaleX = (this._innerBounds.width + delta.x * handle.x) / this._innerBounds.width;\n                        scaleY = (this._innerBounds.height + delta.y * handle.y) / this._innerBounds.height;\n                    }\n\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        bounds = shape.bounds();\n                        if (dragging) {\n                            if (!canDrag(shape)) {\n                                continue;\n                            }\n                            newBounds = this._displaceBounds(bounds, dtl, dbr, dragging);\n                        } else {\n                            newBounds = bounds.clone();\n                            newBounds.scale(scaleX, scaleY, staticPoint, this._innerBounds.center(), shape.rotate().angle);\n                            var newCenter = newBounds.center(); // fixes the new rotation center.\n                            newCenter.rotate(-this._angle, bounds.center());\n                            newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                        }\n                        if (newBounds.width >= shape.options.minWidth && newBounds.height >= shape.options.minHeight) { // if we up-size very small shape\n                            var oldBounds = bounds;\n                            shape.bounds(newBounds);\n                            if (shape.hasOwnProperty(\"layout\")) {\n                                shape.layout(shape, oldBounds, newBounds);\n                            }\n                            if (oldBounds.width !== newBounds.width || oldBounds.height !== newBounds.height) {\n                                shape.rotate(shape.rotate().angle); // forces the rotation to update it's rotation center\n                            }\n                            changed += 1;\n                        }\n                    }\n\n                    if (changed) {\n                        if (changed == i) {\n                            newBounds = this._displaceBounds(this._innerBounds, dtl, dbr, dragging);\n                            this.bounds(newBounds);\n                        } else {\n                            this.refreshBounds();\n                        }\n                        this.refresh();\n                    }\n\n                    this._positions();\n                }\n\n                this._cp = p;\n            },\n\n            isDragHandle: function(handle) {\n                return handle.x === 0 && handle.y === 0;\n            },\n\n            cancel: function() {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    shapes[idx].bounds(states[idx]);\n                }\n                this.refreshBounds();\n                this.refresh();\n                this._manipulating = undefined$1;\n                this._internalChange = undefined$1;\n                this._rotating = undefined$1;\n            },\n\n            _truncatePositionToGuides: function(bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncatePositionToGuides(bounds);\n                }\n                return bounds;\n            },\n\n            _truncateSizeToGuides: function(bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncateSizeToGuides(bounds);\n                }\n                return bounds;\n            },\n\n            _truncateAngle: function(a) {\n                var snap = this.snapOptions();\n                var snapAngle = Math.max(snap.angle || DEFAULT_SNAP_ANGLE, MIN_SNAP_ANGLE);\n                return snap ? Math.floor((a % 360) / snapAngle) * snapAngle : (a % 360);\n            },\n\n            _truncateDistance: function(d) {\n                if (d instanceof diagram.Point) {\n                    return new diagram.Point(this._truncateDistance(d.x), this._truncateDistance(d.y));\n                } else {\n                    var snap = this.snapOptions() || {};\n                    var snapSize = Math.max(snap.size || DEFAULT_SNAP_SIZE, MIN_SNAP_SIZE);\n                    return snap ? Math.floor(d / snapSize) * snapSize : d;\n                }\n            },\n\n            snapOptions: function() {\n                var editable = this.diagram.options.editable;\n                var snap = ((editable || {}).drag || {}).snap || {};\n                return snap;\n            },\n\n            shouldSnap: function() {\n                var editable = this.diagram.options.editable;\n                var drag = (editable || {}).drag;\n                var snap = (drag || {}).snap;\n                return editable !== false && drag !== false && snap !== false;\n            },\n\n            _displaceBounds: function(bounds, dtl, dbr, dragging) {\n                var tl = bounds.topLeft().plus(dtl),\n                    br = bounds.bottomRight().plus(dbr),\n                    newBounds = Rect.fromPoints(tl, br),\n                    newCenter;\n                if (!dragging) {\n                    newCenter = newBounds.center();\n                    newCenter.rotate(bounds.center(), -this._angle);\n                    newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                }\n                return newBounds;\n            },\n\n            stop: function() {\n                var unit, i, shape;\n                if (this._cp != this._sp) {\n                    if (this._rotating) {\n                        unit = new RotateUnit(this, this.shapes, this.initialRotates);\n                        this._rotating = false;\n                    } else if (this._diffStates()) {\n                        if (this.diagram.ruler) {\n                            for (i = 0; i < this.shapes.length; i++) {\n                                shape = this.shapes[i];\n                                var bounds = shape.bounds();\n                                bounds = this._truncateSizeToGuides(this._truncatePositionToGuides(bounds));\n                                shape.bounds(bounds);\n                                this.refreshBounds();\n                                this.refresh();\n                            }\n                        }\n                        for (i = 0; i < this.shapes.length; i++) {\n                            shape = this.shapes[i];\n                            shape.updateModel();\n                        }\n                        unit = new TransformUnit(this.shapes, this.shapeStates, this);\n                        this.diagram._syncShapeChanges();\n                    }\n                }\n\n                this._manipulating = undefined$1;\n                this._internalChange = undefined$1;\n                this._rotating = undefined$1;\n                return unit;\n            },\n\n            _diffStates: function() {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    if (!shapes[idx].bounds().equals(states[idx])) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n\n            refreshBounds: function() {\n                var bounds = this.shapes.length == 1 ?\n                    this.shapes[0].bounds().clone() :\n                    this.diagram.boundingBox(this.shapes, true);\n\n                this.bounds(bounds);\n            },\n\n            refresh: function() {\n                var that = this, b, bounds;\n                if (this.shapes.length > 0) {\n                    bounds = this.bounds();\n                    this.visual.visible(true);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.map, function() {\n                        b = that._getHandleBounds(new Point(this.x, this.y));\n                        this.visual.position(b.topLeft());\n                    });\n                    this.visual.position(bounds.topLeft());\n\n                    var center = new Point(bounds.width / 2, bounds.height / 2);\n                    this.visual.rotate(this._angle, center);\n                    this.rect.redraw({ width: bounds.width, height: bounds.height });\n                    if (this.rotationThumb) {\n                        var thumb = this.options.editable.rotate.thumb;\n                        this._rotationThumbBounds = new Rect(bounds.center().x, bounds.y + thumb.y, 0, 0).inflate(thumb.width);\n                        this.rotationThumb.redraw({ x: bounds.width / 2 - thumb.width / 2 });\n                    }\n                } else {\n                    this.visual.visible(false);\n                }\n            }\n        });\n\n        var Selector = Class.extend({\n            init: function(diagram) {\n                var selectable = diagram.options.selectable;\n                this.options = deepExtend({}, this.options, selectable);\n\n                this.visual = new Rectangle(this.options);\n                this.diagram = diagram;\n            },\n            options: {\n                stroke: {\n                    color: \"#778899\",\n                    width: 1,\n                    dashType: \"dash\"\n                },\n                fill: {\n                    color: TRANSPARENT\n                }\n            },\n            start: function(p) {\n                this._sp = this._ep = p;\n                this.refresh();\n                this.diagram._adorn(this, true);\n            },\n            end: function() {\n                this._sp = this._ep = undefined$1;\n                this.diagram._adorn(this, false);\n            },\n            bounds: function(value) {\n                if (value) {\n                    this._bounds = value;\n                }\n                return this._bounds;\n            },\n            move: function(p) {\n                this._ep = p;\n                this.refresh();\n            },\n            refresh: function() {\n                if (this._sp) {\n                    var visualBounds = Rect.fromPoints(this.diagram.modelToLayer(this._sp), this.diagram.modelToLayer(this._ep));\n                    this.bounds(Rect.fromPoints(this._sp, this._ep));\n                    this.visual.position(visualBounds.topLeft());\n                    this.visual.redraw({ height: visualBounds.height + 1, width: visualBounds.width + 1 });\n                }\n            }\n        });\n\n        var ConnectorVisual = Class.extend({\n            init: function(connector) {\n                this.options = deepExtend({}, connector.options);\n                this._c = connector;\n                this.visual = new Circle(this.options);\n                this.refresh();\n            },\n            _hover: function(value) {\n                var options = this.options,\n                    hover = options.hover,\n                    stroke = options.stroke,\n                    fill = options.fill;\n\n                if (value && Utils.isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n\n                if (value && Utils.isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n\n                this.visual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n            },\n            refresh: function() {\n                var p = this._c.shape.diagram.modelToView(this._c.position()),\n                    relative = p.minus(this._c.shape.bounds(\"transformed\").topLeft()),\n                    value = new Rect(p.x, p.y, 0, 0);\n                value.inflate(this.options.width / 2, this.options.height / 2);\n                this._visualBounds = value;\n                this.visual.redraw({ center: new Point(relative.x, relative.y) });\n            },\n            _hitTest: function(p) {\n                var tp = this._c.shape.diagram.modelToView(p);\n                return this._visualBounds.contains(tp);\n            }\n        });\n\n        function canDrag(element) {\n            var editable = element.options.editable;\n            return editable && editable.drag !== false;\n        }\n\n        function hitTestShapeConnectors(shape, point) {\n            var connector, position, rect;\n            for (var idx = 0; idx < shape.connectors.length; idx++) {\n                connector = shape.connectors[idx];\n                position = connector.position();\n                rect = new Rect(position.x, position.y);\n                rect.inflate(HIT_TEST_DISTANCE, HIT_TEST_DISTANCE);\n                if (rect.contains(point)) {\n                    return connector;\n                }\n            }\n        }\n\n        function noMeta(meta) {\n            return meta.ctrlKey === false && meta.altKey === false && meta.shiftKey === false;\n        }\n\n        deepExtend(diagram, {\n            CompositeUnit: CompositeUnit,\n            TransformUnit: TransformUnit,\n            PanUndoUnit: PanUndoUnit,\n            AddShapeUnit: AddShapeUnit,\n            AddConnectionUnit: AddConnectionUnit,\n            DeleteShapeUnit: DeleteShapeUnit,\n            DeleteConnectionUnit: DeleteConnectionUnit,\n            ConnectionEditAdorner: ConnectionEditAdorner,\n            ConnectionTool: ConnectionTool,\n            ConnectorVisual: ConnectorVisual,\n            UndoRedoService: UndoRedoService,\n            ResizingAdorner: ResizingAdorner,\n            Selector: Selector,\n            ToolService: ToolService,\n            ConnectorsAdorner: ConnectorsAdorner,\n            LayoutUndoUnit: LayoutUndoUnit,\n            ConnectionEditUnit: ConnectionEditUnit,\n            ToFrontUnit: ToFrontUnit,\n            ToBackUnit: ToBackUnit,\n            ConnectionRouterBase: ConnectionRouterBase,\n            PolylineRouter: PolylineRouter,\n            CascadingRouter: CascadingRouter,\n            SelectionTool: SelectionTool,\n            ScrollerTool: ScrollerTool,\n            PointerTool: PointerTool,\n            ConnectionEditTool: ConnectionEditTool,\n            RotateUnit: RotateUnit\n        });\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        diagram = kendo.dataviz.diagram,\n        Graph = diagram.Graph,\n        Node = diagram.Node,\n        Link = diagram.Link,\n        deepExtend = kendo.deepExtend,\n        Size = diagram.Size,\n        Rect = diagram.Rect,\n        Dictionary = diagram.Dictionary,\n        Set = diagram.Set,\n        HyperTree = diagram.Graph,\n        Utils = diagram.Utils,\n        Point = diagram.Point,\n        EPSILON = 1e-06,\n        DEG_TO_RAD = Math.PI / 180,\n        contains = Utils.contains,\n        grep = $.grep;\n\n    /**\n     * Base class for layout algorithms.\n     * @type {*}\n     */\n    var LayoutBase = kendo.Class.extend({\n        defaultOptions: {\n            type: \"Tree\",\n            subtype: \"Down\",\n            roots: null,\n            animate: false,\n            //-------------------------------------------------------------------\n            /**\n             * Force-directed option: whether the motion of the nodes should be limited by the boundaries of the diagram surface.\n             */\n            limitToView: false,\n            /**\n             * Force-directed option: the amount of friction applied to the motion of the nodes.\n             */\n            friction: 0.9,\n            /**\n             * Force-directed option: the optimal distance between nodes (minimum energy).\n             */\n            nodeDistance: 50,\n            /**\n             * Force-directed option: the number of time things are being calculated.\n             */\n            iterations: 300,\n            //-------------------------------------------------------------------\n            /**\n             * Tree option: the separation in one direction (depends on the subtype what direction this is).\n             */\n            horizontalSeparation: 90,\n            /**\n             * Tree option: the separation in the complementary direction (depends on the subtype what direction this is).\n             */\n            verticalSeparation: 50,\n\n            //-------------------------------------------------------------------\n            /**\n             * Tip-over tree option: children-to-parent vertical distance.\n             */\n            underneathVerticalTopOffset: 15,\n            /**\n             * Tip-over tree option: children-to-parent horizontal distance.\n             */\n            underneathHorizontalOffset: 15,\n            /**\n             * Tip-over tree option: leaf-to-next-branch vertical distance.\n             */\n            underneathVerticalSeparation: 15,\n            //-------------------------------------------------------------------\n            /**\n             * Settings object to organize the different components of the diagram in a grid layout structure\n             */\n            grid: {\n                /**\n                 * The width of the grid in which components are arranged. Beyond this width a component will be on the next row.\n                 */\n                width: 1500,\n                /**\n                 * The left offset of the grid.\n                 */\n                offsetX: 50,\n                /**\n                 * The top offset of the grid.\n                 */\n                offsetY: 50,\n                /**\n                 * The horizontal padding within a cell of the grid where a single component resides.\n                 */\n                componentSpacingX: 20,\n                /**\n                 * The vertical padding within a cell of the grid where a single component resides.\n                 */\n                componentSpacingY: 20\n            },\n\n            //-------------------------------------------------------------------\n            /**\n             * Layered option: the separation height/width between the layers.\n             */\n            layerSeparation: 50,\n            /**\n             * Layered option: how many rounds of shifting and fine-tuning.\n             */\n            layeredIterations: 2,\n            /**\n             * Tree-radial option: the angle at which the layout starts.\n             */\n            startRadialAngle: 0,\n            /**\n             * Tree-radial option: the angle at which the layout starts.\n             */\n            endRadialAngle: 360,\n            /**\n             * Tree-radial option: the separation between levels.\n             */\n            radialSeparation: 150,\n            /**\n             * Tree-radial option: the separation between the root and the first level.\n             */\n            radialFirstLevelSeparation: 200,\n            /**\n             * Tree-radial option: whether a virtual roots bing the components in one radial layout.\n             */\n            keepComponentsInOneRadialLayout: false,\n            //-------------------------------------------------------------------\n\n            // TODO: ensure to change this to false when containers are around\n            ignoreContainers: true,\n            layoutContainerChildren: false,\n            ignoreInvisible: true,\n            animateTransitions: false\n        },\n        init: function() {\n        },\n\n        /**\n         * Organizes the components in a grid.\n         * Returns the final set of nodes (not the Graph).\n         * @param components\n         */\n        gridLayoutComponents: function(components) {\n            if (!components) {\n                throw \"No components supplied.\";\n            }\n\n            // calculate and cache the bounds of the components\n            Utils.forEach(components, function(c) {\n                c.calcBounds();\n            });\n\n            // order by decreasing width\n            components.sort(function(a, b) {\n                return b.bounds.width - a.bounds.width;\n            });\n\n            var maxWidth = this.options.grid.width,\n                offsetX = this.options.grid.componentSpacingX,\n                offsetY = this.options.grid.componentSpacingY,\n                height = 0,\n                startX = this.options.grid.offsetX,\n                startY = this.options.grid.offsetY,\n                x = startX,\n                y = startY,\n                i,\n                resultLinkSet = [],\n                resultNodeSet = [];\n\n            while (components.length > 0) {\n                if (x >= maxWidth) {\n                    // start a new row\n                    x = startX;\n                    y += height + offsetY;\n                    // reset the row height\n                    height = 0;\n                }\n                var component = components.pop();\n                this.moveToOffset(component, new Point(x, y));\n                for (i = 0; i < component.nodes.length; i++) {\n                    resultNodeSet.push(component.nodes[i]); // to be returned in the end\n                }\n                for (i = 0; i < component.links.length; i++) {\n                    resultLinkSet.push(component.links[i]);\n                }\n                var boundingRect = component.bounds;\n                var currentHeight = boundingRect.height;\n                if (currentHeight <= 0 || isNaN(currentHeight)) {\n                    currentHeight = 0;\n                }\n                var currentWidth = boundingRect.width;\n                if (currentWidth <= 0 || isNaN(currentWidth)) {\n                    currentWidth = 0;\n                }\n\n                if (currentHeight >= height) {\n                    height = currentHeight;\n                }\n                x += currentWidth + offsetX;\n            }\n\n            return {\n                nodes: resultNodeSet,\n                links: resultLinkSet\n            };\n        },\n\n        moveToOffset: function(component, p) {\n            var i, j,\n                bounds = component.bounds,\n                deltax = p.x - bounds.x,\n                deltay = p.y - bounds.y;\n\n            for (i = 0; i < component.nodes.length; i++) {\n                var node = component.nodes[i];\n                var nodeBounds = node.bounds();\n                if (nodeBounds.width === 0 && nodeBounds.height === 0 && nodeBounds.x === 0 && nodeBounds.y === 0) {\n                    nodeBounds = new Rect(0, 0, 0, 0);\n                }\n                nodeBounds.x += deltax;\n                nodeBounds.y += deltay;\n                node.bounds(nodeBounds);\n            }\n            for (i = 0; i < component.links.length; i++) {\n                var link = component.links[i];\n                if (link.points) {\n                    var newpoints = [];\n                    var points = link.points;\n                    for (j = 0; j < points.length; j++) {\n                        var pt = points[j];\n                        pt.x += deltax;\n                        pt.y += deltay;\n                        newpoints.push(pt);\n                    }\n                    link.points = newpoints;\n                }\n            }\n            this.currentHorizontalOffset += bounds.width + this.options.grid.offsetX;\n            return new Point(deltax, deltay);\n        },\n\n        transferOptions: function(options) {\n\n            // Size options lead to stackoverflow and need special handling\n\n            this.options = kendo.deepExtend({}, this.defaultOptions);\n            if (Utils.isUndefined(options)) {\n                return;\n            }\n\n            this.options = kendo.deepExtend(this.options, options || {});\n        }\n    });\n\n    /**\n     * The data bucket a hypertree holds in its nodes.     *\n     * @type {*}\n     */\n    /* var ContainerGraph = kendo.Class.extend({\n     init: function (diagram) {\n     this.diagram = diagram;\n     this.graph = new Graph(diagram);\n     this.container = null;\n     this.containerNode = null;\n     }\n\n     });*/\n\n    /**\n     * Adapter between the diagram control and the graph representation. It converts shape and connections to nodes and edges taking into the containers and their collapsef state,\n     * the visibility of items and more. If the layoutContainerChildren is true a hypertree is constructed which holds the hierarchy of containers and many conditions are analyzed\n     * to investigate how the effective graph structure looks like and how the layout has to be performed.\n     * @type {*}\n     */\n    var DiagramToHyperTreeAdapter = kendo.Class.extend({\n        init: function(diagram) {\n\n            /**\n             * The mapping to/from the original nodes.\n             * @type {Dictionary}\n             */\n            this.nodeMap = new Dictionary();\n\n            /**\n             * Gets the mapping of a shape to a container in case the shape sits in a collapsed container.\n             * @type {Dictionary}\n             */\n            this.shapeMap = new Dictionary();\n\n            /**\n             * The nodes being mapped.\n             * @type {Dictionary}\n             */\n            this.nodes = [];\n\n            /**\n             * The connections being mapped.\n             * @type {Dictionary}\n             */\n            this.edges = [];\n\n            // the mapping from an edge to all the connections it represents, this can be both because of multiple connections between\n            // two shapes or because a container holds multiple connections to another shape or container.\n            this.edgeMap = new Dictionary();\n\n            /**\n             * The resulting set of Nodes when the analysis has finished.\n             * @type {Array}\n             */\n            this.finalNodes = [];\n\n            /**\n             * The resulting set of Links when the analysis has finished.\n             * @type {Array}\n             */\n            this.finalLinks = [];\n\n            /**\n             * The items being omitted because of multigraph edges.\n             * @type {Array}\n             */\n            this.ignoredConnections = [];\n\n            /**\n             * The items being omitted because of containers, visibility and other factors.\n             * @type {Array}\n             */\n            this.ignoredShapes = [];\n\n            /**\n             * The map from a node to the partition/hypernode in which it sits. This hyperMap is null if 'options.layoutContainerChildren' is false.\n             * @type {Dictionary}\n             */\n            this.hyperMap = new Dictionary();\n\n            /**\n             * The hypertree contains the hierarchy defined by the containers.\n             * It's in essence a Graph of Graphs with a tree structure defined by the hierarchy of containers.\n             * @type {HyperTree}\n             */\n            this.hyperTree = new Graph();\n\n            /**\n             * The resulting graph after conversion. Note that this does not supply the information contained in the\n             * ignored connection and shape collections.\n             * @type {null}\n             */\n            this.finalGraph = null;\n\n            this.diagram = diagram;\n        },\n\n        /**\n         * The hyperTree is used when the 'options.layoutContainerChildren' is true. It contains the hierarchy of containers whereby each node is a ContainerGraph.\n         * This type of node has a Container reference to the container which holds the Graph items. There are three possible situations during the conversion process:\n         *  - Ignore the containers: the container are non-existent and only normal shapes are mapped. If a shape has a connection to a container it will be ignored as well\n         *    since there is no node mapped for the container.\n         *  - Do not ignore the containers and leave the content of the containers untouched: the top-level elements are being mapped and the children within a container are not altered.\n         *  - Do not ignore the containers and organize the content of the containers as well: the hypertree is constructed and there is a partitioning of all nodes and connections into the hypertree.\n         *    The only reason a connection or node is not being mapped might be due to the visibility, which includes the visibility change through a collapsed parent container.\n         * @param options\n         */\n        convert: function(options) {\n\n            if (Utils.isUndefined(this.diagram)) {\n                throw \"No diagram to convert.\";\n            }\n\n            this.options = kendo.deepExtend({\n                    ignoreInvisible: true,\n                    ignoreContainers: true,\n                    layoutContainerChildren: false\n                },\n                options || {}\n            );\n\n            this.clear();\n            // create the nodes which participate effectively in the graph analysis\n            this._renormalizeShapes();\n\n            // recreate the incoming and outgoing collections of each and every node\n            this._renormalizeConnections();\n\n            // export the resulting graph\n            this.finalNodes = new Dictionary(this.nodes);\n            this.finalLinks = new Dictionary(this.edges);\n\n            this.finalGraph = new Graph();\n            this.finalNodes.forEach(function(n) {\n                this.finalGraph.addNode(n);\n            }, this);\n            this.finalLinks.forEach(function(l) {\n                this.finalGraph.addExistingLink(l);\n            }, this);\n            return this.finalGraph;\n        },\n\n        /**\n         * Maps the specified connection to an edge of the graph deduced from the given diagram.\n         * @param connection\n         * @returns {*}\n         */\n        mapConnection: function(connection) {\n            return this.edgeMap.get(connection.id);\n        },\n\n        /**\n         * Maps the specified shape to a node of the graph deduced from the given diagram.\n         * @param shape\n         * @returns {*}\n         */\n        mapShape: function(shape) {\n            return this.nodeMap.get(shape.id);\n        },\n\n        /**\n         * Gets the edge, if any, between the given nodes.\n         * @param a\n         * @param b\n         */\n        getEdge: function(a, b) {\n            return Utils.first(a.links, function(link) {\n                return link.getComplement(a) === b;\n            });\n        },\n\n        /**\n         * Clears all the collections used by the conversion process.\n         */\n        clear: function() {\n            this.finalGraph = null;\n            this.hyperTree = (!this.options.ignoreContainers && this.options.layoutContainerChildren) ? new HyperTree() : null;\n            this.hyperMap = (!this.options.ignoreContainers && this.options.layoutContainerChildren) ? new Dictionary() : null;\n            this.nodeMap = new Dictionary();\n            this.shapeMap = new Dictionary();\n            this.nodes = [];\n            this.edges = [];\n            this.edgeMap = new Dictionary();\n            this.ignoredConnections = [];\n            this.ignoredShapes = [];\n            this.finalNodes = [];\n            this.finalLinks = [];\n        },\n\n        /**\n         * The path from a given ContainerGraph to the root (container).\n         * @param containerGraph\n         * @returns {Array}\n         */\n        listToRoot: function(containerGraph) {\n            var list = [];\n            var s = containerGraph.container;\n            if (!s) {\n                return list;\n            }\n            list.push(s);\n            while (s.parentContainer) {\n                s = s.parentContainer;\n                list.push(s);\n            }\n            list.reverse();\n            return list;\n        },\n\n        firstNonIgnorableContainer: function(shape) {\n\n            if (shape.isContainer && !this._isIgnorableItem(shape)) {\n                return shape;\n            }\n            return !shape.parentContainer ? null : this.firstNonIgnorableContainer(shape.parentContainer);\n        },\n        isContainerConnection: function(a, b) {\n            if (a.isContainer && this.isDescendantOf(a, b)) {\n                return true;\n            }\n            return b.isContainer && this.isDescendantOf(b, a);\n        },\n\n        /**\n         * Returns true if the given shape is a direct child or a nested container child of the given container.\n         * If the given container and shape are the same this will return false since a shape cannot be its own child.\n         * @param scope\n         * @param a\n         * @returns {boolean}\n         */\n        isDescendantOf: function(scope, a) {\n            if (!scope.isContainer) {\n                throw \"Expecting a container.\";\n            }\n            if (scope === a) {\n                return false;\n            }\n            if (contains(scope.children, a)) {\n                return true;\n            }\n            var containers = [];\n            for (var i = 0, len = scope.children.length; i < len; i++) {\n                var c = scope.children[i];\n                if (c.isContainer && this.isDescendantOf(c, a)) {\n                    containers.push(c);\n                }\n            }\n\n            return containers.length > 0;\n        },\n        isIgnorableItem: function(shape) {\n            if (this.options.ignoreInvisible) {\n                if (shape.isCollapsed && this._isVisible(shape)) {\n                    return false;\n                }\n                if (!shape.isCollapsed && this._isVisible(shape)) {\n                    return false;\n                }\n                return true;\n            }\n            else {\n                return shape.isCollapsed && !this._isTop(shape);\n            }\n        },\n\n        /**\n         *  Determines whether the shape is or needs to be mapped to another shape. This occurs essentially when the shape sits in\n         * a collapsed container hierarchy and an external connection needs a node endpoint. This node then corresponds to the mapped shape and is\n         * necessarily a container in the parent hierarchy of the shape.\n         * @param shape\n         */\n        isShapeMapped: function(shape) {\n            return shape.isCollapsed && !this._isVisible(shape) && !this._isTop(shape);\n        },\n\n        leastCommonAncestor: function(a, b) {\n            if (!a) {\n                throw \"Parameter should not be null.\";\n            }\n            if (!b) {\n                throw \"Parameter should not be null.\";\n            }\n\n            if (!this.hyperTree) {\n                throw \"No hypertree available.\";\n            }\n            var al = this.listToRoot(a);\n            var bl = this.listToRoot(b);\n            var found = null;\n            if (Utils.isEmpty(al) || Utils.isEmpty(bl)) {\n                return this.hyperTree.root.data;\n            }\n            var xa = al[0];\n            var xb = bl[0];\n            var i = 0;\n            while (xa === xb) {\n                found = al[i];\n                i++;\n                if (i >= al.length || i >= bl.length) {\n                    break;\n                }\n                xa = al[i];\n                xb = bl[i];\n            }\n            if (!found) {\n                return this.hyperTree.root.data;\n            }\n            else {\n                return grep(this.hyperTree.nodes, function(n) {\n                    return n.data.container === found;\n                });\n            }\n        },\n        /**\n         * Determines whether the specified item is a top-level shape or container.\n         * @param item\n         * @returns {boolean}\n         * @private\n         */\n        _isTop: function(item) {\n            return !item.parentContainer;\n        },\n\n        /**\n         * Determines iteratively (by walking up the container stack) whether the specified shape is visible.\n         * This does NOT tell whether the item is not visible due to an explicit Visibility change or due to a collapse state.\n         * @param shape\n         * @returns {*}\n         * @private\n         */\n        _isVisible: function(shape) {\n\n            if (!shape.visible()) {\n                return false;\n            }\n            return !shape.parentContainer ? shape.visible() : this._isVisible(shape.parentContainer);\n        },\n\n        _isCollapsed: function(shape) {\n\n            if (shape.isContainer && shape.isCollapsed) {\n                return true;\n            }\n            return shape.parentContainer && this._isCollapsed(shape.parentContainer);\n        },\n\n        /**\n         * First part of the graph creation; analyzing the shapes and containers and deciding whether they should be mapped to a Node.\n         * @private\n         */\n        _renormalizeShapes: function() {\n            // add the nodes, the adjacency structure will be reconstructed later on\n            if (this.options.ignoreContainers) {\n                for (var i = 0, len = this.diagram.shapes.length; i < len; i++) {\n                    var shape = this.diagram.shapes[i];\n\n                    // if not visible (and ignoring the invisible ones) or a container we skip\n                    if ((this.options.ignoreInvisible && !this._isVisible(shape)) || shape.isContainer) {\n                        this.ignoredShapes.push(shape);\n                        continue;\n                    }\n                    var node = new Node(shape.id, shape);\n                    node.isVirtual = false;\n\n                    // the mapping will always contain singletons and the hyperTree will be null\n                    this.nodeMap.add(shape.id, node);\n                    this.nodes.push(node);\n                }\n            }\n            else {\n                throw \"Containers are not supported yet, but stay tuned.\";\n            }\n        },\n\n        /**\n         * Second part of the graph creation; analyzing the connections and deciding whether they should be mapped to an edge.\n         * @private\n         */\n        _renormalizeConnections: function() {\n            if (this.diagram.connections.length === 0) {\n                return;\n            }\n            for (var i = 0, len = this.diagram.connections.length; i < len; i++) {\n                var conn = this.diagram.connections[i];\n\n                if (this.isIgnorableItem(conn)) {\n                    this.ignoredConnections.push(conn);\n                    continue;\n                }\n\n                var source = !conn.sourceConnector ? null : conn.sourceConnector.shape;\n                var sink = !conn.targetConnector ? null : conn.targetConnector.shape;\n\n                // no layout for floating connections\n                if (!source || !sink) {\n                    this.ignoredConnections.push(conn);\n                    continue;\n                }\n\n                if (contains(this.ignoredShapes, source) && !this.shapeMap.containsKey(source)) {\n                    this.ignoredConnections.push(conn);\n                    continue;\n                }\n                if (contains(this.ignoredShapes, sink) && !this.shapeMap.containsKey(sink)) {\n                    this.ignoredConnections.push(conn);\n                    continue;\n                }\n\n                // if the endpoint sits in a collapsed container we need the container rather than the shape itself\n                if (this.shapeMap.containsKey(source)) {\n                    source = this.shapeMap[source];\n                }\n                if (this.shapeMap.containsKey(sink)) {\n                    sink = this.shapeMap[sink];\n                }\n\n                var sourceNode = this.mapShape(source);\n                var sinkNode = this.mapShape(sink);\n                if ((sourceNode === sinkNode) || this.areConnectedAlready(sourceNode, sinkNode)) {\n                    this.ignoredConnections.push(conn);\n                    continue;\n                }\n\n                if (sourceNode === null || sinkNode === null) {\n                    throw \"A shape was not mapped to a node.\";\n                }\n                if (this.options.ignoreContainers) {\n                    // much like a floating connection here since at least one end is attached to a container\n                    if (sourceNode.isVirtual || sinkNode.isVirtual) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    var newEdge = new Link(sourceNode, sinkNode, conn.id, conn);\n\n                    this.edgeMap.add(conn.id, newEdge);\n                    this.edges.push(newEdge);\n                }\n                else {\n                    throw \"Containers are not supported yet, but stay tuned.\";\n                }\n            }\n        },\n\n        areConnectedAlready: function(n, m) {\n            return Utils.any(this.edges, function(l) {\n                return l.source === n && l.target === m || l.source === m && l.target === n;\n            });\n        }\n\n        /**\n         * Depth-first traversal of the given container.\n         * @param container\n         * @param action\n         * @param includeStart\n         * @private\n         */\n        /* _visitContainer: function (container, action, includeStart) {\n\n         *//*if (container == null) throw new ArgumentNullException(\"container\");\n         if (action == null) throw new ArgumentNullException(\"action\");\n         if (includeStart) action(container);\n         if (container.children.isEmpty()) return;\n         foreach(\n         var item\n         in\n         container.children.OfType < IShape > ()\n         )\n         {\n         var childContainer = item\n         as\n         IContainerShape;\n         if (childContainer != null) this.VisitContainer(childContainer, action);\n         else action(item);\n         }*//*\n         }*/\n\n\n    });\n\n    /**\n     * The classic spring-embedder (aka force-directed, Fruchterman-Rheingold, barycentric) algorithm.\n     * http://en.wikipedia.org/wiki/Force-directed_graph_drawing\n     *  - Chapter 12 of Tamassia et al. \"Handbook of graph drawing and visualization\".\n     *  - Kobourov on preprint arXiv; http://arxiv.org/pdf/1201.3011.pdf\n     *  - Fruchterman and Rheingold in SOFTWARE-PRACTICE AND EXPERIENCE, VOL. 21(1 1), 1129-1164 (NOVEMBER 1991)\n     * @type {*}\n     */\n    var SpringLayout = LayoutBase.extend({\n        init: function(diagram) {\n            var that = this;\n            LayoutBase.fn.init.call(that);\n            if (Utils.isUndefined(diagram)) {\n                throw \"Diagram is not specified.\";\n            }\n            this.diagram = diagram;\n        },\n\n        layout: function(options) {\n\n            this.transferOptions(options);\n\n            var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n            var graph = adapter.convert(options);\n            if (graph.isEmpty()) {\n                return;\n            }\n            // split into connected components\n            var components = graph.getConnectedComponents();\n            if (Utils.isEmpty(components)) {\n                return;\n            }\n            for (var i = 0; i < components.length; i++) {\n                var component = components[i];\n                this.layoutGraph(component, options);\n            }\n            var finalNodeSet = this.gridLayoutComponents(components);\n            return new diagram.LayoutState(this.diagram, finalNodeSet);\n        },\n\n        layoutGraph: function(graph, options) {\n\n            if (Utils.isDefined(options)) {\n                this.transferOptions(options);\n            }\n            this.graph = graph;\n\n            var initialTemperature = this.options.nodeDistance * 9;\n            this.temperature = initialTemperature;\n\n            var guessBounds = this._expectedBounds();\n            this.width = guessBounds.width;\n            this.height = guessBounds.height;\n\n            for (var step = 0; step < this.options.iterations; step++) {\n                this.refineStage = step >= this.options.iterations * 5 / 6;\n                this.tick();\n                // exponential cooldown\n                this.temperature = this.refineStage ?\n                    initialTemperature / 30 :\n                    initialTemperature * (1 - step / (2 * this.options.iterations ));\n            }\n        },\n\n        /**\n         * Single iteration of the simulation.\n         */\n        tick: function() {\n            var i;\n            // collect the repulsive forces on each node\n            for (i = 0; i < this.graph.nodes.length; i++) {\n                this._repulsion(this.graph.nodes[i]);\n            }\n\n            // collect the attractive forces on each node\n            for (i = 0; i < this.graph.links.length; i++) {\n                this._attraction(this.graph.links[i]);\n            }\n            // update the positions\n            for (i = 0; i < this.graph.nodes.length; i++) {\n                var node = this.graph.nodes[i];\n                var offset = Math.sqrt(node.dx * node.dx + node.dy * node.dy);\n                if (offset === 0) {\n                    return;\n                }\n                node.x += Math.min(offset, this.temperature) * node.dx / offset;\n                node.y += Math.min(offset, this.temperature) * node.dy / offset;\n                if (this.options.limitToView) {\n                    node.x = Math.min(this.width, Math.max(node.width / 2, node.x));\n                    node.y = Math.min(this.height, Math.max(node.height / 2, node.y));\n                }\n            }\n        },\n\n        /**\n         * Shakes the node away from its current position to escape the deadlock.\n         * @param node A Node.\n         * @private\n         */\n        _shake: function(node) {\n            // just a simple polar neighborhood\n            var rho = Math.random() * this.options.nodeDistance / 4;\n            var alpha = Math.random() * 2 * Math.PI;\n            node.x += rho * Math.cos(alpha);\n            node.y -= rho * Math.sin(alpha);\n        },\n\n        /**\n         * The typical Coulomb-Newton force law F=k/r^2\n         * @remark This only works in dimensions less than three.\n         * @param d\n         * @param n A Node.\n         * @param m Another Node.\n         * @returns {number}\n         * @private\n         */\n        _InverseSquareForce: function(d, n, m) {\n            var force;\n            if (!this.refineStage) {\n                force = Math.pow(d, 2) / Math.pow(this.options.nodeDistance, 2);\n            }\n            else {\n                var deltax = n.x - m.x;\n                var deltay = n.y - m.y;\n\n                var wn = n.width / 2;\n                var hn = n.height / 2;\n                var wm = m.width / 2;\n                var hm = m.height / 2;\n\n                force = (Math.pow(deltax, 2) / Math.pow(wn + wm + this.options.nodeDistance, 2)) + (Math.pow(deltay, 2) / Math.pow(hn + hm + this.options.nodeDistance, 2));\n            }\n            return force * 4 / 3;\n        },\n\n        /**\n         * The typical Hooke force law F=kr^2\n         * @param d\n         * @param n\n         * @param m\n         * @returns {number}\n         * @private\n         */\n        _SquareForce: function(d, n, m) {\n            return 1 / this._InverseSquareForce(d, n, m);\n        },\n\n        _repulsion: function(n) {\n            n.dx = 0;\n            n.dy = 0;\n            Utils.forEach(this.graph.nodes, function(m) {\n                if (m === n) {\n                    return;\n                }\n                while (n.x === m.x && n.y === m.y) {\n                    this._shake(m);\n                }\n                var vx = n.x - m.x;\n                var vy = n.y - m.y;\n                var distance = Math.sqrt(vx * vx + vy * vy);\n                var r = this._SquareForce(distance, n, m) * 2;\n                n.dx += (vx / distance) * r;\n                n.dy += (vy / distance) * r;\n            }, this);\n        },\n        _attraction: function(link) {\n            var t = link.target;\n            var s = link.source;\n            if (s === t) {\n                // loops induce endless shakes\n                return;\n            }\n            while (s.x === t.x && s.y === t.y) {\n                this._shake(t);\n            }\n\n            var vx = s.x - t.x;\n            var vy = s.y - t.y;\n            var distance = Math.sqrt(vx * vx + vy * vy);\n\n            var a = this._InverseSquareForce(distance, s, t) * 5;\n            var dx = (vx / distance) * a;\n            var dy = (vy / distance) * a;\n            t.dx += dx;\n            t.dy += dy;\n            s.dx -= dx;\n            s.dy -= dy;\n        },\n\n        /**\n         * Calculates the expected bounds after layout.\n         * @returns {*}\n         * @private\n         */\n        _expectedBounds: function() {\n\n            var size, N = this.graph.nodes.length, /*golden ration optimal?*/ ratio = 1.5, multiplier = 4;\n            if (N === 0) {\n                return size;\n            }\n            size = Utils.fold(this.graph.nodes, function(s, node) {\n                var area = node.width * node.height;\n                if (area > 0) {\n                    s += Math.sqrt(area);\n                    return s;\n                }\n                return 0;\n            }, 0, this);\n            var av = size / N;\n            var squareSize = av * Math.ceil(Math.sqrt(N));\n            var width = squareSize * Math.sqrt(ratio);\n            var height = squareSize / Math.sqrt(ratio);\n            return { width: width * multiplier, height: height * multiplier };\n        }\n\n    });\n\n    var TreeLayoutProcessor = kendo.Class.extend({\n\n        init: function(options) {\n            this.center = null;\n            this.options = options;\n        },\n        layout: function(treeGraph, root) {\n            this.graph = treeGraph;\n            if (!this.graph.nodes || this.graph.nodes.length === 0) {\n                return;\n            }\n\n            if (!contains(this.graph.nodes, root)) {\n                throw \"The given root is not in the graph.\";\n            }\n\n            this.center = root;\n            this.graph.cacheRelationships();\n            /* var nonull = this.graph.nodes.where(function (n) {\n             return n.associatedShape != null;\n             });*/\n\n            // transfer the rects\n            /*nonull.forEach(function (n) {\n             n.Location = n.associatedShape.Position;\n             n.NodeSize = n.associatedShape.ActualBounds.ToSize();\n             }\n\n             );*/\n\n            // caching the children\n            /* nonull.forEach(function (n) {\n             n.children = n.getChildren();\n             });*/\n\n            this.layoutSwitch();\n\n            // apply the layout to the actual visuals\n            // nonull.ForEach(n => n.associatedShape.Position = n.Location);\n        },\n\n        layoutLeft: function(left) {\n            this.setChildrenDirection(this.center, \"Left\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            var h = 0, w = 0, y, i, node;\n            for (i = 0; i < left.length; i++) {\n                node = left[i];\n                node.TreeDirection = \"Left\";\n                var s = this.measure(node, Size.Empty);\n                w = Math.max(w, s.Width);\n                h += s.height + this.options.verticalSeparation;\n            }\n\n            h -= this.options.verticalSeparation;\n            var x = this.center.x - this.options.horizontalSeparation;\n            y = this.center.y + ((this.center.height - h) / 2);\n            for (i = 0; i < left.length; i++) {\n                node = left[i];\n                var p = new Point(x - node.Size.width, y);\n\n                this.arrange(node, p);\n                y += node.Size.height + this.options.verticalSeparation;\n            }\n        },\n\n        layoutRight: function(right) {\n            this.setChildrenDirection(this.center, \"Right\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            var h = 0, w = 0, y, i, node;\n            for (i = 0; i < right.length; i++) {\n                node = right[i];\n                node.TreeDirection = \"Right\";\n                var s = this.measure(node, Size.Empty);\n                w = Math.max(w, s.Width);\n                h += s.height + this.options.verticalSeparation;\n            }\n\n            h -= this.options.verticalSeparation;\n            var x = this.center.x + this.options.horizontalSeparation + this.center.width;\n            y = this.center.y + ((this.center.height - h) / 2);\n            for (i = 0; i < right.length; i++) {\n                node = right[i];\n                var p = new Point(x, y);\n                this.arrange(node, p);\n                y += node.Size.height + this.options.verticalSeparation;\n            }\n        },\n\n        layoutUp: function(up) {\n            this.setChildrenDirection(this.center, \"Up\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            var w = 0, y, node, i;\n            for (i = 0; i < up.length; i++) {\n                node = up[i];\n                node.TreeDirection = \"Up\";\n                var s = this.measure(node, Size.Empty);\n                w += s.width + this.options.horizontalSeparation;\n            }\n\n            w -= this.options.horizontalSeparation;\n            var x = this.center.x + (this.center.width / 2) - (w / 2);\n\n            // y = this.center.y -verticalSeparation -this.center.height/2 - h;\n            for (i = 0; i < up.length; i++) {\n                node = up[i];\n                y = this.center.y - this.options.verticalSeparation - node.Size.height;\n                var p = new Point(x, y);\n                this.arrange(node, p);\n                x += node.Size.width + this.options.horizontalSeparation;\n            }\n        },\n\n        layoutDown: function(down) {\n            var node, i;\n            this.setChildrenDirection(this.center, \"Down\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            var w = 0, y;\n            for (i = 0; i < down.length; i++) {\n                node = down[i];\n                node.treeDirection = \"Down\";\n                var s = this.measure(node, Size.Empty);\n                w += s.width + this.options.horizontalSeparation;\n            }\n\n            w -= this.options.horizontalSeparation;\n            var x = this.center.x + (this.center.width / 2) - (w / 2);\n            y = this.center.y + this.options.verticalSeparation + this.center.height;\n            for (i = 0; i < down.length; i++) {\n                node = down[i];\n                var p = new Point(x, y);\n                this.arrange(node, p);\n                x += node.Size.width + this.options.horizontalSeparation;\n            }\n        },\n\n        layoutRadialTree: function() {\n            // var rmax = children.Aggregate(0D, (current, node) => Math.max(node.SectorAngle, current));\n            this.setChildrenDirection(this.center, \"Radial\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            this.previousRoot = null;\n            var startAngle = this.options.startRadialAngle * DEG_TO_RAD;\n            var endAngle = this.options.endRadialAngle * DEG_TO_RAD;\n            if (endAngle <= startAngle) {\n                throw \"Final angle should not be less than the start angle.\";\n            }\n\n            this.maxDepth = 0;\n            this.origin = new Point(this.center.x, this.center.y);\n            this.calculateAngularWidth(this.center, 0);\n\n            // perform the layout\n            if (this.maxDepth > 0) {\n                this.radialLayout(this.center, this.options.radialFirstLevelSeparation, startAngle, endAngle);\n            }\n\n            // update properties of the root node\n            this.center.Angle = endAngle - startAngle;\n        },\n\n        tipOverTree: function(down, startFromLevel) {\n            if (Utils.isUndefined(startFromLevel)) {\n                startFromLevel = 0;\n            }\n\n            this.setChildrenDirection(this.center, \"Down\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            this.setChildrenLayout(this.center, \"Underneath\", false, startFromLevel);\n            var w = 0, y, node, i;\n            for (i = 0; i < down.length; i++) {\n                node = down[i];\n\n                // if (node.IsSpecial) continue;\n                node.TreeDirection = \"Down\";\n                var s = this.measure(node, Size.Empty);\n                w += s.width + this.options.horizontalSeparation;\n            }\n\n            w -= this.options.horizontalSeparation;\n\n            // putting the root in the center with respect to the whole diagram is not a nice result, let's put it with respect to the first level only\n            w -= down[down.length - 1].width;\n            w += down[down.length - 1].associatedShape.bounds().width;\n\n            var x = this.center.x + (this.center.width / 2) - (w / 2);\n            y = this.center.y + this.options.verticalSeparation + this.center.height;\n            for (i = 0; i < down.length; i++) {\n                node = down[i];\n                // if (node.IsSpecial) continue;\n                var p = new Point(x, y);\n                this.arrange(node, p);\n                x += node.Size.width + this.options.horizontalSeparation;\n            }\n\n            /*//let's place the special node, assuming there is only one\n             if (down.Count(n => n.IsSpecial) > 0)\n             {\n             var special = (from n in down where n.IsSpecial select n).First();\n             if (special.Children.Count > 0)\n             throw new DiagramException(\"The 'special' element should not have children.\");\n             special.Data.Location = new Point(Center.Data.Location.X + Center.AssociatedShape.BoundingRectangle.Width + this.options.HorizontalSeparation, Center.Data.Location.Y);\n             }*/\n        },\n        calculateAngularWidth: function(n, d) {\n            if (d > this.maxDepth) {\n                this.maxDepth = d;\n            }\n\n            var aw = 0, w = 1000, h = 1000, diameter = d === 0 ? 0 : Math.sqrt((w * w) + (h * h)) / d;\n\n            if (n.children.length > 0) {\n                // eventually with n.IsExpanded\n                for (var i = 0, len = n.children.length; i < len; i++) {\n                    var child = n.children[i];\n                    aw += this.calculateAngularWidth(child, d + 1);\n                }\n                aw = Math.max(diameter, aw);\n            }\n            else {\n                aw = diameter;\n            }\n\n            n.sectorAngle = aw;\n            return aw;\n        },\n        sortChildren: function(n) {\n            var basevalue = 0, i;\n\n            // update basevalue angle for node ordering\n            if (n.parents.length > 1) {\n                throw \"Node is not part of a tree.\";\n            }\n            var p = n.parents[0];\n            if (p) {\n                var pl = new Point(p.x, p.y);\n                var nl = new Point(n.x, n.y);\n                basevalue = this.normalizeAngle(Math.atan2(pl.y - nl.y, pl.x - nl.x));\n            }\n\n            var count = n.children.length;\n            if (count === 0) {\n                return null;\n            }\n\n            var angle = [];\n            var idx = [];\n\n            for (i = 0; i < count; ++i) {\n                var c = n.children[i];\n                var l = new Point(c.x, c.y);\n                idx[i] = i;\n                angle[i] = this.normalizeAngle(-basevalue + Math.atan2(l.y - l.y, l.x - l.x));\n            }\n\n            Utils.bisort(angle, idx);\n            var col = []; // list of nodes\n            var children = n.children;\n            for (i = 0; i < count; ++i) {\n                col.push(children[idx[i]]);\n            }\n\n            return col;\n        },\n\n        normalizeAngle: function(angle) {\n            while (angle > Math.PI * 2) {\n                angle -= 2 * Math.PI;\n            }\n            while (angle < 0) {\n                angle += Math.PI * 2;\n            }\n            return angle;\n        },\n        radialLayout: function(node, radius, startAngle, endAngle) {\n            var deltaTheta = endAngle - startAngle;\n            var deltaThetaHalf = deltaTheta / 2.0;\n            var parentSector = node.sectorAngle;\n            var fraction = 0;\n            var sorted = this.sortChildren(node);\n            for (var i = 0, len = sorted.length; i < len; i++) {\n                var childNode = sorted[i];\n                var cp = childNode;\n                var childAngleFraction = cp.sectorAngle / parentSector;\n                if (childNode.children.length > 0) {\n                    this.radialLayout(childNode,\n                        radius + this.options.radialSeparation,\n                        startAngle + (fraction * deltaTheta),\n                        startAngle + ((fraction + childAngleFraction) * deltaTheta));\n                }\n\n                this.setPolarLocation(childNode, radius, startAngle + (fraction * deltaTheta) + (childAngleFraction * deltaThetaHalf));\n                cp.angle = childAngleFraction * deltaTheta;\n                fraction += childAngleFraction;\n            }\n        },\n        setPolarLocation: function(node, radius, angle) {\n            node.x = this.origin.x + (radius * Math.cos(angle));\n            node.y = this.origin.y + (radius * Math.sin(angle));\n            node.BoundingRectangle = new Rect(node.x, node.y, node.width, node.height);\n        },\n\n        /**\n         * Sets the children direction recursively.\n         * @param node\n         * @param direction\n         * @param includeStart\n         */\n        setChildrenDirection: function(node, direction, includeStart) {\n            var rootDirection = node.treeDirection;\n            this.graph.depthFirstTraversal(node, function(n) {\n                n.treeDirection = direction;\n            });\n            if (!includeStart) {\n                node.treeDirection = rootDirection;\n            }\n        },\n\n        /**\n         * Sets the children layout recursively.\n         * @param node\n         * @param layout\n         * @param includeStart\n         * @param startFromLevel\n         */\n        setChildrenLayout: function(node, layout, includeStart, startFromLevel) {\n            if (Utils.isUndefined(startFromLevel)) {\n                startFromLevel = 0;\n            }\n            var rootLayout = node.childrenLayout;\n            if (startFromLevel > 0) {\n                // assign levels to the Node.Level property\n                this.graph.assignLevels(node);\n\n                // assign the layout on the condition that the level is at least the 'startFromLevel'\n                this.graph.depthFirstTraversal(\n                    node, function(s) {\n                        if (s.level >= startFromLevel + 1) {\n                            s.childrenLayout = layout;\n                        }\n                    }\n                );\n            }\n            else {\n                this.graph.depthFirstTraversal(node, function(s) {\n                    s.childrenLayout = layout;\n                });\n\n                // if the start should not be affected we put the state back\n                if (!includeStart) {\n                    node.childrenLayout = rootLayout;\n                }\n            }\n        },\n\n        /**\n         * Returns the actual size of the node. The given size is the allowed space wherein the node can lay out itself.\n         * @param node\n         * @param givenSize\n         * @returns {Size}\n         */\n        measure: function(node, givenSize) {\n            var w = 0, h = 0, s;\n            var result = new Size(0, 0);\n            if (!node) {\n                throw \"\";\n            }\n            var b = node.associatedShape.bounds();\n            var shapeWidth = b.width;\n            var shapeHeight = b.height;\n            if (node.parents.length !== 1) {\n                throw \"Node not in a spanning tree.\";\n            }\n\n            var parent = node.parents[0];\n            if (node.treeDirection === \"Undefined\") {\n                node.treeDirection = parent.treeDirection;\n            }\n\n            if (Utils.isEmpty(node.children)) {\n                result = new Size(\n                    Math.abs(shapeWidth) < EPSILON ? 50 : shapeWidth,\n                    Math.abs(shapeHeight) < EPSILON ? 25 : shapeHeight);\n            }\n            else if (node.children.length === 1) {\n                switch (node.treeDirection) {\n                    case \"Radial\":\n                        s = this.measure(node.children[0], givenSize); // child size\n                        w = shapeWidth + (this.options.radialSeparation * Math.cos(node.AngleToParent)) + s.width;\n                        h = shapeHeight + Math.abs(this.options.radialSeparation * Math.sin(node.AngleToParent)) + s.height;\n                        break;\n                    case \"Left\":\n                    case \"Right\":\n                        switch (node.childrenLayout) {\n\n                            case \"TopAlignedWithParent\":\n                                break;\n\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                s = this.measure(node.children[0], givenSize);\n                                w = shapeWidth + s.width + this.options.underneathHorizontalOffset;\n                                h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                                break;\n\n                            case \"Default\":\n                                s = this.measure(node.children[0], givenSize);\n                                w = shapeWidth + this.options.horizontalSeparation + s.width;\n                                h = Math.max(shapeHeight, s.height);\n                                break;\n\n                            default:\n                                throw \"Unhandled TreeDirection in the Radial layout measuring.\";\n                        }\n                        break;\n                    case \"Up\":\n                    case \"Down\":\n                        switch (node.childrenLayout) {\n\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                s = this.measure(node.children[0], givenSize);\n                                w = Math.max(shapeWidth, s.width + this.options.underneathHorizontalOffset);\n                                h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                                break;\n\n                            case \"Default\":\n                                s = this.measure(node.children[0], givenSize);\n                                h = shapeHeight + this.options.verticalSeparation + s.height;\n                                w = Math.max(shapeWidth, s.width);\n                                break;\n\n                            default:\n                                throw \"Unhandled TreeDirection in the Down layout measuring.\";\n                        }\n                        break;\n                    default:\n                        throw \"Unhandled TreeDirection in the layout measuring.\";\n                }\n\n                result = new Size(w, h);\n            }\n            else {\n                var i, childNode;\n                switch (node.treeDirection) {\n                    case \"Left\":\n                    case \"Right\":\n                        switch (node.childrenLayout) {\n\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                w = shapeWidth;\n                                h = shapeHeight + this.options.underneathVerticalTopOffset;\n                                for (i = 0; i < node.children.length; i++) {\n                                    childNode = node.children[i];\n                                    s = this.measure(childNode, givenSize);\n                                    w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                    h += s.height + this.options.underneathVerticalSeparation;\n                                }\n\n                                h -= this.options.underneathVerticalSeparation;\n                                break;\n\n                            case \"Default\":\n                                w = shapeWidth;\n                                h = 0;\n                                for (i = 0; i < node.children.length; i++) {\n                                    childNode = node.children[i];\n                                    s = this.measure(childNode, givenSize);\n                                    w = Math.max(w, shapeWidth + this.options.horizontalSeparation + s.width);\n                                    h += s.height + this.options.verticalSeparation;\n                                }\n                                h -= this.options.verticalSeparation;\n                                break;\n\n                            default:\n                                throw \"Unhandled TreeDirection in the Right layout measuring.\";\n                        }\n\n                        break;\n                    case \"Up\":\n                    case \"Down\":\n\n                        switch (node.childrenLayout) {\n\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                w = shapeWidth;\n                                h = shapeHeight + this.options.underneathVerticalTopOffset;\n                                for (i = 0; i < node.children.length; i++) {\n                                    childNode = node.children[i];\n                                    s = this.measure(childNode, givenSize);\n                                    w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                    h += s.height + this.options.underneathVerticalSeparation;\n                                }\n\n                                h -= this.options.underneathVerticalSeparation;\n                                break;\n\n                            case \"Default\":\n                                w = 0;\n                                h = 0;\n                                for (i = 0; i < node.children.length; i++) {\n                                    childNode = node.children[i];\n                                    s = this.measure(childNode, givenSize);\n                                    w += s.width + this.options.horizontalSeparation;\n                                    h = Math.max(h, s.height + this.options.verticalSeparation + shapeHeight);\n                                }\n\n                                w -= this.options.horizontalSeparation;\n                                break;\n\n                            default:\n                                throw \"Unhandled TreeDirection in the Down layout measuring.\";\n                        }\n\n                        break;\n                    default:\n                        throw \"Unhandled TreeDirection in the layout measuring.\";\n                }\n\n                result = new Size(w, h);\n            }\n\n            node.SectorAngle = Math.sqrt((w * w / 4) + (h * h / 4));\n            node.Size = result;\n            return result;\n        },\n        arrange: function(n, p) {\n            var i, pp, child, node, childrenwidth, b = n.associatedShape.bounds();\n            var shapeWidth = b.width;\n            var shapeHeight = b.height;\n            if (Utils.isEmpty(n.children)) {\n                n.x = p.x;\n                n.y = p.y;\n                n.BoundingRectangle = new Rect(p.x, p.y, shapeWidth, shapeHeight);\n            }\n            else {\n                var x, y;\n                var selfLocation;\n                switch (n.treeDirection) {\n                    case \"Left\":\n                        switch (n.childrenLayout) {\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                selfLocation = p;\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                                for (i = 0; i < node.children.length; i++) {\n                                    node = node.children[i];\n                                    x = selfLocation.x - node.associatedShape.width - this.options.underneathHorizontalOffset;\n                                    pp = new Point(x, y);\n                                    this.arrange(node, pp);\n                                    y += node.Size.height + this.options.underneathVerticalSeparation;\n                                }\n                                break;\n\n                            case \"Default\":\n                                selfLocation = new Point(p.x + n.Size.width - shapeWidth, p.y + ((n.Size.height - shapeHeight) / 2));\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                x = selfLocation.x - this.options.horizontalSeparation; // alignment of children\n                                y = p.y;\n                                for (i = 0; i < n.children.length; i++) {\n                                    node = n.children[i];\n                                    pp = new Point(x - node.Size.width, y);\n                                    this.arrange(node, pp);\n                                    y += node.Size.height + this.options.verticalSeparation;\n                                }\n                                break;\n\n                            default:\n                                throw \"Unsupported TreeDirection\";\n                        }\n\n                        break;\n                    case \"Right\":\n                        switch (n.childrenLayout) {\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                selfLocation = p;\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                x = p.x + shapeWidth + this.options.underneathHorizontalOffset;\n\n                                // alignment of children left-underneath the parent\n                                y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                                for (i = 0; i < n.children.length; i++) {\n                                    node = n.children[i];\n                                    pp = new Point(x, y);\n                                    this.arrange(node, pp);\n                                    y += node.Size.height + this.options.underneathVerticalSeparation;\n                                }\n\n                                break;\n\n                            case \"Default\":\n                                selfLocation = new Point(p.x, p.y + ((n.Size.height - shapeHeight) / 2));\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                x = p.x + shapeWidth + this.options.horizontalSeparation; // alignment of children\n                                y = p.y;\n                                for (i = 0; i < n.children.length; i++) {\n                                    node = n.children[i];\n                                    pp = new Point(x, y);\n                                    this.arrange(node, pp);\n                                    y += node.Size.height + this.options.verticalSeparation;\n                                }\n                                break;\n\n                            default:\n                                throw \"Unsupported TreeDirection\";\n                        }\n\n                        break;\n                    case \"Up\":\n                        selfLocation = new Point(p.x + ((n.Size.width - shapeWidth) / 2), p.y + n.Size.height - shapeHeight);\n                        n.x = selfLocation.x;\n                        n.y = selfLocation.y;\n                        n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                        if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                            childrenwidth = 0;\n                            // means there is an aberration due to the oversized Element with respect to the children\n                            for (i = 0; i < n.children.length; i++) {\n                                child = n.children[i];\n                                childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                            }\n                            childrenwidth -= this.options.horizontalSeparation;\n                            x = p.x + ((shapeWidth - childrenwidth) / 2);\n                        }\n                        else {\n                            x = p.x;\n                        }\n\n                        for (i = 0; i < n.children.length; i++) {\n                            node = n.children[i];\n                            y = selfLocation.y - this.options.verticalSeparation - node.Size.height;\n                            pp = new Point(x, y);\n                            this.arrange(node, pp);\n                            x += node.Size.width + this.options.horizontalSeparation;\n                        }\n                        break;\n\n                    case \"Down\":\n\n                        switch (n.childrenLayout) {\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n                            case \"Underneath\":\n                                selfLocation = p;\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                x = p.x + this.options.underneathHorizontalOffset; // alignment of children left-underneath the parent\n                                y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                                for (i = 0; i < n.children.length; i++) {\n                                    node = n.children[i];\n                                    pp = new Point(x, y);\n                                    this.arrange(node, pp);\n                                    y += node.Size.height + this.options.underneathVerticalSeparation;\n                                }\n                                break;\n\n                            case \"Default\":\n                                selfLocation = new Point(p.x + ((n.Size.width - shapeWidth) / 2), p.y);\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                                    childrenwidth = 0;\n                                    // means there is an aberration due to the oversized Element with respect to the children\n                                    for (i = 0; i < n.children.length; i++) {\n                                        child = n.children[i];\n                                        childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                                    }\n\n                                    childrenwidth -= this.options.horizontalSeparation;\n                                    x = p.x + ((shapeWidth - childrenwidth) / 2);\n                                }\n                                else {\n                                    x = p.x;\n                                }\n\n                                for (i = 0; i < n.children.length; i++) {\n                                    node = n.children[i];\n                                    y = selfLocation.y + this.options.verticalSeparation + shapeHeight;\n                                    pp = new Point(x, y);\n                                    this.arrange(node, pp);\n                                    x += node.Size.width + this.options.horizontalSeparation;\n                                }\n                                break;\n\n                            default:\n                                throw \"Unsupported TreeDirection\";\n                        }\n                        break;\n\n                    case \"None\":\n                        break;\n\n                    default:\n                        throw \"Unsupported TreeDirection\";\n                }\n            }\n        },\n        layoutSwitch: function() {\n            if (!this.center) {\n                return;\n            }\n\n            if (Utils.isEmpty(this.center.children)) {\n                return;\n            }\n\n            var type = this.options.subtype;\n            if (Utils.isUndefined(type)) {\n                type = \"Down\";\n            }\n            var single, male, female, leftcount;\n            var children = this.center.children;\n            switch (type.toLowerCase()) {\n                case \"radial\":\n                case \"radialtree\":\n                    this.layoutRadialTree();\n                    break;\n\n                case \"mindmaphorizontal\":\n                case \"mindmap\":\n                    single = this.center.children;\n\n                    if (this.center.children.length === 1) {\n                        this.layoutRight(single);\n                    }\n                    else {\n                        // odd number will give one more at the right\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function(n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function(n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n\n                        this.layoutLeft(male);\n                        this.layoutRight(female);\n                    }\n                    break;\n\n                case \"mindmapvertical\":\n                    single = this.center.children;\n\n                    if (this.center.children.length === 1) {\n                        this.layoutDown(single);\n                    }\n                    else {\n                        // odd number will give one more at the right\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function(n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function(n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutUp(male);\n                        this.layoutDown(female);\n                    }\n                    break;\n\n                case \"right\":\n                    this.layoutRight(this.center.children);\n                    break;\n\n                case \"left\":\n                    this.layoutLeft(this.center.children);\n                    break;\n\n                case \"up\":\n                case \"bottom\":\n                    this.layoutUp(this.center.children);\n                    break;\n\n                case \"down\":\n                case \"top\":\n                    this.layoutDown(this.center.children);\n                    break;\n\n                case \"tipover\":\n                case \"tipovertree\":\n                    if (this.options.tipOverTreeStartLevel < 0) {\n                        throw \"The tip-over level should be a positive integer.\";\n                    }\n                    this.tipOverTree(this.center.children, this.options.tipOverTreeStartLevel);\n                    break;\n\n                case \"undefined\":\n                case \"none\":\n                    break;\n            }\n        }\n    });\n\n    /**\n     * The various tree layout algorithms.\n     * @type {*}\n     */\n    var TreeLayout = LayoutBase.extend({\n        init: function(diagram) {\n            var that = this;\n            LayoutBase.fn.init.call(that);\n            if (Utils.isUndefined(diagram)) {\n                throw \"No diagram specified.\";\n            }\n            this.diagram = diagram;\n        },\n\n        /**\n         * Arranges the diagram in a tree-layout with the specified options and tree subtype.\n         */\n        layout: function(options) {\n\n            this.transferOptions(options);\n\n            // transform the diagram into a Graph\n            var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n\n            /**\n             * The Graph reduction from the given diagram.\n             * @type {*}\n             */\n            this.graph = adapter.convert();\n\n            var finalNodeSet = this.layoutComponents();\n\n            // note that the graph contains the original data and\n            // the components are another instance of nodes referring to the same set of shapes\n            return new diagram.LayoutState(this.diagram, finalNodeSet);\n        },\n\n        layoutComponents: function() {\n            if (this.graph.isEmpty()) {\n                return;\n            }\n\n            // split into connected components\n            var components = this.graph.getConnectedComponents();\n            if (Utils.isEmpty(components)) {\n                return;\n            }\n\n            var layout = new TreeLayoutProcessor(this.options);\n            var trees = [];\n            // find a spanning tree for each component\n            for (var i = 0; i < components.length; i++) {\n                var component = components[i];\n\n                var treeGraph = this.getTree(component);\n                if (!treeGraph) {\n                    throw \"Failed to find a spanning tree for the component.\";\n                }\n                var root = treeGraph.root;\n                var tree = treeGraph.tree;\n                layout.layout(tree, root);\n\n                trees.push(tree);\n            }\n\n            return this.gridLayoutComponents(trees);\n\n        },\n\n        /**\n         * Gets a spanning tree (and root) for the given graph.\n         * Ensure that the given graph is connected!\n         * @param graph\n         * @returns {*} A literal object consisting of the found root and the spanning tree.\n         */\n        getTree: function(graph) {\n            var root = null;\n            if (this.options.roots && this.options.roots.length > 0) {\n                for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                    var node = graph.nodes[i];\n                    for (var j = 0; j < this.options.roots.length; j++) {\n                        var givenRootShape = this.options.roots[j];\n                        if (givenRootShape === node.associatedShape) {\n                            root = node;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!root) {\n                // finds the most probable root on the basis of the longest path in the component\n                root = graph.root();\n                // should not happen really\n                if (!root) {\n                    throw \"Unable to find a root for the tree.\";\n                }\n            }\n            return this.getTreeForRoot(graph, root);\n        },\n\n        getTreeForRoot: function(graph, root) {\n\n            var tree = graph.getSpanningTree(root);\n            if (Utils.isUndefined(tree) || tree.isEmpty()) {\n                return null;\n            }\n            return {\n                tree: tree,\n                root: tree.root\n            };\n        }\n\n    });\n\n    /**\n     * The Sugiyama aka layered layout algorithm.\n     * @type {*}\n     */\n    var LayeredLayout = LayoutBase.extend({\n        init: function(diagram) {\n            var that = this;\n            LayoutBase.fn.init.call(that);\n            if (Utils.isUndefined(diagram)) {\n                throw \"Diagram is not specified.\";\n            }\n            this.diagram = diagram;\n        },\n\n        layout: function(options) {\n\n            this.transferOptions(options);\n\n            var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n            var graph = adapter.convert(options);\n            if (graph.isEmpty()) {\n                return;\n            }\n            // split into connected components\n            var components = graph.getConnectedComponents();\n            if (Utils.isEmpty(components)) {\n                return;\n            }\n            for (var i = 0; i < components.length; i++) {\n                var component = components[i];\n                this.layoutGraph(component, options);\n            }\n            var finalNodeSet = this.gridLayoutComponents(components);\n            return new diagram.LayoutState(this.diagram, finalNodeSet);\n\n        },\n\n        /**\n         * Initializes the runtime data properties of the layout.\n         * @private\n         */\n        _initRuntimeProperties: function() {\n            for (var k = 0; k < this.graph.nodes.length; k++) {\n                var node = this.graph.nodes[k];\n                node.layer = -1;\n                node.downstreamLinkCount = 0;\n                node.upstreamLinkCount = 0;\n\n                node.isVirtual = false;\n\n                node.uBaryCenter = 0.0;\n                node.dBaryCenter = 0.0;\n\n                node.upstreamPriority = 0;\n                node.downstreamPriority = 0;\n\n                node.gridPosition = 0;\n            }\n        },\n        _prepare: function(graph) {\n            var current = [], i, l, link;\n\n            // defines a mapping of a node to the layer index\n            var layerMap = new Dictionary();\n            var layerCount = 0;\n            var targetLayer, next, target;\n\n            Utils.forEach(graph.nodes, function(node) {\n                if (node.incoming.length === 0) {\n                    layerMap.set(node, 0);\n                    current.push(node);\n                }\n            });\n\n            while (current.length > 0) {\n                next = current.shift();\n                for (i = 0; i < next.outgoing.length; i++) {\n                    link = next.outgoing[i];\n                    target = link.target;\n\n                    if (layerMap.containsKey(target)) {\n                        targetLayer = Math.max(layerMap.get(next) + 1, layerMap.get(target));\n                    } else {\n                        targetLayer = layerMap.get(next) + 1;\n                    }\n                    layerMap.set(target, targetLayer);\n                    if (targetLayer > layerCount) {\n                        layerCount = targetLayer;\n                    }\n\n                    if (!contains(current, target)) {\n                        current.push(target);\n                    }\n                }\n            }\n\n            var sortedNodes = layerMap.keys();\n\n            sortedNodes.sort(function(o1, o2) {\n                var o1layer = layerMap.get(o1);\n                var o2layer = layerMap.get(o2);\n                return Utils.sign(o2layer - o1layer);\n            });\n\n            for (var n = 0; n < sortedNodes.length; ++n) {\n                var node = sortedNodes[n];\n                var minLayer = Number.MAX_VALUE;\n\n                if (node.outgoing.length === 0) {\n                    continue;\n                }\n\n                for (l = 0; l < node.outgoing.length; ++l) {\n                    link = node.outgoing[l];\n                    minLayer = Math.min(minLayer, layerMap.get(link.target));\n                }\n\n                if (minLayer > 1) {\n                    layerMap.set(node, minLayer - 1);\n                }\n            }\n\n            this.layers = [];\n            var layer;\n            for (i = 0; i < layerCount + 1; i++) {\n                layer = [];\n                layer.linksTo = {};\n                this.layers.push(layer);\n            }\n\n            layerMap.forEach(function(node, layer) {\n                node.layer = layer;\n                this.layers[layer].push(node);\n            }, this);\n\n            // set initial grid positions\n            for (l = 0; l < this.layers.length; l++) {\n                layer = this.layers[l];\n                for (i = 0; i < layer.length; i++) {\n                    layer[i].gridPosition = i;\n                }\n            }\n        },\n        /**\n         * Performs the layout of a single component.\n         */\n        layoutGraph: function(graph, options) {\n            if (Utils.isUndefined(graph)) {\n                throw \"No graph given or graph analysis of the diagram failed.\";\n            }\n            if (Utils.isDefined(options)) {\n                this.transferOptions(options);\n            }\n            this.graph = graph;\n\n            // sets unique indices on the nodes\n            graph.setItemIndices();\n\n            // ensures no cycles present for this layout\n            var reversedEdges = graph.makeAcyclic();\n\n            // define the runtime props being used by the layout algorithm\n            this._initRuntimeProperties();\n\n            this._prepare(graph, options);\n\n            this._dummify();\n\n            this._optimizeCrossings();\n\n            this._swapPairs();\n\n            this.arrangeNodes();\n\n            this._moveThingsAround();\n\n            this._dedummify();\n\n            // re-reverse the links which were switched earlier\n            Utils.forEach(reversedEdges, function(e) {\n                if (e.points) {\n                    e.points.reverse();\n                }\n            });\n        },\n\n        setMinDist: function(m, n, minDist) {\n            var l = m.layer;\n            var i = m.layerIndex;\n            this.minDistances[l][i] = minDist;\n        },\n\n        getMinDist: function(m, n) {\n            var dist = 0,\n                i1 = m.layerIndex,\n                i2 = n.layerIndex,\n                l = m.layer,\n                min = Math.min(i1, i2),\n                max = Math.max(i1, i2);\n            // use Sum()?\n            for (var k = min; k < max; ++k) {\n                dist += this.minDistances[l][k];\n            }\n            return dist;\n        },\n\n        placeLeftToRight: function(leftClasses) {\n            var leftPos = new Dictionary(), n, node;\n            for (var c = 0; c < this.layers.length; ++c) {\n                var classNodes = leftClasses[c];\n                if (!classNodes) {\n                    continue;\n                }\n\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    if (!leftPos.containsKey(node)) {\n                        this.placeLeft(node, leftPos, c);\n                    }\n                }\n\n                // adjust class\n                var d = Number.POSITIVE_INFINITY;\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    var rightSibling = this.rightSibling(node);\n                    if (rightSibling && this.nodeLeftClass.get(rightSibling) !== c) {\n                        d = Math.min(d, leftPos.get(rightSibling) - leftPos.get(node) - this.getMinDist(node, rightSibling));\n                    }\n                }\n                if (d === Number.POSITIVE_INFINITY) {\n                    var D = [];\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var neighbors = [];\n                        Utils.addRange(neighbors, this.upNodes.get(node));\n                        Utils.addRange(neighbors, this.downNodes.get(node));\n\n                        for (var e = 0; e < neighbors.length; e++) {\n                            var neighbor = neighbors[e];\n                            if (this.nodeLeftClass.get(neighbor) < c) {\n                                D.push(leftPos.get(neighbor) - leftPos.get(node));\n                            }\n                        }\n                    }\n                    D.sort();\n                    if (D.length === 0) {\n                        d = 0;\n                    }\n                    else if (D.length % 2 === 1) {\n                        d = D[this.intDiv(D.length, 2)];\n                    }\n                    else {\n                        d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                    }\n                }\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    leftPos.set(node, leftPos.get(node) + d);\n                }\n            }\n            return leftPos;\n        },\n\n        placeRightToLeft: function(rightClasses) {\n            var rightPos = new Dictionary(), n, node;\n            for (var c = 0; c < this.layers.length; ++c) {\n                var classNodes = rightClasses[c];\n                if (!classNodes) {\n                    continue;\n                }\n\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    if (!rightPos.containsKey(node)) {\n                        this.placeRight(node, rightPos, c);\n                    }\n                }\n\n                // adjust class\n                var d = Number.NEGATIVE_INFINITY;\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    var leftSibling = this.leftSibling(node);\n                    if (leftSibling && this.nodeRightClass.get(leftSibling) !== c) {\n                        d = Math.max(d, rightPos.get(leftSibling) - rightPos.get(node) + this.getMinDist(leftSibling, node));\n                    }\n                }\n                if (d === Number.NEGATIVE_INFINITY) {\n                    var D = [];\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var neighbors = [];\n                        Utils.addRange(neighbors, this.upNodes.get(node));\n                        Utils.addRange(neighbors, this.downNodes.get(node));\n\n                        for (var e = 0; e < neighbors.length; e++) {\n                            var neighbor = neighbors[e];\n                            if (this.nodeRightClass.get(neighbor) < c) {\n                                D.push(rightPos.get(node) - rightPos.get(neighbor));\n                            }\n                        }\n                    }\n                    D.sort();\n                    if (D.length === 0) {\n                        d = 0;\n                    }\n                    else if (D.length % 2 === 1) {\n                        d = D[this.intDiv(D.length, 2)];\n                    }\n                    else {\n                        d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                    }\n                }\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    rightPos.set(node, rightPos.get(node) + d);\n                }\n            }\n            return rightPos;\n        },\n\n        _getLeftWing: function() {\n            var leftWing = { value: null };\n            var result = this.computeClasses(leftWing, 1);\n            this.nodeLeftClass = leftWing.value;\n            return result;\n        },\n\n        _getRightWing: function() {\n            var rightWing = { value: null };\n            var result = this.computeClasses(rightWing, -1);\n            this.nodeRightClass = rightWing.value;\n            return result;\n        },\n\n        computeClasses: function(wingPair, d) {\n            var currentWing = 0,\n                wing = wingPair.value = new Dictionary();\n\n            for (var l = 0; l < this.layers.length; ++l) {\n                currentWing = l;\n\n                var layer = this.layers[l];\n                for (var n = d === 1 ? 0 : layer.length - 1; n >= 0 && n < layer.length; n += d) {\n                    var node = layer[n];\n                    if (!wing.containsKey(node)) {\n                        wing.set(node, currentWing);\n                        if (node.isVirtual) {\n                            var ndsinl = this._nodesInLink(node);\n                            for (var kk = 0; kk < ndsinl.length; kk++) {\n                                var vnode = ndsinl[kk];\n                                wing.set(vnode, currentWing);\n                            }\n                        }\n                    }\n                    else {\n                        currentWing = wing.get(node);\n                    }\n                }\n            }\n\n            var wings = [];\n            for (var i = 0; i < this.layers.length; i++) {\n                wings.push(null);\n            }\n            wing.forEach(function(node, classIndex) {\n                if (wings[classIndex] === null) {\n                    wings[classIndex] = [];\n                }\n                wings[classIndex].push(node);\n            });\n\n            return wings;\n        },\n        _isVerticalLayout: function() {\n            return this.options.subtype.toLowerCase() === \"up\" || this.options.subtype.toLowerCase() === \"down\" || this.options.subtype.toLowerCase() === \"vertical\";\n        },\n\n        _isHorizontalLayout: function() {\n            return this.options.subtype.toLowerCase() === \"right\" || this.options.subtype.toLowerCase() === \"left\" || this.options.subtype.toLowerCase() === \"horizontal\";\n        },\n        _isIncreasingLayout: function() {\n            // meaning that the visiting of the layers goes in the natural order of increasing layer index\n            return this.options.subtype.toLowerCase() === \"right\" || this.options.subtype.toLowerCase() === \"down\";\n        },\n        _moveThingsAround: function() {\n            var i, l, node, layer, n, w;\n            // sort the layers by their grid position\n            for (l = 0; l < this.layers.length; ++l) {\n                layer = this.layers[l];\n                layer.sort(this._gridPositionComparer);\n            }\n\n            this.minDistances = [];\n            for (l = 0; l < this.layers.length; ++l) {\n                layer = this.layers[l];\n                this.minDistances[l] = [];\n                for (n = 0; n < layer.length; ++n) {\n                    node = layer[n];\n                    node.layerIndex = n;\n                    this.minDistances[l][n] = this.options.nodeDistance;\n                    if (n < layer.length - 1) {\n                        if (this._isVerticalLayout()) {\n                            this.minDistances[l][n] += (node.width + layer[n + 1].width) / 2;\n                        }\n                        else {\n                            this.minDistances[l][n] += (node.height + layer[n + 1].height) / 2;\n                        }\n                    }\n                }\n            }\n\n            this.downNodes = new Dictionary();\n            this.upNodes = new Dictionary();\n            Utils.forEach(this.graph.nodes, function(node) {\n                this.downNodes.set(node, []);\n                this.upNodes.set(node, []);\n            }, this);\n            Utils.forEach(this.graph.links, function(link) {\n                var origin = link.source;\n                var dest = link.target;\n                var down = null, up = null;\n                if (origin.layer > dest.layer) {\n                    down = link.source;\n                    up = link.target;\n                }\n                else {\n                    up = link.source;\n                    down = link.target;\n                }\n                this.downNodes.get(up).push(down);\n                this.upNodes.get(down).push(up);\n            }, this);\n            this.downNodes.forEachValue(function(list) {\n                list.sort(this._gridPositionComparer);\n            }, this);\n            this.upNodes.forEachValue(function(list) {\n                list.sort(this._gridPositionComparer);\n            }, this);\n\n            for (l = 0; l < this.layers.length - 1; ++l) {\n                layer = this.layers[l];\n                for (w = 0; w < layer.length - 1; w++) {\n                    var currentNode = layer[w];\n                    if (!currentNode.isVirtual) {\n                        continue;\n                    }\n\n                    var currDown = this.downNodes.get(currentNode)[0];\n                    if (!currDown.isVirtual) {\n                        continue;\n                    }\n\n                    for (n = w + 1; n < layer.length; ++n) {\n                        node = layer[n];\n                        if (!node.isVirtual) {\n                            continue;\n                        }\n\n                        var downNode = this.downNodes.get(node)[0];\n                        if (!downNode.isVirtual) {\n                            continue;\n                        }\n\n                        if (currDown.gridPosition > downNode.gridPosition) {\n                            var pos = currDown.gridPosition;\n                            currDown.gridPosition = downNode.gridPosition;\n                            downNode.gridPosition = pos;\n                            var i1 = currDown.layerIndex;\n                            var i2 = downNode.layerIndex;\n                            this.layers[l + 1][i1] = downNode;\n                            this.layers[l + 1][i2] = currDown;\n                            currDown.layerIndex = i2;\n                            downNode.layerIndex = i1;\n                        }\n                    }\n                }\n            }\n\n\n            var leftClasses = this._getLeftWing();\n            var rightClasses = this._getRightWing();\n\n\n            var leftPos = this.placeLeftToRight(leftClasses);\n            var rightPos = this.placeRightToLeft(rightClasses);\n            var x = new Dictionary();\n            Utils.forEach(this.graph.nodes, function(node) {\n                x.set(node, (leftPos.get(node) + rightPos.get(node)) / 2);\n            });\n\n\n            var order = new Dictionary();\n            var placed = new Dictionary();\n            for (l = 0; l < this.layers.length; ++l) {\n                layer = this.layers[l];\n                var sequenceStart = -1, sequenceEnd = -1;\n                for (n = 0; n < layer.length; ++n) {\n                    node = layer[n];\n                    order.set(node, 0);\n                    placed.set(node, false);\n                    if (node.isVirtual) {\n                        if (sequenceStart === -1) {\n                            sequenceStart = n;\n                        }\n                        else if (sequenceStart === n - 1) {\n                            sequenceStart = n;\n                        }\n                        else {\n                            sequenceEnd = n;\n                            order.set(layer[sequenceStart], 0);\n                            if (x.get(node) - x.get(layer[sequenceStart]) === this.getMinDist(layer[sequenceStart], node)) {\n                                placed.set(layer[sequenceStart], true);\n                            }\n                            else {\n                                placed.set(layer[sequenceStart], false);\n                            }\n                            sequenceStart = n;\n                        }\n                    }\n                }\n            }\n            var directions = [1, -1];\n            Utils.forEach(directions, function(d) {\n                var start = d === 1 ? 0 : this.layers.length - 1;\n                for (var l = start; l >= 0 && l < this.layers.length; l += d) {\n                    var layer = this.layers[l];\n                    var virtualStartIndex = this._firstVirtualNode(layer);\n                    var virtualStart = null;\n                    var sequence = null;\n                    if (virtualStartIndex !== -1) {\n                        virtualStart = layer[virtualStartIndex];\n                        sequence = [];\n                        for (i = 0; i < virtualStartIndex; i++) {\n                            sequence.push(layer[i]);\n                        }\n                    }\n                    else {\n                        virtualStart = null;\n                        sequence = layer;\n                    }\n                    if (sequence.length > 0) {\n                        this._sequencer(x, null, virtualStart, d, sequence);\n                        for (i = 0; i < sequence.length - 1; ++i) {\n                            this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                        }\n                        if (virtualStart) {\n                            this.setMinDist(sequence[sequence.length - 1], virtualStart, x.get(virtualStart) - x.get(sequence[sequence.length - 1]));\n                        }\n                    }\n\n                    while (virtualStart) {\n                        var virtualEnd = this.nextVirtualNode(layer, virtualStart);\n                        if (!virtualEnd) {\n                            virtualStartIndex = virtualStart.layerIndex;\n                            sequence = [];\n                            for (i = virtualStartIndex + 1; i < layer.length; i++) {\n                                sequence.push(layer[i]);\n                            }\n                            if (sequence.length > 0) {\n                                this._sequencer(x, virtualStart, null, d, sequence);\n                                for (i = 0; i < sequence.length - 1; ++i) {\n                                    this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                                }\n                                this.setMinDist(virtualStart, sequence[0], x.get(sequence[0]) - x.get(virtualStart));\n                            }\n                        }\n                        else if (order.get(virtualStart) === d) {\n                            virtualStartIndex = virtualStart.layerIndex;\n                            var virtualEndIndex = virtualEnd.layerIndex;\n                            sequence = [];\n                            for (i = virtualStartIndex + 1; i < virtualEndIndex; i++) {\n                                sequence.push(layer[i]);\n                            }\n                            if (sequence.length > 0) {\n                                this._sequencer(x, virtualStart, virtualEnd, d, sequence);\n                            }\n                            placed.set(virtualStart, true);\n                        }\n                        virtualStart = virtualEnd;\n                    }\n                    this.adjustDirections(l, d, order, placed);\n                }\n            }, this);\n\n\n            var fromLayerIndex = this._isIncreasingLayout() ? 0 : this.layers.length - 1;\n            var reachedFinalLayerIndex = function(k, ctx) {\n                if (ctx._isIncreasingLayout()) {\n                    return k < ctx.layers.length;\n                }\n                else {\n                    return k >= 0;\n                }\n            };\n            var layerIncrement = this._isIncreasingLayout() ? +1 : -1, offset = 0;\n\n            /**\n             * Calcs the max height of the given layer.\n             */\n            function maximumHeight(layer, ctx) {\n                var height = Number.MIN_VALUE;\n                for (var n = 0; n < layer.length; ++n) {\n                    var node = layer[n];\n                    if (ctx._isVerticalLayout()) {\n                        height = Math.max(height, node.height);\n                    }\n                    else {\n                        height = Math.max(height, node.width);\n                    }\n                }\n                return height;\n            }\n\n            for (i = fromLayerIndex; reachedFinalLayerIndex(i, this); i += layerIncrement) {\n                layer = this.layers[i];\n                var height = maximumHeight(layer, this);\n\n                for (n = 0; n < layer.length; ++n) {\n                    node = layer[n];\n                    if (this._isVerticalLayout()) {\n                        node.x = x.get(node);\n                        node.y = offset + height / 2;\n                    }\n                    else {\n                        node.x = offset + height / 2;\n                        node.y = x.get(node);\n                    }\n                }\n\n                offset += this.options.layerSeparation + height;\n            }\n        },\n\n        adjustDirections: function(l, d, order, placed) {\n            if (l + d < 0 || l + d >= this.layers.length) {\n                return;\n            }\n\n            var prevBridge = null, prevBridgeTarget = null;\n            var layer = this.layers[l + d];\n            for (var n = 0; n < layer.length; ++n) {\n                var nextBridge = layer[n];\n                if (nextBridge.isVirtual) {\n                    var nextBridgeTarget = this.getNeighborOnLayer(nextBridge, l);\n                    if (nextBridgeTarget.isVirtual) {\n                        if (prevBridge) {\n                            var p = placed.get(prevBridgeTarget);\n                            var clayer = this.layers[l];\n                            var i1 = prevBridgeTarget.layerIndex;\n                            var i2 = nextBridgeTarget.layerIndex;\n                            for (var i = i1 + 1; i < i2; ++i) {\n                                if (clayer[i].isVirtual) {\n                                    p = p && placed.get(clayer[i]);\n                                }\n                            }\n                            if (p) {\n                                order.set(prevBridge, d);\n                                var j1 = prevBridge.layerIndex;\n                                var j2 = nextBridge.layerIndex;\n                                for (var j = j1 + 1; j < j2; ++j) {\n                                    if (layer[j].isVirtual) {\n                                        order.set(layer[j], d);\n                                    }\n                                }\n                            }\n                        }\n                        prevBridge = nextBridge;\n                        prevBridgeTarget = nextBridgeTarget;\n                    }\n                }\n            }\n        },\n\n        getNeighborOnLayer: function(node, l) {\n            var neighbor = this.upNodes.get(node)[0];\n            if (neighbor.layer === l) {\n                return neighbor;\n            }\n            neighbor = this.downNodes.get(node)[0];\n            if (neighbor.layer === l) {\n                return neighbor;\n            }\n            return null;\n        },\n\n        _sequencer: function(x, virtualStart, virtualEnd, dir, sequence) {\n            if (sequence.length === 1) {\n                this._sequenceSingle(x, virtualStart, virtualEnd, dir, sequence[0]);\n            }\n\n            if (sequence.length > 1) {\n                var r = sequence.length, t = this.intDiv(r, 2);\n                this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(0, t));\n                this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(t));\n                this.combineSequences(x, virtualStart, virtualEnd, dir, sequence);\n            }\n        },\n\n        _sequenceSingle: function(x, virtualStart, virtualEnd, dir, node) {\n            var neighbors = dir === -1 ? this.downNodes.get(node) : this.upNodes.get(node);\n\n            var n = neighbors.length;\n            if (n !== 0) {\n                if (n % 2 === 1) {\n                    x.set(node, x.get(neighbors[this.intDiv(n, 2)]));\n                }\n                else {\n                    x.set(node, (x.get(neighbors[this.intDiv(n, 2) - 1]) + x.get(neighbors[this.intDiv(n, 2)])) / 2);\n                }\n\n                if (virtualStart) {\n                    x.set(node, Math.max(x.get(node), x.get(virtualStart) + this.getMinDist(virtualStart, node)));\n                }\n                if (virtualEnd) {\n                    x.set(node, Math.min(x.get(node), x.get(virtualEnd) - this.getMinDist(node, virtualEnd)));\n                }\n            }\n        },\n\n        combineSequences: function(x, virtualStart, virtualEnd, dir, sequence) {\n            var r = sequence.length, t = this.intDiv(r, 2);\n\n            // collect left changes\n            var leftHeap = [], i, c, n, neighbors, neighbor, pair;\n            for (i = 0; i < t; ++i) {\n                c = 0;\n                neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                for (n = 0; n < neighbors.length; ++n) {\n                    neighbor = neighbors[n];\n                    if (x.get(neighbor) >= x.get(sequence[i])) {\n                        c++;\n                    }\n                    else {\n                        c--;\n                        leftHeap.push({ k: x.get(neighbor) + this.getMinDist(sequence[i], sequence[t - 1]), v: 2 });\n                    }\n                }\n                leftHeap.push({ k: x.get(sequence[i]) + this.getMinDist(sequence[i], sequence[t - 1]), v: c });\n            }\n            if (virtualStart) {\n                leftHeap.push({ k: x.get(virtualStart) + this.getMinDist(virtualStart, sequence[t - 1]), v: Number.MAX_VALUE });\n            }\n            leftHeap.sort(this._positionDescendingComparer);\n\n            // collect right changes\n            var rightHeap = [];\n            for (i = t; i < r; ++i) {\n                c = 0;\n                neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                for (n = 0; n < neighbors.length; ++n) {\n                    neighbor = neighbors[n];\n                    if (x.get(neighbor) <= x.get(sequence[i])) {\n                        c++;\n                    }\n                    else {\n                        c--;\n                        rightHeap.push({ k: x.get(neighbor) - this.getMinDist(sequence[i], sequence[t]), v: 2 });\n                    }\n                }\n                rightHeap.push({ k: x.get(sequence[i]) - this.getMinDist(sequence[i], sequence[t]), v: c });\n            }\n            if (virtualEnd) {\n                rightHeap.push({ k: x.get(virtualEnd) - this.getMinDist(virtualEnd, sequence[t]), v: Number.MAX_VALUE });\n            }\n            rightHeap.sort(this._positionAscendingComparer);\n\n            var leftRes = 0, rightRes = 0;\n            var m = this.getMinDist(sequence[t - 1], sequence[t]);\n            while (x.get(sequence[t]) - x.get(sequence[t - 1]) < m) {\n                if (leftRes < rightRes) {\n                    if (leftHeap.length === 0) {\n                        x.set(sequence[t - 1], x.get(sequence[t]) - m);\n                        break;\n                    }\n                    else {\n                        pair = leftHeap.shift();\n                        leftRes = leftRes + pair.v;\n                        x.set(sequence[t - 1], pair.k);\n                        x.set(sequence[t - 1], Math.max(x.get(sequence[t - 1]), x.get(sequence[t]) - m));\n                    }\n                }\n                else {\n                    if (rightHeap.length === 0) {\n                        x.set(sequence[t], x.get(sequence[t - 1]) + m);\n                        break;\n                    }\n                    else {\n                        pair = rightHeap.shift();\n                        rightRes = rightRes + pair.v;\n                        x.set(sequence[t], pair.k);\n                        x.set(sequence[t], Math.min(x.get(sequence[t]), x.get(sequence[t - 1]) + m));\n                    }\n                }\n            }\n            for (i = t - 2; i >= 0; i--) {\n                x.set(sequence[i], Math.min(x.get(sequence[i]), x.get(sequence[t - 1]) - this.getMinDist(sequence[i], sequence[t - 1])));\n            }\n            for (i = t + 1; i < r; i++) {\n                x.set(sequence[i], Math.max(x.get(sequence[i]), x.get(sequence[t]) + this.getMinDist(sequence[i], sequence[t])));\n            }\n        },\n\n        placeLeft: function(node, leftPos, leftClass) {\n            var pos = Number.NEGATIVE_INFINITY;\n            Utils.forEach(this._getComposite(node), function(v) {\n                var leftSibling = this.leftSibling(v);\n                if (leftSibling && this.nodeLeftClass.get(leftSibling) === this.nodeLeftClass.get(v)) {\n                    if (!leftPos.containsKey(leftSibling)) {\n                        this.placeLeft(leftSibling, leftPos, leftClass);\n                    }\n                    pos = Math.max(pos, leftPos.get(leftSibling) + this.getMinDist(leftSibling, v));\n                }\n            }, this);\n            if (pos === Number.NEGATIVE_INFINITY) {\n                pos = 0;\n            }\n            Utils.forEach(this._getComposite(node), function(v) {\n                leftPos.set(v, pos);\n            });\n        },\n\n        placeRight: function(node, rightPos, rightClass) {\n            var pos = Number.POSITIVE_INFINITY;\n            Utils.forEach(this._getComposite(node), function(v) {\n                var rightSibling = this.rightSibling(v);\n                if (rightSibling && this.nodeRightClass.get(rightSibling) === this.nodeRightClass.get(v)) {\n                    if (!rightPos.containsKey(rightSibling)) {\n                        this.placeRight(rightSibling, rightPos, rightClass);\n                    }\n                    pos = Math.min(pos, rightPos.get(rightSibling) - this.getMinDist(v, rightSibling));\n                }\n            }, this);\n            if (pos === Number.POSITIVE_INFINITY) {\n                pos = 0;\n            }\n            Utils.forEach(this._getComposite(node), function(v) {\n                rightPos.set(v, pos);\n            });\n        },\n\n        leftSibling: function(node) {\n            var layer = this.layers[node.layer],\n                layerIndex = node.layerIndex;\n            return layerIndex === 0 ? null : layer[layerIndex - 1];\n        },\n\n        rightSibling: function(node) {\n            var layer = this.layers[node.layer];\n            var layerIndex = node.layerIndex;\n            return layerIndex === layer.length - 1 ? null : layer[layerIndex + 1];\n\n        },\n\n        _getComposite: function(node) {\n            return node.isVirtual ? this._nodesInLink(node) : [node];\n        },\n\n        arrangeNodes: function() {\n            var i, l, ni, layer, node;\n            // Initialize node's base priority\n            for (l = 0; l < this.layers.length; l++) {\n                layer = this.layers[l];\n\n                for (ni = 0; ni < layer.length; ni++) {\n                    node = layer[ni];\n                    node.upstreamPriority = node.upstreamLinkCount;\n                    node.downstreamPriority = node.downstreamLinkCount;\n                }\n            }\n\n            // Layout is invoked after MinimizeCrossings\n            // so we may assume node's barycenters are initially correct\n\n            var maxLayoutIterations = 2;\n            for (var it = 0; it < maxLayoutIterations; it++) {\n                for (i = this.layers.length - 1; i >= 1; i--) {\n                    this.layoutLayer(false, i);\n                }\n\n                for (i = 0; i < this.layers.length - 1; i++) {\n                    this.layoutLayer(true, i);\n                }\n            }\n\n            // Offset the whole structure so that there are no gridPositions < 0\n            var gridPos = Number.MAX_VALUE;\n            for (l = 0; l < this.layers.length; l++) {\n                layer = this.layers[l];\n\n                for (ni = 0; ni < layer.length; ni++) {\n                    node = layer[ni];\n                    gridPos = Math.min(gridPos, node.gridPosition);\n                }\n            }\n\n            if (gridPos < 0) {\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        node.gridPosition = node.gridPosition - gridPos;\n                    }\n                }\n            }\n        },\n\n        /// <summary>\n        /// Layout of a single layer.\n        /// </summary>\n        /// <param name=\"layerIndex\">The layer to organize.</param>\n        /// <param name=\"movingDownwards\">If set to <c>true</c> we move down in the layer stack.</param>\n        /// <seealso cref=\"OptimizeCrossings()\"/>\n        layoutLayer: function(down, layer) {\n            var iconsidered;\n            var considered;\n\n            if (down) {\n                considered = this.layers[iconsidered = layer + 1];\n            }\n            else {\n                considered = this.layers[iconsidered = layer - 1];\n            }\n\n            // list containing the nodes in the considered layer sorted by priority\n            var sorted = [];\n            for (var n = 0; n < considered.length; n++) {\n                sorted.push(considered[n]);\n            }\n            sorted.sort(function(n1, n2) {\n                var n1Priority = (n1.upstreamPriority + n1.downstreamPriority) / 2;\n                var n2Priority = (n2.upstreamPriority + n2.downstreamPriority) / 2;\n\n                if (Math.abs(n1Priority - n2Priority) < 0.0001) {\n                    return 0;\n                }\n                if (n1Priority < n2Priority) {\n                    return 1;\n                }\n                return -1;\n            });\n\n            // each node strives for its barycenter; high priority nodes start first\n            Utils.forEach(sorted, function(node) {\n                var nodeGridPos = node.gridPosition;\n                var nodeBaryCenter = this.calcBaryCenter(node);\n                var nodePriority = (node.upstreamPriority + node.downstreamPriority) / 2;\n\n                if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.0001) {\n                    // This node is exactly at its barycenter -> perfect\n                    return;\n                }\n\n                if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.25 + 0.0001) {\n                    // This node is close enough to the barycenter -> should work\n                    return;\n                }\n\n                if (nodeGridPos < nodeBaryCenter) {\n                    // Try to move the node to the right in an\n                    // attempt to reach its barycenter\n                    while (nodeGridPos < nodeBaryCenter) {\n                        if (!this.moveRight(node, considered, nodePriority)) {\n                            break;\n                        }\n\n                        nodeGridPos = node.gridPosition;\n                    }\n                }\n                else {\n                    // Try to move the node to the left in an\n                    // attempt to reach its barycenter\n                    while (nodeGridPos > nodeBaryCenter) {\n                        if (!this.moveLeft(node, considered, nodePriority)) {\n                            break;\n                        }\n\n                        nodeGridPos = node.gridPosition;\n                    }\n                }\n            }, this);\n\n            // after the layer has been rearranged we need to recalculate the barycenters\n            // of the nodes in the surrounding layers\n            if (iconsidered > 0) {\n                this.calcDownData(iconsidered - 1);\n            }\n            if (iconsidered < this.layers.length - 1) {\n                this.calcUpData(iconsidered + 1);\n            }\n        },\n\n        /// <summary>\n        /// Moves the node to the right and returns <c>true</c> if this was possible.\n        /// </summary>\n        /// <param name=\"node\">The node.</param>\n        /// <param name=\"layer\">The layer.</param>\n        /// <returns>Returns <c>true</c> if the shift was possible, otherwise <c>false</c>.</returns>\n        moveRight: function(node, layer, priority) {\n            var index = Utils.indexOf(layer, node);\n            if (index === layer.length - 1) {\n                // this is the last node in the layer, so we can move to the right without troubles\n                node.gridPosition = node.gridPosition + 0.5;\n                return true;\n            }\n\n            var rightNode = layer[index + 1];\n            var rightNodePriority = (rightNode.upstreamPriority + rightNode.downstreamPriority) / 2;\n\n            // check if there is space between the right and the current node\n            if (rightNode.gridPosition > node.gridPosition + 1) {\n                node.gridPosition = node.gridPosition + 0.5;\n                return true;\n            }\n\n            // we have reached a node with higher priority; no movement is allowed\n            if (rightNodePriority > priority ||\n                Math.abs(rightNodePriority - priority) < 0.0001) {\n                return false;\n            }\n\n            // the right node has lower priority - try to move it\n            if (this.moveRight(rightNode, layer, priority)) {\n                node.gridPosition = node.gridPosition + 0.5;\n                return true;\n            }\n\n            return false;\n        },\n\n        /// <summary>\n        /// Moves the node to the left and returns <c>true</c> if this was possible.\n        /// </summary>\n        /// <param name=\"node\">The node.</param>\n        /// <param name=\"layer\">The layer.</param>\n        /// <returns>Returns <c>true</c> if the shift was possible, otherwise <c>false</c>.</returns>\n        moveLeft: function(node, layer, priority) {\n            var index = Utils.indexOf(layer, node);\n            if (index === 0) {\n                // this is the last node in the layer, so we can move to the left without troubles\n                node.gridPosition = node.gridPosition - 0.5;\n                return true;\n            }\n\n            var leftNode = layer[index - 1];\n            var leftNodePriority = (leftNode.upstreamPriority + leftNode.downstreamPriority) / 2;\n\n            // check if there is space between the left and the current node\n            if (leftNode.gridPosition < node.gridPosition - 1) {\n                node.gridPosition = node.gridPosition - 0.5;\n                return true;\n            }\n\n            // we have reached a node with higher priority; no movement is allowed\n            if (leftNodePriority > priority ||\n                Math.abs(leftNodePriority - priority) < 0.0001) {\n                return false;\n            }\n\n            // The left node has lower priority - try to move it\n            if (this.moveLeft(leftNode, layer, priority)) {\n                node.gridPosition = node.gridPosition - 0.5;\n                return true;\n            }\n\n            return false;\n        },\n\n        mapVirtualNode: function(node, link) {\n            this.nodeToLinkMap.set(node, link);\n            if (!this.linkToNodeMap.containsKey(link)) {\n                this.linkToNodeMap.set(link, []);\n            }\n            this.linkToNodeMap.get(link).push(node);\n        },\n\n        _nodesInLink: function(node) {\n            return this.linkToNodeMap.get(this.nodeToLinkMap.get(node));\n        },\n\n        /// <summary>\n        /// Inserts dummy nodes to break long links.\n        /// </summary>\n        _dummify: function() {\n            this.linkToNodeMap = new Dictionary();\n            this.nodeToLinkMap = new Dictionary();\n\n            var layer, pos, newNode, node, r, newLink, i, l, links = this.graph.links.slice(0);\n            var layers = this.layers;\n\n            var addLinkBetweenLayers = function(upLayer, downLayer, link) {\n                layers[upLayer].linksTo[downLayer] = layers[upLayer].linksTo[downLayer] || [];\n                layers[upLayer].linksTo[downLayer].push(link);\n            };\n\n            for (l = 0; l < links.length; l++) {\n                var link = links[l];\n                var o = link.source;\n                var d = link.target;\n\n                var oLayer = o.layer;\n                var dLayer = d.layer;\n                var oPos = o.gridPosition;\n                var dPos = d.gridPosition;\n\n                var step = (dPos - oPos) / Math.abs(dLayer - oLayer);\n\n                var p = o;\n                if (oLayer - dLayer > 1) {\n                    for (i = oLayer - 1; i > dLayer; i--) {\n                        newNode = new Node();\n                        newNode.x = o.x;\n                        newNode.y = o.y;\n                        newNode.width = o.width / 100;\n                        newNode.height = o.height / 100;\n\n                        layer = layers[i];\n                        pos = (i - dLayer) * step + oPos;\n                        if (pos > layer.length) {\n                            pos = layer.length;\n                        }\n\n                        // check if origin and dest are both last\n                        if (oPos >= layers[oLayer].length - 1 &&\n                            dPos >= layers[dLayer].length - 1) {\n                            pos = layer.length;\n                        }\n\n                        // check if origin and destination are both first\n                        else if (oPos === 0 && dPos === 0) {\n                            pos = 0;\n                        }\n\n                        newNode.layer = i;\n                        newNode.uBaryCenter = 0.0;\n                        newNode.dBaryCenter = 0.0;\n                        newNode.upstreamLinkCount = 0;\n                        newNode.downstreamLinkCount = 0;\n                        newNode.gridPosition = pos;\n                        newNode.isVirtual = true;\n\n                        Utils.insert(layer, newNode, pos);\n\n                        // translate rightwards nodes' positions\n                        for (r = pos + 1; r < layer.length; r++) {\n                            node = layer[r];\n                            node.gridPosition = node.gridPosition + 1;\n                        }\n\n                        newLink = new Link(p, newNode);\n                        newLink.depthOfDumminess = 0;\n\n                        addLinkBetweenLayers(i - 1, i, newLink);\n\n                        p = newNode;\n\n                        // add the new node and the new link to the graph\n                        this.graph._addNode(newNode);\n                        this.graph.addLink(newLink);\n\n                        newNode.index = this.graph.nodes.length - 1;\n                        this.mapVirtualNode(newNode, link);\n                    }\n\n                    // set the origin of the real arrow to the last dummy\n                    addLinkBetweenLayers(dLayer - 1, dLayer, newLink);\n                    link.changeSource(p);\n                    link.depthOfDumminess = oLayer - dLayer - 1;\n                } else if (oLayer - dLayer < -1) {\n                    for (i = oLayer + 1; i < dLayer; i++) {\n                        newNode = new Node();\n                        newNode.x = o.x;\n                        newNode.y = o.y;\n                        newNode.width = o.width / 100;\n                        newNode.height = o.height / 100;\n\n                        layer = layers[i];\n                        pos = (i - oLayer) * step + oPos;\n                        if (pos > layer.length) {\n                            pos = layer.length;\n                        }\n\n                        // check if origin and dest are both last\n                        if (oPos >= layers[oLayer].length - 1 &&\n                            dPos >= layers[dLayer].length - 1) {\n                            pos = layer.length;\n                        }\n\n                        // check if origin and destination are both first\n                        else if (oPos === 0 && dPos === 0) {\n                            pos = 0;\n                        }\n\n                        newNode.layer = i;\n                        newNode.uBaryCenter = 0.0;\n                        newNode.dBaryCenter = 0.0;\n                        newNode.upstreamLinkCount = 0;\n                        newNode.downstreamLinkCount = 0;\n                        newNode.gridPosition = pos;\n                        newNode.isVirtual = true;\n\n                        pos &= pos; // truncates to int\n                        Utils.insert(layer, newNode, pos);\n\n                        // translate rightwards nodes' positions\n                        for (r = pos + 1; r < layer.length; r++) {\n                            node = layer[r];\n                            node.gridPosition = node.gridPosition + 1;\n                        }\n\n                        newLink = new Link(p, newNode);\n                        newLink.depthOfDumminess = 0;\n                        addLinkBetweenLayers(i - 1, i, newLink);\n\n                        p = newNode;\n\n                        // add the new node and the new link to the graph\n                        this.graph._addNode(newNode);\n                        this.graph.addLink(newLink);\n\n                        newNode.index = this.graph.nodes.length - 1;\n                        this.mapVirtualNode(newNode, link);\n                    }\n                    addLinkBetweenLayers(dLayer - 1, dLayer, link);\n\n                    // Set the origin of the real arrow to the last dummy\n                    link.changeSource(p);\n                    link.depthOfDumminess = dLayer - oLayer - 1;\n                } else {\n                    addLinkBetweenLayers(oLayer, dLayer, link);\n                }\n            }\n        },\n\n        /// <summary>\n        /// Removes the dummy nodes inserted earlier to break long links.\n        /// </summary>\n        /// <remarks>The virtual nodes are effectively turned into intermediate connection points.</remarks>\n        _dedummify: function() {\n            var dedum = true;\n            while (dedum) {\n                dedum = false;\n\n                for (var l = 0; l < this.graph.links.length; l++) {\n                    var link = this.graph.links[l];\n                    if (!link.depthOfDumminess) {\n                        continue;\n                    }\n\n                    var points = [];\n\n                    // add points in reverse order\n                    points.unshift({ x: link.target.x, y: link.target.y });\n                    points.unshift({ x: link.source.x, y: link.source.y });\n\n                    // _dedummify the link\n                    var temp = link;\n                    var depthOfDumminess = link.depthOfDumminess;\n                    for (var d = 0; d < depthOfDumminess; d++) {\n                        var node = temp.source;\n                        var prevLink = node.incoming[0];\n\n                        points.unshift({ x: prevLink.source.x, y: prevLink.source.y });\n\n                        temp = prevLink;\n                    }\n\n                    // restore the original link origin\n                    link.changeSource(temp.source);\n\n                    // reset dummification flag\n                    link.depthOfDumminess = 0;\n\n                    // note that we only need the intermediate points, floating links have been dropped in the analysis\n                    if (points.length > 2) {\n                        // first and last are the endpoints\n                        points.splice(0, 1);\n                        points.splice(points.length - 1);\n                        link.points = points;\n                    }\n                    else {\n                        link.points = [];\n                    }\n\n                    // we are not going to delete the dummy elements;\n                    // they won't be needed anymore anyway.\n\n                    dedum = true;\n                    break;\n                }\n            }\n        },\n\n        /// <summary>\n        /// Optimizes/reduces the crossings between the layers by turning the crossing problem into a (combinatorial) number ordering problem.\n        /// </summary>\n        _optimizeCrossings: function() {\n            var moves = -1, i;\n            var maxIterations = 3;\n            var iter = 0;\n\n            while (moves !== 0) {\n                if (iter++ > maxIterations) {\n                    break;\n                }\n\n                moves = 0;\n\n                for (i = this.layers.length - 1; i >= 1; i--) {\n                    moves += this.optimizeLayerCrossings(false, i);\n                }\n\n                for (i = 0; i < this.layers.length - 1; i++) {\n                    moves += this.optimizeLayerCrossings(true, i);\n                }\n            }\n        },\n\n        calcUpData: function(layer) {\n            if (layer === 0) {\n                return;\n            }\n\n            var considered = this.layers[layer], i, l, link;\n            var upLayer = new Set();\n            var temp = this.layers[layer - 1];\n            for (i = 0; i < temp.length; i++) {\n                upLayer.add(temp[i]);\n            }\n\n            for (i = 0; i < considered.length; i++) {\n                var node = considered[i];\n\n                // calculate barycenter\n                var sum = 0;\n                var total = 0;\n\n                for (l = 0; l < node.incoming.length; l++) {\n                    link = node.incoming[l];\n                    if (upLayer.contains(link.source)) {\n                        total++;\n                        sum += link.source.gridPosition;\n                    }\n                }\n\n                for (l = 0; l < node.outgoing.length; l++) {\n                    link = node.outgoing[l];\n                    if (upLayer.contains(link.target)) {\n                        total++;\n                        sum += link.target.gridPosition;\n                    }\n                }\n\n                if (total > 0) {\n                    node.uBaryCenter = sum / total;\n                    node.upstreamLinkCount = total;\n                }\n                else {\n                    node.uBaryCenter = i;\n                    node.upstreamLinkCount = 0;\n                }\n            }\n        },\n\n        calcDownData: function(layer) {\n            if (layer === this.layers.length - 1) {\n                return;\n            }\n\n            var considered = this.layers[layer], i , l, link;\n            var downLayer = new Set();\n            var temp = this.layers[layer + 1];\n            for (i = 0; i < temp.length; i++) {\n                downLayer.add(temp[i]);\n            }\n\n            for (i = 0; i < considered.length; i++) {\n                var node = considered[i];\n\n                // calculate barycenter\n                var sum = 0;\n                var total = 0;\n\n                for (l = 0; l < node.incoming.length; l++) {\n                    link = node.incoming[l];\n                    if (downLayer.contains(link.source)) {\n                        total++;\n                        sum += link.source.gridPosition;\n                    }\n                }\n\n                for (l = 0; l < node.outgoing.length; l++) {\n                    link = node.outgoing[l];\n                    if (downLayer.contains(link.target)) {\n                        total++;\n                        sum += link.target.gridPosition;\n                    }\n                }\n\n                if (total > 0) {\n                    node.dBaryCenter = sum / total;\n                    node.downstreamLinkCount = total;\n                }\n                else {\n                    node.dBaryCenter = i;\n                    node.downstreamLinkCount = 0;\n                }\n            }\n        },\n\n        /// <summary>\n        /// Optimizes the crossings.\n        /// </summary>\n        /// <remarks>The big trick here is the usage of weights or values attached to connected nodes which turn a problem of crossing links\n        /// to an a problem of ordering numbers.</remarks>\n        /// <param name=\"layerIndex\">The layer index.</param>\n        /// <param name=\"movingDownwards\">If set to <c>true</c> we move down in the layer stack.</param>\n        /// <returns>The number of nodes having moved, i.e. the number of crossings reduced.</returns>\n        optimizeLayerCrossings: function(down, layer) {\n            var iconsidered;\n            var considered;\n\n            if (down) {\n                considered = this.layers[iconsidered = layer + 1];\n            }\n            else {\n                considered = this.layers[iconsidered = layer - 1];\n            }\n\n            // remember what it was\n            var presorted = considered.slice(0);\n\n            // calculate barycenters for all nodes in the considered layer\n            if (down) {\n                this.calcUpData(iconsidered);\n            }\n            else {\n                this.calcDownData(iconsidered);\n            }\n\n            var that = this;\n            // sort nodes within this layer according to the barycenters\n            considered.sort(function(n1, n2) {\n                var n1BaryCenter = that.calcBaryCenter(n1),\n                    n2BaryCenter = that.calcBaryCenter(n2);\n                if (Math.abs(n1BaryCenter - n2BaryCenter) < 0.0001) {\n                    // in case of coinciding barycenters compare by the count of in/out links\n                    if (n1.degree() === n2.degree()) {\n                        return that.compareByIndex(n1, n2);\n                    }\n                    else if (n1.degree() < n2.degree()) {\n                        return 1;\n                    }\n                    return -1;\n                }\n                var compareValue = (n2BaryCenter - n1BaryCenter) * 1000;\n                if (compareValue > 0) {\n                    return -1;\n                }\n                else if (compareValue < 0) {\n                    return 1;\n                }\n                return that.compareByIndex(n1, n2);\n            });\n\n            // count relocations\n            var i, moves = 0;\n            for (i = 0; i < considered.length; i++) {\n                if (considered[i] !== presorted[i]) {\n                    moves++;\n                }\n            }\n\n            if (moves > 0) {\n                // now that the boxes have been arranged, update their grid positions\n                var inode = 0;\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    node.gridPosition = inode++;\n                }\n            }\n\n            return moves;\n        },\n\n        /// <summary>\n        /// Swaps a pair of nodes in a layer.\n        /// </summary>\n        /// <param name=\"layerIndex\">Index of the layer.</param>\n        /// <param name=\"n\">The Nth node in the layer.</param>\n        _swapPairs: function() {\n            var maxIterations = this.options.layeredIterations;\n            var iter = 0;\n\n            while (true) {\n                if (iter++ > maxIterations) {\n                    break;\n                }\n\n                var downwards = (iter % 4 <= 1);\n                var secondPass = (iter % 4 === 1);\n\n                for (var l = (downwards ? 0 : this.layers.length - 1);\n                     downwards ? l <= this.layers.length - 1 : l >= 0; l += (downwards ? 1 : -1)) {\n                    var layer = this.layers[l];\n                    var hasSwapped = false;\n\n                    // there is no need to recalculate crossings if they were calculated\n                    // on the previous step and nothing has changed\n                    var calcCrossings = true;\n                    var memCrossings = 0;\n\n                    for (var n = 0; n < layer.length - 1; n++) {\n                        // count crossings\n                        var up = 0;\n                        var down = 0;\n                        var crossBefore = 0;\n\n                        if (calcCrossings) {\n                            if (l !== 0) {\n                                up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                            }\n                            if (l !== this.layers.length - 1) {\n                                down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                            }\n                            if (downwards) {\n                                up *= 2;\n                            }\n                            else {\n                                down *= 2;\n                            }\n\n                            crossBefore = up + down;\n                        }\n                        else {\n                            crossBefore = memCrossings;\n                        }\n\n                        if (crossBefore === 0) {\n                            continue;\n                        }\n\n                        // Swap nodes\n                        var node1 = layer[n];\n                        var node2 = layer[n + 1];\n\n                        var node1GridPos = node1.gridPosition;\n                        var node2GridPos = node2.gridPosition;\n                        layer[n] = node2;\n                        layer[n + 1] = node1;\n                        node1.gridPosition = node2GridPos;\n                        node2.gridPosition = node1GridPos;\n\n                        // count crossings again and if worse than before, restore swapping\n                        up = 0;\n                        if (l !== 0) {\n                            up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                        }\n                        down = 0;\n                        if (l !== this.layers.length - 1) {\n                            down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                        }\n                        if (downwards) {\n                            up *= 2;\n                        }\n                        else {\n                            down *= 2;\n                        }\n                        var crossAfter = up + down;\n\n                        var revert = false;\n                        if (secondPass) {\n                            revert = crossAfter >= crossBefore;\n                        }\n                        else {\n                            revert = crossAfter > crossBefore;\n                        }\n\n                        if (revert) {\n                            node1 = layer[n];\n                            node2 = layer[n + 1];\n\n                            node1GridPos = node1.gridPosition;\n                            node2GridPos = node2.gridPosition;\n                            layer[n] = node2;\n                            layer[n + 1] = node1;\n                            node1.gridPosition = node2GridPos;\n                            node2.gridPosition = node1GridPos;\n\n                            // nothing has changed, remember the crossings so that\n                            // they are not calculated again on the next step\n                            memCrossings = crossBefore;\n                            calcCrossings = false;\n                        }\n                        else {\n                            hasSwapped = true;\n                            calcCrossings = true;\n                        }\n                    }\n\n                    if (hasSwapped) {\n                        if (l !== this.layers.length - 1) {\n                            this.calcUpData(l + 1);\n                        }\n                        if (l !== 0) {\n                            this.calcDownData(l - 1);\n                        }\n                    }\n                }\n            }\n        },\n\n        /// <summary>\n        /// Counts the number of links crossing between two layers.\n        /// </summary>\n        /// <param name=\"layerIndex1\">The layer index.</param>\n        /// <param name=\"layerIndex2\">Another layer index.</param>\n        /// <returns></returns>\n        countLinksCrossingBetweenTwoLayers: function(ulayer, dlayer) {\n            var links = this.layers[ulayer].linksTo[dlayer];\n            var link1, link2, n11, n12, n21, n22, l1, l2;\n            var crossings = 0;\n            var length = links.length;\n\n            for (l1 = 0; l1 < length; l1++) {\n                link1 = links[l1];\n                for (l2 = l1 + 1; l2 < length; l2++) {\n\n                    link2 = links[l2];\n\n                    if (link1.target.layer === dlayer) {\n                        n11 = link1.source;\n                        n12 = link1.target;\n                    }\n                    else {\n                        n11 = link1.target;\n                        n12 = link1.source;\n                    }\n\n                    if (link2.target.layer === dlayer) {\n                        n21 = link2.source;\n                        n22 = link2.target;\n                    }\n                    else {\n                        n21 = link2.target;\n                        n22 = link2.source;\n                    }\n\n                    var n11gp = n11.gridPosition;\n                    var n12gp = n12.gridPosition;\n                    var n21gp = n21.gridPosition;\n                    var n22gp = n22.gridPosition;\n\n                    if ((n11gp - n21gp) * (n12gp - n22gp) < 0) {\n                        crossings++;\n                    }\n                }\n            }\n\n            return crossings;\n        },\n\n        calcBaryCenter: function(node) {\n            var upstreamLinkCount = node.upstreamLinkCount;\n            var downstreamLinkCount = node.downstreamLinkCount;\n            var uBaryCenter = node.uBaryCenter;\n            var dBaryCenter = node.dBaryCenter;\n\n            if (upstreamLinkCount > 0 && downstreamLinkCount > 0) {\n                return (uBaryCenter + dBaryCenter) / 2;\n            }\n            if (upstreamLinkCount > 0) {\n                return uBaryCenter;\n            }\n            if (downstreamLinkCount > 0) {\n                return dBaryCenter;\n            }\n\n            return 0;\n        },\n\n        _gridPositionComparer: function(x, y) {\n            if (x.gridPosition < y.gridPosition) {\n                return -1;\n            }\n            if (x.gridPosition > y.gridPosition) {\n                return 1;\n            }\n            return 0;\n        },\n\n        _positionAscendingComparer: function(x, y) {\n            return x.k < y.k ? -1 : x.k > y.k ? 1 : 0;\n        },\n\n        _positionDescendingComparer: function(x, y) {\n            return x.k < y.k ? 1 : x.k > y.k ? -1 : 0;\n        },\n\n        _firstVirtualNode: function(layer) {\n            for (var c = 0; c < layer.length; c++) {\n                if (layer[c].isVirtual) {\n                    return c;\n                }\n            }\n            return -1;\n        },\n\n        compareByIndex: function(o1, o2) {\n            var i1 = o1.index;\n            var i2 = o2.index;\n\n            if (i1 < i2) {\n                return 1;\n            }\n\n            if (i1 > i2) {\n                return -1;\n            }\n\n            return 0;\n        },\n\n        intDiv: function(numerator, denominator) {\n            return (numerator - numerator % denominator) / denominator;\n        },\n\n        nextVirtualNode: function(layer, node) {\n            var nodeIndex = node.layerIndex;\n            for (var i = nodeIndex + 1; i < layer.length; ++i) {\n                if (layer[i].isVirtual) {\n                    return layer[i];\n                }\n            }\n            return null;\n        }\n\n    });\n\n    /**\n     * Captures the state of a diagram; node positions, link points and so on.\n     * @type {*}\n     */\n    var LayoutState = kendo.Class.extend({\n        init: function(diagram, graphOrNodes) {\n            if (Utils.isUndefined(diagram)) {\n                throw \"No diagram given\";\n            }\n            this.diagram = diagram;\n            this.nodeMap = new Dictionary();\n            this.linkMap = new Dictionary();\n            this.capture(graphOrNodes ? graphOrNodes : diagram);\n        },\n\n        /**\n         * Will capture either\n         * - the state of the shapes and the intermediate points of the connections in the diagram\n         * - the bounds of the nodes contained in the Graph together with the intermediate points of the links in the Graph\n         * - the bounds of the nodes in the Array<Node>\n         * - the links points and node bounds in the literal object\n         * @param diagramOrGraphOrNodes\n         */\n        capture: function(diagramOrGraphOrNodes) {\n            var node,\n                nodes,\n                shape,\n                i,\n                conn,\n                link,\n                links;\n\n            if (diagramOrGraphOrNodes instanceof diagram.Graph) {\n\n                for (i = 0; i < diagramOrGraphOrNodes.nodes.length; i++) {\n                    node = diagramOrGraphOrNodes.nodes[i];\n                    shape = node.associatedShape;\n                    //shape.bounds(new Rect(node.x, node.y, node.width, node.height));\n                    this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                }\n                for (i = 0; i < diagramOrGraphOrNodes.links.length; i++) {\n                    link = diagramOrGraphOrNodes.links[i];\n                    conn = link.associatedConnection;\n                    this.linkMap.set(conn.visual.id, link.points());\n                }\n            }\n            else if (diagramOrGraphOrNodes instanceof Array) {\n                nodes = diagramOrGraphOrNodes;\n                for (i = 0; i < nodes.length; i++) {\n                    node = nodes[i];\n                    shape = node.associatedShape;\n                    if (shape) {\n                        this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                    }\n                }\n            }\n            else if (diagramOrGraphOrNodes.hasOwnProperty(\"links\") && diagramOrGraphOrNodes.hasOwnProperty(\"nodes\")) {\n                nodes = diagramOrGraphOrNodes.nodes;\n                links = diagramOrGraphOrNodes.links;\n                for (i = 0; i < nodes.length; i++) {\n                    node = nodes[i];\n                    shape = node.associatedShape;\n                    if (shape) {\n                        this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                    }\n                }\n                for (i = 0; i < links.length; i++) {\n                    link = links[i];\n                    conn = link.associatedConnection;\n                    if (conn) {\n                        this.linkMap.set(conn.visual.id, link.points);\n                    }\n                }\n            }\n            else { // capture the diagram\n                var shapes = this.diagram.shapes;\n                var connections = this.diagram.connections;\n                for (i = 0; i < shapes.length; i++) {\n                    shape = shapes[i];\n                    this.nodeMap.set(shape.visual.id, shape.bounds());\n                }\n                for (i = 0; i < connections.length; i++) {\n                    conn = connections[i];\n                    this.linkMap.set(conn.visual.id, conn.points());\n                }\n            }\n        }\n    });\n\n    deepExtend(diagram, {\n        init: function(element) {\n            kendo.init(element, diagram.ui);\n        },\n        SpringLayout: SpringLayout,\n        TreeLayout: TreeLayout,\n        GraphAdapter: DiagramToHyperTreeAdapter,\n        LayeredLayout: LayeredLayout,\n        LayoutBase: LayoutBase,\n        LayoutState: LayoutState\n    });\n})(window.kendo.jQuery);\n\n(function($, undefined$1) {\n        // Imports ================================================================\n        var dataviz = kendo.dataviz,\n            draw = kendo.drawing,\n            geom = kendo.geometry,\n            diagram = dataviz.diagram,\n            Widget = kendo.ui.Widget,\n            Class = kendo.Class,\n            deepExtend = kendo.deepExtend,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            HierarchicalDataSource = kendo.data.HierarchicalDataSource,\n            Canvas = diagram.Canvas,\n            Group = diagram.Group,\n            Rectangle = diagram.Rectangle,\n            Circle = diagram.Circle,\n            CompositeTransform = diagram.CompositeTransform,\n            Rect = diagram.Rect,\n            Path = diagram.Path,\n            DeleteShapeUnit = diagram.DeleteShapeUnit,\n            DeleteConnectionUnit = diagram.DeleteConnectionUnit,\n            TextBlock = diagram.TextBlock,\n            Image = diagram.Image,\n            Point = diagram.Point,\n            Intersect = diagram.Intersect,\n            ConnectionEditAdorner = diagram.ConnectionEditAdorner,\n            UndoRedoService = diagram.UndoRedoService,\n            ToolService = diagram.ToolService,\n            Selector = diagram.Selector,\n            ResizingAdorner = diagram.ResizingAdorner,\n            ConnectorsAdorner = diagram.ConnectorsAdorner,\n            Cursors = diagram.Cursors,\n            Utils = diagram.Utils,\n            Observable = kendo.Observable,\n            ToBackUnit = diagram.ToBackUnit,\n            ToFrontUnit = diagram.ToFrontUnit,\n            PolylineRouter = diagram.PolylineRouter,\n            CascadingRouter = diagram.CascadingRouter,\n            isUndefined = Utils.isUndefined,\n            isDefined = Utils.isDefined,\n            defined = draw.util.defined,\n            isArray = Array.isArray,\n            isFunction = kendo.isFunction,\n            isString = Utils.isString,\n            isPlainObject = $.isPlainObject,\n\n            math = Math;\n\n        // Constants ==============================================================\n        var NS = \".kendoDiagram\",\n            CASCADING = \"cascading\",\n            ITEMBOUNDSCHANGE = \"itemBoundsChange\",\n            CHANGE = \"change\",\n            CLICK = \"click\",\n            DRAG = \"drag\",\n            DRAG_END = \"dragEnd\",\n            DRAG_START = \"dragStart\",\n            MOUSE_ENTER = \"mouseEnter\",\n            MOUSE_LEAVE = \"mouseLeave\",\n            ERROR = \"error\",\n            AUTO = \"Auto\",\n            TOP = \"Top\",\n            RIGHT = \"Right\",\n            LEFT = \"Left\",\n            BOTTOM = \"Bottom\",\n            MAXINT = 9007199254740992,\n            SELECT = \"select\",\n            ITEMROTATE = \"itemRotate\",\n            PAN = \"pan\",\n            ZOOM_START = \"zoomStart\",\n            ZOOM_END = \"zoomEnd\",\n            NONE = \"none\",\n            DEFAULT_CANVAS_WIDTH = 600,\n            DEFAULT_CANVAS_HEIGHT = 600,\n            DEFAULT_SHAPE_TYPE = \"rectangle\",\n            DEFAULT_SHAPE_WIDTH = 100,\n            DEFAULT_SHAPE_HEIGHT = 100,\n            DEFAULT_SHAPE_MINWIDTH = 20,\n            DEFAULT_SHAPE_MINHEIGHT = 20,\n            DEFAULT_SHAPE_POSITION = 0,\n            DEFAULT_CONNECTION_BACKGROUND = \"Yellow\",\n            MAX_VALUE = Number.MAX_VALUE,\n            MIN_VALUE = -Number.MAX_VALUE,\n            ABSOLUTE = \"absolute\",\n            TRANSFORMED = \"transformed\",\n            ROTATED = \"rotated\",\n            TRANSPARENT = \"transparent\",\n            WIDTH = \"width\",\n            HEIGHT = \"height\",\n            X = \"x\",\n            Y = \"y\",\n            MOUSEWHEEL_NS = \"DOMMouseScroll\" + NS + \" mousewheel\" + NS,\n            MOBILE_ZOOM_RATE = 0.05,\n            MOBILE_PAN_DISTANCE = 5,\n            BUTTON_TEMPLATE = ({ className, icon, themeColor, text }) =>\n                kendo.html.renderButton(`<button class=\"${className}\" href=\"#\">${text}</button>`, {\n                    icon: icon,\n                    themeColor\n                }),\n            CONNECTION_CONTENT_OFFSET = 5;\n\n        diagram.DefaultConnectors = [{\n            name: TOP\n        }, {\n            name: BOTTOM\n        }, {\n            name: LEFT\n        }, {\n            name: RIGHT\n        }, {\n            name: AUTO,\n            position: function(shape) {\n                return shape.getPosition(\"center\");\n            }\n        }];\n\n        var defaultButtons = {\n            cancel: {\n                text: \"Cancel\",\n                icon: \"cancel-outline\",\n                className: \"k-diagram-cancel\",\n            },\n            update: {\n                text: \"Save\",\n                imageClass: \"save\",\n                className: \"k-diagram-update\",\n                icon: \"save\",\n                themeColor: \"primary\"\n            }\n        };\n\n        diagram.shapeDefaults = function(extra) {\n            var defaults = {\n                type: DEFAULT_SHAPE_TYPE,\n                path: \"\",\n                autoSize: true,\n                visual: null,\n                x: DEFAULT_SHAPE_POSITION,\n                y: DEFAULT_SHAPE_POSITION,\n                minWidth: DEFAULT_SHAPE_MINWIDTH,\n                minHeight: DEFAULT_SHAPE_MINHEIGHT,\n                width: DEFAULT_SHAPE_WIDTH,\n                height: DEFAULT_SHAPE_HEIGHT,\n                hover: {},\n                editable: {\n                    connect: true,\n                    tools: []\n                },\n                connectors: diagram.DefaultConnectors,\n                rotation: {\n                    angle: 0\n                }\n            };\n\n            Utils.simpleExtend(defaults, extra);\n\n            return defaults;\n        };\n\n        function mwDelta(e) {\n            var origEvent = e.originalEvent,\n                delta = 0;\n\n            if (origEvent.wheelDelta) {\n                delta = -origEvent.wheelDelta / 40;\n                delta = delta > 0 ? math.ceil(delta) : math.floor(delta);\n            } else if (origEvent.detail) {\n                delta = origEvent.detail;\n            }\n\n            return delta;\n        }\n\n        function isAutoConnector(connector) {\n            return connector.options.name.toLowerCase() === AUTO.toLowerCase();\n        }\n\n        function closestConnector(point, connectors) {\n            var minimumDistance = MAXINT, resCtr, connector;\n            for (var i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                if (!isAutoConnector(connector)) {\n                    var dist = point.distanceTo(connector.position());\n                    if (dist < minimumDistance) {\n                        minimumDistance = dist;\n                        resCtr = connector;\n                    }\n                }\n            }\n            return resCtr;\n        }\n\n        function indicesOfItems(group, visuals) {\n            var i, indices = [], visual;\n            var children = group.drawingContainer().children;\n            var length = children.length;\n            for (i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                for (var j = 0; j < length; j++) {\n                    if (children[j] == visual.drawingContainer()) {\n                        indices.push(j);\n                        break;\n                    }\n                }\n            }\n            return indices;\n        }\n\n        var DiagramElement = Observable.extend({\n            init: function(options) {\n                var that = this;\n                that.dataItem = (options || {}).dataItem;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({ id: diagram.randomId() }, that.options, options);\n                that.isSelected = false;\n                that.visual = new Group({\n                    id: that.options.id,\n                    autoSize: that.options.autoSize\n                });\n                that.id = that.options.id;\n                that._template();\n            },\n\n            options: {\n                hover: {},\n                cursor: Cursors.grip,\n                content: {\n                    align: \"center middle\"\n                },\n                selectable: true,\n                serializable: true,\n                enable: true\n            },\n\n            _getCursor: function(point) {\n                if (this.adorner) {\n                    return this.adorner._getCursor(point);\n                }\n                return this.options.cursor;\n            },\n\n            visible: function(value) {\n                if (isUndefined(value)) {\n                    return this.visual.visible();\n                } else {\n                    this.visual.visible(value);\n                }\n            },\n\n            bounds: function() {\n            },\n\n            refresh: function() {\n                this.visual.redraw();\n            },\n\n            position: function(point) {\n                this.options.x = point.x;\n                this.options.y = point.y;\n                this.visual.position(point);\n            },\n\n            toString: function() {\n                return this.options.id;\n            },\n\n            serialize: function() {\n                // the options json object describes the shape perfectly. So this object can serve as shape serialization.\n                var json = deepExtend({}, { options: this.options });\n                if (this.dataItem) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                return json;\n            },\n\n            _content: function(content) {\n                if (content !== undefined$1) {\n                    var options = this.options;\n\n                    if (diagram.Utils.isString(content)) {\n                        options.content.text = content;\n                    } else {\n                        deepExtend(options.content, content);\n                    }\n\n                    var contentOptions = options.content;\n                    var contentVisual = this._contentVisual;\n\n                    if (!contentVisual) {\n                        this._createContentVisual(contentOptions);\n                    } else {\n                        this._updateContentVisual(contentOptions);\n                    }\n                }\n\n                return this.options.content.text;\n            },\n\n            _createContentVisual: function(options) {\n                if (options.text) {\n                    this._contentVisual = new TextBlock(options);\n                    this._contentVisual._includeInBBox = false;\n                    this.visual.append(this._contentVisual);\n                }\n            },\n\n            _updateContentVisual: function(options) {\n                this._contentVisual.redraw(options);\n            },\n\n            _hitTest: function(point) {\n                var bounds = this.bounds();\n                return this.visible() && bounds.contains(point) && this.options.enable;\n            },\n\n            _template: function() {\n                var that = this;\n                if (that.options.content.template) {\n                    var data = that.dataItem || {},\n                        elementTemplate = kendo.template(that.options.content.template, {\n                            paramName: \"dataItem\"\n                        });\n\n                    that.options.content.text = elementTemplate(data);\n                }\n            },\n\n            _canSelect: function() {\n                return this.options.selectable !== false;\n            },\n\n            toJSON: function() {\n                return {\n                    id: this.options.id\n                };\n            }\n        });\n\n        var Connector = Class.extend({\n            init: function(shape, options) {\n                this.options = deepExtend({}, this.options, options);\n                this.connections = [];\n                this.shape = shape;\n            },\n            options: {\n                width: 7,\n                height: 7,\n                fill: {\n                    color: DEFAULT_CONNECTION_BACKGROUND\n                },\n                hover: {}\n            },\n            position: function() {\n                if (this.options.position) {\n                    return this.options.position(this.shape);\n                } else {\n                    return this.shape.getPosition(this.options.name);\n                }\n            },\n            toJSON: function() {\n                return {\n                    shapeId: this.shape.toString(),\n                    connector: this.options.name\n                };\n            }\n        });\n\n        Connector.parse = function(diagram, str) {\n            var tempStr = str.split(\":\"),\n                id = tempStr[0],\n                name = tempStr[1] || AUTO;\n\n            for (var i = 0; i < diagram.shapes.length; i++) {\n                var shape = diagram.shapes[i];\n                if (shape.options.id == id) {\n                    return shape.getConnector(name.trim());\n                }\n            }\n        };\n\n        var Shape = DiagramElement.extend({\n            init: function(options, diagram) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.diagram = diagram;\n                this.updateOptionsFromModel();\n                options = that.options;\n                that.connectors = [];\n                that.type = options.type;\n                that.createShapeVisual();\n                that.updateBounds();\n                that.content(that.content());\n\n                that._createConnectors();\n            },\n\n            options: diagram.shapeDefaults(),\n\n            _setOptionsFromModel: function(model) {\n                var modelOptions = filterShapeDataItem(model || this.dataItem);\n                this.options = deepExtend({}, this.options, modelOptions);\n\n                this.redrawVisual();\n            },\n\n            updateOptionsFromModel: function(model, field) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var modelOptions = filterShapeDataItem(model || this.dataItem);\n\n                    if (model && field) {\n                        if (!dataviz.inArray(field, [\"x\", \"y\", \"width\", \"height\"])) {\n                            if (this.options.visual) {\n                                this._redrawVisual();\n                            } else if (modelOptions.type) {\n                                this.options = deepExtend({}, this.options, modelOptions);\n                                this._redrawVisual();\n                            }\n\n                            if (this.options.content) {\n                                this._template();\n                                this.content(this.options.content);\n                            }\n                        } else {\n                            var bounds = this.bounds();\n                            bounds[field] = model[field];\n                            this.bounds(bounds);\n                        }\n                    } else {\n                        this.options = deepExtend({}, this.options, modelOptions);\n                    }\n                }\n            },\n\n            _redrawVisual: function() {\n                this.visual.clear();\n                this._contentVisual = null;\n                this.options.dataItem = this.dataItem;\n                this.createShapeVisual();\n                this.updateBounds();\n            },\n\n            redrawVisual: function() {\n                this._redrawVisual();\n                if (this.options.content) {\n                    this._template();\n                    this.content(this.options.content);\n                }\n            },\n\n            updateModel: function(syncChanges) {\n                var diagram = this.diagram;\n                if (diagram && diagram._isEditable) {\n                    var bounds = this._bounds;\n                    var model = this.dataItem;\n\n                    if (model) {\n                        diagram._suspendModelRefresh();\n                        if (defined(model.x) && bounds.x !== model.x) {\n                            model.set(\"x\", bounds.x);\n                        }\n\n                        if (defined(model.y) && bounds.y !== model.y) {\n                            model.set(\"y\", bounds.y);\n                        }\n\n                        if (defined(model.width) && bounds.width !== model.width) {\n                            model.set(\"width\", bounds.width);\n                        }\n\n                        if (defined(model.height) && bounds.height !== model.height) {\n                            model.set(\"height\", bounds.height);\n                        }\n\n                        this.dataItem = model;\n                        diagram._resumeModelRefresh();\n\n                        if (syncChanges) {\n                            diagram._syncShapeChanges();\n                        }\n                    }\n                }\n            },\n\n            updateBounds: function() {\n                var bounds = this.visual._measure(true);\n                var options = this.options;\n                this.bounds(new Rect(options.x, options.y, bounds.width, bounds.height));\n                this._rotate();\n                this._alignContent();\n            },\n\n            content: function(content) {\n                var result = this._content(content);\n\n                this._alignContent();\n\n                return result;\n            },\n\n            _alignContent: function() {\n                var contentOptions = this.options.content || {};\n                var contentVisual = this._contentVisual;\n                if (contentVisual && contentOptions.align) {\n                    var containerRect = this.visual._measure();\n                    var aligner = new diagram.RectAlign(containerRect);\n                    var contentBounds = contentVisual.drawingElement.bbox(null);\n\n                    var contentRect = new Rect(0, 0, contentBounds.width(), contentBounds.height());\n                    var alignedBounds = aligner.align(contentRect, contentOptions.align);\n\n                    contentVisual.position(alignedBounds.topLeft());\n                }\n            },\n\n            _createConnectors: function() {\n                var options = this.options,\n                    length = options.connectors.length,\n                    connectorDefaults = options.connectorDefaults,\n                    connector, i;\n\n                for (i = 0; i < length; i++) {\n                    connector = new Connector(\n                        this, deepExtend({},\n                            connectorDefaults,\n                            options.connectors[i]\n                        )\n                    );\n                    this.connectors.push(connector);\n                }\n            },\n\n            bounds: function(value) {\n                var bounds;\n\n                if (value) {\n                    if (isString(value)) {\n                        switch (value) {\n                            case TRANSFORMED :\n                                bounds = this._transformedBounds();\n                                break;\n                            case ABSOLUTE :\n                                bounds = this._transformedBounds();\n                                var pan = this.diagram._pan;\n                                bounds.x += pan.x;\n                                bounds.y += pan.y;\n                                break;\n                            case ROTATED :\n                                bounds = this._rotatedBounds();\n                                break;\n                            default:\n                                bounds = this._bounds;\n                        }\n                    } else {\n                        this._setBounds(value);\n                        this._triggerBoundsChange();\n                        if (!(this.diagram && this.diagram._layouting)) {\n                            this.refreshConnections();\n                        }\n                    }\n                } else {\n                    bounds = this._bounds;\n                }\n\n                return bounds;\n            },\n\n            _setBounds: function(rect) {\n                var options = this.options;\n                var topLeft = rect.topLeft();\n                var x = options.x = topLeft.x;\n                var y = options.y = topLeft.y;\n                var width = options.width = math.max(rect.width, options.minWidth);\n                var height = options.height = math.max(rect.height, options.minHeight);\n\n                this._bounds = new Rect(x, y, width, height);\n\n                this.visual.redraw({\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            },\n\n            position: function(point) {\n                if (point) {\n                    this.bounds(new Rect(point.x, point.y, this._bounds.width, this._bounds.height));\n                } else {\n                    return this._bounds.topLeft();\n                }\n            },\n            /**\n             * Returns a clone of this shape.\n             * @returns {Shape}\n             */\n            clone: function() {\n                var json = this.serialize();\n\n                json.options.id = diagram.randomId();\n\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n\n                return new Shape(json.options);\n            },\n\n            select: function(value) {\n                var diagram = this.diagram, selected, deselected;\n                if (isUndefined(value)) {\n                    value = true;\n                }\n\n                if (this._canSelect()) {\n                    if (this.isSelected != value) {\n                        selected = [];\n                        deselected = [];\n                        this.isSelected = value;\n                        if (this.isSelected) {\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            Utils.remove(diagram._selectedItems, this);\n                            deselected.push(this);\n                        }\n\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n\n                        return true;\n                    }\n                }\n            },\n\n            rotate: function(angle, center, undoable) { // we assume the center is always the center of the shape.\n                var rotate = this.visual.rotate();\n                if (angle !== undefined$1) {\n                    if (undoable !== false && this.diagram && this.diagram.undoRedoService && angle !== rotate.angle) {\n                        this.diagram.undoRedoService.add(\n                            new diagram.RotateUnit(this.diagram._resizingAdorner, [this], [rotate.angle]), false);\n                    }\n\n                    var b = this.bounds(),\n                        sc = new Point(b.width / 2, b.height / 2),\n                        deltaAngle,\n                        newPosition;\n\n                    if (center) {\n                        deltaAngle = angle - rotate.angle;\n                        newPosition = b.center().rotate(deltaAngle, center).minus(sc);\n                        this._rotationOffset = this._rotationOffset.plus(newPosition.minus(b.topLeft()));\n                        this.position(newPosition);\n                    }\n\n                    this.visual.rotate(angle, sc);\n                    this.options.rotation.angle = angle;\n\n                    if (this.diagram && this.diagram._connectorsAdorner) {\n                        this.diagram._connectorsAdorner.refresh();\n                    }\n\n                    this.refreshConnections();\n\n                    if (this.diagram) {\n                        this.diagram.trigger(ITEMROTATE, { item: this });\n                    }\n                }\n\n                return rotate;\n            },\n\n            connections: function(type) { // in, out, undefined = both\n                var result = [], i, j, con, cons, ctr;\n\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    cons = ctr.connections;\n                    for (j = 0, cons; j < cons.length; j++) {\n                        con = cons[j];\n                        if (type == \"out\") {\n                            var source = con.source();\n                            if (source.shape && source.shape == this) {\n                                result.push(con);\n                            }\n                        } else if (type == \"in\") {\n                            var target = con.target();\n                            if (target.shape && target.shape == this) {\n                                result.push(con);\n                            }\n                        } else {\n                            result.push(con);\n                        }\n                    }\n                }\n\n                return result;\n            },\n\n            refreshConnections: function() {\n                $.each(this.connections(), function() {\n                    this.refresh();\n                });\n            },\n            /**\n             * Gets a connector of this shape either by the connector's supposed name or\n             * via a Point in which case the closest connector will be returned.\n             * @param nameOrPoint The name of a Connector or a Point.\n             * @returns {Connector}\n             */\n            getConnector: function(nameOrPoint) {\n                var i, ctr;\n                if (isString(nameOrPoint)) {\n                    nameOrPoint = nameOrPoint.toLocaleLowerCase();\n                    for (i = 0; i < this.connectors.length; i++) {\n                        ctr = this.connectors[i];\n                        if (ctr.options.name.toLocaleLowerCase() == nameOrPoint) {\n                            return ctr;\n                        }\n                    }\n                } else if (nameOrPoint instanceof Point) {\n                    return closestConnector(nameOrPoint, this.connectors);\n                } else {\n                    return this.connectors.length ? this.connectors[0] : null;\n                }\n            },\n\n            getPosition: function(side) {\n                var b = this.bounds(),\n                    fnName = side.charAt(0).toLowerCase() + side.slice(1);\n\n                if (isFunction(b[fnName])) {\n                    return this._transformPoint(b[fnName]());\n                }\n\n                return b.center();\n            },\n\n            redraw: function(options) {\n                if (options) {\n                    var shapeOptions = this.options;\n                    var boundsChange;\n\n                    this.shapeVisual.redraw(this._visualOptions(options));\n\n                    if (this._diffNumericOptions(options, [WIDTH, HEIGHT, X, Y])) {\n                        this.bounds(new Rect(shapeOptions.x, shapeOptions.y, shapeOptions.width, shapeOptions.height));\n                        boundsChange = true;\n                    }\n\n                    if (options.connectors) {\n                        shapeOptions.connectors = options.connectors;\n                        this._updateConnectors();\n                    }\n\n                    shapeOptions = deepExtend(shapeOptions, options);\n\n                    if (options.rotation || boundsChange) {\n                        this._rotate();\n                    }\n\n                    if (shapeOptions.content) {\n                        this.content(shapeOptions.content);\n                    }\n                }\n            },\n\n            _updateConnectors: function() {\n                var connections = this.connections();\n                this.connectors = [];\n                this._createConnectors();\n                var connection;\n                var source;\n                var target;\n\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connection = connections[idx];\n                    source = connection.source();\n                    target = connection.target();\n                    if (source.shape && source.shape === this) {\n                        connection.source(this.getConnector(source.options.name) || null);\n                    } else if (target.shape && target.shape === this) {\n                        connection.target(this.getConnector(target.options.name) || null);\n                    }\n                    connection.updateModel();\n                }\n            },\n\n            _diffNumericOptions: diagram.diffNumericOptions,\n\n            _visualOptions: function(options) {\n                return {\n                    data: options.path,\n                    source: options.source,\n                    hover: options.hover,\n                    fill: options.fill,\n                    stroke: options.stroke\n                };\n            },\n\n            _triggerBoundsChange: function() {\n                if (this.diagram) {\n                    this.diagram.trigger(ITEMBOUNDSCHANGE, { item: this, bounds: this._bounds.clone() }); // the trigger modifies the arguments internally.\n                }\n            },\n\n            _transformPoint: function(point) {\n                var rotate = this.rotate(),\n                    bounds = this.bounds(),\n                    tl = bounds.topLeft();\n\n                if (rotate.angle) {\n                    point.rotate(rotate.angle, rotate.center().plus(tl));\n                }\n\n                return point;\n            },\n\n            _transformedBounds: function() {\n                var bounds = this.bounds(),\n                    tl = bounds.topLeft(),\n                    br = bounds.bottomRight();\n\n                return Rect.fromPoints(this.diagram.modelToView(tl), this.diagram.modelToView(br));\n            },\n\n            _rotatedBounds: function() {\n                var bounds = this.bounds().rotatedBounds(this.rotate().angle),\n                    tl = bounds.topLeft(),\n                    br = bounds.bottomRight();\n\n                return Rect.fromPoints(tl, br);\n            },\n\n            _rotate: function() {\n                var rotation = this.options.rotation;\n\n                if (rotation && rotation.angle) {\n                    this.rotate(rotation.angle);\n                }\n\n                this._rotationOffset = new Point();\n            },\n\n            _hover: function(value) {\n                var options = this.options,\n                    hover = options.hover,\n                    stroke = options.stroke,\n                    fill = options.fill;\n\n                if (value && isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n\n                if (value && isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n\n                this.shapeVisual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n\n                if (options.editable && options.editable.connect) {\n                    this.diagram._showConnectors(this, value);\n                }\n            },\n\n            _hitTest: function(value) {\n                if (this.visible()) {\n                    var bounds = this.bounds(), rotatedPoint,\n                        angle = this.rotate().angle;\n\n                    if (value.isEmpty && !value.isEmpty()) { // rect selection\n                        return Intersect.rects(value, bounds, angle ? angle : 0);\n                    } else { // point\n                        rotatedPoint = value.clone().rotate(angle, bounds.center()); // cloning is important because rotate modifies the point inline.\n                        if (bounds.contains(rotatedPoint)) {\n                            return this;\n                        }\n                    }\n                }\n            },\n\n            toJSON: function() {\n                return {\n                    shapeId: this.options.id\n                };\n            },\n\n            createShapeVisual: function() {\n                var options = this.options;\n                var visualOptions = this._visualOptions(options);\n                var visualTemplate = options.visual;\n                var type = (options.type + \"\").toLocaleLowerCase();\n                var shapeVisual;\n\n                visualOptions.width = options.width;\n                visualOptions.height = options.height;\n\n                if (isFunction(visualTemplate)) { // custom template\n                    shapeVisual = visualTemplate.call(this, options);\n                } else if (visualOptions.data) {\n                    shapeVisual = new Path(visualOptions);\n                    translateToOrigin(shapeVisual);\n                } else if (type == \"rectangle\") {\n                    shapeVisual = new Rectangle(visualOptions);\n                } else if (type == \"circle\") {\n                    shapeVisual = new Circle(visualOptions);\n                } else if (type == \"text\") {\n                    shapeVisual = new TextBlock(visualOptions);\n                } else if (type == \"image\") {\n                    shapeVisual = new Image(visualOptions);\n                } else {\n                    shapeVisual = new Path(visualOptions);\n                }\n\n                this.shapeVisual = shapeVisual;\n                this.visual.append(this.shapeVisual);\n            }\n        });\n\n        /**\n         * The visual link between two Shapes through the intermediate of Connectors.\n         */\n        var Connection = DiagramElement.extend({\n            init: function(from, to, options) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.updateOptionsFromModel();\n                this._initRouter();\n                that.path = new diagram.Polyline(that.options);\n                that.path.fill(TRANSPARENT);\n                that.visual.append(that.path);\n                that._sourcePoint = that._targetPoint = new Point();\n                that._setSource(from);\n                that._setTarget(to);\n                that.content(that.options.content);\n                that.definers = [];\n                if (defined(options) && options.points) {\n                    that.points(options.points);\n                }\n            },\n\n            options: {\n                hover: {\n                    stroke: {}\n                },\n                startCap: NONE,\n                endCap: NONE,\n                points: [],\n                selectable: true,\n                fromConnector: AUTO,\n                toConnector: AUTO\n            },\n\n            _setOptionsFromModel: function(model) {\n                this.updateOptionsFromModel(model || this.dataItem);\n            },\n\n            updateOptionsFromModel: function(model) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var dataMap = this.diagram._dataMap;\n                    var options = filterConnectionDataItem(model || this.dataItem);\n\n                    if (model) {\n                        if (defined(options.from)) {\n                            var from = dataMap[options.from];\n                            if (from && defined(options.fromConnector)) {\n                               from = from.getConnector(options.fromConnector);\n                            }\n                            this.source(from);\n                        } else if (defined(options.fromX) && defined(options.fromY)) {\n                            this.source(new Point(options.fromX, options.fromY));\n                        }\n\n                        if (defined(options.to)) {\n                            var to = dataMap[options.to];\n                            if (to && defined(options.toConnector)) {\n                                to = to.getConnector(options.toConnector);\n                            }\n                            this.target(to);\n                        } else if (defined(options.toX) && defined(options.toY)) {\n                            this.target(new Point(options.toX, options.toY));\n                        }\n\n                        if (defined(options.type) && this.type() !== options.type) {\n                            this.points([]);\n                            this.type(options.type);\n                        }\n\n                        this.dataItem = model;\n\n                        this._template();\n                        this.redraw(this.options);\n                    } else {\n                        this.options = deepExtend({}, options, this.options);\n                    }\n                }\n            },\n\n            updateModel: function(syncChanges) {\n                if (this.diagram && this.diagram._isEditable) {\n                    if (this.diagram.connectionsDataSource) {\n                        var model = this.diagram.connectionsDataSource.getByUid(this.dataItem.uid);\n\n                        if (model) {\n                            this.diagram._suspendModelRefresh();\n                            if (defined(this.options.fromX) && this.options.fromX !== null) {\n                                clearField(\"from\", model);\n                                clearField(\"fromConnector\", model);\n                                model.set(\"fromX\", this.options.fromX);\n                                model.set(\"fromY\", this.options.fromY);\n                            } else {\n                                model.set(\"from\", this.options.from);\n                                if (defined(model.fromConnector)) {\n                                    model.set(\"fromConnector\", this.sourceConnector ? this.sourceConnector.options.name : null);\n                                }\n                                clearField(\"fromX\", model);\n                                clearField(\"fromY\", model);\n                            }\n\n                            if (defined(this.options.toX) && this.options.toX !== null) {\n                                clearField(\"to\", model);\n                                clearField(\"toConnector\", model);\n                                model.set(\"toX\", this.options.toX);\n                                model.set(\"toY\", this.options.toY);\n                            } else {\n                                model.set(\"to\", this.options.to);\n                                if (defined(model.toConnector)) {\n                                    model.set(\"toConnector\", this.targetConnector ? this.targetConnector.options.name : null);\n                                }\n                                clearField(\"toX\", model);\n                                clearField(\"toY\", model);\n                            }\n\n                            if (defined(this.options.type) && defined(model.type)) {\n                                model.set(\"type\", this.options.type);\n                            }\n\n                            this.dataItem = model;\n                            this.diagram._resumeModelRefresh();\n\n                            if (syncChanges) {\n                                this.diagram._syncConnectionChanges();\n                            }\n                        }\n                    }\n                }\n            },\n\n            /**\n             * Gets the Point where the source of the connection resides.\n             * If the endpoint in Auto-connector the location of the resolved connector will be returned.\n             * If the endpoint is floating the location of the endpoint is returned.\n             */\n            sourcePoint: function() {\n                return this._resolvedSourceConnector ? this._resolvedSourceConnector.position() : this._sourcePoint;\n            },\n\n            _setSource: function(source) {\n                var shapeSource = source instanceof Shape;\n                var defaultConnector = this.options.fromConnector || AUTO;\n                var dataItem;\n                if (shapeSource && !source.getConnector(defaultConnector)) {\n                    return;\n                }\n\n                if (source !== undefined$1) {\n                    this.from = source;\n                }\n\n                this._removeFromSourceConnector();\n\n                if (source === null) { // detach\n                    if (this.sourceConnector) {\n                        this._sourcePoint = (this._resolvedSourceConnector || this.sourceConnector).position();\n                        this._clearSourceConnector();\n                        this._setFromOptions(null, this._sourcePoint);\n                    }\n                } else if (source instanceof Connector) {\n                    dataItem = source.shape.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source;\n                    this.sourceConnector.connections.push(this);\n                } else if (source instanceof Point) {\n                    this._setFromOptions(null, source);\n                    this._sourcePoint = source;\n                    if (this.sourceConnector) {\n                        this._clearSourceConnector();\n                    }\n\n                } else if (shapeSource) {\n                    dataItem = source.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n\n                    this.sourceConnector = source.getConnector(defaultConnector);\n                    this.sourceConnector.connections.push(this);\n                }\n            },\n\n            source: function(source, undoable) {\n                if (isDefined(source)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, source));\n                    }\n                    this._setSource(source);\n                    this.refresh();\n                }\n                return this.sourceConnector ? this.sourceConnector : this._sourcePoint;\n            },\n\n            _setFromOptions: function(from, fromPoint) {\n                this.options.from = from;\n                if (fromPoint) {\n                    this.options.fromX = fromPoint.x;\n                    this.options.fromY = fromPoint.y;\n                } else {\n                    this.options.fromX = null;\n                    this.options.fromY = null;\n                }\n            },\n\n            /**\n             * Gets or sets the PathDefiner of the sourcePoint.\n             * The left part of this definer is always null since it defines the source tangent.\n             * @param value\n             * @returns {*}\n             */\n            sourceDefiner: function(value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.left = null;\n                        this._sourceDefiner = value;\n                        this.source(value.point); // refresh implicit here\n                    } else {\n                        throw \"The sourceDefiner needs to be a PathDefiner.\";\n                    }\n                } else {\n                    if (!this._sourceDefiner) {\n                        this._sourceDefiner = new diagram.PathDefiner(this.sourcePoint(), null, null);\n                    }\n                    return this._sourceDefiner;\n                }\n            },\n\n            /**\n             * Gets  the Point where the target of the connection resides.\n             */\n            targetPoint: function() {\n                return this._resolvedTargetConnector ? this._resolvedTargetConnector.position() : this._targetPoint;\n            },\n\n            _setTarget: function(target) {\n                var shapeTarget = target instanceof Shape;\n                var defaultConnector = this.options.toConnector || AUTO;\n                var dataItem;\n\n                if (shapeTarget && !target.getConnector(defaultConnector)) {\n                    return;\n                }\n\n                if (target !== undefined$1) {\n                    this.to = target;\n                }\n\n                this._removeFromTargetConnector();\n\n                if (target === null) { // detach\n                    if (this.targetConnector) {\n                        this._targetPoint = (this._resolvedTargetConnector || this.targetConnector).position();\n                        this._clearTargetConnector();\n                        this._setToOptions(null, this._targetPoint);\n                    }\n                } else if (target instanceof Connector) {\n                    dataItem = target.shape.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target;\n                    this.targetConnector.connections.push(this);\n                } else if (target instanceof Point) {\n                    this._setToOptions(null, target);\n                    this._targetPoint = target;\n                    if (this.targetConnector) {\n                        this._clearTargetConnector();\n                    }\n                } else if (shapeTarget) {\n                    dataItem = target.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target.getConnector(defaultConnector);\n                    this.targetConnector.connections.push(this);\n                }\n            },\n\n            target: function(target, undoable) {\n                if (isDefined(target)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, undefined$1, target));\n                    }\n                    this._setTarget(target);\n\n                    this.refresh();\n                }\n                return this.targetConnector ? this.targetConnector : this._targetPoint;\n            },\n\n            _setToOptions: function(to, toPoint) {\n                this.options.to = to;\n                if (toPoint) {\n                    this.options.toX = toPoint.x;\n                    this.options.toY = toPoint.y;\n                } else {\n                    this.options.toX = null;\n                    this.options.toY = null;\n                }\n            },\n\n            /**\n             * Gets or sets the PathDefiner of the targetPoint.\n             * The right part of this definer is always null since it defines the target tangent.\n             * @param value\n             * @returns {*}\n             */\n            targetDefiner: function(value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.right = null;\n                        this._targetDefiner = value;\n                        this.target(value.point); // refresh implicit here\n                    } else {\n                        throw \"The sourceDefiner needs to be a PathDefiner.\";\n                    }\n                } else {\n                    if (!this._targetDefiner) {\n                        this._targetDefiner = new diagram.PathDefiner(this.targetPoint(), null, null);\n                    }\n                    return this._targetDefiner;\n                }\n            },\n\n            _updateConnectors: function() {\n                this._updateConnector(this.source(), \"source\");\n                this._updateConnector(this.target(), \"target\");\n            },\n\n            _updateConnector: function(instance, name) {\n                var that = this;\n                var diagram = that.diagram;\n                if (instance instanceof Connector && !diagram.getShapeById(instance.shape.id)) {\n                    var dataItem = instance.shape.dataItem;\n                    var connectorName = instance.options.name;\n                    var setNewTarget = function() {\n                        var shape = diagram._dataMap[dataItem.id];\n                        instance = shape.getConnector(connectorName);\n                        that[name](instance, false);\n                        that.updateModel();\n                    };\n                    if (diagram._dataMap[dataItem.id]) {\n                       setNewTarget();\n                    } else {\n                        var inactiveItem = diagram._inactiveShapeItems.getByUid(dataItem.uid);\n                        if (inactiveItem) {\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(setNewTarget));\n                        }\n                    }\n                } else {\n                    that[name](instance, false);\n                }\n            },\n\n            content: function(content) {\n                var result = this._content(content);\n                if (defined(content)) {\n                    this._alignContent();\n                }\n                return result;\n            },\n\n            _createContentVisual: function(options) {\n                var visual;\n                if (isFunction(options.visual)) {\n                    visual = options.visual.call(this, options);\n                } else if (options.text) {\n                    visual = new TextBlock(options);\n                }\n\n                if (visual) {\n                    this._contentVisual = visual;\n                    visual._includeInBBox = false;\n                    this.visual.append(visual);\n                }\n\n                return visual;\n            },\n\n            _updateContentVisual: function(options) {\n                if (isFunction(options.visual)) {\n                    this.visual.remove(this._contentVisual);\n                    this._createContentVisual(options);\n                } else {\n                    this._contentVisual.redraw(options);\n                }\n            },\n\n            _alignContent: function() {\n                if (this._contentVisual) {\n                    var offset = CONNECTION_CONTENT_OFFSET;\n                    var points = this.allPoints();\n                    var endIdx = math.floor(points.length / 2);\n                    var startIdx = endIdx - 1;\n\n                    while (startIdx > 0 && points[startIdx].equals(points[endIdx])) {\n                        startIdx--;\n                        endIdx++;\n                    }\n\n                    var endPoint = points[endIdx];\n                    var startPoint = points[startIdx];\n\n                    var boundingBox = this._contentVisual._measure();\n                    var width = boundingBox.width;\n                    var height = boundingBox.height;\n                    var alignToPath = points.length % 2 === 0;\n                    var distance = startPoint.distanceTo(endPoint);\n\n                    if (alignToPath && points.length > 2 && distance > 0 &&\n                        ((startPoint.y === endPoint.y && distance < width) || (startPoint.x === endPoint.x && distance < height))) {\n                        alignToPath = false;\n                        offset = 0;\n                    }\n\n                    var point;\n\n                    if (alignToPath) {\n                        var angle = draw.util.deg(math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x));\n                        point = new Point((endPoint.x - startPoint.x) / 2 + startPoint.x, (endPoint.y - startPoint.y) / 2 + startPoint.y);\n\n                        if (math.abs(angle) === 90) {\n                            point.x += offset;\n                            point.y -= height / 2;\n                        } else if (angle % 180 === 0) {\n                            point.x -= width / 2;\n                            point.y -= height + offset;\n                        } else if (angle < -90 || (0 < angle && angle < 90)) {\n                            point.y -= height;\n                        } else if (angle < 0 || angle > 90) {\n                            point.x -= width;\n                            point.y -= height;\n                        }\n                    } else {\n                        var midIdx = math.floor(points.length / 2);\n                        point = points[midIdx].clone();\n                        startPoint = points[midIdx - 1];\n                        endPoint = points[midIdx + 1];\n\n                        var offsetX = startPoint.x <= point.x && endPoint.x <= point.x ? offset : -boundingBox.width - offset;\n                        var offsetY = startPoint.y <= point.y && endPoint.y <= point.y ? offset : -boundingBox.height - offset;\n\n                        point.x += offsetX;\n                        point.y += offsetY;\n                    }\n\n                    this._contentVisual.position(point);\n                }\n            },\n\n            /**\n             * Selects or unselects this connections.\n             * @param value True to select, false to unselect.\n             */\n            select: function(value) {\n                var diagram = this.diagram, selected, deselected;\n                if (this._canSelect()) {\n                    if (this.isSelected !== value) {\n                        this.isSelected = value;\n                        selected = [];\n                        deselected = [];\n                        if (this.isSelected) {\n                            this.adorner = new ConnectionEditAdorner(this, this.options.selection);\n                            diagram._adorn(this.adorner, true);\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            if (this.adorner) {\n                                diagram._adorn(this.adorner, false);\n                                Utils.remove(diagram._selectedItems, this);\n                                this.adorner = undefined$1;\n                                deselected.push(this);\n                            }\n                        }\n\n                        if (this.adorner) {\n                            this.adorner.refresh();\n                        }\n\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            /**\n             * Gets or sets the bounds of this connection.\n             * @param value A Rect object.\n             * @remark This is automatically set in the refresh().\n             * @returns {Rect}\n             */\n            bounds: function(value) {\n                if (value && !isString(value)) {\n                    this._bounds = value;\n                } else {\n                    return this._bounds;\n                }\n            },\n            /**\n             * Gets or sets the connection type (see ConnectionType enumeration).\n             * @param value A ConnectionType value.\n             * @returns {ConnectionType}\n             */\n            type: function(value) {\n                var options = this.options;\n                if (value) {\n                    if (value !== options.type) {\n                        options.type = value;\n                        this._initRouter();\n                        this.refresh();\n                    }\n                } else {\n                    return options.type;\n                }\n            },\n\n            _initRouter: function() {\n                var type = (this.options.type || \"\").toLowerCase();\n                if (type == CASCADING) {\n                    this._router = new CascadingRouter(this);\n                } else {\n                    this._router = new PolylineRouter(this);\n                }\n            },\n            /**\n             * Gets or sets the collection of *intermediate* points.\n             * The 'allPoints()' property will return all the points.\n             * The 'definers' property returns the definers of the intermediate points.\n             * The 'sourceDefiner' and 'targetDefiner' return the definers of the endpoints.\n             * @param value\n             */\n            points: function(value) {\n                if (value) {\n                    this.definers = [];\n                    for (var i = 0; i < value.length; i++) {\n                        var definition = value[i];\n                        if (definition instanceof diagram.Point) {\n                            this.definers.push(new diagram.PathDefiner(definition));\n                        } else if (definition.hasOwnProperty(\"x\") && definition.hasOwnProperty(\"y\")) { // e.g. Clipboard does not preserve the Point definition and tunred into an Object\n                            this.definers.push(new diagram.PathDefiner(new Point(definition.x, definition.y)));\n                        } else {\n                            throw \"A Connection point needs to be a Point or an object with x and y properties.\";\n                        }\n                    }\n\n                } else {\n                    var pts = [];\n                    if (isDefined(this.definers)) {\n                        for (var k = 0; k < this.definers.length; k++) {\n                            pts.push(this.definers[k].point);\n                        }\n                    }\n                    return pts;\n                }\n            },\n            /**\n             * Gets all the points of this connection. This is the combination of the sourcePoint, the points and the targetPoint.\n             * @returns {Array}\n             */\n            allPoints: function() {\n                var pts = [this.sourcePoint()];\n                if (this.definers) {\n                    for (var k = 0; k < this.definers.length; k++) {\n                        pts.push(this.definers[k].point);\n                    }\n                }\n                pts.push(this.targetPoint());\n                return pts;\n            },\n\n            refresh: function() {\n                this._resolveConnectors();\n                this._refreshPath();\n                this._alignContent();\n\n                if (this.adorner) {\n                    this.adorner.refresh();\n                }\n            },\n\n            _resolveConnectors: function() {\n                var connection = this,\n                    sourcePoint, targetPoint,\n                    sourceConnectors, targetConnectors,\n                    source = connection.source(),\n                    target = connection.target();\n\n                if (source instanceof Point) {\n                    sourcePoint = source;\n                } else if (source instanceof Connector) {\n                    if (isAutoConnector(source)) {\n                        sourceConnectors = source.shape.connectors;\n                    } else {\n                        sourceConnectors = [source];\n                    }\n                }\n\n                if (target instanceof Point) {\n                    targetPoint = target;\n                } else if (target instanceof Connector) {\n                    if (isAutoConnector(target)) {\n                        targetConnectors = target.shape.connectors;\n                    } else {\n                        targetConnectors = [target];\n                    }\n                }\n\n                if (sourcePoint) {\n                    if (targetConnectors) {\n                        connection._resolvedTargetConnector = closestConnector(sourcePoint, targetConnectors);\n                    }\n                } else if (sourceConnectors) {\n                    if (targetPoint) {\n                        connection._resolvedSourceConnector = closestConnector(targetPoint, sourceConnectors);\n                    } else if (targetConnectors) {\n                        this._resolveAutoConnectors(sourceConnectors, targetConnectors);\n                    }\n                }\n            },\n\n            _resolveAutoConnectors: function(sourceConnectors, targetConnectors) {\n                var minNonConflict = MAXINT;\n                var minDist = MAXINT;\n                var minNonConflictSource, minNonConflictTarget;\n                var sourcePoint, targetPoint;\n                var minSource, minTarget;\n                var sourceConnector, targetConnector;\n                var sourceIdx, targetIdx;\n                var dist;\n\n                for (sourceIdx = 0; sourceIdx < sourceConnectors.length; sourceIdx++) {\n                    sourceConnector = sourceConnectors[sourceIdx];\n                    if (!isAutoConnector(sourceConnector)) {\n                        sourcePoint = sourceConnector.position();\n\n                        for (targetIdx = 0; targetIdx < targetConnectors.length; targetIdx++) {\n                            targetConnector = targetConnectors[targetIdx];\n                            if (!isAutoConnector(targetConnector)) {\n                                targetPoint = targetConnector.position();\n                                dist = math.round(sourcePoint.distanceTo(targetPoint));\n\n                                if (dist < minNonConflict && this.diagram && this._testRoutePoints(sourcePoint, targetPoint, sourceConnector, targetConnector)) {\n                                    minNonConflict = dist;\n                                    minNonConflictSource = sourceConnector;\n                                    minNonConflictTarget = targetConnector;\n                                }\n\n                                if (dist < minDist) {\n                                    minSource = sourceConnector;\n                                    minTarget = targetConnector;\n                                    minDist = dist;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                if (minNonConflictSource) {\n                    minSource = minNonConflictSource;\n                    minTarget = minNonConflictTarget;\n                }\n\n                this._resolvedSourceConnector = minSource;\n                this._resolvedTargetConnector = minTarget;\n            },\n\n            _testRoutePoints: function(sourcePoint, targetPoint, sourceConnector, targetConnector) {\n                var router = this._router;\n                var passRoute = true;\n                if (router instanceof CascadingRouter) {\n                    var points = router.routePoints(sourcePoint, targetPoint, sourceConnector, targetConnector),\n                        start, end,\n                         rect, exclude;\n\n                    exclude = this._getRouteExclude(sourcePoint, targetPoint, sourceConnector.shape, targetConnector.shape);\n                    points.unshift(sourcePoint);\n                    points.push(targetPoint);\n\n\n                    for (var idx = 1; idx < points.length; idx++) {\n                        start = points[idx - 1];\n                        end = points[idx];\n                        rect = new Rect(math.min(start.x, end.x), math.min(start.y, end.y),\n                                        math.abs(start.x - end.x), math.abs(start.y - end.y));\n                        if (rect.width > 0) {\n                            rect.x++;\n                            rect.width -= 2;\n                        }\n                        if (rect.height > 0) {\n                            rect.y++;\n                            rect.height -= 2;\n                        }\n\n                        if (!rect.isEmpty() && this.diagram._shapesQuadTree.hitTestRect(rect, exclude)) {\n                            passRoute = false;\n                            break;\n                        }\n                    }\n                }\n                return passRoute;\n            },\n\n            _getRouteExclude: function(sourcePoint, targetPoint, sourceShape, targetShape) {\n                var exclude = [];\n                if (this._isPointInsideShape(sourcePoint, sourceShape)) {\n                    exclude.push(sourceShape);\n                }\n                if (this._isPointInsideShape(targetPoint, targetShape)) {\n                    exclude.push(targetShape);\n                }\n                return exclude;\n            },\n\n            _isPointInsideShape: function(point, shape) {\n                var bounds = shape.bounds(), rotatedPoint,\n                    angle = shape.rotate().angle,\n                    pointX, pointY,\n                    boundsX = bounds.x,\n                    boundsY = bounds.y;\n\n                rotatedPoint = point.clone().rotate(angle, bounds.center());\n                pointX = rotatedPoint.x;\n                pointY = rotatedPoint.y;\n                return pointX > boundsX && pointX < (boundsX + bounds.width) && pointY > boundsY && pointY < (boundsY + bounds.height);\n            },\n\n            redraw: function(options) {\n                if (options) {\n                    this.options = deepExtend({}, this.options, options);\n\n                    var points = this.options.points;\n\n                    if (defined(points) && points.length > 0) {\n                        this.points(points);\n                        this._refreshPath();\n                    }\n\n                    if ((options && options.content) || options.text) {\n                        this.content(options.content);\n                    }\n\n                    this.path.redraw({\n                        fill: options.fill,\n                        stroke: options.stroke,\n                        startCap: options.startCap,\n                        endCap: options.endCap\n                    });\n                }\n            },\n            /**\n             * Returns a clone of this connection.\n             * @returns {Connection}\n             */\n            clone: function() {\n                var json = this.serialize();\n\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n\n                return new Connection(this.from, this.to, json.options);\n            },\n            /**\n             * Returns a serialized connection in json format. Consist of the options and the dataItem.\n             * @returns {Connection}\n             */\n            serialize: function() {\n                var from = this.from.toJSON ? this.from.toJSON : this.from.toString(),\n                    to = this.to.toJSON ? this.to.toJSON : this.to.toString();\n\n                var json = deepExtend({}, {\n                    options: this.options,\n                    from: from,\n                    to: to\n                });\n\n                if (defined(this.dataItem)) {\n                    json.dataItem = this.dataItem.toString();\n                }\n\n                json.options.points = this.points();\n                return json;\n            },\n\n            /**\n             * Returns whether the given Point or Rect hits this connection.\n             * @param value\n             * @returns {Connection}\n             * @private\n             */\n            _hitTest: function(value) {\n                if (this.visible()) {\n                    var p = new Point(value.x, value.y), from = this.sourcePoint(), to = this.targetPoint();\n                    if (value.isEmpty && !value.isEmpty() && value.contains(from) && value.contains(to)) {\n                        return this;\n                    }\n                    if (this._router.hitTest(p)) {\n                        return this;\n                    }\n                }\n            },\n\n            _hover: function(value) {\n                var color = (this.options.stroke || {}).color;\n\n                if (value && isDefined(this.options.hover.stroke.color)) {\n                    color = this.options.hover.stroke.color;\n                }\n\n                this.path.redraw({\n                    stroke: {\n                        color: color\n                    }\n                });\n            },\n\n            _refreshPath: function() {\n                if (!defined(this.path)) {\n                    return;\n                }\n                this._drawPath();\n                this.bounds(this._router.getBounds());\n            },\n\n            _drawPath: function() {\n                if (this._router) {\n                    this._router.route(); // sets the intermediate points\n                }\n                var source = this.sourcePoint();\n                var target = this.targetPoint();\n                var points = this.points();\n\n                this.path.redraw({\n                    points: [source].concat(points, [target])\n                });\n            },\n\n            _clearSourceConnector: function() {\n                this.sourceConnector = undefined$1;\n                this._resolvedSourceConnector = undefined$1;\n            },\n\n            _clearTargetConnector: function() {\n                this.targetConnector = undefined$1;\n                this._resolvedTargetConnector = undefined$1;\n            },\n\n            _removeFromSourceConnector: function() {\n                if (this.sourceConnector) {\n                    Utils.remove(this.sourceConnector.connections, this);\n                }\n            },\n\n            _removeFromTargetConnector: function() {\n                if (this.targetConnector) {\n                    Utils.remove(this.targetConnector.connections, this);\n                }\n            },\n\n            toJSON: function() {\n                var connection = this;\n                var from, to, point;\n                if (connection.from && connection.from.toJSON) {\n                    from = connection.from.toJSON();\n                } else {\n                    point = connection._sourcePoint;\n                    from = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n\n                if (connection.to && connection.to.toJSON) {\n                    to = connection.to.toJSON();\n                } else {\n                    point = connection._targetPoint;\n                    to = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n\n                return {\n                    from: from,\n                    to: to\n                };\n            }\n        });\n\n        var Diagram = Widget.extend({\n            init: function(element, userOptions) {\n                var that = this;\n\n                kendo.destroy(element);\n                Widget.fn.init.call(that, element, userOptions);\n\n                that._initTheme();\n\n                that._initElements();\n                that._extendLayoutOptions(that.options);\n                that._initDefaults(userOptions);\n                that._interactionDefaults();\n\n                that._initCanvas();\n\n                that.mainLayer = new Group({\n                    id: \"main-layer\"\n                });\n                that.canvas.append(that.mainLayer);\n\n                that._shapesQuadTree = new ShapesQuadTree(that);\n\n                that._pan = new Point();\n                that._adorners = [];\n                that.adornerLayer = new Group({\n                    id: \"adorner-layer\"\n                });\n                that.canvas.append(that.adornerLayer);\n\n                that._createHandlers();\n\n                that._initialize();\n\n                that._resizingAdorner = new ResizingAdorner(that, { editable: that.options.editable });\n                that._connectorsAdorner = new ConnectorsAdorner(that);\n\n                that._adorn(that._resizingAdorner, true);\n                that._adorn(that._connectorsAdorner, true);\n\n                that.selector = new Selector(that);\n                // TODO: We may consider using real Clipboard API once is supported by the standard.\n                that._clipboard = [];\n\n                that.pauseMouseHandlers = false;\n\n                that._fetchFreshData();\n\n                that._createGlobalToolBar();\n\n                that._createOptionElements();\n\n                that.zoom(that.options.zoom);\n\n                that.canvas.draw();\n            },\n\n            options: {\n                name: \"Diagram\",\n                theme: \"sass\",\n                layout: \"\",\n                zoomRate: 0.1,\n                zoom: 1,\n                zoomMin: 0,\n                zoomMax: 2,\n                dataSource: {},\n                draggable: true,\n                template: \"\",\n                autoBind: true,\n                editable: {\n                    rotate: {},\n                    resize: {},\n                    text: true,\n                    tools: [],\n                    drag: {\n                        snap: {\n                            size: 10,\n                            angle: 10\n                        }\n                    },\n                    remove: true\n                },\n                pannable: {},\n                selectable: {\n                    key: \"none\"\n                },\n                tooltip: { enabled: true, format: \"{0}\" },\n                copy: {\n                    enabled: true,\n                    offsetX: 20,\n                    offsetY: 20\n                },\n                shapeDefaults: diagram.shapeDefaults({ undoable: true }),\n                connectionDefaults: {\n                    editable: {\n                        tools: []\n                    },\n                    type: CASCADING\n                },\n                shapes: [],\n                connections: []\n            },\n\n            events: [\n                ZOOM_END,\n                ZOOM_START,\n                PAN, SELECT,\n                ITEMROTATE,\n                ITEMBOUNDSCHANGE,\n                CHANGE,\n                CLICK,\n                MOUSE_ENTER,\n                MOUSE_LEAVE,\n                \"toolBarClick\",\n                \"save\",\n                \"cancel\",\n                \"edit\",\n                \"remove\",\n                \"add\",\n                \"dataBound\",\n                DRAG_START,\n                DRAG,\n                DRAG_END\n            ],\n\n            items: function() {\n                return $();\n            },\n\n            _createGlobalToolBar: function() {\n                var editable = this.options.editable;\n                if (editable) {\n                    var tools = editable.tools;\n                    if (this._isEditable && tools !== false && (!tools || tools.length === 0)) {\n                        tools = [\"createShape\", \"undo\", \"redo\", \"rotateClockwise\", \"rotateAnticlockwise\"];\n                    }\n\n                    if (tools && tools.length) {\n                        this.toolBar = new DiagramToolBar(this, {\n                            tools: tools || {},\n                            click: this._toolBarClick.bind(this),\n                            modal: false\n                        });\n\n                        this.toolBar.element.css({\n                            textAlign: \"left\"\n                        });\n\n                        this.element.prepend(this.toolBar.element);\n                        this._resize();\n                    }\n                }\n            },\n\n            createShape: function() {\n                if ((this.editor && this.editor.end()) || !this.editor) {\n                    var dataSource = this.dataSource;\n                    var view = dataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(dataSource, {});\n                    var shape = this._createShape(model, {});\n\n                    if (!this.trigger(\"add\", { shape: shape })) {\n                        dataSource.insert(index, model);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(model.uid);\n                        inactiveItem.element = shape;\n                        this.edit(shape);\n                    }\n                }\n            },\n\n            _createShape: function(dataItem, options) {\n                options = deepExtend({}, this.options.shapeDefaults, options);\n                options.dataItem = dataItem;\n                var shape = new Shape(options, this);\n                return shape;\n            },\n\n            createConnection: function() {\n                if (((this.editor && this.editor.end()) || !this.editor)) {\n                    var connectionsDataSource = this.connectionsDataSource;\n                    var view = connectionsDataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(connectionsDataSource, {});\n                    var connection = this._createConnection(model);\n                    if (!this.trigger(\"add\", { connection: connection })) {\n                        this._connectionsDataMap[model.uid] = connection;\n                        connectionsDataSource.insert(index, model);\n                        this.addConnection(connection, false);\n                        this.edit(connection);\n                    }\n                }\n            },\n\n            _createConnection: function(dataItem, source, target) {\n                var options = deepExtend({}, this.options.connectionDefaults);\n                options.dataItem = dataItem;\n\n                var connection = new Connection(source || new Point(), target || new Point(), options);\n\n                return connection;\n            },\n\n            editModel: function(dataItem, editorType) {\n                this.cancelEdit();\n                var editors, template;\n                var editable = this.options.editable;\n\n                if (editorType == \"shape\") {\n                    editors = editable.shapeEditors;\n                    template = editable.shapeTemplate;\n                } else if (editorType == \"connection\") {\n                    var connectionSelectorHandler = connectionSelector.bind(this);\n                    editors = deepExtend({}, { from: connectionSelectorHandler, to: connectionSelectorHandler }, editable.connectionEditors);\n                    template = editable.connectionTemplate;\n                } else {\n                    return;\n                }\n\n                this.editor = new PopupEditor(this.element, {\n                    update: this._update.bind(this),\n                    cancel: this._cancel.bind(this),\n                    model: dataItem,\n                    type: editorType,\n                    target: this,\n                    editors: editors,\n                    template: template\n                });\n\n                this.trigger(\"edit\", this._editArgs());\n            },\n\n            edit: function(item) {\n                if (item.dataItem) {\n                    var editorType = item instanceof Shape ? \"shape\" : \"connection\";\n                    this.editModel(item.dataItem, editorType);\n                }\n            },\n\n            cancelEdit: function() {\n                if (this.editor) {\n                    this._getEditDataSource().cancelChanges(this.editor.model);\n\n                    this._destroyEditor();\n                }\n            },\n\n            saveEdit: function() {\n                if (this.editor && this.editor.end() &&\n                    !this.trigger(\"save\", this._editArgs())) {\n                    this._getEditDataSource().sync();\n                }\n            },\n\n            _update: function() {\n                if (this.editor && this.editor.end() &&\n                    !this.trigger(\"save\", this._editArgs())) {\n                    this._getEditDataSource().sync();\n                    this._destroyEditor();\n                }\n            },\n\n            _cancel: function() {\n                if (this.editor && !this.trigger(\"cancel\", this._editArgs())) {\n                    var model = this.editor.model;\n                    this._getEditDataSource().cancelChanges(model);\n                    var element = this._connectionsDataMap[model.uid] || this._dataMap[model.id];\n                    if (element) {\n                        element._setOptionsFromModel(model);\n                    }\n                    this._destroyEditor();\n                }\n            },\n\n            _getEditDataSource: function() {\n                return this.editor.options.type === \"shape\" ? this.dataSource : this.connectionsDataSource;\n            },\n\n            _editArgs: function() {\n                var result = { container: this.editor.wrapper };\n                result[this.editor.options.type] = this.editor.model;\n                return result;\n            },\n\n            _destroyEditor: function() {\n                if (this.editor) {\n                    this.editor.close();\n                    this.editor = null;\n                }\n            },\n\n            _initElements: function() {\n                this.wrapper = this.element.empty()\n                    .css(\"position\", \"relative\")\n                    .attr(\"tabindex\", 0)\n                    .addClass(\"k-widget k-diagram\");\n\n                this.scrollable = $(\"<div />\").appendTo(this.element);\n            },\n\n            _initDefaults: function(userOptions) {\n                var options = this.options;\n                var editable = options.editable;\n                var shapeDefaults = options.shapeDefaults;\n                var connectionDefaults = options.connectionDefaults;\n                var userShapeDefaults = (userOptions || {}).shapeDefaults;\n                if (editable === false) {\n                    shapeDefaults.editable = false;\n                    connectionDefaults.editable = false;\n                } else {\n                    copyDefaultOptions(editable, shapeDefaults.editable, [\"drag\", \"remove\", \"connect\"]);\n                    copyDefaultOptions(editable, connectionDefaults.editable, [\"drag\", \"remove\"]);\n                }\n\n                if (userShapeDefaults && userShapeDefaults.connectors) {\n                    options.shapeDefaults.connectors = userShapeDefaults.connectors;\n                }\n            },\n\n            _interactionDefaults: function() {\n                var options = this.options;\n                var selectable = options.selectable;\n                var pannable = options.pannable;\n                var mobile = kendo.support.mobileOS;\n\n                if (selectable && !defined(selectable.multiple)) {\n                    options.selectable = deepExtend({\n                        multiple: mobile ? false : true\n                    }, options.selectable);\n                }\n\n                if (pannable && !defined(pannable.key)) {\n                    options.pannable = deepExtend({\n                        key: mobile ? \"none\" : \"ctrl\"\n                    }, options.pannable);\n                }\n            },\n\n            _initCanvas: function() {\n                var canvasContainer = $(\"<div class='k-layer'></div>\").appendTo(this.scrollable)[0];\n                var viewPort = this.viewport();\n                this.canvas = new Canvas(canvasContainer, {\n                    width: viewPort.width || DEFAULT_CANVAS_WIDTH,\n                    height: viewPort.height || DEFAULT_CANVAS_HEIGHT\n                });\n            },\n\n            _createHandlers: function() {\n                var that = this;\n                var element = that.element;\n\n                element.on(MOUSEWHEEL_NS, that._wheel.bind(that))\n                .on(\"keydown\" + NS, that._keydown.bind(that));\n\n                that._userEvents = new kendo.UserEvents(this.scrollable, {\n                    multiTouch: true,\n                    fastTap: true,\n                    tap: that._tap.bind(that),\n                    start: that._dragStart.bind(that),\n                    move: that._drag.bind(that),\n                    end: that._dragEnd.bind(that),\n                    gesturestart: that._gestureStart.bind(that),\n                    gesturechange: that._gestureChange.bind(that),\n                    gestureend: that._gestureEnd.bind(that),\n                    doubleTap: that._doubleTap.bind(that),\n                    supportDoubleTap: true\n                });\n\n                that.toolService = new ToolService(that);\n\n                this.scrollable\n                    .on(\"mouseover\" + NS, that._mouseover.bind(that))\n                    .on(\"mouseout\" + NS, that._mouseout.bind(that))\n                    .on(\"mousemove\" + NS, that._mouseMove.bind(that))\n                    .on(\"mousedown\" + NS, that._mouseDown.bind(that))\n                    .on(\"mouseup\" + NS, that._mouseUp.bind(that));\n\n                this._syncHandler = that._syncChanges.bind(that);\n\n                that._resizeHandler = that.resize.bind(that, false);\n                kendo.onResize(that._resizeHandler);\n\n                this.bind(ZOOM_START, that._destroyToolBar.bind(that));\n                this.bind(PAN, that._destroyToolBar.bind(that));\n            },\n\n            _dragStart: function(e) {\n                this._pauseMouseHandlers = true;\n                var point = this._eventPositions(e, true);\n\n                var event = e.event;\n                if (this.toolService.start(point, this._meta(event))) {\n                    this._destroyToolBar();\n                    event.preventDefault();\n                }\n            },\n\n            _drag: function(e) {\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.move(p, this._meta(event))) {\n                    event.preventDefault();\n                }\n            },\n\n            _dragEnd: function(e) {\n                this._pauseMouseHandlers = false;\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.end(p, this._meta(event))) {\n                    this._createToolBar();\n                    event.preventDefault();\n                }\n            },\n\n            _mouseMove: function(e) {\n                if (!this._pauseMouseHandlers) {\n                    var p = this._eventPositions(e);\n                    this.toolService._updateHoveredItem(p);\n                    this.toolService._updateCursor(p);\n                }\n            },\n\n            _mouseDown: function() {\n                this._pauseMouseHandlers = true;\n            },\n\n            _mouseUp: function() {\n                this._pauseMouseHandlers = false;\n            },\n\n            _tap: function(e) {\n                var toolService = this.toolService;\n                var selectable = this.options.selectable;\n                var point = this._eventPositions(e);\n                var focused = this.focus();\n\n                toolService._updateHoveredItem(point);\n\n                if (toolService.hoveredItem) {\n                    var item = toolService.hoveredItem;\n\n                    this.trigger(\"click\", {\n                        item: item,\n                        point: point,\n                        meta: this._meta(e.event)\n                    });\n\n                    if (selectable && item.options.selectable !== false) {\n                        var multiple = selectable.multiple !== false;\n                        var ctrlPressed = kendo.support.mobileOS || this._meta(e.event).ctrlKey;\n\n                        if (item.isSelected) {\n                            if (ctrlPressed) {\n                                this._destroyToolBar();\n                                item.select(false);\n                            } else {\n                                this._createToolBar(focused);\n                            }\n                        } else {\n                            this._destroyToolBar();\n                            this.select(item, {\n                                addToSelection: multiple && ctrlPressed\n                            });\n                            this._createToolBar(focused);\n                        }\n                    }\n                } else if (selectable) {\n                    this._destroyToolBar();\n                    this.deselect();\n                }\n            },\n\n            _keydown: function(e) {\n                if (this.toolService.keyDown(e.keyCode, this._meta(e))) {\n                    e.preventDefault();\n                }\n            },\n\n            _wheel: function(e) {\n                var delta = mwDelta(e),\n                    p = this._eventPositions(e),\n                    meta = deepExtend(this._meta(e), { delta: delta });\n\n                if (this.toolService.wheel(p, meta)) {\n                    e.preventDefault();\n                }\n            },\n\n            _meta: function(e) {\n                return { ctrlKey: e.ctrlKey, metaKey: e.metaKey, altKey: e.altKey, shiftKey: e.shiftKey, type: e.type };\n            },\n\n            _eventPositions: function(e, start) {\n                var point;\n                if (e.touch) {\n                    var field = start ? \"startLocation\" : \"location\";\n                    point = new Point(e.x[field], e.y[field]);\n                } else {\n                    var event = e.originalEvent;\n                    point = new Point(event.pageX, event.pageY);\n                }\n\n                return this.documentToModel(point);\n            },\n\n            _gestureStart: function(e) {\n                this._destroyToolBar();\n                this.scroller.disable();\n                var initialCenter = this.documentToModel(new Point(e.center.x, e.center.y));\n                var eventArgs = {\n                    point: initialCenter,\n                    zoom: this.zoom()\n                };\n\n                if (this.trigger(ZOOM_START, eventArgs)) {\n                    return;\n                }\n\n                this._gesture = e;\n                this._initialCenter = initialCenter;\n            },\n\n            _gestureChange: function(e) {\n                var previousGesture = this._gesture;\n                var initialCenter = this._initialCenter;\n                var center = this.documentToView(new Point(e.center.x, e.center.y));\n                var scaleDelta = e.distance / previousGesture.distance;\n                var zoom = this._zoom;\n                var updateZoom = false;\n\n                if (math.abs(scaleDelta - 1) >= MOBILE_ZOOM_RATE) {\n                    this._zoom = zoom = this._getValidZoom(zoom * scaleDelta);\n                    this.options.zoom = zoom;\n                    this._gesture = e;\n                    updateZoom = true;\n                }\n\n                var zoomedPoint = initialCenter.times(zoom);\n                var pan = center.minus(zoomedPoint);\n                if (updateZoom || this._pan.distanceTo(pan) >= MOBILE_PAN_DISTANCE) {\n                    this._panTransform(pan);\n                    this._updateAdorners();\n                }\n\n                e.preventDefault();\n            },\n\n            _doubleTap: function(e) {\n                var diagram = this;\n                var pointPosition = this._eventPositions(e);\n                var options = diagram.options;\n                var zoomRate = options.zoomRate;\n                var zoom = diagram.zoom() + zoomRate;\n                var meta = this._meta(e);\n                var zoomOptions = { point: pointPosition, meta: meta, zoom: zoom };\n\n\n                if (diagram.trigger(ZOOM_START, zoomOptions)) {\n                    return;\n                }\n\n                zoom = kendo.drawing.util.round(Math.max(options.zoomMin, Math.min(options.zoomMax, zoom)), 2);\n                zoomOptions.zoom = zoom;\n\n                diagram.zoom(zoom, zoomOptions);\n                diagram.trigger(ZOOM_END, zoomOptions);\n            },\n\n            _gestureEnd: function() {\n                if (this.options.pannable !== false) {\n                    this.scroller.enable();\n                }\n                this.trigger(ZOOM_END, {\n                    point: this._initialCenter,\n                    zoom: this.zoom()\n                });\n            },\n\n            _resize: function() {\n                var viewport = this.viewport();\n                if (this.canvas) {\n                    this.canvas.size(viewport);\n                }\n\n                if (this.scrollable && this.toolBar) {\n                    this.scrollable.height(viewport.height);\n                }\n            },\n\n            _mouseover: function(e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(true, node.srcElement);\n                }\n            },\n\n            _mouseout: function(e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(false, node.srcElement);\n                }\n            },\n\n            _initTheme: function() {\n                var that = this;\n                var themeName = ((that.options || {}).theme || \"\").toLowerCase();\n                var themes = dataviz.ui.themes || {};\n                var themeOptions;\n\n                if (dataviz.SASS_THEMES.indexOf(themeName) != -1) {\n                    themeOptions = dataviz.autoTheme().diagram;\n                }\n                else {\n                    themeOptions = (themes[themeName] || {}).diagram;\n                }\n\n                that.options = deepExtend({}, themeOptions, that.options);\n                if (that.options.editable === true) {\n                    deepExtend(that.options, {\n                        editable: (themeOptions || {}).editable\n                    });\n                }\n            },\n\n            _createOptionElements: function() {\n                var options = this.options;\n                var shapesLength = options.shapes.length;\n\n                if (shapesLength) {\n                    this._createShapes();\n                }\n\n                if (options.connections.length) {\n                    this._createConnections();\n                }\n\n                if (shapesLength && options.layout) {\n                    this.layout(options.layout);\n                }\n            },\n\n            _createShapes: function() {\n                var that = this,\n                    options = that.options,\n                    shapes = options.shapes,\n                    shape, i;\n\n                for (i = 0; i < shapes.length; i++) {\n                    shape = shapes[i];\n                    that.addShape(shape);\n                }\n            },\n\n            _createConnections: function() {\n                var diagram = this,\n                    options = diagram.options,\n                    defaults = options.connectionDefaults,\n                    connections = options.connections,\n                    conn, source, target, i;\n\n                for (i = 0; i < connections.length; i++) {\n                    conn = connections[i];\n                    source = diagram._findConnectionTarget(conn.from);\n                    target = diagram._findConnectionTarget(conn.to);\n\n                    diagram.connect(source, target, deepExtend({}, defaults, conn));\n                }\n            },\n\n            _findConnectionTarget: function(options) {\n                options = options || {};\n                var diagram = this;\n                var shapeId = isString(options) ? options : options.shapeId || options.id;\n                var target;\n                if (shapeId) {\n                    target = diagram.getShapeById(shapeId);\n                    if (options.connector) {\n                        target = target.getConnector(options.connector);\n                    }\n                } else {\n                    target = new Point(options.x || 0, options.y || 0);\n                }\n\n                return target;\n            },\n\n            destroy: function() {\n                var that = this;\n                Widget.fn.destroy.call(that);\n\n                if (this._userEvents) {\n                    this._userEvents.destroy();\n                }\n\n                kendo.unbindResize(that._resizeHandler);\n\n                that.clear();\n                that.element.off(NS);\n                that.scroller.wrapper.off(NS);\n                that.canvas.destroy(true);\n                that.canvas = undefined$1;\n\n                that._destroyEditor();\n                that.destroyScroller();\n                that._destroyGlobalToolBar();\n                that._destroyToolBar();\n            },\n\n            destroyScroller: function() {\n                var scroller = this.scroller;\n\n                if (!scroller) {\n                    return;\n                }\n\n                scroller.destroy();\n                scroller.element.remove();\n                this.scroller = null;\n            },\n\n            save: function() {\n                var json = {\n                    shapes: [],\n                    connections: []\n                };\n                var i, connection, shape;\n\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    if (shape.options.serializable) {\n                        json.shapes.push(shape.options);\n                    }\n                }\n\n                for (i = 0; i < this.connections.length; i++) {\n                    connection = this.connections[i];\n\n                    json.connections.push(deepExtend({}, connection.options, connection.toJSON()));\n                }\n\n                return json;\n            },\n\n            focus: function() {\n                if (!this.element.is(kendo._activeElement())) {\n                    var element = this.element,\n                        scrollContainer = element[0],\n                        containers = [],\n                        offsets = [],\n                        documentElement = document.documentElement,\n                        i;\n\n                    do {\n                        scrollContainer = scrollContainer.parentNode;\n\n                        if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                            containers.push(scrollContainer);\n                            offsets.push(scrollContainer.scrollTop);\n                        }\n                    } while (scrollContainer != documentElement);\n\n                    element.trigger(\"focus\");\n\n                    for (i = 0; i < containers.length; i++) {\n                        containers[i].scrollTop = offsets[i];\n                    }\n                    return true;\n                }\n            },\n\n            load: function(options) {\n                this.clear();\n\n                this.setOptions(options);\n                this._createShapes();\n                this._createConnections();\n            },\n\n            setOptions: function(options) {\n                deepExtend(this.options, options);\n            },\n\n            clear: function() {\n                var that = this;\n\n                that.select(false);\n                that.mainLayer.clear();\n                that._shapesQuadTree.clear();\n                that._initialize();\n            },\n            /**\n             * Connects two items.\n             * @param source Shape, Connector, Point.\n             * @param target Shape, Connector, Point.\n             * @param options Connection options that will be passed to the newly created connection.\n             * @returns The newly created connection.\n             */\n            connect: function(source, target, options) {\n                var connection;\n                if (this.connectionsDataSource && this._isEditable) {\n                    var dataItem = this.connectionsDataSource.add({});\n                    connection = this._connectionsDataMap[dataItem.uid];\n                    connection.source(source);\n                    connection.target(target);\n                    connection.redraw(options);\n                    connection.updateModel();\n                } else {\n                    connection = new Connection(source, target,\n                        deepExtend({ }, this.options.connectionDefaults, options));\n\n                    this.addConnection(connection);\n                }\n\n                return connection;\n            },\n            /**\n             * Determines whether the the two items are connected.\n             * @param source Shape, Connector, Point.\n             * @param target Shape, Connector, Point.\n             * @returns true if the two items are connected.\n             */\n            connected: function(source, target) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    var c = this.connections[i];\n                    if (c.from == source && c.to == target) {\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n            /**\n             * Adds connection to the diagram.\n             * @param connection Connection.\n             * @param undoable Boolean.\n             * @returns The newly created connection.\n             */\n            addConnection: function(connection, undoable) {\n                if (undoable !== false) {\n                    this.undoRedoService.add(\n                        new diagram.AddConnectionUnit(connection, this), false);\n                }\n\n                connection.diagram = this;\n                connection._setOptionsFromModel();\n                connection.refresh();\n                this.mainLayer.append(connection.visual);\n                this.connections.push(connection);\n\n                this.trigger(CHANGE, {\n                    added: [connection],\n                    removed: []\n                });\n\n                return connection;\n            },\n\n            _addConnection: function(connection, undoable) {\n                var connectionsDataSource = this.connectionsDataSource;\n                var dataItem;\n                if (connectionsDataSource && this._isEditable) {\n                    dataItem = createModel(connectionsDataSource, cloneDataItem(connection.dataItem));\n                    connection.dataItem = dataItem;\n                    connection.updateModel();\n\n                    if (!this.trigger(\"add\", { connection: connection })) {\n                        this._connectionsDataMap[dataItem.uid] = connection;\n\n                        connectionsDataSource.add(dataItem);\n                        this.addConnection(connection, undoable);\n                        connection._updateConnectors();\n\n                        return connection;\n                    }\n                } else if (!this.trigger(\"add\", { connection: connection })) {\n                    this.addConnection(connection, undoable);\n                    connection._updateConnectors();\n                    return connection;\n                }\n            },\n\n            /**\n             * Adds shape to the diagram.\n             * @param item Shape, Point. If point is passed it will be created new Shape and positioned at that point.\n             * @param options. The options to be passed to the newly created Shape.\n             * @returns The newly created shape.\n             */\n            addShape: function(item, undoable) {\n                var shape,\n                    shapeDefaults = this.options.shapeDefaults;\n\n                if (item instanceof Shape) {\n                    shape = item;\n                    this._parseBounds(shape.bounds());\n                } else if (!(item instanceof kendo.Class)) {\n                    shapeDefaults = deepExtend({}, shapeDefaults, item || {});\n                    shape = new Shape(shapeDefaults, this);\n                    this._parseBounds(shape.bounds());\n                } else {\n                    return;\n                }\n\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddShapeUnit(shape, this), false);\n                }\n\n                this.shapes.push(shape);\n                if (shape.diagram !== this) {\n                    this._shapesQuadTree.insert(shape);\n                    shape.diagram = this;\n                }\n                this.mainLayer.append(shape.visual);\n\n                this.trigger(CHANGE, {\n                    added: [shape],\n                    removed: []\n                });\n\n                return shape;\n            },\n\n            _addShape: function(shape, undoable) {\n                var that = this;\n                var dataSource = that.dataSource;\n                var dataItem;\n                if (dataSource && this._isEditable) {\n                    dataItem = createModel(dataSource, cloneDataItem(shape.dataItem));\n                    shape.dataItem = dataItem;\n                    shape.updateModel();\n\n                    if (!this.trigger(\"add\", { shape: shape })) {\n                        this.dataSource.add(dataItem);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(dataItem.uid);\n                        inactiveItem.element = shape;\n                        inactiveItem.undoable = undoable;\n                        return shape;\n                    }\n                } else if (!this.trigger(\"add\", { shape: shape })) {\n                    return this.addShape(shape, undoable);\n                }\n            },\n\n            _parseBounds: function(bounds) {\n                bounds.x = typeof(bounds.x) == \"string\" ? parseFloat(bounds.x) : bounds.x;\n                bounds.y = typeof(bounds.y) == \"string\" ? parseFloat(bounds.y) : bounds.y;\n            },\n            /**\n             * Removes items (or single item) from the diagram.\n             * @param items DiagramElement, Array of Items.\n             * @param undoable.\n             */\n\n           remove: function(items, undoable) {\n                items = isArray(items) ? items.slice(0) : [items];\n                var elements = splitDiagramElements(items);\n                var shapes = elements.shapes;\n                var connections = elements.connections;\n                var i;\n\n                if (!defined(undoable)) {\n                    undoable = true;\n                }\n\n                if (undoable) {\n                    this.undoRedoService.begin();\n                }\n\n                this._suspendModelRefresh();\n                for (i = shapes.length - 1; i >= 0; i--) {\n                   this._removeItem(shapes[i], undoable, connections);\n                }\n\n                for (i = connections.length - 1; i >= 0; i--) {\n                    this._removeItem(connections[i], undoable);\n                }\n\n                this._resumeModelRefresh();\n\n                if (undoable) {\n                    this.undoRedoService.commit(false);\n                }\n\n                this.trigger(CHANGE, {\n                    added: [],\n                    removed: items\n                });\n            },\n\n            _removeShapeDataItem: function(item) {\n                if (this._isEditable) {\n                    this.dataSource.remove(item.dataItem);\n                    delete this._dataMap[item.dataItem.id];\n                }\n            },\n\n            _removeConnectionDataItem: function(item) {\n                if (this._isEditable) {\n                    this.connectionsDataSource.remove(item.dataItem);\n                    delete this._connectionsDataMap[item.dataItem.uid];\n                }\n            },\n\n            _triggerRemove: function(items) {\n                var toRemove = [];\n                var item, args, editable;\n\n                for (var idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    editable = item.options.editable;\n                    if (item instanceof Shape) {\n                        args = { shape: item };\n                    } else {\n                        args = { connection: item };\n                    }\n                    if (editable && editable.remove !== false && !this.trigger(\"remove\", args)) {\n                        toRemove.push(item);\n                    }\n                }\n                return toRemove;\n            },\n\n            /**\n             * Executes the next undoable action on top of the undo stack if any.\n             */\n            undo: function() {\n                this.undoRedoService.undo();\n            },\n            /**\n             * Executes the previous undoable action on top of the redo stack if any.\n             */\n            redo: function() {\n                this.undoRedoService.redo();\n            },\n            /**\n             * Selects items on the basis of the given input or returns the current selection if none.\n             * @param itemsOrRect DiagramElement, Array of elements, \"All\", false or Rect. A value 'false' will deselect everything.\n             * @param options\n             * @returns {Array}\n             */\n            select: function(item, options) {\n                if (isDefined(item)) {\n                    options = deepExtend({ addToSelection: false }, options);\n\n                    var addToSelection = options.addToSelection,\n                        items = [],\n                        selected = [],\n                        i, element;\n\n                    if (!addToSelection) {\n                        this.deselect();\n                    }\n\n                    this._internalSelection = true;\n\n                    if (item instanceof Array) {\n                        items = item;\n                    } else if (item instanceof DiagramElement) {\n                        items = [ item ];\n                    }\n\n                    for (i = 0; i < items.length; i++) {\n                        element = items[i];\n                        if (element.select(true)) {\n                            selected.push(element);\n                        }\n                    }\n\n                    this._selectionChanged(selected, []);\n\n                    this._internalSelection = false;\n                } else {\n                    return this._selectedItems;\n                }\n            },\n\n            selectAll: function() {\n                this.select(this.shapes.concat(this.connections));\n            },\n\n            selectArea: function(rect) {\n                var i, items, item;\n                this._internalSelection = true;\n                var selected = [];\n                if (rect instanceof Rect) {\n                    items = this.shapes.concat(this.connections);\n                    for (i = 0; i < items.length; i++) {\n                        item = items[i];\n                        if ((!rect || item._hitTest(rect)) && item.options.enable) {\n                            if (item.select(true)) {\n                                selected.push(item);\n                            }\n                        }\n                    }\n                }\n\n                this._selectionChanged(selected, []);\n                this._internalSelection = false;\n            },\n\n            deselect: function(item) {\n                this._internalSelection = true;\n                var deselected = [],\n                    items = [],\n                    element, i;\n\n                if (item instanceof Array) {\n                    items = item;\n                } else if (item instanceof DiagramElement) {\n                    items.push(item);\n                } else if (!isDefined(item)) {\n                    items = this._selectedItems.slice(0);\n                }\n\n                for (i = 0; i < items.length; i++) {\n                    element = items[i];\n                    if (element.select(false)) {\n                        deselected.push(element);\n                    }\n                }\n\n                this._selectionChanged([], deselected);\n                this._internalSelection = false;\n            },\n            /**\n             * Brings to front the passed items.\n             * @param items DiagramElement, Array of Items.\n             * @param undoable. By default the action is undoable.\n             */\n            toFront: function(items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToFrontUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toFront(result.visuals);\n                    this._fixOrdering(result, true);\n                }\n            },\n            /**\n             * Sends to back the passed items.\n             * @param items DiagramElement, Array of Items.\n             * @param undoable. By default the action is undoable.\n             */\n            toBack: function(items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToBackUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toBack(result.visuals);\n                    this._fixOrdering(result, false);\n                }\n            },\n            /**\n             * Bring into view the passed item(s) or rectangle.\n             * @param items DiagramElement, Array of Items, Rect.\n             * @param options. align - controls the position of the calculated rectangle relative to the viewport.\n             * \"Center middle\" will position the items in the center. animate - controls if the pan should be animated.\n             */\n            bringIntoView: function(item, options) { // jQuery|Item|Array|Rect\n                var viewport = this.viewport();\n                var aligner = new diagram.RectAlign(viewport);\n                var current, rect, original, newPan;\n\n                if (viewport.width === 0 || viewport.height === 0) {\n                    return;\n                }\n\n                options = deepExtend({ animate: false, align: \"center middle\" }, options);\n                if (options.align == \"none\") {\n                    options.align = \"center middle\";\n                }\n\n                if (item instanceof DiagramElement) {\n                    rect = item.bounds(TRANSFORMED);\n                } else if (isArray(item)) {\n                    rect = this.boundingBox(item);\n                } else if (item instanceof Rect) {\n                    rect = item.clone();\n                }\n\n                original = rect.clone();\n\n                rect.zoom(this._zoom);\n\n                if (rect.width > viewport.width || rect.height > viewport.height) {\n                    this._zoom = this._getValidZoom(math.min(viewport.width / original.width, viewport.height / original.height));\n                    rect = original.clone().zoom(this._zoom);\n                }\n\n                this._zoomMainLayer();\n\n                current = rect.clone();\n                aligner.align(rect, options.align);\n\n                newPan = rect.topLeft().minus(current.topLeft());\n                this.pan(newPan.times(-1), options.animate);\n            },\n\n            alignShapes: function(direction) {\n                if (isUndefined(direction)) {\n                    direction = \"Left\";\n                }\n                var items = this.select(),\n                    val,\n                    item,\n                    i;\n\n                if (items.length === 0) {\n                    return;\n                }\n\n                switch (direction.toLowerCase()) {\n                    case \"left\":\n                    case \"top\":\n                        val = MAX_VALUE;\n                        break;\n                    case \"right\":\n                    case \"bottom\":\n                        val = MIN_VALUE;\n                        break;\n                }\n\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        switch (direction.toLowerCase()) {\n                            case \"left\":\n                                val = math.min(val, item.options.x);\n                                break;\n                            case \"top\":\n                                val = math.min(val, item.options.y);\n                                break;\n                            case \"right\":\n                                val = math.max(val, item.options.x);\n                                break;\n                            case \"bottom\":\n                                val = math.max(val, item.options.y);\n                                break;\n                        }\n                    }\n                }\n                var undoStates = [];\n                var shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        shapes.push(item);\n                        undoStates.push(item.bounds());\n                        switch (direction.toLowerCase()) {\n                            case \"left\":\n                            case \"right\":\n                                item.position(new Point(val, item.options.y));\n                                break;\n                            case \"top\":\n                            case \"bottom\":\n                                item.position(new Point(item.options.x, val));\n                                break;\n                        }\n                    }\n                }\n                var unit = new diagram.TransformUnit(shapes, undoStates);\n                this.undoRedoService.add(unit, false);\n            },\n\n            zoom: function(zoom, options) {\n                if (zoom) {\n                    var staticPoint = options ? options.point : new diagram.Point(0, 0);\n                    // var meta = options ? options.meta : 0;\n                    zoom = this._zoom = this._getValidZoom(zoom);\n\n                    if (!isUndefined(staticPoint)) {//Viewpoint vector is constant\n                        staticPoint = new diagram.Point(math.round(staticPoint.x), math.round(staticPoint.y));\n                        var zoomedPoint = staticPoint.times(zoom);\n                        var viewportVector = this.modelToView(staticPoint);\n                        var raw = viewportVector.minus(zoomedPoint);//pan + zoomed point = viewpoint vector\n                        this._storePan(new diagram.Point(math.round(raw.x), math.round(raw.y)));\n                    }\n\n                    if (options) {\n                        options.zoom = zoom;\n                    }\n\n                    this._panTransform();\n\n                    this.canvas.surface.hideTooltip();\n\n                    this._updateAdorners();\n                }\n\n                return this._zoom;\n            },\n\n            _getPan: function(pan) {\n                var canvas = this.canvas;\n                if (!canvas.translate) {\n                    pan = pan.plus(this._pan);\n                }\n                return pan;\n            },\n\n            pan: function(pan, animate) {\n                if (pan instanceof Point) {\n                    var that = this;\n                    var scroller = that.scroller;\n                    pan = that._getPan(pan);\n                    pan = pan.times(-1);\n\n                    if (animate) {\n                        scroller.animatedScrollTo(pan.x, pan.y, function() {\n                            that._updateAdorners();\n                        });\n                    } else {\n                        scroller.scrollTo(pan.x, pan.y);\n                        that._updateAdorners();\n                    }\n                } else {\n                    return this._pan.times(-1);\n                }\n            },\n\n            viewport: function() {\n                var element = this.element;\n                var width = element.width();\n                var height = element.height();\n\n                if (this.toolBar) {\n                    height -= outerHeight(this.toolBar.element);\n                }\n\n                return new Rect(0, 0, width, height);\n            },\n            copy: function() {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 1;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                }\n            },\n            cut: function() {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 0;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                    this.remove(this._clipboard, true);\n                }\n            },\n\n            paste: function() {\n                if (this._clipboard.length > 0) {\n                    var item, copied, i;\n                    var mapping = {};\n                    var elements = splitDiagramElements(this._clipboard);\n                    var connections = elements.connections;\n                    var shapes = elements.shapes;\n                    var offset = {\n                        x: this._copyOffset * this.options.copy.offsetX,\n                        y: this._copyOffset * this.options.copy.offsetY\n                    };\n                    this.deselect();\n                    // first the shapes\n                    for (i = 0; i < shapes.length; i++) {\n                        item = shapes[i];\n                        copied = item.clone();\n                        mapping[item.id] = copied;\n                        copied.position(new Point(item.options.x + offset.x, item.options.y + offset.y));\n                        copied.diagram = this;\n                        copied = this._addShape(copied);\n                        if (copied) {\n                            copied.select();\n                        }\n                    }\n                    // then the connections\n                    for (i = 0; i < connections.length; i++) {\n                        item = connections[i];\n                        copied = this._addConnection(item.clone());\n                        if (copied) {\n                            this._updateCopiedConnection(copied, item, \"source\", mapping, offset);\n                            this._updateCopiedConnection(copied, item, \"target\", mapping, offset);\n\n                            copied.select(true);\n                            copied.updateModel();\n                        }\n                    }\n\n                    this._syncChanges();\n\n                    this._copyOffset += 1;\n                }\n            },\n\n            _updateCopiedConnection: function(connection, sourceConnection, connectorName, mapping, offset) {\n                var onActivate, inactiveItem, targetShape;\n                var target = sourceConnection[connectorName]();\n                var diagram = this;\n                if (target instanceof Connector && mapping[target.shape.id]) {\n                    targetShape = mapping[target.shape.id];\n                    if (diagram.getShapeById(targetShape.id)) {\n                        connection[connectorName](targetShape.getConnector(target.options.name));\n                    } else {\n                        inactiveItem = diagram._inactiveShapeItems.getByUid(targetShape.dataItem.uid);\n                        if (inactiveItem) {\n                            onActivate = function(item) {\n                                targetShape = diagram._dataMap[item.id];\n                                connection[connectorName](targetShape.getConnector(target.options.name));\n                                connection.updateModel();\n                            };\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(onActivate));\n                        }\n                    }\n                } else {\n                    connection[connectorName](new Point(sourceConnection[connectorName + \"Point\"]().x + offset.x, sourceConnection[connectorName + \"Point\"]().y + offset.y));\n                }\n            },\n            /**\n             * Gets the bounding rectangle of the given items.\n             * @param items DiagramElement, Array of elements.\n             * @param origin Boolean. Pass 'true' if you need to get the bounding box of the shapes without their rotation offset.\n             * @returns {Rect}\n             */\n            boundingBox: function(items, origin) {\n                var rect = Rect.empty(), temp,\n                    di = isDefined(items) ? this._getDiagramItems(items) : { shapes: this.shapes };\n                if (di.shapes.length > 0) {\n                    var item = di.shapes[0];\n                    rect = item.bounds(ROTATED);\n                    for (var i = 1; i < di.shapes.length; i++) {\n                        item = di.shapes[i];\n                        temp = item.bounds(ROTATED);\n                        if (origin === true) {\n                            temp.x -= item._rotationOffset.x;\n                            temp.y -= item._rotationOffset.y;\n                        }\n                        rect = rect.union(temp);\n                    }\n                }\n                return rect;\n            },\n\n            _containerOffset: function() {\n                var containerOffset = this.element.offset();\n                if (this.toolBar) {\n                    containerOffset.top += outerHeight(this.toolBar.element);\n                }\n                return containerOffset;\n            },\n\n            documentToView: function(point) {\n                var containerOffset = this._containerOffset();\n\n                return new Point(point.x - containerOffset.left, point.y - containerOffset.top);\n            },\n            viewToDocument: function(point) {\n                var containerOffset = this._containerOffset();\n\n                return new Point(point.x + containerOffset.left, point.y + containerOffset.top);\n            },\n            viewToModel: function(point) {\n                return this._transformWithMatrix(point, this._matrixInvert);\n            },\n            modelToView: function(point) {\n                return this._transformWithMatrix(point, this._matrix);\n            },\n            modelToLayer: function(point) {\n                return this._transformWithMatrix(point, this._layerMatrix);\n            },\n            layerToModel: function(point) {\n                return this._transformWithMatrix(point, this._layerMatrixInvert);\n            },\n            documentToModel: function(point) {\n                var viewPoint = this.documentToView(point);\n                if (!this.canvas.translate) {\n                    viewPoint.x = viewPoint.x + this.scroller.scrollLeft;\n                    viewPoint.y = viewPoint.y + this.scroller.scrollTop;\n                }\n                return this.viewToModel(viewPoint);\n            },\n            modelToDocument: function(point) {\n                return this.viewToDocument(this.modelToView(point));\n            },\n            _transformWithMatrix: function(point, matrix) {\n                var result = point;\n                if (point instanceof Point) {\n                    if (matrix) {\n                        result = matrix.apply(point);\n                    }\n                }\n                else {\n                    var tl = this._transformWithMatrix(point.topLeft(), matrix),\n                        br = this._transformWithMatrix(point.bottomRight(), matrix);\n                    result = Rect.fromPoints(tl, br);\n                }\n                return result;\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n\n            setConnectionsDataSource: function(dataSource) {\n                this.options.connectionsDataSource = dataSource;\n                this._connectionDataSource();\n                if (this.options.autoBind) {\n                    this.connectionsDataSource.fetch();\n                }\n            },\n\n            /**\n             * Performs a diagram layout of the given type.\n             * @param layoutType The layout algorithm to be applied (TreeLayout, LayeredLayout, SpringLayout).\n             * @param options Layout-specific options.\n             */\n            layout: function(options) {\n                this._layouting = true;\n                // TODO: raise layout event?\n                var type;\n                if (isUndefined(options)) {\n                    options = this.options.layout;\n                }\n                if (isUndefined(options) || isUndefined(options.type)) {\n                    type = \"Tree\";\n                }\n                else {\n                    type = options.type;\n                }\n                var l;\n                switch (type.toLowerCase()) {\n                    case \"tree\":\n                        l = new diagram.TreeLayout(this);\n                        break;\n\n                    case \"layered\":\n                        l = new diagram.LayeredLayout(this);\n                        break;\n\n                    case \"forcedirected\":\n                    case \"force\":\n                    case \"spring\":\n                    case \"springembedder\":\n                        l = new diagram.SpringLayout(this);\n                        break;\n                    default:\n                        throw \"Layout algorithm '\" + type + \"' is not supported.\";\n                }\n                var initialState = new diagram.LayoutState(this);\n                var finalState = l.layout(options);\n                if (finalState) {\n                    var unit = new diagram.LayoutUndoUnit(initialState, finalState, options ? options.animate : null);\n                    this.undoRedoService.add(unit);\n                }\n                this._layouting = false;\n                this._redrawConnections();\n            },\n            /**\n             * Gets a shape on the basis of its identifier.\n             * @param id (string) the identifier of a shape.\n             * @returns {Shape}\n             */\n            getShapeById: function(id) {\n                var found;\n                found = Utils.first(this.shapes, function(s) {\n                    return s.visual.id === id;\n                });\n                if (found) {\n                    return found;\n                }\n                found = Utils.first(this.connections, function(c) {\n                    return c.visual.id === id;\n                });\n                return found;\n            },\n\n            getShapeByModelId: function(id) {\n                var shape;\n                if (this._isEditable) {\n                    shape = this._dataMap[id];\n                } else {\n                    shape = Utils.first(this.shapes, function(shape) {\n                        return (shape.dataItem || {}).id === id;\n                    });\n                }\n                return shape;\n            },\n\n            getShapeByModelUid: function(uid) {\n                var shape;\n                if (this._isEditable) {\n                    shape = Utils.first(this.shapes, function(shape) {\n                        return (shape.dataItem || {}).uid === uid;\n                    });\n                } else {\n                    shape = this._dataMap[uid];\n                }\n                return shape;\n            },\n\n            getConnectionByModelId: function(id) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = Utils.first(this.connections, function(connection) {\n                        return (connection.dataItem || {}).id === id;\n                    });\n                }\n                return connection;\n            },\n\n            getConnectionByModelUid: function(uid) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = this._connectionsDataMap[uid];\n                }\n                return connection;\n            },\n\n            _extendLayoutOptions: function(options) {\n                if (options.layout) {\n                    options.layout = deepExtend({}, diagram.LayoutBase.fn.defaultOptions || {}, options.layout);\n                }\n            },\n\n            _selectionChanged: function(selected, deselected) {\n                if (selected.length || deselected.length) {\n                    this.trigger(SELECT, { selected: selected, deselected: deselected });\n                }\n            },\n            _getValidZoom: function(zoom) {\n                return math.min(math.max(zoom, this.options.zoomMin), this.options.zoomMax);\n            },\n            _panTransform: function(pos) {\n                var diagram = this,\n                    pan = pos || diagram._pan;\n\n                if (diagram.canvas.translate) {\n                    diagram.scroller.scrollTo(pan.x, pan.y);\n                    diagram._zoomMainLayer();\n                } else {\n                    diagram._storePan(pan);\n                    diagram._transformMainLayer();\n                }\n            },\n\n            _finishPan: function() {\n                this.trigger(PAN, { total: this._pan, delta: Number.NaN });\n            },\n            _storePan: function(pan) {\n                this._pan = pan;\n                this._storeViewMatrix();\n            },\n            _zoomMainLayer: function() {\n                var zoom = this._zoom;\n\n                var transform = new CompositeTransform(0, 0, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _transformMainLayer: function() {\n                var pan = this._pan,\n                    zoom = this._zoom;\n\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _storeLayerMatrix: function(canvasTransform) {\n                this._layerMatrix = canvasTransform.toMatrix();\n                this._layerMatrixInvert = canvasTransform.invert().toMatrix();\n            },\n            _storeViewMatrix: function() {\n                var pan = this._pan,\n                    zoom = this._zoom;\n\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                this._matrix = transform.toMatrix();\n                this._matrixInvert = transform.invert().toMatrix();\n            },\n            _toIndex: function(items, indices) {\n                var result = this._getDiagramItems(items);\n                this.mainLayer.toIndex(result.visuals, indices);\n                this._fixOrdering(result, false);\n            },\n            _fixOrdering: function(result, toFront) {\n                var shapePos = toFront ? this.shapes.length - 1 : 0,\n                    conPos = toFront ? this.connections.length - 1 : 0,\n                    i, item;\n                for (i = 0; i < result.shapes.length; i++) {\n                    item = result.shapes[i];\n                    Utils.remove(this.shapes, item);\n                    Utils.insert(this.shapes, item, shapePos);\n                }\n                for (i = 0; i < result.cons.length; i++) {\n                    item = result.cons[i];\n                    Utils.remove(this.connections, item);\n                    Utils.insert(this.connections, item, conPos);\n                }\n            },\n            _getDiagramItems: function(items) {\n                var i, result = {}, args = items;\n                result.visuals = [];\n                result.shapes = [];\n                result.cons = [];\n\n                if (!items) {\n                    args = this._selectedItems.slice();\n                } else if (!isArray(items)) {\n                    args = [items];\n                }\n\n                for (i = 0; i < args.length; i++) {\n                    var item = args[i];\n                    if (item instanceof Shape) {\n                        result.shapes.push(item);\n                        result.visuals.push(item.visual);\n                    } else if (item instanceof Connection) {\n                        result.cons.push(item);\n                        result.visuals.push(item.visual);\n                    }\n                }\n\n                return result;\n            },\n\n            _removeItem: function(item, undoable, removedConnections) {\n                item.select(false);\n                if (item instanceof Shape) {\n                    this._removeShapeDataItem(item);\n                    this._removeShape(item, undoable, removedConnections);\n                } else if (item instanceof Connection) {\n                    this._removeConnectionDataItem(item);\n                    this._removeConnection(item, undoable);\n                }\n\n                this.mainLayer.remove(item.visual);\n            },\n\n            _removeShape: function(shape, undoable, removedConnections) {\n                var i, connection, connector,\n                    sources = [], targets = [];\n                this.toolService._removeHover();\n\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteShapeUnit(shape));\n                }\n                Utils.remove(this.shapes, shape);\n                this._shapesQuadTree.remove(shape);\n\n                for (i = 0; i < shape.connectors.length; i++) {\n                    connector = shape.connectors[i];\n                    for (var j = 0; j < connector.connections.length; j++) {\n                        connection = connector.connections[j];\n                        if (!removedConnections || !dataviz.inArray(connection, removedConnections)) {\n                            if (connection.sourceConnector == connector) {\n                                sources.push(connection);\n                            } else if (connection.targetConnector == connector) {\n                                targets.push(connection);\n                            }\n                        }\n                    }\n                }\n\n                for (i = 0; i < sources.length; i++) {\n                    sources[i].source(null, undoable);\n                    sources[i].updateModel();\n                }\n                for (i = 0; i < targets.length; i++) {\n                    targets[i].target(null, undoable);\n                    targets[i].updateModel();\n                }\n            },\n\n            _removeConnection: function(connection, undoable) {\n                if (connection.sourceConnector) {\n                    Utils.remove(connection.sourceConnector.connections, connection);\n                }\n                if (connection.targetConnector) {\n                    Utils.remove(connection.targetConnector.connections, connection);\n                }\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteConnectionUnit(connection));\n                }\n\n                Utils.remove(this.connections, connection);\n            },\n\n            _removeDataItems: function(items, recursive) {\n                var item, children, shape, idx;\n                items = isArray(items) ? items : [items];\n\n                while (items.length) {\n                    item = items.shift();\n                    shape = this._dataMap[item.uid];\n                    if (shape) {\n                        this._removeShapeConnections(shape);\n                        this._removeItem(shape, false);\n                        delete this._dataMap[item.uid];\n                        if (recursive && item.hasChildren && item.loaded()) {\n                            children = item.children.data();\n                            for (idx = 0; idx < children.length; idx++) {\n                                items.push(children[idx]);\n                            }\n                        }\n                    }\n                }\n            },\n\n            _removeShapeConnections: function(shape) {\n                var connections = shape.connections();\n                var idx;\n\n                if (connections) {\n                    for (idx = 0; idx < connections.length; idx++) {\n                        this._removeItem(connections[idx], false);\n                    }\n                }\n            },\n\n            _addDataItem: function(dataItem, undoable) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n\n                var shape = this._dataMap[dataItem.id];\n                if (shape) {\n                    return shape;\n                }\n\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape, undoable !== false);\n                this._dataMap[dataItem.id] = shape;\n                return shape;\n            },\n\n            _addDataItemByUid: function(dataItem) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n\n                var shape = this._dataMap[dataItem.uid];\n                if (shape) {\n                    return shape;\n                }\n\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape);\n                this._dataMap[dataItem.uid] = shape;\n                return shape;\n            },\n\n            _addDataItems: function(items, parent) {\n                var item, idx, shape, parentShape, connection;\n                for (idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    shape = this._addDataItemByUid(item);\n                    parentShape = this._addDataItemByUid(parent);\n                    if (parentShape && !this.connected(parentShape, shape)) { // check if connected to not duplicate connections.\n                        connection = this.connect(parentShape, shape);\n                    }\n                }\n            },\n\n            _refreshSource: function(e) {\n                var that = this,\n                    node = e.node,\n                    action = e.action,\n                    items = e.items,\n                    options = that.options,\n                    idx,\n                    dataBound;\n\n                if (e.field) {\n                    for (idx = 0; idx < items.length; idx++) {\n                        if (this._dataMap[items[idx].uid]) {\n                            this._dataMap[items[idx].uid].redrawVisual();\n                        }\n                    }\n                    return;\n                }\n\n                if (action == \"remove\") {\n                    this._removeDataItems(e.items, true);\n                } else {\n\n                    if ((!action || action === \"itemloaded\") && !this._bindingRoots) {\n                        this._bindingRoots = true;\n                        dataBound = true;\n                    }\n\n                    if (!action && !node) {\n                        that.clear();\n                    }\n\n                    this._addDataItems(items, node);\n\n                    for (idx = 0; idx < items.length; idx++) {\n                        items[idx].load();\n                    }\n                }\n\n                if (options.layout && (dataBound || action == \"remove\" || action == \"add\")) {\n                    that.layout(options.layout);\n                }\n\n                if (dataBound) {\n                    this.trigger(\"dataBound\");\n                    this._bindingRoots = false;\n                }\n            },\n\n            _addItem: function(item) {\n                if (item instanceof Shape) {\n                    this.addShape(item);\n                } else if (item instanceof Connection) {\n                    this.addConnection(item);\n                }\n            },\n\n            _createToolBar: function(preventClosing) {\n                var diagram = this.toolService.diagram;\n\n                if (!this.singleToolBar && diagram.select().length === 1) {\n                    var element = diagram.select()[0];\n                    if (element && element.options.editable !== false) {\n                        var editable = element.options.editable;\n                        var tools = editable.tools;\n                        if (this._isEditable && tools.length === 0) {\n                            if (element instanceof Shape) {\n                                tools = [\"edit\", \"rotateClockwise\", \"rotateAnticlockwise\"];\n                            } else if (element instanceof Connection) {\n                                tools = [\"edit\"];\n                            }\n\n                            if (editable && editable.remove !== false) {\n                                tools.push(\"delete\");\n                            }\n                        }\n\n                        if (tools && tools.length) {\n                            var padding = 20;\n                            var point;\n                            this.singleToolBar = new DiagramToolBar(diagram, {\n                                tools: tools,\n                                click: this._toolBarClick.bind(this),\n                                modal: true,\n                                popupZIndex: parseInt(diagram.element.closest(\".k-window\").css(\"zIndex\"), 10) + 10\n                            });\n                            var popupWidth = outerWidth(this.singleToolBar._popup.element);\n                            var popupHeight = outerHeight(this.singleToolBar._popup.element);\n                            if (element instanceof Shape) {\n                                var shapeBounds = this.modelToView(element.bounds(ROTATED));\n                                point = new Point(shapeBounds.x, shapeBounds.y).minus(new Point(\n                                    (popupWidth - shapeBounds.width) / 2,\n                                    popupHeight + padding));\n                            } else if (element instanceof Connection) {\n                                var connectionBounds = this.modelToView(element.bounds());\n\n                                point = new Point(connectionBounds.x, connectionBounds.y)\n                                    .minus(new Point(\n                                        (popupWidth - connectionBounds.width - 20) / 2,\n                                        popupHeight + padding\n                                    ));\n                            }\n\n                            if (point) {\n                                if (!this.canvas.translate) {\n                                    point = point.minus(new Point(this.scroller.scrollLeft, this.scroller.scrollTop));\n                                }\n                                point = this.viewToDocument(point);\n                                point = new Point(math.max(point.x, 0), math.max(point.y, 0));\n                                this.singleToolBar.showAt(point);\n                                if (preventClosing) {\n                                    this.singleToolBar._popup.one(\"close\", preventDefault);\n                                }\n                            } else {\n                                this._destroyToolBar();\n                            }\n                        }\n                    }\n                }\n            },\n\n            _toolBarClick: function(e) {\n                this.trigger(\"toolBarClick\", e);\n                this._destroyToolBar();\n            },\n\n            _normalizePointZoom: function(point) {\n                return point.times(1 / this.zoom());\n            },\n\n            _initialize: function() {\n                this.shapes = [];\n                this._selectedItems = [];\n                this.connections = [];\n                this._dataMap = {};\n                this._connectionsDataMap = {};\n                this._inactiveShapeItems = new InactiveItemsCollection();\n                this._deferredConnectionUpdates = [];\n                this.undoRedoService = new UndoRedoService({\n                    undone: this._syncHandler,\n                    redone: this._syncHandler\n                });\n                this.id = diagram.randomId();\n            },\n\n            _fetchFreshData: function() {\n                var that = this;\n                that._dataSource();\n\n                if (that._isEditable) {\n                    that._connectionDataSource();\n                }\n\n                if (that.options.autoBind) {\n                    if (that._isEditable) {\n                        this._loadingShapes = true;\n                        this._loadingConnections = true;\n                        that.dataSource.fetch();\n                        that.connectionsDataSource.fetch();\n                    } else {\n                        that.dataSource.fetch();\n                    }\n                }\n            },\n\n            _dataSource: function() {\n                if (defined(this.options.connectionsDataSource)) {\n                    this._isEditable = true;\n                    var dsOptions = this.options.dataSource || {};\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n\n                    if (this.dataSource && this._shapesRefreshHandler) {\n                        this.dataSource\n                            .unbind(\"change\", this._shapesRefreshHandler)\n                            .unbind(\"requestStart\", this._shapesRequestStartHandler)\n                            .unbind(\"error\", this._shapesErrorHandler);\n                    } else {\n                        this._shapesRefreshHandler = this._refreshShapes.bind(this);\n                        this._shapesRequestStartHandler = this._shapesRequestStart.bind(this);\n                        this._shapesErrorHandler = this._error.bind(this);\n                    }\n\n                    this.dataSource = kendo.data.DataSource.create(ds)\n                        .bind(\"change\", this._shapesRefreshHandler)\n                        .bind(\"requestStart\", this._shapesRequestStartHandler)\n                        .bind(\"error\", this._shapesErrorHandler);\n                } else {\n                    this._treeDataSource();\n                    this._isEditable = false;\n                }\n            },\n\n            _connectionDataSource: function() {\n                var dsOptions = this.options.connectionsDataSource;\n                if (dsOptions) {\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n\n                    if (this.connectionsDataSource && this._connectionsRefreshHandler) {\n                        this.connectionsDataSource\n                            .unbind(\"change\", this._connectionsRefreshHandler)\n                            .unbind(\"requestStart\", this._connectionsRequestStartHandler)\n                            .unbind(\"error\", this._connectionsErrorHandler);\n                    } else {\n                        this._connectionsRefreshHandler = this._refreshConnections.bind(this);\n                        this._connectionsRequestStartHandler = this._connectionsRequestStart.bind(this);\n                        this._connectionsErrorHandler = this._connectionsError.bind(this);\n                    }\n\n                    this.connectionsDataSource = kendo.data.DataSource.create(ds)\n                        .bind(\"change\", this._connectionsRefreshHandler)\n                        .bind(\"requestStart\", this._connectionsRequestStartHandler)\n                        .bind(\"error\", this._connectionsErrorHandler);\n                }\n            },\n\n            _shapesRequestStart: function(e) {\n                if (e.type == \"read\") {\n                    this._loadingShapes = true;\n                }\n            },\n\n            _connectionsRequestStart: function(e) {\n                if (e.type == \"read\") {\n                    this._loadingConnections = true;\n                }\n            },\n\n            _error: function() {\n                this._loadingShapes = false;\n            },\n\n            _connectionsError: function() {\n                this._loadingConnections = false;\n            },\n\n            _refreshShapes: function(e) {\n                if (e.action === \"remove\") {\n                    if (this._shouldRefresh()) {\n                        this._removeShapes(e.items);\n                    }\n                } else if (e.action === \"itemchange\") {\n                    if (this._shouldRefresh()) {\n                        this._updateShapes(e.items, e.field);\n                    }\n                } else if (e.action === \"add\") {\n                    this._inactiveShapeItems.add(e.items);\n                } else if (e.action === \"sync\") {\n                    this._syncShapes(e.items);\n                } else {\n                    this.refresh();\n                }\n            },\n\n            _shouldRefresh: function() {\n                return !this._suspended;\n            },\n\n            _suspendModelRefresh: function() {\n                this._suspended = (this._suspended || 0) + 1;\n            },\n\n            _resumeModelRefresh: function() {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n            },\n\n            refresh: function() {\n                this._loadingShapes = false;\n                if (!this._loadingConnections) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n\n            _rebindShapesAndConnections: function() {\n                this.clear();\n                this._addShapes(this.dataSource.view());\n                if (this.connectionsDataSource) {\n                    this._addConnections(this.connectionsDataSource.view(), false);\n                }\n\n                if (this.options.layout) {\n                    this.layout(this.options.layout);\n                } else {\n                    this._redrawConnections();\n                }\n                this.trigger(\"dataBound\");\n            },\n\n            refreshConnections: function() {\n                this._loadingConnections = false;\n                if (!this._loadingShapes) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n\n            _redrawConnections: function() {\n                var connections = this.connections;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connections[idx].refresh();\n                }\n            },\n\n            _removeShapes: function(items) {\n                var dataMap = this._dataMap;\n                var item, i;\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (dataMap[item.id]) {\n                        this.remove(dataMap[item.id], false);\n                        dataMap[item.id] = null;\n                    }\n                }\n            },\n\n            _syncShapes: function() {\n                var diagram = this;\n                var inactiveItems = diagram._inactiveShapeItems;\n                inactiveItems.forEach(function(inactiveItem) {\n                    var dataItem = inactiveItem.dataItem;\n                    var shape = inactiveItem.element;\n                    if (!dataItem.isNew()) {\n                        if (shape) {\n                            shape._setOptionsFromModel();\n                            diagram.addShape(shape, inactiveItem.undoable);\n                            diagram._dataMap[dataItem.id] = shape;\n                        } else {\n                            diagram._addDataItem(dataItem);\n                        }\n                        inactiveItem.activate();\n                        inactiveItems.remove(dataItem);\n                    }\n                });\n            },\n\n            _updateShapes: function(items, field) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n\n                    var shape = this._dataMap[dataItem.id];\n                    if (shape) {\n                        shape.updateOptionsFromModel(dataItem, field);\n                    }\n                }\n            },\n\n            _addShapes: function(dataItems) {\n                for (var i = 0; i < dataItems.length; i++) {\n                    this._addDataItem(dataItems[i], false);\n                }\n            },\n\n            _refreshConnections: function(e) {\n                if (e.action === \"remove\") {\n                    if (this._shouldRefresh()) {\n                        this._removeConnections(e.items);\n                    }\n                } else if (e.action === \"add\") {\n                    this._addConnections(e.items);\n                } else if (e.action === \"sync\") {\n                    //TO DO: include logic to update the connections with different values returned from the server.\n                } else if (e.action === \"itemchange\") {\n                    if (this._shouldRefresh()) {\n                        this._updateConnections(e.items);\n                    }\n                } else {\n                    this.refreshConnections();\n                }\n            },\n\n            _removeConnections: function(items) {\n                for (var i = 0; i < items.length; i++) {\n                    this.remove(this._connectionsDataMap[items[i].uid], false);\n                    this._connectionsDataMap[items[i].uid] = null;\n                }\n            },\n\n            _updateConnections: function(items) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n\n                    var connection = this._connectionsDataMap[dataItem.uid];\n                    connection.updateOptionsFromModel(dataItem);\n                }\n            },\n\n            _addConnections: function(connections, undoable) {\n                var length = connections.length;\n\n                for (var i = 0; i < length; i++) {\n                    var dataItem = connections[i];\n                    this._addConnectionDataItem(dataItem, undoable);\n                }\n            },\n\n            _addConnectionDataItem: function(dataItem, undoable) {\n                if (!this._connectionsDataMap[dataItem.uid]) {\n                    var from = this._validateConnector(dataItem.from);\n                    if (!defined(from) || from === null) {\n                        from = new Point(dataItem.fromX, dataItem.fromY);\n                    }\n\n                    var to = this._validateConnector(dataItem.to);\n                    if (!defined(to) || to === null) {\n                        to = new Point(dataItem.toX, dataItem.toY);\n                    }\n\n                    if (defined(from) && defined(to)) {\n                        var options = deepExtend({}, this.options.connectionDefaults);\n                        options.dataItem = dataItem;\n                        var connection = new Connection(from, to, options);\n\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        this.addConnection(connection, undoable);\n                    }\n                }\n            },\n\n            _validateConnector: function(value) {\n                var connector;\n\n                if (defined(value) && value !== null) {\n                    connector = this._dataMap[value];\n                }\n\n                return connector;\n            },\n\n            _treeDataSource: function() {\n                var that = this,\n                    options = that.options,\n                    dataSource = options.dataSource;\n\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (dataSource instanceof kendo.data.DataSource && !(dataSource instanceof kendo.data.HierarchicalDataSource)) {\n                    throw new Error(\"Incorrect DataSource type. If a single dataSource instance is set to the diagram then it should be a HierarchicalDataSource. You should set only the options instead of an instance or a HierarchicalDataSource instance or supply connectionsDataSource as well.\");\n                }\n\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: \"text\" },\n                        { field: \"url\" },\n                        { field: \"spriteCssClass\" },\n                        { field: \"imageUrl\" }\n                    ];\n                }\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                }\n\n                that._refreshHandler = that._refreshSource.bind(that);\n                that._errorHandler = that._error.bind(that);\n\n                that.dataSource = HierarchicalDataSource.create(dataSource)\n                    .bind(CHANGE, that._refreshHandler)\n                    .bind(ERROR, that._errorHandler);\n            },\n\n            _unbindDataSource: function() {\n                var that = this;\n\n                that.dataSource.unbind(CHANGE, that._refreshHandler).unbind(ERROR, that._errorHandler);\n            },\n\n            _adorn: function(adorner, isActive) {\n                if (isActive !== undefined$1 && adorner) {\n                    if (isActive) {\n                        this._adorners.push(adorner);\n                        this.adornerLayer.append(adorner.visual);\n                    }\n                    else {\n                        Utils.remove(this._adorners, adorner);\n                        this.adornerLayer.remove(adorner.visual);\n                    }\n                }\n            },\n\n            _showConnectors: function(shape, value) {\n                if (value) {\n                    this._connectorsAdorner.show(shape);\n                } else {\n                    this._connectorsAdorner.destroy();\n                }\n            },\n\n            _updateAdorners: function() {\n                var adorners = this._adorners;\n\n                for (var i = 0; i < adorners.length; i++) {\n                    var adorner = adorners[i];\n\n                    if (adorner.refreshBounds) {\n                        adorner.refreshBounds();\n                    }\n                    adorner.refresh();\n                }\n            },\n\n            _refresh: function() {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].refresh();\n                }\n            },\n\n            _destroyToolBar: function() {\n                if (this.singleToolBar) {\n                    this.singleToolBar.hide();\n                    this.singleToolBar.destroy();\n                    this.singleToolBar = null;\n                }\n            },\n\n            _destroyGlobalToolBar: function() {\n                if (this.toolBar) {\n                    this.toolBar.hide();\n                    this.toolBar.destroy();\n                    this.toolBar = null;\n                }\n            },\n\n            exportDOMVisual: function() {\n                var viewBox = this.canvas._viewBox;\n                var scrollOffset = geom.transform()\n                                       .translate(-viewBox.x, -viewBox.y);\n\n                var viewRect = new geom.Rect([0, 0], [viewBox.width, viewBox.height]);\n                var clipPath = draw.Path.fromRect(viewRect);\n                var wrap = new draw.Group({ transform: scrollOffset });\n                var clipWrap = new draw.Group({ clip: clipPath });\n                var root = this.canvas.drawingElement.children[0];\n\n                clipWrap.append(wrap);\n\n                // Don't reparent the root\n                wrap.children.push(root);\n\n                return clipWrap;\n            },\n\n            exportVisual: function() {\n                var scale = geom.transform().scale(1 / this._zoom);\n                var wrap = new draw.Group({\n                    transform: scale\n                });\n\n                var root = this.mainLayer.drawingElement;\n                wrap.children.push(root);\n\n                return wrap;\n            },\n\n            _syncChanges: function() {\n                this._syncShapeChanges();\n                this._syncConnectionChanges();\n            },\n\n            _syncShapeChanges: function() {\n                if (this.dataSource && this._isEditable) {\n                    this.dataSource.sync();\n                }\n            },\n\n            _syncConnectionChanges: function() {\n                var that = this;\n                if (that.connectionsDataSource && that._isEditable) {\n                    $.when.apply($, that._deferredConnectionUpdates).then(function() {\n                        that.connectionsDataSource.sync();\n                    });\n                    that.deferredConnectionUpdates = [];\n                }\n            }\n        });\n\n        dataviz.ExportMixin.extend(Diagram.fn, true);\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Diagram.fn);\n        }\n\n        function filterShapeDataItem(dataItem) {\n            var result = {};\n\n            dataItem = dataItem || {};\n\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.text = dataItem.text;\n            }\n\n            if (defined(dataItem.x) && dataItem.x !== null) {\n                result.x = dataItem.x;\n            }\n\n            if (defined(dataItem.y) && dataItem.y !== null) {\n                result.y = dataItem.y;\n            }\n\n            if (defined(dataItem.width) && dataItem.width !== null) {\n                result.width = dataItem.width;\n            }\n\n            if (defined(dataItem.height) && dataItem.height !== null) {\n                result.height = dataItem.height;\n            }\n\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n\n            return result;\n        }\n\n        function filterConnectionDataItem(dataItem) {\n            var result = {};\n\n            dataItem = dataItem || {};\n\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.content = dataItem.text;\n            }\n\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n\n            if (defined(dataItem.from) && dataItem.from !== null) {\n                result.from = dataItem.from;\n            }\n\n            if (defined(dataItem.fromConnector) && dataItem.fromConnector !== null) {\n                result.fromConnector = dataItem.fromConnector;\n            }\n\n            if (defined(dataItem.fromX) && dataItem.fromX !== null) {\n                result.fromX = dataItem.fromX;\n            }\n\n            if (defined(dataItem.fromY) && dataItem.fromY !== null) {\n                result.fromY = dataItem.fromY;\n            }\n\n            if (defined(dataItem.to) && dataItem.to !== null) {\n                result.to = dataItem.to;\n            }\n\n            if (defined(dataItem.toConnector) && dataItem.toConnector !== null) {\n                result.toConnector = dataItem.toConnector;\n            }\n\n            if (defined(dataItem.toX) && dataItem.toX !== null) {\n                result.toX = dataItem.toX;\n            }\n\n            if (defined(dataItem.toY) && dataItem.toY !== null) {\n                result.toY = dataItem.toY;\n            }\n\n            return result;\n        }\n\n\n        var DiagramToolBar = kendo.Observable.extend({\n            init: function(diagram, options) {\n                kendo.Observable.fn.init.call(this);\n                this.diagram = diagram;\n                this.options = deepExtend({}, this.options, options);\n                this._tools = [];\n                this.createToolBar();\n                this.createTools();\n                this.appendTools();\n\n                if (this.options.modal) {\n                    this.createPopup();\n                }\n\n                this.bind(this.events, options);\n            },\n\n            events: [\"click\"],\n\n            createPopup: function() {\n                this.container = $(\"<div/>\").append(this.element);\n                this._popup = this.container.kendoPopup({}).getKendoPopup();\n            },\n\n            appendTools: function() {\n                for (var i = 0; i < this._tools.length; i++) {\n                    var tool = this._tools[i];\n                    if (tool.buttons && tool.buttons.length || !defined(tool.buttons)) {\n                        this._toolBar.add(tool);\n                    }\n                }\n            },\n\n            createToolBar: function() {\n                this.element = $(\"<div/>\");\n                this._toolBar = this.element\n                    .kendoToolBar({\n                        click: this.click.bind(this),\n                        resizable: false\n                    }).getKendoToolBar();\n\n                this.element.css(\"border\", \"none\");\n            },\n\n            createTools: function() {\n                for (var i = 0; i < this.options.tools.length; i++) {\n                    this.createTool(this.options.tools[i]);\n                }\n            },\n\n            createTool: function(tool) {\n                if (!isPlainObject(tool)) {\n                    tool = {\n                        name: tool\n                    };\n                }\n                var toolName = tool.name + \"Tool\";\n                if (this[toolName]) {\n                    this[toolName](tool);\n                } else {\n                    this._tools.push(deepExtend({}, tool, {\n                        attributes: this._setAttributes({ action: tool.name })\n                    }));\n                }\n            },\n\n            showAt: function(point) {\n                var popupZIndex = parseInt(this.options.popupZIndex, 10);\n\n                if (this._popup) {\n                    this._popup.open(point.x, point.y);\n\n                    if (popupZIndex) {\n                        this._popup.wrapper.css(\"zIndex\", popupZIndex);\n                    }\n                }\n            },\n\n            hide: function() {\n                if (this._popup) {\n                    this._popup.close();\n                }\n            },\n\n            newGroup: function() {\n                return {\n                    type: \"buttonGroup\",\n                    buttons: []\n                };\n            },\n\n            editTool: function() {\n                this._tools.push({\n                    icon: \"pencil\",\n                    showText: \"overflow\",\n                    type: \"button\",\n                    text: \"Edit\",\n                    attributes: this._setAttributes({ action: \"edit\" })\n                });\n            },\n\n            deleteTool: function() {\n                this._tools.push({\n                    icon: \"x\",\n                    showText: \"overflow\",\n                    type: \"button\",\n                    text: \"Delete\",\n                    attributes: this._setAttributes({ action: \"delete\" })\n                });\n            },\n\n            rotateAnticlockwiseTool: function(options) {\n                this._appendGroup(\"rotate\");\n                this._rotateGroup.buttons.push({\n                    icon: \"rotate-left\",\n                    showText: \"overflow\",\n                    text: \"RotateAnticlockwise\",\n                    group: \"rotate\",\n                    attributes: this._setAttributes({ action: \"rotateAnticlockwise\", step: options.step })\n                });\n            },\n\n            rotateClockwiseTool: function(options) {\n                this._appendGroup(\"rotate\");\n                this._rotateGroup.buttons.push({\n                    icon: \"rotate-right\",\n                    attributes: this._setAttributes({ action: \"rotateClockwise\", step: options.step }),\n                    showText: \"overflow\",\n                    text: \"RotateClockwise\",\n                    group: \"rotate\"\n                });\n            },\n\n            createShapeTool: function() {\n                this._appendGroup(\"create\");\n                this._createGroup.buttons.push({\n                    icon: \"shapes\",\n                    showText: \"overflow\",\n                    text: \"CreateShape\",\n                    group: \"create\",\n                    attributes: this._setAttributes({ action: \"createShape\" })\n                });\n            },\n\n            createConnectionTool: function() {\n                this._appendGroup(\"create\");\n                this._createGroup.buttons.push({\n                    icon: \"connector\",\n                    showText: \"overflow\",\n                    text: \"CreateConnection\",\n                    group: \"create\",\n                    attributes: this._setAttributes({ action: \"createConnection\" })\n                });\n            },\n\n            undoTool: function() {\n                this._appendGroup(\"history\");\n                this._historyGroup.buttons.push({\n                    icon: \"undo\",\n                    showText: \"overflow\",\n                    text: \"Undo\",\n                    group: \"history\",\n                    attributes: this._setAttributes({ action: \"undo\" })\n                });\n            },\n\n            redoTool: function() {\n                this._appendGroup(\"history\");\n                this._historyGroup.buttons.push({\n                    icon: \"redo\",\n                    showText: \"overflow\",\n                    text: \"Redo\",\n                    group: \"history\",\n                    attributes: this._setAttributes({ action: \"redo\" })\n                });\n            },\n\n            _appendGroup: function(name) {\n                var prop = \"_\" + name + \"Group\";\n                if (!this[prop]) {\n                    this[prop] = this.newGroup();\n                    this._tools.push(this[prop]);\n                }\n            },\n\n            _setAttributes: function(attributes) {\n                var attr = {};\n\n                if (attributes.action) {\n                    attr[kendo.attr(\"action\")] = attributes.action;\n                }\n\n                if (attributes.step) {\n                    attr[kendo.attr(\"step\")] = attributes.step;\n                }\n\n                return attr;\n            },\n\n            _getAttributes: function(element) {\n                var attr = {};\n\n                var action = element.attr(kendo.attr(\"action\"));\n                if (action) {\n                    attr.action = action;\n                }\n\n                var step = element.attr(kendo.attr(\"step\"));\n                if (step) {\n                    attr.step = step;\n                }\n\n                return attr;\n            },\n\n            click: function(e) {\n                var attributes = this._getAttributes($(e.target));\n                var action = attributes.action;\n\n                if (action && this[action]) {\n                    this[action](attributes);\n                }\n\n                this.trigger(\"click\", this.eventData(action, e.target));\n            },\n\n            eventData: function(action, target) {\n                var elements = this.selectedElements(),\n                    length = elements.length,\n                    shapes = [], connections = [], element;\n\n                for (var idx = 0; idx < length; idx++) {\n                    element = elements[idx];\n                    if (element instanceof Shape) {\n                        shapes.push(element);\n                    } else {\n                        connections.push(element);\n                    }\n                }\n\n                return {\n                    shapes: shapes,\n                    connections: connections,\n                    action: action,\n                    target: target\n                };\n            },\n\n            \"delete\": function() {\n                var diagram = this.diagram;\n                var toRemove = diagram._triggerRemove(this.selectedElements());\n                if (toRemove.length) {\n                    this.diagram.remove(toRemove, true);\n                    this.diagram._syncChanges();\n                }\n            },\n\n            edit: function() {\n                var selectedElemens = this.selectedElements();\n                if (selectedElemens.length === 1) {\n                    this.diagram.edit(selectedElemens[0]);\n                }\n            },\n\n            rotateClockwise: function(options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(angle);\n            },\n\n            rotateAnticlockwise: function(options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(-angle);\n            },\n\n            _rotate: function(angle) {\n                var adorner = this.diagram._resizingAdorner;\n                adorner.angle(adorner.angle() + angle);\n                adorner.rotate();\n            },\n\n            selectedElements: function() {\n                return this.diagram.select();\n            },\n\n            createShape: function() {\n                this.diagram.createShape();\n            },\n\n            createConnection: function() {\n                this.diagram.createConnection();\n            },\n\n            undo: function() {\n                this.diagram.undo();\n            },\n\n            redo: function() {\n                this.diagram.redo();\n            },\n\n            destroy: function() {\n                this.diagram = null;\n                this.element = null;\n                this.options = null;\n\n                if (this._toolBar) {\n                    this._toolBar.destroy();\n                }\n\n                if (this._popup) {\n                    this._popup.destroy();\n                }\n            }\n        });\n\n        var Editor = kendo.Observable.extend({\n            init: function(element, options) {\n                kendo.Observable.fn.init.call(this);\n\n                this.options = extend(true, {}, this.options, options);\n                this.element = element;\n                this.model = this.options.model;\n                this.fields = this._getFields();\n                this._initContainer();\n                this.createEditable();\n            },\n\n            options: {\n                editors: {}\n            },\n\n            _initContainer: function() {\n                this.wrapper = this.element;\n            },\n\n            createEditable: function() {\n                var options = this.options;\n\n                this.editable = new kendo.ui.Editable(this.wrapper, {\n                    fields: this.fields,\n                    target: options.target,\n                    clearContainer: false,\n                    model: this.model\n                });\n            },\n\n            _isEditable: function(field) {\n                return this.model.editable && this.model.editable(field);\n            },\n\n            _getFields: function() {\n                var fields = [];\n                var modelFields = this.model.fields;\n\n                for (var field in modelFields) {\n                    var result = {};\n                    if (this._isEditable(field)) {\n                        var editor = this.options.editors[field];\n                        if (editor) {\n                            result.editor = editor;\n                        }\n                        result.field = field;\n                        fields.push(result);\n                    }\n                }\n\n                return fields;\n            },\n\n            end: function() {\n                return this.editable.end();\n            },\n\n            destroy: function() {\n                this.editable.destroy();\n                this.editable.element.find(\"[\" + kendo.attr(\"container-for\") + \"]\").empty();\n                this.model = this.wrapper = this.element = this.columns = this.editable = null;\n            }\n        });\n\n        var PopupEditor = Editor.extend({\n            init: function(element, options) {\n                Editor.fn.init.call(this, element, options);\n                this.bind(this.events, this.options);\n\n                this.open();\n            },\n\n            events: [ \"update\", \"cancel\" ],\n\n            options: {\n                window: {\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: \"Edit\",\n                    visible: false\n                }\n            },\n\n            _initContainer: function() {\n                var that = this;\n                this.wrapper = $('<div class=\"k-popup-edit-form\"/>')\n                    .attr(kendo.attr(\"uid\"), this.model.uid);\n\n                var formContent = \"\";\n\n                if (this.options.template) {\n                    formContent += this._renderTemplate();\n                    this.fields = [];\n                } else {\n                    formContent += this._renderFields();\n                }\n\n                formContent += this._renderButtons();\n\n                this.wrapper.append(\n                    $('<div class=\"k-edit-form-container\"/>').append(formContent));\n\n                this.window = new kendo.ui.Window(this.wrapper.appendTo(this.element), this.options.window);\n                this.window.bind(\"close\", function(e) {\n                    //The bellow line is required due to: draggable window in IE, change event will be triggered while the window is closing\n                    if (e.userTriggered) {\n                        e.sender.element.trigger(\"focus\");\n                        that._cancelClick(e);\n                    }\n                });\n\n                this._attachButtonEvents();\n            },\n\n            _renderTemplate: function() {\n                var template = this.options.template;\n\n                if (typeof template === \"string\") {\n                    template = kendo.unescape(template);\n                }\n\n                template = kendo.template(template)(this.model);\n\n                return template;\n            },\n\n            _renderFields: function() {\n                var form = \"\";\n                for (var i = 0; i < this.fields.length; i++) {\n                    var field = this.fields[i];\n\n                    form += '<div class=\"k-edit-label\"><label for=\"' + field.field + '\">' + (field.field || \"\") + '</label></div>';\n\n                    if (this._isEditable(field.field)) {\n                        form += '<div ' + kendo.attr(\"container-for\") + '=\"' + field.field +\n                        '\" class=\"k-edit-field\"></div>';\n                    }\n                }\n\n                return form;\n            },\n\n            _renderButtons: function() {\n                var form = '<div class=\"k-edit-buttons\">';\n                form += this._createButton(\"update\");\n                form += this._createButton(\"cancel\");\n                form += '</div>';\n                return form;\n            },\n\n            _createButton: function(name) {\n                return kendo.template(BUTTON_TEMPLATE)(defaultButtons[name]);\n            },\n\n            _attachButtonEvents: function() {\n                this._cancelClickHandler = this._cancelClick.bind(this);\n                this.window.element.on(CLICK + NS, \"button.k-diagram-cancel\", this._cancelClickHandler);\n\n                this._updateClickHandler = this._updateClick.bind(this);\n                this.window.element.on(CLICK + NS, \"button.k-diagram-update\", this._updateClickHandler);\n            },\n\n            _updateClick: function(e) {\n                e.preventDefault();\n                this.trigger(\"update\");\n            },\n\n            _cancelClick: function(e) {\n                e.preventDefault();\n                this.trigger(\"cancel\");\n            },\n\n            open: function() {\n                this.window.center().open();\n            },\n\n            close: function() {\n                this.window.bind(\"deactivate\", this.destroy.bind(this)).close();\n            },\n\n            destroy: function() {\n                this.window.close().destroy();\n                this.window.element.off(CLICK + NS, \"a.k-diagram-cancel\", this._cancelClickHandler);\n                this.window.element.off(CLICK + NS, \"a.k-diagram-update\", this._updateClickHandler);\n                this._cancelClickHandler = null;\n                this._editUpdateClickHandler = null;\n                this.window = null;\n                Editor.fn.destroy.call(this);\n            }\n        });\n\n        function connectionSelector(container, options) {\n            var model = this.dataSource.reader.model;\n            if (model) {\n                var textField = model.fn.fields.text ? \"text\" : model.idField;\n                $(\"<input name='\" + options.field + \"' />\")\n                    .appendTo(container).kendoDropDownList({\n                        dataValueField: model.idField,\n                        dataTextField: textField,\n                        dataSource: this.dataSource.data().toJSON(),\n                        optionLabel: \" \",\n                        valuePrimitive: true\n                    });\n            }\n        }\n\n        function InactiveItem(dataItem) {\n            this.dataItem = dataItem;\n            this.callbacks = [];\n        }\n\n        InactiveItem.fn = InactiveItem.prototype = {\n            onActivate: function(callback) {\n                var deffered = $.Deferred();\n                this.callbacks.push({\n                    callback: callback,\n                    deferred: deffered\n                });\n                return deffered;\n            },\n\n            activate: function() {\n                var callbacks = this.callbacks;\n                var item;\n                for (var idx = 0; idx < callbacks.length; idx++) {\n                    item = this.callbacks[idx];\n                    item.callback(this.dataItem);\n                    item.deferred.resolve();\n                }\n                this.callbacks = [];\n            }\n        };\n\n        function InactiveItemsCollection() {\n            this.items = {};\n        }\n\n        InactiveItemsCollection.fn = InactiveItemsCollection.prototype = {\n            add: function(items) {\n                for (var idx = 0; idx < items.length; idx++) {\n                    this.items[items[idx].uid] = new InactiveItem(items[idx]);\n                }\n            },\n\n            forEach: function(callback) {\n                for (var uid in this.items) {\n                    callback(this.items[uid]);\n                }\n            },\n\n            getByUid: function(uid) {\n                return this.items[uid];\n            },\n\n            remove: function(item) {\n                delete this.items[item.uid];\n            }\n        };\n\n        var QuadRoot = Class.extend({\n            init: function() {\n                this.shapes = [];\n            },\n\n            _add: function(shape, bounds) {\n                this.shapes.push({\n                    bounds: bounds,\n                    shape: shape\n                });\n                shape._quadNode = this;\n            },\n\n            insert: function(shape, bounds) {\n                this._add(shape, bounds);\n            },\n\n            remove: function(shape) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n\n                for (var idx = 0; idx < length; idx++) {\n                    if (shapes[idx].shape === shape) {\n                        shapes.splice(idx, 1);\n                        break;\n                    }\n                }\n            },\n\n            hitTestRect: function(rect, exclude) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n\n                for (var i = 0; i < length; i++) {\n                    if (this._testRect(shapes[i].shape, rect) && !dataviz.inArray(shapes[i].shape, exclude)) {\n                        return true;\n                    }\n                }\n            },\n\n            _testRect: function(shape, rect) {\n                var angle = shape.rotate().angle;\n                var bounds = shape.bounds();\n                var hit;\n                if (!angle) {\n                    hit = bounds.overlaps(rect);\n                } else {\n                    hit = Intersect.rects(rect, bounds, -angle);\n                }\n                return hit;\n            }\n        });\n\n        var QuadNode = QuadRoot.extend({\n            init: function(rect) {\n                QuadRoot.fn.init.call(this);\n                this.children = [];\n                this.rect = rect;\n            },\n\n            inBounds: function(rect) {\n                var nodeRect = this.rect;\n                var nodeBottomRight = nodeRect.bottomRight();\n                var bottomRight = rect.bottomRight();\n                var inBounds = nodeRect.x <= rect.x && nodeRect.y <= rect.y && bottomRight.x <= nodeBottomRight.x &&\n                    bottomRight.y <= nodeBottomRight.y;\n                return inBounds;\n            },\n\n            overlapsBounds: function(rect) {\n                return this.rect.overlaps(rect);\n            },\n\n            insert: function(shape, bounds) {\n                var inserted = false;\n                var children = this.children;\n                var length = children.length;\n                if (this.inBounds(bounds)) {\n                    if (!length && this.shapes.length < 4) {\n                        this._add(shape, bounds);\n                    } else {\n                        if (!length) {\n                            this._initChildren();\n                        }\n\n                        for (var idx = 0; idx < children.length; idx++) {\n                            if (children[idx].insert(shape, bounds)) {\n                                inserted = true;\n                                break;\n                            }\n                        }\n\n                        if (!inserted) {\n                            this._add(shape, bounds);\n                        }\n                    }\n                    inserted = true;\n                }\n\n                return inserted;\n            },\n\n            _initChildren: function() {\n                var rect = this.rect,\n                    children = this.children,\n                    shapes = this.shapes,\n                    center = rect.center(),\n                    halfWidth = rect.width / 2,\n                    halfHeight = rect.height / 2,\n                    childIdx, shapeIdx;\n\n                children.push(\n                    new QuadNode(new Rect(rect.x, rect.y, halfWidth, halfHeight)),\n                    new QuadNode(new Rect(center.x, rect.y, halfWidth, halfHeight)),\n                    new QuadNode(new Rect(rect.x, center.y, halfWidth, halfHeight)),\n                    new QuadNode(new Rect(center.x, center.y, halfWidth, halfHeight))\n                );\n                for (shapeIdx = shapes.length - 1; shapeIdx >= 0; shapeIdx--) {\n                    for (childIdx = 0; childIdx < children.length; childIdx++) {\n                        if (children[childIdx].insert(shapes[shapeIdx].shape, shapes[shapeIdx].bounds)) {\n                            shapes.splice(shapeIdx, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n\n            hitTestRect: function(rect, exclude) {\n                var idx;\n                var children = this.children;\n                var length = children.length;\n                var hit = false;\n\n                if (this.overlapsBounds(rect)) {\n                    if (QuadRoot.fn.hitTestRect.call(this, rect, exclude)) {\n                        hit = true;\n                    } else {\n                         for (idx = 0; idx < length; idx++) {\n                            if (children[idx].hitTestRect(rect, exclude)) {\n                               hit = true;\n                               break;\n                            }\n                        }\n                    }\n                }\n\n                return hit;\n            }\n        });\n\n        var ShapesQuadTree = Class.extend({\n            ROOT_SIZE: 1000,\n\n            init: function(diagram) {\n                var boundsChangeHandler = this._boundsChange.bind(this);\n                diagram.bind(ITEMBOUNDSCHANGE, boundsChangeHandler);\n                diagram.bind(ITEMROTATE, boundsChangeHandler);\n                this.initRoots();\n            },\n\n            initRoots: function() {\n                this.rootMap = {};\n                this.root = new QuadRoot();\n            },\n\n            clear: function() {\n                this.initRoots();\n            },\n\n            _boundsChange: function(e) {\n                if (e.item._quadNode) {\n                    e.item._quadNode.remove(e.item);\n                }\n                this.insert(e.item);\n            },\n\n            insert: function(shape) {\n                var bounds = shape.bounds(ROTATED);\n                var rootSize = this.ROOT_SIZE;\n                var sectors = this.getSectors(bounds);\n                var x = sectors[0][0];\n                var y = sectors[1][0];\n\n                if (this.inRoot(sectors)) {\n                    this.root.insert(shape, bounds);\n                } else {\n                    if (!this.rootMap[x]) {\n                        this.rootMap[x] = {};\n                    }\n\n                    if (!this.rootMap[x][y]) {\n                        this.rootMap[x][y] = new QuadNode(\n                            new Rect(x * rootSize, y * rootSize, rootSize, rootSize)\n                        );\n                    }\n\n                    this.rootMap[x][y].insert(shape, bounds);\n                }\n            },\n\n            remove: function(shape) {\n                if (shape._quadNode) {\n                    shape._quadNode.remove(shape);\n                }\n            },\n\n            inRoot: function(sectors) {\n                return sectors[0].length > 1 || sectors[1].length > 1;\n            },\n\n            getSectors: function(rect) {\n                var rootSize = this.ROOT_SIZE;\n                var bottomRight = rect.bottomRight();\n                var bottomX = math.floor(bottomRight.x / rootSize);\n                var bottomY = math.floor(bottomRight.y / rootSize);\n                var sectors = [[],[]];\n                for (var x = math.floor(rect.x / rootSize); x <= bottomX; x++) {\n                    sectors[0].push(x);\n                }\n                for (var y = math.floor(rect.y / rootSize); y <= bottomY; y++) {\n                    sectors[1].push(y);\n                }\n                return sectors;\n            },\n\n            hitTestRect: function(rect, exclude) {\n                var sectors = this.getSectors(rect);\n                var xIdx, yIdx, x, y;\n                var root;\n\n                if (this.root.hitTestRect(rect, exclude)) {\n                    return true;\n                }\n\n                for (xIdx = 0; xIdx < sectors[0].length; xIdx++) {\n                    x = sectors[0][xIdx];\n                    for (yIdx = 0; yIdx < sectors[1].length; yIdx++) {\n                        y = sectors[1][yIdx];\n                        root = (this.rootMap[x] || {})[y];\n                        if (root && root.hitTestRect(rect, exclude)) {\n                            return true;\n                        }\n                    }\n                }\n\n                return false;\n            }\n        });\n\n        function cloneDataItem(dataItem) {\n            var result = dataItem;\n            if (dataItem instanceof kendo.data.Model) {\n                result = dataItem.toJSON();\n                result[dataItem.idField] = dataItem._defaultId;\n            }\n            return result;\n        }\n\n        function splitDiagramElements(elements) {\n            var connections = [];\n            var shapes = [];\n            var element, idx;\n            for (idx = 0; idx < elements.length; idx++) {\n                element = elements[idx];\n                if (element instanceof Shape) {\n                    shapes.push(element);\n                } else {\n                    connections.push(element);\n                }\n            }\n            return {\n                shapes: shapes,\n                connections: connections\n            };\n        }\n\n        function createModel(dataSource, model) {\n            if (dataSource.reader.model) {\n                return new dataSource.reader.model(model);\n            }\n\n            return new kendo.data.ObservableObject(model);\n        }\n\n        function clearField(field, model) {\n            if (defined(model[field])) {\n                model.set(field, null);\n            }\n        }\n\n        function copyDefaultOptions(mainOptions, elementOptions, fields) {\n            var field;\n            for (var idx = 0; idx < fields.length; idx++) {\n                field = fields[idx];\n                if (elementOptions && !defined(elementOptions[field])) {\n                    elementOptions[field] = mainOptions[field];\n                }\n            }\n        }\n\n        function translateToOrigin(visual) {\n            var bbox = visual.drawingContainer().clippedBBox(null);\n            if (bbox.origin.x !== 0 || bbox.origin.y !== 0) {\n                visual.position(-bbox.origin.x, -bbox.origin.y);\n            }\n        }\n\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n\n        dataviz.ui.plugin(Diagram);\n\n        deepExtend(diagram, {\n            Shape: Shape,\n            Connection: Connection,\n            Connector: Connector,\n            DiagramToolBar: DiagramToolBar,\n            QuadNode: QuadNode,\n            QuadRoot: QuadRoot,\n            ShapesQuadTree: ShapesQuadTree,\n            PopupEditor: PopupEditor\n        });\n})(window.kendo.jQuery);\n\nconst __meta__ = {\n        id: \"dataviz.diagram\",\n        name: \"Diagram\",\n        category: \"dataviz\",\n        description: \"The Kendo DataViz Diagram \",\n        depends: [ \"data\", \"userevents\", \"mobile.scroller\", \"draganddrop\", \"drawing\", \"dataviz.core\", \"dataviz.themes\", \"toolbar\" ],\n        features: [{\n            id: \"dataviz.diagram-pdf-export\",\n            name: \"PDF export\",\n            description: \"Export Diagram as PDF\",\n            depends: [ \"pdf\" ]\n        },{\n            id: \"dataviz.diagram-editing\",\n            name: \"Editing\",\n            description: \"Support for model editing\",\n            depends: [ \"editable\", \"window\", \"dropdownlist\" ]\n        }]\n    };\n    var kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}