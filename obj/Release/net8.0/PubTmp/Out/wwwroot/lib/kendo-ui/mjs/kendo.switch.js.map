{"version":3,"file":"kendo.switch.js","names":["__meta__","id","name","category","description","depends","$","undefined$1","kendo","window","ui","NS","Widget","support","CHANGE","switchStyles","widget","track","thumbWrapper","thumb","checked","checkedLabel","unchecked","uncheckedLabel","disabled","readonly","active","DISABLED","ARIA_DISABLED","READONLY","ARIA_READONLY","ARIA_HIDDEN","CHECKED","CLICK","click","TOUCHEND","pointers","KEYDOWN","DOT","encode","htmlEncode","SWITCH_TEMPLATE","template","styles","SWITCH_TRACK_TEMPLATE","SWITCH_THUMB_TEMPLATE","Switch","extend","init","element","options","that","this","fn","call","_wrapper","_initSettings","_aria","_attachEvents","notify","wrapper","type","wrap","parent","style","cssText","hide","append","messages","addClass","className","removeClass","rounded","trackRounded","_applyCssClasses","_applyRoundedClasses","action","cssProperties","getValidClass","propName","value","thumbRounded","find","on","_click","bind","_touchEnd","_keydown","setOptions","_clearCssClasses","text","width","css","enabled","enable","check","_tabindex","attr","labelFor","ariaLabel","ariaLabelledBy","length","labelId","guid","events","size","toggleClass","removeAttr","prop","apply","destroy","off","toggle","_check","trigger","e","keyCode","keys","SPACEBAR","preventDefault","_isTouch","event","test","originalEvent","pointerType","which","target","registerPrefix","registerValues","values","roundedValues","concat","plugin","jQuery","kendo$1"],"sources":["kendo.switch.js"],"mappings":"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","ignoreList":[],"sourcesContent":["import './kendo.core.js';\n\nconst __meta__ = {\n    id: \"switch\",\n    name: \"Switch\",\n    category: \"web\",\n    description: \"The Switch widget is used to display two exclusive choices.\",\n    depends: [ \"core\" ]\n};\n\n(function($, undefined$1) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        NS = \".kendoSwitch\",\n        Widget = ui.Widget,\n        support = kendo.support,\n        CHANGE = \"change\",\n        switchStyles = {\n            widget: \"k-switch\",\n            track: \"k-switch-track\",\n            thumbWrapper: \"k-switch-thumb-wrap\",\n            thumb: \"k-switch-thumb\",\n            checked: \"k-switch-on\",\n            checkedLabel: \"k-switch-label-on\",\n            unchecked: \"k-switch-off\",\n            uncheckedLabel: \"k-switch-label-off\",\n            disabled: \"k-disabled\",\n            readonly: \"k-readonly\",\n            active: \"k-active\"\n        },\n        DISABLED = \"disabled\",\n        ARIA_DISABLED = \"aria-disabled\",\n        READONLY = \"readonly\",\n        ARIA_READONLY = \"aria-readonly\",\n        ARIA_CHECKED = \"aria-checked\",\n        ARIA_HIDDEN = \"aria-hidden\",\n        CHECKED = \"checked\",\n        CLICK = support.click + NS,\n        TOUCHEND = support.pointers ? \"pointerup\" : \"touchend\",\n        KEYDOWN = \"keydown\" + NS,\n        LABELIDPART = \"_label\",\n        DOT = \".\",\n        encode = kendo.htmlEncode;\n\n    var SWITCH_TEMPLATE = kendo.template(({ styles }) => `<span class=\"${styles.widget}\" role=\"switch\"></span>`);\n\n    var SWITCH_TRACK_TEMPLATE = kendo.template(({ styles, checked, unchecked }) => `<span class='${styles.track}'>` +\n        `<span class='${styles.checkedLabel}'>${encode(checked)}</span>` +\n        `<span class='${styles.uncheckedLabel}'>${encode(unchecked)}</span>` +\n        `</span>`);\n\n    var SWITCH_THUMB_TEMPLATE = kendo.template(({ styles }) => `<span class='${styles.thumbWrapper}'>` +\n        `<span class='${styles.thumb}'></span>` +\n        `</span>`);\n\n    var Switch = Widget.extend({\n        init: function(element, options) {\n            var that = this;\n\n            Widget.fn.init.call(that, element, options);\n\n            that._wrapper();\n\n            that._initSettings();\n\n            that._aria();\n\n            that._attachEvents();\n\n            kendo.notify(that, kendo.ui);\n        },\n\n        _wrapper: function() {\n            var that = this,\n                options = that.options,\n                element = that.element[0],\n                wrapper = $(SWITCH_TEMPLATE({\n                    styles: switchStyles\n                }));\n\n            element.type = \"checkbox\";\n\n            that.wrapper = that.element.wrap(wrapper).parent();\n\n            that.wrapper[0].style.cssText = that.element[0].style.cssText;\n            that.element.hide();\n\n            that.wrapper\n                .append($(SWITCH_TRACK_TEMPLATE({\n                    styles: switchStyles,\n                    checked: options.messages.checked,\n                    unchecked: options.messages.unchecked\n                })))\n                .append($(SWITCH_THUMB_TEMPLATE({\n                    styles: switchStyles\n                })))\n                .addClass(element.className)\n                .removeClass('input-validation-error');\n\n            that.options.rounded = that.options.trackRounded;\n            that._applyCssClasses();\n            that._applyRoundedClasses();\n        },\n\n        _applyRoundedClasses: function(action) {\n            var that = this,\n                options = that.options,\n                trackRounded = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"rounded\",\n                    value: options.trackRounded\n                }),\n                thumbRounded = kendo.cssProperties.getValidClass({\n                    widget: options.name,\n                    propName: \"rounded\",\n                    value: options.thumbRounded\n                });\n\n            action = action || \"addClass\";\n\n            that.wrapper.find(DOT + switchStyles.track)[action](trackRounded);\n            that.wrapper.find(DOT + switchStyles.thumb)[action](thumbRounded);\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.wrapper\n                .on(CLICK, that._click.bind(that))\n                .on(TOUCHEND, that._touchEnd.bind(that))\n                .on(KEYDOWN, that._keydown.bind(that));\n        },\n\n        setOptions: function(options) {\n            let that = this,\n                messages = options.messages,\n                checkedLabel,\n                uncheckedLabel;\n\n            that._clearCssClasses(options);\n            that._applyRoundedClasses(\"removeClass\");\n\n            that.options = $.extend(that.options, options);\n\n            if (messages && messages.checked !== undefined$1) {\n                checkedLabel = that.wrapper.find(DOT + switchStyles.checkedLabel);\n                checkedLabel.text(encode(messages.checked));\n            }\n\n            if (messages && messages.unchecked !== undefined$1) {\n                uncheckedLabel = that.wrapper.find(DOT + switchStyles.uncheckedLabel);\n                uncheckedLabel.text(encode(messages.unchecked));\n            }\n\n            if (options.width) {\n                that.wrapper.css({\n                    width: options.width\n                });\n            }\n\n            if (options.enabled !== undefined$1) {\n                that.enable(options.enabled);\n            }\n\n            if (options.readonly !== undefined$1) {\n                that.readonly(options.readonly);\n            }\n\n            that.check(options.checked);\n\n            that.options.rounded = that.options.trackRounded;\n            that._applyCssClasses();\n            that._applyRoundedClasses();\n        },\n\n        _initSettings: function() {\n            var that = this,\n                element = that.element[0],\n                options = that.options;\n\n            if (options.enabled) {\n                that._tabindex();\n            }\n\n            if (options.width) {\n                that.wrapper.css({\n                    width: options.width\n                });\n            }\n\n            if (options.checked === null) {\n                options.checked = element.checked;\n            }\n\n            that.check(options.checked);\n\n            options.enabled = options.enabled && !that.element.attr(DISABLED);\n            that.enable(options.enabled);\n\n            options.readonly = options.readonly || !!that.element.attr(READONLY);\n            that.readonly(options.readonly);\n        },\n\n        _aria: function() {\n            var that = this,\n                element = that.element,\n                wrapper = that.wrapper,\n                id = element.attr(\"id\"),\n                labelFor = $(\"label[for=\\\"\" + id + \"\\\"]\"),\n                ariaLabel = element.attr(\"aria-label\"),\n                ariaLabelledBy = element.attr(\"aria-labelledby\");\n\n            if (ariaLabel) {\n                wrapper.attr(\"aria-label\", ariaLabel);\n            } else if (ariaLabelledBy) {\n                wrapper.attr(\"aria-labelledby\", ariaLabelledBy);\n            } else if (labelFor.length) {\n                var labelId = labelFor.attr(\"id\");\n\n                if (!labelId) {\n                    labelId = (id || kendo.guid()) + LABELIDPART;\n                    labelFor.attr(\"id\", labelId);\n                }\n\n                wrapper.attr(\"aria-labelledby\", labelId);\n            }\n        },\n\n        events: [\n            CHANGE\n        ],\n\n        options: {\n            name: \"Switch\",\n            messages: {\n                checked: \"On\",\n                unchecked: \"Off\"\n            },\n            width: null,\n            checked: null,\n            enabled: true,\n            readonly: false,\n            size: \"medium\",\n            rounded: \"full\",\n            trackRounded: \"full\",\n            thumbRounded: \"full\"\n        },\n\n        check: function(checked) {\n            var that = this,\n                element = that.element[0];\n\n            if (checked === undefined$1) {\n                return element.checked;\n            }\n\n            if (element.checked !== checked) {\n                that.options.checked = element.checked = checked;\n            }\n\n            that.wrapper\n                .attr(ARIA_CHECKED, checked)\n                .toggleClass(switchStyles.checked, checked)\n                .toggleClass(switchStyles.unchecked, !checked)\n                .find(\"[aria-hidden='true']\")\n                .removeAttr(ARIA_HIDDEN);\n\n            if (checked) {\n                that.element\n                    .attr(CHECKED, CHECKED);\n\n                that.wrapper.find(DOT + switchStyles.uncheckedLabel)\n                    .attr(ARIA_HIDDEN, true);\n            } else {\n                that.element\n                    .prop(CHECKED, false);\n\n                that.wrapper.find(DOT + switchStyles.checkedLabel)\n                    .attr(ARIA_HIDDEN, true);\n            }\n        },\n\n        // alias for check, NG support\n        value: function(value) {\n            if (typeof value === \"string\") {\n                value = (value === \"true\");\n            } else if (value === null) {\n                value = false;\n            }\n            return this.check.apply(this, [value]);\n        },\n\n        destroy: function() {\n            Widget.fn.destroy.call(this);\n            this.wrapper.off(NS);\n        },\n\n        toggle: function() {\n            var that = this;\n\n            that.check(!that.element[0].checked);\n        },\n\n        enable: function(enable) {\n            var element = this.element,\n                wrapper = this.wrapper;\n\n            if (typeof enable == \"undefined\") {\n                enable = true;\n            }\n\n            this.options.enabled = enable;\n\n            if (enable) {\n                element.prop(DISABLED, false);\n                wrapper.removeAttr(ARIA_DISABLED);\n            } else {\n                element.attr(DISABLED, DISABLED);\n                wrapper.attr(ARIA_DISABLED, true);\n            }\n\n            wrapper.toggleClass(switchStyles.disabled, !enable);\n        },\n\n        readonly: function(readonly) {\n            var that = this,\n                element = that.element,\n                wrapper = that.wrapper;\n\n            if (typeof readonly == \"undefined\") {\n                readonly = true;\n            }\n\n            that.options.readonly = readonly;\n\n            if (readonly) {\n                element.attr(READONLY, true);\n                wrapper.attr(ARIA_READONLY, true);\n            } else {\n                element.prop(READONLY, false);\n                wrapper.removeAttr(ARIA_READONLY);\n            }\n\n            wrapper.toggleClass(switchStyles.readonly, readonly);\n        },\n\n        _check: function() {\n            var that = this,\n                checked = that.element[0].checked = !that.element[0].checked;\n\n            that.wrapper.trigger(\"focus\");\n\n            if (!that.options.enabled || that.options.readonly ||\n                that.trigger(CHANGE, { checked: checked })) {\n                that.element[0].checked = !checked;\n                return;\n            }\n\n            that.check(checked);\n        },\n\n        _keydown: function(e) {\n            if (e.keyCode === kendo.keys.SPACEBAR) {\n                this._check();\n                e.preventDefault();\n            }\n        },\n\n        _isTouch: function(event) {\n            return /touch/.test(event.type) || (event.originalEvent && /touch/.test(event.originalEvent.pointerType));\n        },\n\n        _click: function(e) {\n            if (!this._isTouch(e) && e.which === 1) {\n                if (e.target === this.element[0]) {\n                    // In this case the input has been clicked directly\n                    // even if hidden that is possible via <label for= >\n                    // thus we should revert its checked state to trigger the change\n                    this.element[0].checked = !this.element[0].checked;\n                }\n\n                this._check();\n            }\n        },\n\n        _touchEnd: function(e) {\n            if (this._isTouch(e)) {\n                this._check();\n                e.preventDefault();\n            }\n        }\n\n    });\n\n    kendo.cssProperties.registerPrefix(\"Switch\", \"k-switch-\");\n\n    kendo.cssProperties.registerValues(\"Switch\", [{\n        prop: \"rounded\",\n        values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n    }]);\n\n    ui.plugin(Switch);\n})(window.kendo.jQuery);\nvar kendo$1 = kendo;\n\nexport { __meta__, kendo$1 as default };\n"]}