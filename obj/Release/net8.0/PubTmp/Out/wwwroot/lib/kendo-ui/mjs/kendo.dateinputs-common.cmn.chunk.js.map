{"version":3,"file":"kendo.dateinputs-common.cmn.chunk.js","names":["cloneDate","isEqual","createDate","getDate","addMonths","lastDayOfMonth","__meta__","id","name","category","description","depends","hidden","chunk","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","f","_","kind","descriptor","done","context","access","addInitializer","push","result","get","set","init","unshift","__runInitializers","thisArg","value","useValue","__propKey","x","concat","__setFunctionName","prefix","configurable","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","__generator","body","y","label","sent","trys","ops","g","Iterator","verb","Symbol","iterator","v","op","pop","__createBinding","o","m","k","k2","undefined","__esModule","writable","enumerable","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","a","j","jl","__spreadArray","to","from","pack","l","slice","__await","__asyncGenerator","asyncIterator","q","AsyncIterator","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","ownKeys","getOwnPropertyNames","__importStar","mod","__importDefault","default","__classPrivateFieldGet","receiver","state","has","__classPrivateFieldSet","__classPrivateFieldIn","__addDisposableResource","env","async","dispose","inner","asyncDispose","stack","_SuppressedError","SuppressedError","suppressed","message","Error","__disposeResources","fail","hasError","__rewriteRelativeImportExtension","path","preserveJsx","test","replace","tsx","ext","cm","toLowerCase","DateInputInteractionMode","_a","tslib_es6","Mask","symbols","partMap","Constants","formatSeparator","twoDigitYearMax","defaultDateFormat","defaultLocaleId","Key","DELETE","BACKSPACE","TAB","ENTER","ESCAPE","ARROW_LEFT","ARROW_UP","ARROW_RIGHT","ARROW_DOWN","SPACE","END","HOME","PAGE_UP","PAGE_DOWN","padZero","Math","max","fill","join","unpadZero","approximateStringMatching","oldText","newText","formatPattern","selectionStart","isInCaretMode","keyEvent","oldIndex","oldTextSeparator","oldSegmentText","substring","newSegmentText","diff","deletedSymbol","symbol","dateSymbolMap","map","part","pattern","type","isInRange","candidate","min","isObject","isArray","isHtmlElement","element","HTMLElement","dateSetter","method","date","clone","isPresent","isDocumentAvailable","document","isNumber","Number","isNaN","parseToInt","parseInt","isParseableToInt","clamp","extend","args","_i","deepExtend","_b","sources","source","Date","noop","isFunction","fn","cropTwoDigitYear","getTime","getFullYear","toString","setYears","millisecondDigitsInFormat","format","match","millisecondStepFor","digits","pow","areDatePartsEqualTo","year","month","day","hour","minutes","seconds","milliseconds","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","isValidDate","MONTH_INDEX_FEBRUARY","DEFAULT_LEAP_YEAR","PREVIOUS_CENTURY_BASE","CURRENT_CENTURY_BASE","SHORT_PATTERN_LENGTH_REGEXP","MONTH_PART_WITH_WORDS_THRESHOLD","MONTH_SYMBOL","JS_MONTH_OFFSET","DateObject","intlService","formatPlaceholder","cycleTime","_c","_d","_e","autoCorrectParts","hours","dayperiod","leadingZero","typedMonthPart","knownParts","E","H","M","h","S","_value","getDefaultDate","_partiallyInvalidDate","startDate","invalidDateParts","startDateOffset","setOptions","sampleFormat","dateFormatString","setExisting","resetInvalidDate","localeId","cldrKeys","keys","intl","cldr","calendar","numbers","options","monthNames","allFormattedMonths","dayPeriods","allDayPeriods","setValue","modifyExisting","hasValue","_this","splitDateFormat","reduce","getExisting","getValue","createDefaultDate","getFormattedDate","formatDate","getTextAndFormat","customFormat","text","mask","partiallyInvalidText","formattedDate","formattedDates","getFormattedInvalidDates","getInvalidDatePartValue","partsForSegment","getPartsForSegment","datePartText","merge","formattedDatesForSymbol","forEach","getInvalidDatePart","formattedInvalidDate","setFullYear","setMonth","modifyPart","offset","invalidDateFound","newValue","timeModified","isMonth","isDay","symbolExists","setDate","setHours","setMinutes","setSeconds","setMilliseconds","invalidDatePartValue","resetInvalidDateSymbol","monthValue","dayValue","abs","dateCandidate","newValueCandidate","modifyDateSymbolWithValue","dateCandidateExists","markDatePartsAsExisting","setInvalidDatePart","shouldNormalizeCentury","normalizeCentury","parsePart","currentChar","resetSegmentValue","cycleSegmentValue","rawInputValue","rawTextValue","isDeleting","originalFormat","dateParts","datePartsLiterals","filter","index","datePartIndex","literal","flatDateParts","datePart","parseResult","switchToNext","resetPart","some","hasInvalidDatePart","resetLeadingZero","rawValueStartsWithLiteral","startsWith","rawValueEndsWithLiteral","endsWith","rawValueHasConsecutiveLiterals","baseDate","baseFormat","replaced","current","basePrefix","baseSuffix","suffix","convertedBaseFormat","hasFixedFormat","datePartStartIndex","segmentLength","lastIndexOf","formatToTextLengthDiff","parsedDate","matchMonth","dayPeriod","matchDayPeriod","isZeroCurrentChar","isAbbrMonth","incrementLeadingZero","partPattern","patternValue","patternLength","currentMaxLength","tryParse","middle","middleNumber","candidateDateString","parseDate","autoCorrectedPrefixAndSuffix","isCurrentCharParsable","monthNumber","peekResult","isPeekDateOverflowingDatePart","useBasePrefixAndSuffix","peekedDate","parsedPeekedValue","datePartValue","textToParse","parsedValue","month_1","valueCandidate","symbolMap","hasLeadingZero","setLeadingZero","getLeadingZero","twoDigitYear","centuryBase","getNormalizedCenturyBase","parts","names","peek","peekValue","typedChar","monthAsNum","lowerChart","am","pm","locale","dateFormatParts","dateFormatNames","partLength","returnValue","resultText","resultFormat","processTextSymbolsEnded","ignoreFormatSymbolsCount","formatSymbolIndex","formatSymbolIndexModifier","dateFieldName","nameType","resetInvalidDatePart","shouldResetInvalidDate","modifyDateSymbolWithOffset","partIndex","segmentPart","maskPartIndex","peekedValue","peekedDateString","patternSatisfied","KeyCode","defaultOptions","events","Observable","destroy","trigger","eventName","eventData","defaultPrevented","preventDefault","sender","DEFAULT_SEGMENT_STEP","DRAG_START","DROP","TOUCH_START","MOUSE_DOWN","MOUSE_UP","CLICK","INPUT","KEY_DOWN","FOCUS","BLUR","PASTE","MOUSE_SCROLL","MOUSE_WHEEL","VALUE_CHANGE","INPUT_END","BLUR_END","FOCUS_END","CHANGE","defaultDateInputOptions","hasPlaceholder","placeholder","steps","millisecond","second","minute","selectNearestSegmentOnFocus","selectPreviousSegmentOnBackspace","enableMouseWheel","allowCaretMode","autoSwitchParts","autoSwitchKeys","autoFill","DateInput","_super","dateObject","currentText","currentFormat","interactionMode","None","previousElementSelection","start","end","dateValue","formattedValue","createDateObject","setTextAndFormat","bindEvents","forceUpdate","unbindEvents","onElementDragStart","bind","addEventListener","onElementDrop","onElementClick","onElementMouseDown","onElementMouseUp","onElementInput","onElementKeyDown","onElementFocus","onElementBlur","onElementChange","onElementPaste","onElementMouseWheel","removeEventListener","refresh","setDateObjectOptions","newOptions","getDateObjectOptions","resetLocale","Caret","focus","selectNearestSegment","mouseDownStarted","focusedPriorToMouseDown","isActive","switchedPartOnPreviousKeyAction","selection","detail","selectionPresent","selectionEnd","placeholderToggled","caret","setSelection","selectionByIndex","triggerInput","event","oldElementValue","elementValue","isPasteInProgress","updateOnPaste","keyDownEvent","isBackspaceKey","keyCode","isDeleteKey","originalInteractionMode","Selection","hasCaret","restorePreviousInputEventState","oldExistingDateValue","oldDateValue","previousElementValue","navigationOnly","parsePartsResults","switchPart","parsePartResult","symbolForSelection","lastParseResult","lastParseResultHasNoValue","parsingFailedOnDelete","newExistingDateValue","hasExistingDateValueChanged","newDateValue","currentSelection","diffChar","forceUpdateWithSelection","switchDateSegment","selectionBySymbol","data","tryTriggerValueChange","oldValue","triggerInputEnd","newElementValue","triggerFocus","refreshElementValue","triggerFocusEnd","triggerBlur","triggerBlurEnd","triggerChange","triggerKeyDown","keyEventMatchesAutoSwitchKeys","isTabKey","shiftKey","getStepFromSymbol","shouldPreventDefault","altKey","ctrlKey","metaKey","modifyDateSegmentValue","triggerMouseWheel","wheelDelta","stopPropagation","inputFormat","oldDateObjectValue","writeValue","displayFormat","activeElement","setSelectionRange","currentSymbol","symbolCandidate","previousFormatSymbol","readonly","msDigits","triggerValueChange","elementValueLength","selectionOffset","setElementValue","restorePreviousElementValue","restorePreviousElementSelection","verifyValue","getDateObject","showPlaceholder","isPosition","disabled","selectDateSegment","begin","keyObject","trim","currentDate"],"sources":["kendo.dateinputs-common.cmn.chunk.js"],"mappings":"YAAcA,eAAgBC,aAAcC,gBAAiBC,aAAcC,eAAgBC,mBAAsB,iCAEjH,MAAMC,SAAW,CACbC,GAAI,8BACJC,KAAM,2BACNC,SAAU,MACVC,YAAa,oCACbC,QAAS,CAAC,uBACVC,QAAQ,EACRC,OAAO,GAqBX,IAAIC,cAAgB,SAASC,EAAGC,GAI9B,OAHAF,cAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,cAAcC,EAAGC,EAC1B,EAEA,SAASS,UAAUV,EAAGC,GACpB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIU,UAAU,uBAAyBC,OAAOX,GAAK,iCAE7D,SAASY,IAAOC,KAAKC,YAAcf,CAAG,CADtCD,cAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOc,OAAOf,IAAMY,EAAGN,UAAYN,EAAEM,UAAW,IAAIM,EACjF,CAEA,IAAII,SAAW,WAQb,OAPAA,SAAWf,OAAOgB,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIf,KADTc,EAAIG,UAAUF,GACOnB,OAAOK,UAAUC,eAAeC,KAAKW,EAAGd,KAAIa,EAAEb,GAAKc,EAAEd,IAE9E,OAAOa,CACX,EACOF,SAASQ,MAAMX,KAAMS,UAC9B,EAEA,SAASG,OAAON,EAAGO,GACjB,IAAIR,EAAI,CAAC,EACT,IAAK,IAAIb,KAAKc,EAAOlB,OAAOK,UAAUC,eAAeC,KAAKW,EAAGd,IAAMqB,EAAEC,QAAQtB,GAAK,IAC9Ea,EAAEb,GAAKc,EAAEd,IACb,GAAS,MAALc,GAAqD,mBAAjClB,OAAO2B,sBACtB,KAAIR,EAAI,EAAb,IAAgBf,EAAIJ,OAAO2B,sBAAsBT,GAAIC,EAAIf,EAAEkB,OAAQH,IAC3DM,EAAEC,QAAQtB,EAAEe,IAAM,GAAKnB,OAAOK,UAAUuB,qBAAqBrB,KAAKW,EAAGd,EAAEe,MACvEF,EAAEb,EAAEe,IAAMD,EAAEd,EAAEe,IAF4B,CAItD,OAAOF,CACT,CAEA,SAASY,WAAWC,EAAYC,EAAQC,EAAKC,GAC3C,IAA2HnC,EAAvHoC,EAAIb,UAAUC,OAAQa,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOjC,OAAOoC,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAId,EAAIW,EAAWR,OAAS,EAAGH,GAAK,EAAGA,KAASrB,EAAIgC,EAAWX,MAAIgB,GAAKD,EAAI,EAAIpC,EAAEqC,GAAKD,EAAI,EAAIpC,EAAEiC,EAAQC,EAAKG,GAAKrC,EAAEiC,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAKnC,OAAOuC,eAAeR,EAAQC,EAAKG,GAAIA,CAC9D,CAEA,SAASK,QAAQC,EAAYC,GAC3B,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,EAAa,CACtE,CAEA,SAASE,aAAaC,EAAMC,EAAcf,EAAYgB,EAAWC,EAAcC,GAC7E,SAASC,EAAOC,GAAK,QAAU,IAANA,GAA6B,mBAANA,EAAkB,MAAM,IAAIzC,UAAU,qBAAsB,OAAOyC,CAAG,CAKtH,IAJA,IAGIC,EAHAC,EAAON,EAAUM,KAAMpB,EAAe,WAAToB,EAAoB,MAAiB,WAATA,EAAoB,MAAQ,QACrFrB,GAAUc,GAAgBD,EAAOE,EAAkB,OAAIF,EAAOA,EAAKvC,UAAY,KAC/EgD,EAAaR,IAAiBd,EAAS/B,OAAOoC,yBAAyBL,EAAQe,EAAUvD,MAAQ,CAAC,GAC/F+D,GAAO,EACLnC,EAAIW,EAAWR,OAAS,EAAGH,GAAK,EAAGA,IAAK,CAC7C,IAAIoC,EAAU,CAAC,EACf,IAAK,IAAInD,KAAK0C,EAAWS,EAAQnD,GAAW,WAANA,EAAiB,CAAC,EAAI0C,EAAU1C,GACtE,IAAK,IAAIA,KAAK0C,EAAUU,OAAQD,EAAQC,OAAOpD,GAAK0C,EAAUU,OAAOpD,GACrEmD,EAAQE,eAAiB,SAAUP,GAAK,GAAII,EAAM,MAAM,IAAI7C,UAAU,0DAA2DuC,EAAkBU,KAAKT,EAAOC,GAAK,MAAQ,EAC5K,IAAIS,GAAS,EAAI7B,EAAWX,IAAa,aAATiC,EAAsB,CAAEQ,IAAKP,EAAWO,IAAKC,IAAKR,EAAWQ,KAAQR,EAAWrB,GAAMuB,GACtH,GAAa,aAATH,EAAqB,CACrB,QAAe,IAAXO,EAAmB,SACvB,GAAe,OAAXA,GAAqC,iBAAXA,EAAqB,MAAM,IAAIlD,UAAU,oBACnE0C,EAAIF,EAAOU,EAAOC,QAAMP,EAAWO,IAAMT,IACzCA,EAAIF,EAAOU,EAAOE,QAAMR,EAAWQ,IAAMV,IACzCA,EAAIF,EAAOU,EAAOG,QAAOf,EAAagB,QAAQZ,EACtD,MACSA,EAAIF,EAAOU,MACH,UAATP,EAAkBL,EAAagB,QAAQZ,GACtCE,EAAWrB,GAAOmB,EAE/B,CACIpB,GAAQ/B,OAAOuC,eAAeR,EAAQe,EAAUvD,KAAM8D,GAC1DC,GAAO,CACT,CAEA,SAASU,kBAAkBC,EAASlB,EAAcmB,GAEhD,IADA,IAAIC,EAAW9C,UAAUC,OAAS,EACzBH,EAAI,EAAGA,EAAI4B,EAAazB,OAAQH,IACrC+C,EAAQC,EAAWpB,EAAa5B,GAAGZ,KAAK0D,EAASC,GAASnB,EAAa5B,GAAGZ,KAAK0D,GAEnF,OAAOE,EAAWD,OAAQ,CAC5B,CAEA,SAASE,UAAUC,GACjB,MAAoB,iBAANA,EAAiBA,EAAI,GAAGC,OAAOD,EAC/C,CAEA,SAASE,kBAAkBrB,EAAG3D,EAAMiF,GAElC,MADoB,iBAATjF,IAAmBA,EAAOA,EAAKE,YAAc,IAAI6E,OAAO/E,EAAKE,YAAa,KAAO,IACrFO,OAAOuC,eAAeW,EAAG,OAAQ,CAAEuB,cAAc,EAAMP,MAAOM,EAAS,GAAGF,OAAOE,EAAQ,IAAKjF,GAAQA,GAC/G,CAEA,SAASmF,WAAWC,EAAaC,GAC/B,GAAuB,iBAAZvC,SAAoD,mBAArBA,QAAQwC,SAAyB,OAAOxC,QAAQwC,SAASF,EAAaC,EAClH,CAEA,SAASE,UAAUb,EAASc,EAAYC,EAAGC,GAEzC,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUnB,GAAS,IAAMoB,EAAKL,EAAUM,KAAKrB,GAAS,CAAE,MAAOzC,GAAK2D,EAAO3D,EAAI,CAAE,CAC1F,SAAS+D,EAAStB,GAAS,IAAMoB,EAAKL,EAAiB,MAAEf,GAAS,CAAE,MAAOzC,GAAK2D,EAAO3D,EAAI,CAAE,CAC7F,SAAS6D,EAAK3B,GAJlB,IAAeO,EAIaP,EAAOL,KAAO6B,EAAQxB,EAAOO,QAJ1CA,EAIyDP,EAAOO,MAJhDA,aAAiBc,EAAId,EAAQ,IAAIc,GAAE,SAAUG,GAAWA,EAAQjB,EAAQ,KAIjBuB,KAAKJ,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAU1D,MAAM0C,EAASc,GAAc,KAAKQ,OAClE,GACF,CAEA,SAASG,YAAYzB,EAAS0B,GAC5B,IAAsGzC,EAAG0C,EAAG3E,EAAxGkC,EAAI,CAAE0C,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAP7E,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,EAAI,EAAG8E,KAAM,GAAIC,IAAK,IAAeC,EAAIjG,OAAOc,QAA4B,mBAAboF,SAA0BA,SAAWlG,QAAQK,WACtL,OAAO4F,EAAEV,KAAOY,EAAK,GAAIF,EAAS,MAAIE,EAAK,GAAIF,EAAU,OAAIE,EAAK,GAAsB,mBAAXC,SAA0BH,EAAEG,OAAOC,UAAY,WAAa,OAAOzF,IAAM,GAAIqF,EAC1J,SAASE,EAAK/E,GAAK,OAAO,SAAUkF,GAAK,OACzC,SAAcC,GACV,GAAIrD,EAAG,MAAM,IAAIzC,UAAU,mCAC3B,KAAOwF,IAAMA,EAAI,EAAGM,EAAG,KAAOpD,EAAI,IAAKA,OACnC,GAAID,EAAI,EAAG0C,IAAM3E,EAAY,EAARsF,EAAG,GAASX,EAAU,OAAIW,EAAG,GAAKX,EAAS,SAAO3E,EAAI2E,EAAU,SAAM3E,EAAEV,KAAKqF,GAAI,GAAKA,EAAEL,SAAWtE,EAAIA,EAAEV,KAAKqF,EAAGW,EAAG,KAAKjD,KAAM,OAAOrC,EAE3J,OADI2E,EAAI,EAAG3E,IAAGsF,EAAK,CAAS,EAARA,EAAG,GAAQtF,EAAEiD,QACzBqC,EAAG,IACP,KAAK,EAAG,KAAK,EAAGtF,EAAIsF,EAAI,MACxB,KAAK,EAAc,OAAXpD,EAAE0C,QAAgB,CAAE3B,MAAOqC,EAAG,GAAIjD,MAAM,GAChD,KAAK,EAAGH,EAAE0C,QAASD,EAAIW,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKpD,EAAE6C,IAAIQ,MAAOrD,EAAE4C,KAAKS,MAAO,SACxC,QACI,KAAMvF,EAAIkC,EAAE4C,MAAM9E,EAAIA,EAAEK,OAAS,GAAKL,EAAEA,EAAEK,OAAS,KAAkB,IAAViF,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEpD,EAAI,EAAG,QAAU,CAC3G,GAAc,IAAVoD,EAAG,MAActF,GAAMsF,EAAG,GAAKtF,EAAE,IAAMsF,EAAG,GAAKtF,EAAE,IAAM,CAAEkC,EAAE0C,MAAQU,EAAG,GAAI,KAAO,CACrF,GAAc,IAAVA,EAAG,IAAYpD,EAAE0C,MAAQ5E,EAAE,GAAI,CAAEkC,EAAE0C,MAAQ5E,EAAE,GAAIA,EAAIsF,EAAI,KAAO,CACpE,GAAItF,GAAKkC,EAAE0C,MAAQ5E,EAAE,GAAI,CAAEkC,EAAE0C,MAAQ5E,EAAE,GAAIkC,EAAE6C,IAAItC,KAAK6C,GAAK,KAAO,CAC9DtF,EAAE,IAAIkC,EAAE6C,IAAIQ,MAChBrD,EAAE4C,KAAKS,MAAO,SAEtBD,EAAKZ,EAAKpF,KAAK0D,EAASd,EAC5B,CAAE,MAAO1B,GAAK8E,EAAK,CAAC,EAAG9E,GAAImE,EAAI,CAAG,CAAE,QAAU1C,EAAIjC,EAAI,CAAG,CACzD,GAAY,EAARsF,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAErC,MAAOqC,EAAG,GAAKA,EAAG,QAAK,EAAQjD,MAAM,EAC9E,CAtBgDgC,CAAK,CAAClE,EAAGkF,GAAK,CAAG,CAuBnE,CAEA,IAAIG,gBAAkBzG,OAAOc,OAAS,SAAU4F,EAAGC,EAAGC,EAAGC,QAC5CC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAI3E,EAAOjC,OAAOoC,yBAAyBuE,EAAGC,GACzC3E,KAAS,QAASA,GAAQ0E,EAAEI,WAAa9E,EAAK+E,UAAY/E,EAAKwC,gBAChExC,EAAO,CAAEgF,YAAY,EAAMrD,IAAK,WAAa,OAAO+C,EAAEC,EAAI,IAE9D5G,OAAOuC,eAAemE,EAAGG,EAAI5E,EAC9B,EAAI,SAAUyE,EAAGC,EAAGC,EAAGC,QACXC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACX,EAED,SAASM,aAAaP,EAAGD,GACvB,IAAK,IAAItG,KAAKuG,EAAa,YAANvG,GAAoBJ,OAAOK,UAAUC,eAAeC,KAAKmG,EAAGtG,IAAIqG,gBAAgBC,EAAGC,EAAGvG,EAC7G,CAEA,SAAS+G,SAAST,GAChB,IAAIxF,EAAsB,mBAAXkF,QAAyBA,OAAOC,SAAUM,EAAIzF,GAAKwF,EAAExF,GAAIC,EAAI,EAC5E,GAAIwF,EAAG,OAAOA,EAAEpG,KAAKmG,GACrB,GAAIA,GAAyB,iBAAbA,EAAEpF,OAAqB,MAAO,CAC1CiE,KAAM,WAEF,OADImB,GAAKvF,GAAKuF,EAAEpF,SAAQoF,OAAI,GACrB,CAAExC,MAAOwC,GAAKA,EAAEvF,KAAMmC,MAAOoD,EACxC,GAEJ,MAAM,IAAIjG,UAAUS,EAAI,0BAA4B,kCACtD,CAEA,SAASkG,OAAOV,EAAGtF,GACjB,IAAIuF,EAAsB,mBAAXP,QAAyBM,EAAEN,OAAOC,UACjD,IAAKM,EAAG,OAAOD,EACf,IAAmBvE,EAAYV,EAA3BN,EAAIwF,EAAEpG,KAAKmG,GAAOW,EAAK,GAC3B,IACI,WAAc,IAANjG,GAAgBA,KAAM,MAAQe,EAAIhB,EAAEoE,QAAQjC,MAAM+D,EAAG3D,KAAKvB,EAAE+B,MACxE,CACA,MAAOoD,GAAS7F,EAAI,CAAE6F,MAAOA,EAAS,CACtC,QACI,IACQnF,IAAMA,EAAEmB,OAASqD,EAAIxF,EAAU,SAAIwF,EAAEpG,KAAKY,EAClD,CACA,QAAU,GAAIM,EAAG,MAAMA,EAAE6F,KAAO,CACpC,CACA,OAAOD,CACT,CAGA,SAASE,WACP,IAAK,IAAIF,EAAK,GAAIlG,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CkG,EAAKA,EAAG/C,OAAO8C,OAAO/F,UAAUF,KACpC,OAAOkG,CACT,CAGA,SAASG,iBACP,IAAK,IAAItG,EAAI,EAAGC,EAAI,EAAGsG,EAAKpG,UAAUC,OAAQH,EAAIsG,EAAItG,IAAKD,GAAKG,UAAUF,GAAGG,OACxE,IAAIa,EAAIhC,MAAMe,GAAI0F,EAAI,EAA3B,IAA8BzF,EAAI,EAAGA,EAAIsG,EAAItG,IACzC,IAAK,IAAIuG,EAAIrG,UAAUF,GAAIwG,EAAI,EAAGC,EAAKF,EAAEpG,OAAQqG,EAAIC,EAAID,IAAKf,IAC1DzE,EAAEyE,GAAKc,EAAEC,GACjB,OAAOxF,CACT,CAEA,SAAS0F,cAAcC,EAAIC,EAAMC,GAC/B,GAAIA,GAA6B,IAArB3G,UAAUC,OAAc,IAAK,IAA4B+F,EAAxBlG,EAAI,EAAG8G,EAAIF,EAAKzG,OAAYH,EAAI8G,EAAG9G,KACxEkG,GAAQlG,KAAK4G,IACRV,IAAIA,EAAKlH,MAAME,UAAU6H,MAAM3H,KAAKwH,EAAM,EAAG5G,IAClDkG,EAAGlG,GAAK4G,EAAK5G,IAGrB,OAAO2G,EAAGxD,OAAO+C,GAAMlH,MAAME,UAAU6H,MAAM3H,KAAKwH,GACpD,CAEA,SAASI,QAAQ7B,GACf,OAAO1F,gBAAgBuH,SAAWvH,KAAK0F,EAAIA,EAAG1F,MAAQ,IAAIuH,QAAQ7B,EACpE,CAEA,SAAS8B,iBAAiBnE,EAASc,EAAYE,GAC7C,IAAKmB,OAAOiC,cAAe,MAAM,IAAI5H,UAAU,wCAC/C,IAAoDU,EAAhD8E,EAAIhB,EAAU1D,MAAM0C,EAASc,GAAc,IAAQuD,EAAI,GAC3D,OAAOnH,EAAInB,OAAOc,QAAiC,mBAAlByH,cAA+BA,cAAgBvI,QAAQK,WAAY8F,EAAK,QAASA,EAAK,SAAUA,EAAK,UACtI,SAAqBjD,GAAK,OAAO,SAAUoD,GAAK,OAAOpB,QAAQC,QAAQmB,GAAGb,KAAKvC,EAAGkC,EAAS,CAAG,IADgEjE,EAAEiF,OAAOiC,eAAiB,WAAc,OAAOzH,IAAM,EAAGO,EAEtN,SAASgF,EAAK/E,EAAG8B,GAAS+C,EAAE7E,KAAMD,EAAEC,GAAK,SAAUkF,GAAK,OAAO,IAAIpB,SAAQ,SAAUwC,EAAG3H,GAAKuI,EAAE5E,KAAK,CAACtC,EAAGkF,EAAGoB,EAAG3H,IAAM,GAAKyI,EAAOpH,EAAGkF,EAAI,GAAI,EAAOpD,IAAG/B,EAAEC,GAAK8B,EAAE/B,EAAEC,KAAO,CACvK,SAASoH,EAAOpH,EAAGkF,GAAK,KACVnE,EADqB8D,EAAE7E,GAAGkF,IACnBpC,iBAAiBiE,QAAUjD,QAAQC,QAAQhD,EAAE+B,MAAMoC,GAAGb,KAAKgD,EAASrD,GAAUsD,EAAOJ,EAAE,GAAG,GAAInG,EADtE,CAAE,MAAOV,GAAKiH,EAAOJ,EAAE,GAAG,GAAI7G,EAAI,CAC/E,IAAcU,CADmE,CAEjF,SAASsG,EAAQvE,GAASsE,EAAO,OAAQtE,EAAQ,CACjD,SAASkB,EAAOlB,GAASsE,EAAO,QAAStE,EAAQ,CACjD,SAASwE,EAAOxF,EAAGoD,GAASpD,EAAEoD,GAAIgC,EAAEK,QAASL,EAAEhH,QAAQkH,EAAOF,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAK,CACnF,CAEA,SAASM,iBAAiBlC,GACxB,IAAIvF,EAAGf,EACP,OAAOe,EAAI,CAAC,EAAGgF,EAAK,QAASA,EAAK,SAAS,SAAU1E,GAAK,MAAMA,CAAG,IAAI0E,EAAK,UAAWhF,EAAEiF,OAAOC,UAAY,WAAc,OAAOzF,IAAM,EAAGO,EAC1I,SAASgF,EAAK/E,EAAG8B,GAAK/B,EAAEC,GAAKsF,EAAEtF,GAAK,SAAUkF,GAAK,OAAQlG,GAAKA,GAAK,CAAE8D,MAAOiE,QAAQzB,EAAEtF,GAAGkF,IAAKhD,MAAM,GAAUJ,EAAIA,EAAEoD,GAAKA,CAAG,EAAIpD,CAAG,CACvI,CAEA,SAAS2F,cAAcnC,GACrB,IAAKN,OAAOiC,cAAe,MAAM,IAAI5H,UAAU,wCAC/C,IAAiCU,EAA7BwF,EAAID,EAAEN,OAAOiC,eACjB,OAAO1B,EAAIA,EAAEpG,KAAKmG,IAAMA,EAAwB,mBAAbS,SAA0BA,SAAST,GAAKA,EAAEN,OAAOC,YAAalF,EAAI,CAAC,EAAGgF,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWhF,EAAEiF,OAAOiC,eAAiB,WAAc,OAAOzH,IAAM,EAAGO,GAC9M,SAASgF,EAAK/E,GAAKD,EAAEC,GAAKsF,EAAEtF,IAAM,SAAUkF,GAAK,OAAO,IAAIpB,SAAQ,SAAUC,EAASC,IACvF,SAAgBD,EAASC,EAAQtF,EAAGwG,GAAKpB,QAAQC,QAAQmB,GAAGb,MAAK,SAASa,GAAKnB,EAAQ,CAAEjB,MAAOoC,EAAGhD,KAAMxD,GAAM,GAAGsF,EAAS,EADbsD,CAAOvD,EAASC,GAA7BkB,EAAII,EAAEtF,GAAGkF,IAA8BhD,KAAMgD,EAAEpC,MAAQ,GAAI,CAAG,CAEjK,CAEA,SAAS4E,qBAAqBC,EAAQC,GAEpC,OADIhJ,OAAOuC,eAAkBvC,OAAOuC,eAAewG,EAAQ,MAAO,CAAE7E,MAAO8E,IAAiBD,EAAOC,IAAMA,EAClGD,CACT,CAEA,IAAIE,mBAAqBjJ,OAAOc,OAAS,SAAU4F,EAAGJ,GACpDtG,OAAOuC,eAAemE,EAAG,UAAW,CAAEO,YAAY,EAAM/C,MAAOoC,GAChE,EAAI,SAASI,EAAGJ,GACfI,EAAW,QAAIJ,CACjB,EAEI4C,QAAU,SAASxC,GAMrB,OALAwC,QAAUlJ,OAAOmJ,qBAAuB,SAAUzC,GAChD,IAAIW,EAAK,GACT,IAAK,IAAIT,KAAKF,EAAO1G,OAAOK,UAAUC,eAAeC,KAAKmG,EAAGE,KAAIS,EAAGA,EAAG/F,QAAUsF,GACjF,OAAOS,CACT,EACO6B,QAAQxC,EACjB,EAEA,SAAS0C,aAAaC,GACpB,GAAIA,GAAOA,EAAItC,WAAY,OAAOsC,EAClC,IAAI1F,EAAS,CAAC,EACd,GAAW,MAAP0F,EAAa,IAAK,IAAIzC,EAAIsC,QAAQG,GAAMlI,EAAI,EAAGA,EAAIyF,EAAEtF,OAAQH,IAAkB,YAATyF,EAAEzF,IAAkBsF,gBAAgB9C,EAAQ0F,EAAKzC,EAAEzF,IAE7H,OADA8H,mBAAmBtF,EAAQ0F,GACpB1F,CACT,CAEA,SAAS2F,gBAAgBD,GACvB,OAAQA,GAAOA,EAAItC,WAAcsC,EAAM,CAAEE,QAASF,EACpD,CAEA,SAASG,uBAAuBC,EAAUC,EAAOtG,EAAMF,GACrD,GAAa,MAATE,IAAiBF,EAAG,MAAM,IAAIzC,UAAU,iDAC5C,GAAqB,mBAAViJ,EAAuBD,IAAaC,IAAUxG,GAAKwG,EAAMC,IAAIF,GAAW,MAAM,IAAIhJ,UAAU,4EACvG,MAAgB,MAAT2C,EAAeF,EAAa,MAATE,EAAeF,EAAE3C,KAAKkJ,GAAYvG,EAAIA,EAAEgB,MAAQwF,EAAM9F,IAAI6F,EACtF,CAEA,SAASG,uBAAuBH,EAAUC,EAAOxF,EAAOd,EAAMF,GAC5D,GAAa,MAATE,EAAc,MAAM,IAAI3C,UAAU,kCACtC,GAAa,MAAT2C,IAAiBF,EAAG,MAAM,IAAIzC,UAAU,iDAC5C,GAAqB,mBAAViJ,EAAuBD,IAAaC,IAAUxG,GAAKwG,EAAMC,IAAIF,GAAW,MAAM,IAAIhJ,UAAU,2EACvG,MAAiB,MAAT2C,EAAeF,EAAE3C,KAAKkJ,EAAUvF,GAAShB,EAAIA,EAAEgB,MAAQA,EAAQwF,EAAM7F,IAAI4F,EAAUvF,GAASA,CACtG,CAEA,SAAS2F,sBAAsBH,EAAOD,GACpC,GAAiB,OAAbA,GAA0C,iBAAbA,GAA6C,mBAAbA,EAA0B,MAAM,IAAIhJ,UAAU,0CAC/G,MAAwB,mBAAViJ,EAAuBD,IAAaC,EAAQA,EAAMC,IAAIF,EACtE,CAEA,SAASK,wBAAwBC,EAAK7F,EAAO8F,GAC3C,GAAI9F,QAAoC,CACtC,GAAqB,iBAAVA,GAAuC,mBAAVA,EAAsB,MAAM,IAAIzD,UAAU,oBAClF,IAAIwJ,EAASC,EACb,GAAIF,EAAO,CACT,IAAK5D,OAAO+D,aAAc,MAAM,IAAI1J,UAAU,uCAC9CwJ,EAAU/F,EAAMkC,OAAO+D,aACzB,CACA,QAAgB,IAAZF,EAAoB,CACtB,IAAK7D,OAAO6D,QAAS,MAAM,IAAIxJ,UAAU,kCACzCwJ,EAAU/F,EAAMkC,OAAO6D,SACnBD,IAAOE,EAAQD,EACrB,CACA,GAAuB,mBAAZA,EAAwB,MAAM,IAAIxJ,UAAU,0BACnDyJ,IAAOD,EAAU,WAAa,IAAMC,EAAM3J,KAAKK,KAAO,CAAE,MAAOa,GAAK,OAAOyD,QAAQE,OAAO3D,EAAI,CAAE,GACpGsI,EAAIK,MAAM1G,KAAK,CAAEQ,MAAOA,EAAO+F,QAASA,EAASD,MAAOA,GAC1D,MACSA,GACPD,EAAIK,MAAM1G,KAAK,CAAEsG,OAAO,IAE1B,OAAO9F,CACT,CAEA,IAAImG,iBAA8C,mBAApBC,gBAAiCA,gBAAkB,SAAUhD,EAAOiD,EAAYC,GAC5G,IAAI/I,EAAI,IAAIgJ,MAAMD,GAClB,OAAO/I,EAAElC,KAAO,kBAAmBkC,EAAE6F,MAAQA,EAAO7F,EAAE8I,WAAaA,EAAY9I,CACjF,EAEA,SAASiJ,mBAAmBX,GAC1B,SAASY,EAAKlJ,GACZsI,EAAIzC,MAAQyC,EAAIa,SAAW,IAAIP,iBAAiB5I,EAAGsI,EAAIzC,MAAO,4CAA8C7F,EAC5GsI,EAAIa,UAAW,CACjB,CACA,IAAIzI,EAAGjB,EAAI,EAkBX,OAjBA,SAASqE,IACP,KAAOpD,EAAI4H,EAAIK,MAAM5D,OACnB,IACE,IAAKrE,EAAE6H,OAAe,IAAN9I,EAAS,OAAOA,EAAI,EAAG6I,EAAIK,MAAM1G,KAAKvB,GAAI+C,QAAQC,UAAUM,KAAKF,GACjF,GAAIpD,EAAE8H,QAAS,CACb,IAAItG,EAASxB,EAAE8H,QAAQ1J,KAAK4B,EAAE+B,OAC9B,GAAI/B,EAAE6H,MAAO,OAAO9I,GAAK,EAAGgE,QAAQC,QAAQxB,GAAQ8B,KAAKF,GAAM,SAAS9D,GAAc,OAATkJ,EAAKlJ,GAAW8D,GAAQ,GACvG,MACKrE,GAAK,CACZ,CACA,MAAOO,GACLkJ,EAAKlJ,EACP,CAEF,GAAU,IAANP,EAAS,OAAO6I,EAAIa,SAAW1F,QAAQE,OAAO2E,EAAIzC,OAASpC,QAAQC,UACvE,GAAI4E,EAAIa,SAAU,MAAMb,EAAIzC,KAC9B,CACO/B,EACT,CAEA,SAASsF,iCAAiCC,EAAMC,GAC9C,MAAoB,iBAATD,GAAqB,WAAWE,KAAKF,GACrCA,EAAKG,QAAQ,oDAAoD,SAAUtE,EAAGuE,EAAKpL,EAAGqL,EAAKC,GAC9F,OAAOF,EAAMH,EAAc,OAAS,OAAQjL,GAAOqL,GAAQC,EAAWtL,EAAIqL,EAAM,IAAMC,EAAGC,cAAgB,KAAxC1E,CACrE,IAEGmE,CACT,CAEA,IA43DIQ,yBAOAC,GAn4DAC,UAAY,CACdhL,oBACAO,kBACAS,cACAK,sBACAW,gBACAG,0BACAqB,oCACAI,oBACAG,oCACAG,sBACAI,oBACAY,wBACAe,gCACAS,0BACAC,kBACAC,cACAG,kBACAC,8BACAK,4BACAM,gBACAC,kCACAQ,kCACAC,4BACAC,0CACAM,0BACAE,gCACAE,8CACAI,8CACAC,4CACAC,gDACAY,sCACAG,mEAGEY,KACA,WACI7K,KAAK8K,QAAU,GACf9K,KAAK+K,QAAU,EACnB,EAIAC,UAAY,CACZC,gBAAiB,IACjBC,gBAAiB,GACjBC,kBAAmB,IACnBC,gBAAiB,MAGjBC,IAAM,CACNC,OAAQ,SACRC,UAAW,YACXC,IAAK,MACLC,MAAO,QACPC,OAAQ,SACRC,WAAY,YACZC,SAAU,UACVC,YAAa,aACbC,WAAY,YACZC,MAAO,IACPC,IAAK,MACLC,KAAM,OACNC,QAAS,SACTC,UAAW,YAMXC,QAAU,SAAU1L,GAAU,OAAO,IAAInB,MAAM8M,KAAKC,IAAI5L,EAAQ,IAAI6L,KAAK,KAAKC,KAAK,GAAK,EAIxFC,UAAY,SAAUnJ,GAAS,OAAOA,EAAM+G,QAAQ,MAAO,GAAK,EAIhEqC,0BAA4B,SAAU/B,GACtC,IAAIgC,EAAUhC,EAAGgC,QAASC,EAAUjC,EAAGiC,QAASC,EAAgBlC,EAAGkC,cAAeC,EAAiBnC,EAAGmC,eAAgBC,EAAgBpC,EAAGoC,cAAeC,EAAWrC,EAAGqC,SAKlKC,EAAWH,EAAiBH,EAAQjM,OAASkM,EAAQlM,OACrDwM,EAAmBP,EAAQM,GAC3BE,EAAiBR,EAAQS,UAAU,EAAGH,GACtCI,EAAiBT,EAAQQ,UAAU,EAAGN,GACtCQ,EAAO,GAEX,GAAIH,IAAmBE,GAAkBP,EAAiB,EAEtD,OADAQ,EAAKxK,KAAK,CAAC+J,EAAcC,EAAiB,GAAIO,EAAeP,EAAiB,KACvEQ,EAEX,GAA+C,IAA3CH,EAAerM,QAAQuM,IAA0BN,IAChDC,EAAS5L,MAAQiK,IAAIC,QAAU0B,EAAS5L,MAAQiK,IAAIE,YACT,IAA3C4B,EAAerM,QAAQuM,KAA0BN,IACnB,IAA1BM,EAAe3M,QACZmM,EAAcQ,EAAe3M,OAAS,KAAOmM,EAAcQ,EAAe3M,SAAW,CAE7F,IAAI6M,EAAgB,GAKfR,GAA2C,IAA1BM,EAAe3M,QACjC4M,EAAKxK,KAAK,CAAC+J,EAAc,GAAIQ,EAAe,KAEhD,IAAK,IAAI9M,EAAI8M,EAAe3M,OAAQH,EAAI4M,EAAezM,OAAQH,IACvDsM,EAActM,KAAOgN,GAAiBV,EAActM,KAAOyK,UAAUC,kBACrEsC,EAAgBV,EAActM,GAC9B+M,EAAKxK,KAAK,CAACyK,EAAe,MAGlC,OAAOD,CACX,CAKA,GAAKP,IAC2C,IAA3CM,EAAevM,QAAQqM,IACpBN,EAAcC,EAAiB,KAAO9B,UAAUC,mBAClD8B,IAC8C,IAA3CM,EAAevM,QAAQqM,IACpBN,EAAcC,EAAiB,KAAO9B,UAAUC,iBAAmB,CAC3E,IAAIuC,EAASX,EAAc,GAC3B,IAAStM,EAAI8L,KAAKC,IAAI,EAAGa,EAAezM,OAAS,GAAIH,EAAIsM,EAAcnM,OAAQH,IAC3E,GAAIsM,EAActM,KAAOyK,UAAUC,gBAAiB,CAChDuC,EAASX,EAActM,GACvB,KACJ,CAEJ,MAAO,CAAC,CAACiN,EAAQH,EAAeP,EAAiB,IACrD,CAEA,MAAmD,MAA9CO,EAAeA,EAAe3M,OAAS,IACvC2M,EAAeA,EAAe3M,OAAS,KAAOwM,GAAgD,MAA5BL,EAAcI,GAC1E,CAAC,CAACJ,EAAcC,EAAiB,GAAI9B,UAAUC,kBAG7C,CAAC,CAAC4B,EAAcC,EAAiB,GAAIO,EAAeP,EAAiB,IAEtF,EAIIW,cAAgB,SAAUC,EAAKC,GAE/B,OADAD,EAAIC,EAAKC,QAAQ,IAAMD,EAAKE,KACrBH,CACX,EAIII,UAAY,SAAUC,EAAWC,EAAK1B,GAAO,OAAsB,OAAdyB,KAAyBC,GAAOA,EAAMD,GAAezB,GAAOA,EAAMyB,EAAc,EAErIE,SAAW,SAAU3K,GAAS,OAAOA,GAA4B,iBAAZ,IAAyB/D,MAAM2O,QAAQ5K,EAAQ,EACpG6K,cAAgB,SAAUC,GAAW,OAAOA,aAAmBC,WAAa,EAC5EC,WAAa,SAAUC,GAAU,OAAO,SAAUC,EAAMlL,GACxD,IAAImL,EAAQtQ,UAAUqQ,GAEtB,OADAC,EAAMF,GAAQjL,GACPmL,CACX,CAAG,EAICC,UAAY,SAAUpL,GAAS,OAAOA,OAAuC,EAI7EqL,oBAAsB,WAAc,QAASC,QAAU,EAIvDC,SAAW,SAAUvL,GAAS,OAAOoL,UAAUpL,IAA6B,iBAAZ,IAAyBwL,OAAOC,MAAMzL,EAAQ,EAI9G0L,WAAa,SAAU1L,GAAS,OAAO2L,SAAS3L,EAAO,GAAK,EAI5D4L,iBAAmB,SAAU5L,GAAS,OAAOuL,SAASG,WAAW1L,KAAW,WAAW8G,KAAK9G,EAAQ,EAIpG6L,MAAQ,SAAU7L,EAAO0K,EAAK1B,GAAO,OAAOD,KAAK2B,IAAI1B,EAAKD,KAAKC,IAAI0B,EAAK1K,GAAS,EAMjF8L,OAAS,WAET,IADA,IAAIC,EAAO,GACFC,EAAK,EAAGA,EAAK7O,UAAUC,OAAQ4O,IACpCD,EAAKC,GAAM7O,UAAU6O,GAEzB,OAAOlQ,OAAOgB,OAAOO,MAAMvB,OAAQiQ,EACvC,EAIIE,WAAa,SAAUpO,GAGvB,IAFA,IAAIwJ,EAAI6E,EACJC,EAAU,GACLH,EAAK,EAAGA,EAAK7O,UAAUC,OAAQ4O,IACpCG,EAAQH,EAAK,GAAK7O,UAAU6O,GAEhC,IAAKG,EAAQ/O,OACT,OAAOS,EAEX,IAAIuO,EAASD,EAAQ1H,QACrB,GAAIkG,SAAS9M,IAAW8M,SAASyB,GAC7B,IAAK,IAAItO,KAAOsO,EACRvB,cAAcuB,EAAOtO,IACrBD,EAAOC,GAAOsO,EAAOtO,IAEhB6M,SAASyB,EAAOtO,KAAWsO,EAAOtO,aAAgBuO,KAOvDP,OAAOjO,IAASqO,EAAK,CAAC,GAAMpO,GAAOsO,EAAOtO,GAAMoO,KAN3CrO,EAAOC,IAAS6M,SAAS9M,EAAOC,KACjCgO,OAAOjO,IAASwJ,EAAK,CAAC,GAAMvJ,GAAO,CAAC,EAAGuJ,IAE3C4E,WAAWpO,EAAOC,GAAMsO,EAAOtO,KAO3C,OAAOmO,WAAW5O,WAAM,EAAQ,CAACQ,GAAQuC,OAAO+L,GACpD,EAIIG,KAAO,WAAc,EAIrBC,WAAa,SAAUC,GAAM,MAAuB,mBAAT,CAAqB,EAIhEC,iBAAmB,SAAUvB,GAC7B,OAAKE,UAAUF,IAASO,MAAMP,EAAKwB,WACxB,EAEJlB,OAAON,EACTyB,cACAC,WACA5I,OAAO,GAChB,EAII6I,SAAW7B,WAAW,eAItB8B,0BAA4B,SAAUC,GACtC,IAAItN,EAASsN,GAAUA,EAAOC,MAAM,UACpC,OAAOvN,EAASA,EAAO,GAAGrC,OAAS,CACvC,EAII6P,mBAAqB,SAAUC,GAC/B,OAAOnE,KAAKoE,IAAI,GAAI,EAAID,EAC5B,EAIIE,oBAAsB,SAAUlC,EAAMmC,EAAMC,EAAOC,EAAKC,EAAMC,EAASC,EAASC,GAChF,SAAIzC,GACAA,EAAKyB,gBAAkBU,GACvBnC,EAAK0C,aAAeN,GACpBpC,EAAKlQ,YAAcuS,GACnBrC,EAAK2C,aAAeL,GACpBtC,EAAK4C,eAAiBL,GACtBvC,EAAK6C,eAAiBL,GACtBxC,EAAK8C,oBAAsBL,EAInC,EAIIM,YAAc,SAAUjO,GAAS,OAAOoL,UAAUpL,IAAUA,EAAM0M,SAAWnB,SAASvL,EAAM0M,UAAY,EAExGwB,qBAAuB,EACvBC,kBAAoB,IACpBC,sBAAwB,KACxBC,qBAAuB,IACvBC,4BAA8B,cAC9BC,gCAAkC,EAClCC,aAAe,IAEfC,gBAAkB,EAClBC,WAA4B,WAC5B,SAASA,EAAWrH,GAChB,IAAIsH,EAActH,EAAGsH,YAAaC,EAAoBvH,EAAGuH,kBAAmB7B,EAAS1F,EAAG0F,OAAQb,EAAK7E,EAAGwH,UAAWA,OAAmB,IAAP3C,GAAwBA,EAAI4C,EAAKzH,EAAGO,gBAAiBA,OAAyB,IAAPkH,EAAgBpH,UAAUE,gBAAkBkH,EAAIC,EAAK1H,EAAGrH,MAAOA,OAAe,IAAP+O,EAAgB,KAAOA,EAAIC,EAAK3H,EAAG4H,iBAAkBA,OAA0B,IAAPD,GAAuBA,EAkD5W,GAjDAtS,KAAK2Q,MAAO,EACZ3Q,KAAK4Q,OAAQ,EACb5Q,KAAKwO,MAAO,EACZxO,KAAKwS,OAAQ,EACbxS,KAAK+Q,SAAU,EACf/Q,KAAKgR,SAAU,EACfhR,KAAKiR,cAAe,EACpBjR,KAAKyS,WAAY,EACjBzS,KAAK0S,YAAc,KACnB1S,KAAK2S,eAAiB,GACtB3S,KAAK4S,WAAa,aAClB5S,KAAK8K,QAAU,CACX+H,EAAK,IACLC,EAAK,IACLC,EAAK,IACLjM,EAAK,IACL5H,EAAK,IACL8T,EAAK,IACLjN,EAAK,IACLzF,EAAK,IACL0E,EAAK,IACLiO,EAAK,KAETjT,KAAKkT,OAASlT,KAAKmT,iBACnBnT,KAAKmS,WAAY,EACjBnS,KAAKoT,sBAAwB,CACzBC,UAAW,KACXC,iBAAkB,CACdT,EAAK,CAAEvP,MAAO,KAAMkL,KAAM,KAAM+E,gBAAiB,GACjDT,EAAK,CAAExP,MAAO,KAAMkL,KAAM,KAAM+E,gBAAiB,GACjDR,EAAK,CAAEzP,MAAO,KAAMkL,KAAM,KAAM+E,gBAAiB,GACjDzM,EAAK,CAAExD,MAAO,KAAMkL,KAAM,KAAM+E,gBAAiB,GACjDrU,EAAK,CAAEoE,MAAO,KAAMkL,KAAM,KAAM+E,gBAAiB,GACjDP,EAAK,CAAE1P,MAAO,KAAMkL,KAAM,KAAM+E,gBAAiB,GACjDxN,EAAK,CAAEzC,MAAO,KAAMkL,KAAM,KAAM+E,gBAAiB,GACjDjT,EAAK,CAAEgD,MAAO,KAAMkL,KAAM,KAAM+E,gBAAiB,GACjDvO,EAAK,CAAE1B,MAAO,KAAMkL,KAAM,KAAM+E,gBAAiB,GACjDN,EAAK,CAAE3P,MAAO,KAAMkL,KAAM,KAAM+E,gBAAiB,KAGzDvT,KAAKwT,WAAW,CACZvB,YAAaA,EACbC,kBAAmBA,EACnB7B,OAAQA,EACR8B,UAAWA,EACXjH,gBAAiBA,EACjB5H,MAAOA,EACPiP,iBAAkBA,IAEjBjP,EAQDtD,KAAKkT,OAAS/U,UAAUmF,OARhB,CACRtD,KAAKkT,OAASlT,KAAKmT,iBAEnB,IADA,IAAIM,EAAezT,KAAK0T,iBAAiB1T,KAAKsD,MAAOtD,KAAKqQ,QAAQvF,QACzDvK,EAAI,EAAGA,EAAIkT,EAAa/S,OAAQH,IACrCP,KAAK2T,YAAYF,EAAalT,IAAI,EAE1C,CAIJ,CAk+CA,OAj+CAnB,OAAOuC,eAAeqQ,EAAWvS,UAAW,QAAS,CACjDuD,IAAK,WACD,OAAOhD,KAAKkT,MAChB,EACAjQ,IAAK,SAAUK,KACPA,GAAWA,aAAiBqM,QAIhC3P,KAAKkT,OAAS5P,EACdtD,KAAK4T,mBACT,EACAvN,YAAY,EACZxC,cAAc,IAElBzE,OAAOuC,eAAeqQ,EAAWvS,UAAW,WAAY,CACpDuD,IAAK,WAGD,IAFA,IAAI6Q,EAAW7I,UAAUI,gBACrB0I,EAAW1U,OAAO2U,KAAK/T,KAAKgU,KAAKC,MAC5B1T,EAAI,EAAGA,EAAIuT,EAASpT,OAAQH,IAAK,CACtC,IAAIa,EAAM0S,EAASvT,GACf+C,EAAQtD,KAAKgU,KAAKC,KAAK7S,GAC3B,GAAIkC,EAAM3E,MAAQ2E,EAAM4Q,UAAY5Q,EAAM6Q,SACtC7Q,EAAM3E,OAASqM,UAAUI,gBAAiB,CAC1CyI,EAAWvQ,EAAM3E,KACjB,KACJ,CACJ,CACA,OAAOkV,CACX,EACAxN,YAAY,EACZxC,cAAc,IAKlBmO,EAAWvS,UAAU+T,WAAa,SAAUY,GACxCpU,KAAKgU,KAAOI,EAAQnC,YACpBjS,KAAKkS,kBAAoBkC,EAAQlC,mBAAqB,OACtDlS,KAAKqQ,OAAS+D,EAAQ/D,OACtBrQ,KAAKmS,UAAYiC,EAAQjC,UACzBnS,KAAKqU,WAAarU,KAAKsU,mBAAmBtU,KAAK6T,UAC/C7T,KAAKuU,WAAavU,KAAKwU,cAAcxU,KAAK6T,UAC1C7T,KAAKkL,gBAAkBkJ,EAAQlJ,gBAC/BlL,KAAKuS,iBAAmB6B,EAAQ7B,gBACpC,EACAP,EAAWvS,UAAUgV,SAAW,SAAUnR,GACjCA,EAIKlF,QAAQkF,EAAOtD,KAAKkT,UAC1BlT,KAAKkT,OAAS/U,UAAUmF,GACxBtD,KAAK0U,gBAAe,KALpB1U,KAAKkT,OAASlT,KAAKmT,iBACnBnT,KAAK0U,gBAAe,IAMxB1U,KAAK4T,kBACT,EAIA5B,EAAWvS,UAAUkV,SAAW,WAC5B,IAAIC,EAAQ5U,KAEZ,OAAOA,KAAKgU,KAAKa,gBAAgB7U,KAAKqQ,OAAQrQ,KAAK6T,UAAUiB,QADlD,SAAUhO,EAAGtH,GAAK,OAAOsH,GAAgB,YAAXtH,EAAEqO,MAAiC,cAAXrO,EAAEqO,MAAwB+G,EAAMG,YAAYvV,EAAEoO,QAAQ,GAAK,IAClD,EAC9E,EAIAoE,EAAWvS,UAAUuV,SAAW,WAC5B,IAAK,IAAIzU,EAAI,EAAGA,EAAIP,KAAK4S,WAAWlS,OAAQH,IACxC,IAAKP,KAAK+U,YAAY/U,KAAK4S,WAAWrS,IAClC,OAAO,KAGf,OAAOpC,UAAU6B,KAAKsD,MAC1B,EAIA0O,EAAWvS,UAAUwV,kBAAoB,WAMrC,OAAO5W,WAAWoT,kBAAmB,EAAG,GAC5C,EAIAO,EAAWvS,UAAU0T,eAAiB,WAClC,OAAO7U,QAAQ0B,KAAKiV,oBACxB,EAIAjD,EAAWvS,UAAUyV,iBAAmB,SAAU7E,GAC9C,OAAOrQ,KAAKgU,KAAKmB,WAAWnV,KAAKgV,WAAY3E,EAAQrQ,KAAK6T,SAC9D,EAIA7B,EAAWvS,UAAU2V,iBAAmB,SAAUC,QACzB,IAAjBA,IAA2BA,EAAe,IAC9C,IAAIhF,EAASgF,GAAgBrV,KAAKqQ,OAC9BiF,EAAOtV,KAAKgU,KAAKmB,WAAWnV,KAAKsD,MAAO+M,EAAQrQ,KAAK6T,UACrD0B,EAAOvV,KAAK0T,iBAAiB1T,KAAKsD,MAAO+M,GAC7C,IAAKrQ,KAAKuS,kBAAoBvS,KAAKoT,sBAAsBC,UAAW,CAIhE,IAHA,IAAImC,EAAuB,GACvBC,EAAgBzV,KAAKgU,KAAKmB,WAAWnV,KAAKsD,MAAO+M,EAAQrQ,KAAK6T,UAC9D6B,EAAiB1V,KAAK2V,yBAAyBtF,GAC1C9P,EAAI,EAAGA,EAAIkV,EAAc/U,OAAQH,IAAK,CAC3C,IAAIiN,EAAS+H,EAAKzK,QAAQvK,GAC1B,GAA6B,YAAzBgV,EAAKxK,QAAQxK,GAAGsN,KAChB2H,GAAwBF,EAAK/U,QAE5B,GAAIP,KAAK4V,wBAAwBpI,GAAS,CAC3C,IAAIqI,EAAkB7V,KAAK8V,mBAAmBP,EAAMhV,GACpD,GAAe,MAAXiN,EAAgB,CAChB,IAAIuI,GAAgB/G,WAAWhP,KAAK4V,wBAAwBpI,IAAWuE,iBAAiB7B,WACxF,GAAI2F,EAAgBnV,OAASmR,gCACzB2D,GAAwBE,EAAelI,GAAQjN,QAG/C,GAAIP,KAAK4V,wBAAwBpI,GAE7BgI,GADwBpJ,QAAQyJ,EAAgBnV,OAASqV,EAAarV,QAAUqV,EAGhFxV,GAAKsV,EAAgBnV,OAAS,OAG9B8U,GAAwBE,EAAelI,GAAQjN,EAG3D,MAEI,GAAIP,KAAK4V,wBAAwBpI,GAAS,CAClCuI,EAAe/V,KAAK4V,wBAAwBpI,GAAQ0C,WAExDsF,GADwBpJ,QAAQyJ,EAAgBnV,OAASqV,EAAarV,QAAUqV,EAGhFxV,GAAKsV,EAAgBnV,OAAS,CAClC,MAEI8U,GAAwBE,EAAelI,GAAQjN,EAG3D,MAEIiV,GAAwBF,EAAK/U,EAErC,CACA+U,EAAOE,CACX,CAEA,OADaxV,KAAKgW,MAAMV,EAAMC,EAElC,EAIAvD,EAAWvS,UAAUkW,yBAA2B,SAAUN,GACtD,IAAIT,EAAQ5U,UACS,IAAjBqV,IAA2BA,EAAe,IAC9C,IAAIhF,EAASgF,GAAgBrV,KAAKqQ,OAC9B4F,EAA0B,CAC1BpD,EAAK,GACLC,EAAK,GACLC,EAAK,GACLjM,EAAK,GACL5H,EAAK,GACL8T,EAAK,GACLjN,EAAK,GACLzF,EAAK,GACL0E,EAAK,GACLiO,EAAK,IAST,OAPA7T,OAAO2U,KAAK/T,KAAKoT,sBAAsBE,kBAAkB4C,SAAQ,SAAU9U,GACvE,IAAIoN,EAAOoG,EAAMuB,mBAAmB/U,GAAKoN,KACzC,GAAIA,EAAM,CACN,IAAI4H,EAAuBxB,EAAMZ,KAAKmB,WAAW3G,EAAM6B,EAAQuE,EAAMf,UACrEoC,EAAwB7U,GAAOgV,CACnC,CACJ,IACOH,CACX,EACAjE,EAAWvS,UAAUiV,eAAiB,SAAUpR,GAE5C,IADA,IAAImQ,EAAezT,KAAK0T,iBAAiB1T,KAAKsD,MAAOtD,KAAKqQ,QAAQvF,QACzDvK,EAAI,EAAGA,EAAIkT,EAAa/S,OAAQH,IACrCP,KAAK2T,YAAYF,EAAalT,GAAI+C,EAE1C,EAIA0O,EAAWvS,UAAUsV,YAAc,SAAUvH,GACzC,OAAQA,GACJ,IAAK,IAAK,OAAOxN,KAAK2Q,KACtB,IAAK,IACL,IAAK,IAAK,OAAO3Q,KAAK4Q,MACtB,IAAK,IAAK,OAAO5Q,KAAKwO,KACtB,IAAK,IAAK,OAAOxO,KAAKwO,MAAQxO,KAAK4Q,OAAS5Q,KAAK2Q,KACjD,IAAK,IACL,IAAK,IAAK,OAAO3Q,KAAKwS,MACtB,IAAK,IACL,IAAK,IAAK,OAAOxS,KAAKyS,UACtB,IAAK,IAAK,OAAOzS,KAAK+Q,QACtB,IAAK,IAAK,OAAO/Q,KAAKgR,QACtB,IAAK,IAAK,OAAOhR,KAAKiR,aACtB,QACI,OAAO,EAEnB,EACAe,EAAWvS,UAAUkU,YAAc,SAAUnG,EAAQlK,GACjD,OAAQkK,GACJ,IAAK,IAEDxN,KAAK2Q,KAAOrN,GACE,IAAVA,GACAtD,KAAKkT,OAAOmD,YAAY5E,mBAE5B,MACJ,IAAK,IAEDzR,KAAK4Q,MAAQtN,GACC,IAAVA,GACItD,KAAKuS,kBACLvS,KAAKkT,OAAOoD,SAAS,GAG7B,MACJ,IAAK,IACDtW,KAAKwO,KAAOlL,EACZ,MACJ,IAAK,IACL,IAAK,IACDtD,KAAKwS,MAAQlP,EACb,MACJ,IAAK,IACL,IAAK,IACDtD,KAAKyS,UAAYnP,EACjB,MACJ,IAAK,IACDtD,KAAK+Q,QAAUzN,EACf,MACJ,IAAK,IACDtD,KAAKgR,QAAU1N,EACf,MACJ,IAAK,IACDtD,KAAKiR,aAAe3N,EAKxBtD,KAAKgV,YACLhV,KAAK4T,kBAEb,EACA5B,EAAWvS,UAAU8W,WAAa,SAAU/I,EAAQgJ,GAChD,GAAK9H,UAAUlB,IAAYkB,UAAU8H,IAAsB,IAAXA,EAAhD,CAGA,IAEIC,EAFAC,EAAWvY,UAAU6B,KAAKsD,OAC1BqT,GAAe,EAEfC,EAAqB,MAAXpJ,EACVqJ,EAAmB,MAAXrJ,GAA6B,MAAXA,EAC1BsJ,EAAe9W,KAAK+U,YAAYvH,GACpC,GAAKxN,KAAKuS,mBAAqBsE,IAASD,EA8KpC,OAAQpJ,GACJ,IAAK,IACDkJ,EAASL,YAAYK,EAASzG,cAAgBuG,GAC9C,MACJ,IAAK,IACDE,EAAWnY,UAAUyB,KAAKsD,MAAOkT,GACjC,MACJ,IAAK,IACL,IAAK,IACDE,EAASK,QAAQL,EAASpY,UAAYkY,GACtC,MACJ,IAAK,IACL,IAAK,IACDE,EAASM,SAASN,EAASvF,WAAaqF,GACxCG,GAAe,EACf,MACJ,IAAK,IACDD,EAASO,WAAWP,EAAStF,aAAeoF,GAC5CG,GAAe,EACf,MACJ,IAAK,IACDD,EAASQ,WAAWR,EAASrF,aAAemF,GAC5CG,GAAe,EACf,MACJ,IAAK,IACDD,EAASS,gBAAgBT,EAASpF,kBAAoBkF,GACtD,MACJ,IAAK,IACDE,EAASM,SAASN,EAASvF,WAAc,GAAKqF,GAC9CG,GAAe,MA3MuB,CAC9C,IAAIrD,EAAmBtT,KAAKoT,sBAAsBE,kBAAoB,CAAC,EACnE8D,EAAuBpX,KAAK4V,wBAAwBpI,GACpDmD,EAAO2C,EAAiBtO,EAAE1B,OAASoT,EAASzG,cAC5CW,EAAQ0C,EAAiBP,EAAEzP,OAASoT,EAASxF,WAC7CL,EAAMyC,EAAiBpU,EAAEoE,OAASgQ,EAAiBT,EAAEvP,OAASoT,EAASpY,UACvEwS,EAAOwC,EAAiBN,EAAE1P,OAASgQ,EAAiBR,EAAExP,OAASoT,EAASvF,WACxEJ,EAAUuC,EAAiBvN,EAAEzC,OAASoT,EAAStF,aAC/CJ,EAAUsC,EAAiBhT,EAAEgD,OAASoT,EAASrF,aAC/CJ,EAAeqC,EAAiBL,EAAE3P,OAASoT,EAASpF,kBACxD,OAAQ9D,GACJ,IAAK,IACDmD,GAAQ6F,EACR,MACJ,IAAK,IACD5F,GAAS4F,EACT,MACJ,IAAK,IACL,IAAK,IACD3F,GAAO2F,EASf,GAAe,MAAXhJ,EAAgB,CAChB,IAAKoD,EAAQ,GAAKA,EAAQ,KAClBkG,EAGA,OAFA9W,KAAK2T,YAAYnG,GAAQ,QACzBxN,KAAKqX,uBAAuB7J,GAIpC,IAAKsJ,EAAc,CACf,GAAIlG,EAAQ,EACRA,EAAQzB,MAAayB,EAAQ,GAAM,EAArB,GAAyB,EAAG,QAEzC,CACD,IAAI0G,EAAa5I,UAAU0I,GACvBxG,GACE4F,EAASzE,iBAAmB,GAClCnB,EAAQzB,MAAMmI,EAAY,EAAG,GACjC,CACA1G,EAAQzB,MAAMyB,EAAO,EAAG,GAC5B,CACAA,EAAQzB,MAAMyB,EAAO,EAAG,GAC5B,MACK,GAAe,MAAXpD,EACL,GAAIsJ,GACA,GAAIjG,GAAO,GAAKA,EAAM,GAGlB,OAFA7Q,KAAK2T,YAAYnG,GAAQ,QACzBxN,KAAKqX,uBAAuB7J,QAI/B,IAAKsJ,EAAc,CACpB,GAAIpI,UAAU0I,KACNvG,GAAO,GAAKA,EAAM,IAGlB,OAFA7Q,KAAK2T,YAAYnG,GAAQ,QACzBxN,KAAKqX,uBAAuB7J,GAIpC,GAAIgJ,EAAS,EAAG,CACZ,IAAIe,EAAW7I,UAAU0I,GAAwBvG,EAAW,GAAKxE,KAAKmL,IAAIhB,EAAS,IAA5B,EACvD3F,EAAM1B,MAAMoI,EAAU,EAAG,GAC7B,KACK,CACGA,EAAW7I,UAAU0I,GAAwBvG,EAAM2F,EAAS,GAChE3F,EAAM1B,MAAMoI,EAAU,EAAG,GAC7B,CACA1G,EAAM1B,MAAM0B,EAAK,EAAG,GACxB,CAEJ,IAAI4G,EAAgBpZ,WAAWsS,EAAMC,EAAOC,EAAKC,EAAMC,EAASC,EAASC,GACrEyG,EAAoBd,GAAWC,EAC/B7W,KAAK2X,0BAA0BjB,EAAUlJ,EAAQoJ,EAAUhG,EAAQC,GACnE,KACA+G,EAAsBlH,oBAAoB+G,EAAe9G,EAAMC,EAAOC,EAAKC,EAAMC,EAASC,EAASC,GACnGjR,KAAKgV,YAActE,oBAAoB+G,EAAe9G,EAAMC,EAAOC,EAAKC,EAAMC,EAASC,EAASC,IAChGyF,EAAWvY,UAAUsZ,GACrBzX,KAAK6X,2BAEAjB,GAAWc,EACZA,EAAkBxG,aAAeN,EAC7B5Q,KAAK+U,YAAY,KACb6C,GACAlB,EAAWvY,UAAUsZ,GACrBzX,KAAKqX,uBAAuB7J,KAG5BiJ,GAAmB,EACnBzW,KAAK8X,mBAAmBtK,EAAQ,CAC5BlK,MAAOsN,EACPpC,KAAMrQ,UAAUuZ,GAChBnE,gBAAiBiD,EACjBnD,UAAWlV,UAAU6B,KAAKsD,SAE9BtD,KAAK2T,YAAYnG,GAAQ,IAGxBoK,GACL5X,KAAKqX,uBAAuB7J,GAC5BkJ,EAAWvY,UAAUsZ,GACjBzX,KAAK+U,YAAY,MAAQ/U,KAAK+U,YAAY,OAE1C/U,KAAK2T,YAAY,KAAK,GACtB3T,KAAKqX,uBAAuB,QAIhCrX,KAAKqX,uBAAuB7J,GAC5BkJ,EAAWvY,UAAUuZ,KAIzBjB,GAAmB,EACnBzW,KAAK8X,mBAAmBtK,EAAQ,CAC5BlK,MAAOsN,EACPpC,KAAMrQ,UAAUuZ,GAChBnE,gBAAiBiD,EACjBnD,UAAWlV,UAAU6B,KAAKsD,SAE9BtD,KAAK2T,YAAYnG,GAAQ,IAGxBqJ,GAASa,IACVA,EAAkBpZ,YAAcuS,EAC5B7Q,KAAK+U,YAAY,KACb6C,GACAlB,EAAWvY,UAAUsZ,GACrBzX,KAAKqX,uBAAuB7J,KAG5BiJ,GAAmB,EACnBzW,KAAK8X,mBAAmBtK,EAAQ,CAC5BlK,MAAOuN,EACPrC,KAAMrQ,UAAUuZ,GAChBnE,gBAAiBiD,EACjBnD,UAAWlV,UAAU6B,KAAKsD,SAE9BtD,KAAK2T,YAAYnG,GAAQ,IAGxBoK,GACLlB,EAAWvY,UAAUsZ,GACrBzX,KAAKqX,uBAAuB7J,GACxBxN,KAAK+U,YAAY,MAAQ/U,KAAK+U,YAAY,OAE1C/U,KAAK2T,YAAY,KAAK,GACtB3T,KAAKqX,uBAAuB,QAIhCrX,KAAKqX,uBAAuB7J,GAC5BkJ,EAAWvY,UAAUuZ,KAIzBjB,GAAmB,EACnBzW,KAAK8X,mBAAmBtK,EAAQ,CAC5BlK,MAAOuN,EACPrC,KAAMrQ,UAAU6B,KAAKsD,OACrBiQ,gBAAiBiD,EACjBnD,UAAWlV,UAAU6B,KAAKsD,SAE9BtD,KAAK2T,YAAYnG,GAAQ,IAGrC,CAoCIxN,KAAK+X,2BACLrB,EAAW1W,KAAKgY,iBAAiBtB,IAEjCC,IAAiB3W,KAAKmS,YAAauE,EAASpY,UAAc0B,KAAKkT,OAAO5U,WAMrEmY,IACDzW,KAAK2T,YAAYnG,GAAQ,GACzBxN,KAAKkT,OAASwD,EACV1W,KAAKgV,YACLhV,KAAK4T,mBApOb,CAuOJ,EAIA5B,EAAWvS,UAAUwY,UAAY,SAAUtN,GAsBvC,IArBA,IAAI6C,EAAS7C,EAAG6C,OAAQ0K,EAAcvN,EAAGuN,YAAaC,EAAoBxN,EAAGwN,kBAAmBC,EAAoBzN,EAAGyN,kBAAmBC,EAAgB1N,EAAG2N,aAAcC,EAAa5N,EAAG4N,WAAYC,EAAiB7N,EAAG6N,eACvNzL,GAAiBqL,EACjBK,EAAYzY,KAAK0T,iBAAiB1T,KAAKsD,MAAOtD,KAAKqQ,QACnDqI,EAAoBD,EAAU1N,QAC7B4N,QAAO,SAAUlV,GAAK,MAAkB,YAAXA,EAAEoK,IAAoB,IACnDH,KAAI,SAAUjK,EAAGmV,GAClB,MAAO,CACHC,cAAeD,EACf/K,KAAMpK,EAAEoK,KACRD,QAASnK,EAAEmK,QACXkL,QAAS,GAEjB,IACIC,EAAgBN,EAAU1N,QACzB2C,KAAI,SAAUjK,GACf,MAAO,CACHoK,KAAMpK,EAAEoK,KACRD,QAASnK,EAAEmK,QACX0H,KAAM,GAEd,IACS/U,EAAI,EAAGA,EAAImY,EAAkBhY,OAAQH,IAAK,CAE/C,IADA,IAAIyY,EAAWN,EAAkBnY,GACxBwG,EAAI,EAAGA,EAAIiS,EAASpL,QAAQlN,OAAQqG,IACrC2R,EAAkBnY,EAAIwG,KACtB2R,EAAkBnY,EAAIwG,GAAG+R,QAAUE,EAASpL,QAAQ7G,IAG5DxG,GAAKyY,EAASpL,QAAQlN,OAAS,CACnC,CACA,IAASH,EAAI,EAAGA,EAAIwY,EAAcrY,OAAQH,IAAK,CAE3C,IADIyY,EAAWD,EAAcxY,GACpBwG,EAAI,EAAGA,EAAIiS,EAASpL,QAAQlN,OAAQqG,IACrCgS,EAAcxY,EAAIwG,KAClBgS,EAAcxY,EAAIwG,GAAGuO,KAAO0D,EAASpL,QAAQ7G,IAGrDxG,GAAKyY,EAASpL,QAAQlN,OAAS,CACnC,CACA,IAGIuY,EAAc,CACd3V,MAAO,KACP4V,cAAc,EACdC,UANkBpM,GAA4B,MAAXS,GAAkBiL,EAAU1N,QAC9D4N,QAAO,SAAUlV,GAAK,MAAkB,UAAXA,EAAEoK,IAAkB,IACjDuL,MAAK,SAAU3V,GAAK,OAAOA,EAAEmK,QAAQlN,OAASmR,+BAAiC,IAKhFwH,oBAAoB,GAExB,IAAKnB,EAAa,CACd,IAAInL,EAkBA,OAHA/M,KAAKsZ,mBACLtZ,KAAK2T,YAAYnG,GAAQ,GACzBxN,KAAKqX,uBAAuB7J,GACrB4B,OAAO6J,EAAa,CAAE3V,MAAO,KAAM4V,cAAc,IAjBxD,IAAS3Y,EAAI,EAAGA,EAAImY,EAAkBhY,OAAQH,IAAK,CAC/C,IAAIuY,EAAUJ,EAAkBnY,GAAGuY,QAC/BS,EAA4BlB,EAAcmB,WAAWV,GACrDW,EAA0BpB,EAAcqB,SAASZ,GACjDa,EAAiCtB,EAAcvX,QAAQgY,EAAUA,IAAY,EACjF,GAAIS,GAA6BE,GAA2BE,EAIxD,OAHA3Z,KAAKsZ,mBACLtZ,KAAK2T,YAAYnG,GAAQ,GACzBxN,KAAKqX,uBAAuB7J,GACrB4B,OAAO6J,EAAa,CAAE3V,MAAO,KAAM4V,cAAc,GAEhE,CAQR,CACA,IAAIU,EAAW5Z,KAAKgU,KAAKmB,WAAWnV,KAAKsD,MAAOtD,KAAKqQ,OAAQrQ,KAAK6T,UAC9DgG,EAAapB,EAAU3N,QACvBgP,GAAW,EACXlW,EAAS,GACTmW,EAAU,GACVhE,EAAe,GACfiE,EAAa,GACbC,EAAa,GACbC,EAAS,GACTC,EAAsB,GAC1B,IAAS5Z,EAAI,EAAGA,EAAIwY,EAAcrY,OAAQH,IACtC4Z,GAAuBpB,EAAcxY,GAAG+U,KAE5C,IAAI8E,EAAkBpa,KAAKqQ,SAAWwJ,GACjC7Z,KAAKqQ,SAAW8J,GAChBna,KAAKqQ,SAAWmI,GAChBxY,KAAKqQ,OAAO3P,SAAW8X,EAAe9X,OACvC2Z,GAAsBD,EAAiBD,EAAsB3B,GAAgB1X,QAAQ0M,GAErF8M,GADoBF,EAAiBD,EAAsB3B,GAAgB+B,YAAY/M,GACpD6M,EAAqB,EACxDG,EAAyBhC,EAAe9X,OAAS2X,EAAc3X,OACnE,GAAIqM,IAAmBA,IAAkB/M,KAAKuS,iBAAmB,CAC7D,IAAShS,EAAI,EAAGA,EAAIqZ,EAASlZ,OAAQH,IAAK,CACtC,GAAIsZ,EAAWtZ,KAAOiN,EAElBuM,GADe/Z,KAAK+U,YAAYvH,GACVoM,EAASrZ,GAAK,IAChCia,EAAyB,EACrBzE,EAAarV,OAAS8Z,EAAyBF,IAC/CvE,GAAgBsC,EAAc9X,IAAM,IAIxCwV,GAAgBsC,EAAc9X,IAAM,GAExCuZ,GAAW,OAELA,GAKNI,GAAUN,EAASrZ,GACnB0Z,GAAcL,EAASrZ,KALvBqD,GAAUgW,EAASrZ,GACnByZ,GAAcJ,EAASrZ,GAM/B,CACA,GAAI6Z,IACID,EAAoBzZ,OAAS2X,EAAc3X,OAC3CqV,GAAgBmC,GAEVK,IAAcC,EAAe9X,OAAS2X,EAAc3X,QAG1DqV,EAAarV,OAAS4Z,GACtB,OAAOlL,OAAO6J,EAAa,CAAE3V,MAAO,KAAM4V,cAAc,IAGhE,IAAKkB,GAAmBA,IAAmBpa,KAAKuS,iBAAmB,CAC/DwH,EAAU,GACVhE,EAAe,GACfnS,EAAS,GACTsW,EAAS,GACTJ,GAAW,EACX,IAASvZ,EAAI,EAAGA,EAAIiY,EAAe9X,OAAQH,IAAK,CAC5C,GAAIiY,EAAejY,KAAOiN,EAEtBuM,GADe/Z,KAAK+U,YAAYvH,GACVoM,EAASrZ,IAAM,GAAK,IACtCia,EAAyB,EACrBzE,EAAarV,OAAS8Z,EAAyBF,IAC/CvE,GAAgBsC,EAAc9X,IAAM,IAIxCwV,GAAgBsC,EAAc9X,IAAM,GAExCuZ,GAAW,OAELA,EAINI,GAAU7B,EAAc9X,EAAIia,IAA2B,GAHvD5W,GAAUyU,EAAc9X,IAAM,EAKtC,CACIiY,EAAe9X,OAAS2X,EAAc3X,SACtCqV,GAAgBmC,EAExB,CACJ,CACA,IAAKnL,EACD,GAAI/M,KAAKuS,iBAAkB,CACvBwH,EAAU,GACVhE,EAAe,GACfnS,EAAS,GACTsW,EAAS,GACTJ,GAAW,EACX,IAASvZ,EAAI,EAAGA,EAAIqZ,EAASlZ,OAAQH,IAAK,CACtC,GAAIsZ,EAAWtZ,KAAOiN,EAElBuM,GADe/Z,KAAK+U,YAAYvH,GACVoM,EAASrZ,GAAK,IACpCuZ,GAAW,OAELA,EAINI,GAAUN,EAASrZ,GAHnBqD,GAAUgW,EAASrZ,EAK3B,CACJ,MAEIwZ,EAAU5B,EAAoBpC,EAAegE,EAGrD,IAAIU,EAAa,KACb7J,EAAQ5Q,KAAK0a,WAAWxC,GACxByC,EAAY3a,KAAK4a,eAAe1C,EAAa1K,GAC7CqN,EAAoC,MAAhB3C,EACpBxF,EAAc1S,KAAK0S,aAAe,CAAC,EACnCmI,GACqB,MAAjB9E,IACAA,EAAegE,GAKC,IAHF/K,WAAWmJ,EACzBD,GACCnL,EAAgBgJ,EAAegE,GAAW7B,IACrBlY,KAAK8a,YAAYrC,EAAU1N,QAASyC,IAC1DxN,KAAK+a,qBAAqBvN,IAI9BxN,KAAKsZ,mBAET,IAAI0B,EAAchb,KAAKgb,YAAYvC,EAAU1N,QAASyC,GAClDyN,EAAeD,EAAcA,EAAYpN,QAAU,KACnDsN,EAAgBlb,KAAKkb,cAAcD,IAAiBA,EAAava,OACrE,GAAIqM,GACIwL,IAAexC,EAEf,OADA/V,KAAK2T,YAAYnG,GAAQ,GAClB4B,OAAO6J,EAAa,CAAE3V,MAAO,KAAM4V,cAAc,IAGhE,IAAIiC,EAAmBpB,EAAQrZ,OAAS,EACpC0a,GAAW,EACXC,EAAStO,EAAgBgJ,EAAegE,EAC5C,IAASxZ,EAAI8L,KAAKC,IAAI,EAAG6O,GAAmB5a,GAAKwZ,EAAQrZ,QAChD0a,EADwD7a,IAAK,CAIlE8a,EAASlD,EACLD,EACAnL,EACIgJ,EACCgE,EAAQ3M,UAAU7M,GAAK2X,GAC5BnL,GAAkB/M,KAAKuS,mBACvB6I,GAAW,EACXC,EAAS5O,UAAU4O,GAEnBA,EAASjP,QAAQ8O,EAAgBG,EAAO3a,QAAU2a,GAEtD,IAAIC,EAAerM,SAASoM,EAAQ,IAChCE,EAAsB3X,EAASyX,EAASnB,EAC5CO,EAAaza,KAAKgU,KAAKwH,UAAUD,EAAqBvb,KAAKqQ,OAAQrQ,KAAK6T,UACxE,IAAI4H,GAA+B,EAC/B1O,IAAkBwE,YAAYkJ,IAQ1Bza,KAAKuS,mBACLkI,EAAaza,KAAKgU,KAAKwH,UAAUxB,EAAaqB,EAASpB,EAAYja,KAAKqQ,OAAQrQ,KAAK6T,UACrF4H,GAA+B,GAGvC,IAAIC,GAAyB3M,MAAME,SAASiJ,EAAa,MAASnL,GAAiBwL,GAA8B,KAAhBL,EACjG,IAAKuC,IAAe1L,MAAMuM,IAAiBI,GAAyB1b,KAAKuS,iBAAkB,CACvF,GAAI/E,IAAWsE,eAAiBlB,EAAO,CAEnC,IAAI+K,EAAcL,EAAevJ,gBAC7B4J,GAAe,GAAKA,EAAc,MAClClB,EAAatc,UAAU6B,KAAKsD,QACjBgT,SAASqF,GAChBlB,EAAWvJ,aAAeyK,IAC1BlB,EAAajc,eAAeD,UAAUkc,GAAa,KAG/D,CACe,MAAXjN,IACAiN,EAAapc,WAAW4Q,SAASoM,EAAQ,IAAKrb,KAAK4Q,MAAQ5Q,KAAKsD,MAAM4N,WAAa,EAAGlR,KAAKwO,KAAOxO,KAAKsD,MAAMhF,UAAY,EAAG0B,KAAKwS,MAAQxS,KAAKsD,MAAM6N,WAAa,EAAGnR,KAAK+Q,QAAU/Q,KAAKsD,MAAM8N,aAAe,EAAGpR,KAAKgR,QAAUhR,KAAKsD,MAAM+N,aAAe,EAAGrR,KAAKiR,aAAejR,KAAKsD,MAAMgO,kBAAoB,IACzSvE,GAAiBwE,YAAYkJ,KAC7B1N,GAAiB0N,IAAgBza,KAAKwO,MAAQiM,EAAWnc,YAAc0B,KAAKsD,MAAMhF,YACpFmc,EAAajc,eAAeD,UAAUkc,GAAa,KAG/D,CACA,GAAK1N,GAAiBwE,YAAYkJ,KAAkB1N,GAAiB0N,EAAa,CAG9E,IAAImB,EAAa5b,KAAK6b,8BAA8B,CAChDC,uBAAwBL,EACxBJ,OAAQA,EACRJ,aAAcA,EACdjB,WAAYA,EACZC,WAAYA,EACZrW,OAAQA,EACRsW,OAAQA,EACR1M,OAAQA,EACR0N,cAAeA,EACfxI,YAAaA,IAEbwG,EAAe0C,EAAW1C,aA4C9B,OA3CIlZ,KAAK+X,2BACL0C,EAAaza,KAAKgY,iBAAiByC,IAExB,MAAXjN,GAAkBiN,EAAWtJ,YAAc,IAC3CnR,KAAK2T,YAAY,KAAK,GAE1B3T,KAAKkT,OAASuH,EACdza,KAAK2T,YAAYnG,GAAQ,GACzBxN,KAAKqX,uBAAuB7J,GACvBxN,KAAKuS,mBACS,MAAX/E,EACIxN,KAAK+U,YAAY,MAAQ/U,KAAK+U,YAAY,OAE1C/U,KAAK2T,YAAY,KAAK,GACtB3T,KAAKqX,uBAAuB,MAGhB,MAAX7J,GACDxN,KAAK+U,YAAY,MAAQ/U,KAAK+U,YAAY,OAE1C/U,KAAK2T,YAAY,KAAK,GACtB3T,KAAKqX,uBAAuB,MAG/BrX,KAAKqZ,uBACNrZ,KAAK6X,0BACA+D,EAAWG,aAAcH,EAAW1C,cAAiBlZ,KAAKuS,kBAC5C,MAAX/E,GAGgB,MAAXA,GACgC,KAAjCoO,EAAWI,mBACXhc,KAAKsD,MAAM4N,aAAeM,uBAK1B0H,GAAe,KAM5B9J,OAAO6J,EAAa,CAAE3V,MAAOtD,KAAKsD,MAAO4V,aAAcA,GAClE,CACJ,CACA,GAAItI,IACA6J,EAAaza,KAAKgU,KAAKwH,UAAU5X,EAASgN,EAAQsJ,EAAQla,KAAKqQ,OAAQrQ,KAAK6T,WAIxE,OAFA7T,KAAKkT,OAASuH,EACdza,KAAK2T,YAAYnG,GAAQ,GAClB4B,OAAO6J,EAAa,CAAE3V,MAAOtD,KAAKsD,MAAO4V,cAAc,IAGtE,GAAIyB,IACAF,EAAaza,KAAKgU,KAAKwH,UAAU5X,EAAS+W,EAAYT,EAAQla,KAAKqQ,SAC/DrQ,KAAKgU,KAAKwH,UAAUxB,EAAaW,EAAYV,EAAYja,KAAKqQ,SAI9D,OAFArQ,KAAKkT,OAASuH,EACdza,KAAK2T,YAAYnG,GAAQ,GAClB4B,OAAO6J,EAAa,CAAE3V,MAAOtD,KAAKsD,MAAO4V,cAAc,IAMtE,GAHI2B,GACA7a,KAAK2T,YAAYnG,GAAQ,IAExBxN,KAAKuS,iBAAkB,CACxB,IAAI0J,OAAgB,EAChBC,EAAcnP,EAAgBgJ,EAAesF,EAC7Cc,GAAcnN,WAAWkN,GAC7B,GAAIrN,SAASsN,KAAgBjN,iBAAiBgN,GAAc,CACxD,GAAgB,MAAX1O,IAAmB2O,IAAe,GAAKA,GAAc,KAC1C,MAAX3O,IAAmB2O,IAAe,GAAKA,GAAc,IAAM,CAC5D,GAAIpP,EACA,OAAOqC,OAAO6J,EAAa,CACvB3V,MAAO,KACP4V,cAAc,IASlBiD,GAAcnN,WADdkN,EAAchE,EAGtB,CACA,IAAKrJ,SAASsN,MAAiBjN,iBAAiBgN,GAC5C,OAAO9M,OAAO6J,EAAa,CAAE3V,MAAO,KAAM4V,cAAc,IAE5D+C,EAA2B,MAAXzO,EACZ2O,GAAcpK,gBACdoK,GACJ,IAAIvF,GAAqB,MAAXpJ,EACVqJ,GAAmB,MAAXrJ,EACRkJ,GAAWvY,UAAU6B,KAAKkT,QAC1BI,GAAmBtT,KAAKoT,sBAAsBE,kBAAoB,CAAC,EACnE3C,GAAO2C,GAAiBtO,EAAE1B,OAASoT,GAASzG,cAE5CmM,GAAUxF,GAAUqF,EAAgB3I,GAAiBP,EAAEzP,OAASoT,GAASxF,WAEzEL,GAAMgG,GAAQoF,EAAgB3I,GAAiBpU,EAAEoE,OAASgQ,GAAiBT,EAAEvP,OAASoT,GAASpY,UAC/FwS,GAAOwC,GAAiBN,EAAE1P,OAASgQ,GAAiBR,EAAExP,OAASoT,GAASvF,WACxEJ,GAAUuC,GAAiBvN,EAAEzC,OAASoT,GAAStF,aAC/CJ,GAAUsC,GAAiBhT,EAAEgD,OAASoT,GAASrF,aAC/CJ,GAAeqC,GAAiBL,EAAE3P,OAASoT,GAASpF,kBACpDmG,GAAgBpZ,WAAWsS,GAAMyL,GAASvL,GAAKC,GAAMC,GAASC,GAASC,IACvE2G,GAAsBlH,oBAAoB+G,GAAe9G,GAAMyL,GAASvL,GAAKC,GAAMC,GAASC,GAASC,IACrGyG,GAAoBd,IAAWC,GAC/B7W,KAAK2X,0BAA0BjB,GAAUlJ,EAAQoJ,GAAUwF,GAAUvL,IACrE,KACA4F,IAAmB,EAmFvB,GAlFIG,IAAWc,GACPA,GAAkBxG,aAAekL,GAC7Bpc,KAAK+U,YAAY,KACb6C,IACAlB,GAAWvY,UAAUsZ,IACrBzX,KAAKqX,uBAAuB7J,KAG5BiJ,IAAmB,EACnBzW,KAAK8X,mBAAmBtK,EAAQ,CAC5BlK,MAAO8Y,GACP5N,KAAMrQ,UAAUuZ,IAChBrE,UAAWlV,UAAU6B,KAAKsD,SAE9BtD,KAAK2T,YAAYnG,GAAQ,IAGxBoK,IACL5X,KAAKqX,uBAAuB7J,GAC5BkJ,GAAWvY,UAAUsZ,IACjBzX,KAAK+U,YAAY,MAAQ/U,KAAK+U,YAAY,OAE1C/U,KAAK2T,YAAY,KAAK,GACtB3T,KAAKqX,uBAAuB,QAIhCrX,KAAKqX,uBAAuB7J,GAC5BkJ,GAAWvY,UAAUuZ,MAIzBjB,IAAmB,EACnBzW,KAAK8X,mBAAmBtK,EAAQ,CAC5BlK,MAAO8Y,GACP5N,KAAMrQ,UAAUuZ,IAChBrE,UAAWlV,UAAU6B,KAAKsD,SAE9BtD,KAAK2T,YAAYnG,GAAQ,IAGxBqJ,IAASa,KACVA,GAAkBpZ,YAAcuS,GAC5B7Q,KAAK+U,YAAY,KACb6C,IACAlB,GAAWvY,UAAUsZ,IACrBzX,KAAKqX,uBAAuB7J,KAG5BiJ,IAAmB,EACnBzW,KAAK8X,mBAAmBtK,EAAQ,CAC5BlK,MAAOuN,GACPrC,KAAMrQ,UAAUuZ,IAChBrE,UAAWlV,UAAU6B,KAAKsD,SAE9BtD,KAAK2T,YAAYnG,GAAQ,IAGxBoK,IACLlB,GAAWvY,UAAUsZ,IACrBzX,KAAKqX,uBAAuB7J,GACxBxN,KAAK+U,YAAY,MAAQ/U,KAAK+U,YAAY,OAE1C/U,KAAK2T,YAAY,KAAK,GACtB3T,KAAKqX,uBAAuB,QAIhCrX,KAAKqX,uBAAuB7J,GAC5BkJ,GAAWvY,UAAUuZ,MAIzBjB,IAAmB,EACnBzW,KAAK8X,mBAAmBtK,EAAQ,CAC5BlK,MAAOuN,GACPrC,KAAMrQ,UAAU6B,KAAKsD,OACrB+P,UAAWlV,UAAU6B,KAAKsD,SAE9BtD,KAAK2T,YAAYnG,GAAQ,MAG5BiJ,GAAkB,CAEnB,GADAzW,KAAK2T,YAAYnG,GAAQ,GACrBT,IAAkBwE,YAAYkJ,GAAa,CAC3C,IAAI4B,GAAiBrc,KAAKgU,KAAKwH,UAAUxB,EAAaqB,EAASpB,EAAYja,KAAKqQ,OAAQrQ,KAAK6T,UACzFtC,YAAY8K,MACZrc,KAAKkT,OAASmJ,GAEtB,MAEIrc,KAAKkT,OAASwD,GAEd1W,KAAKgV,YACLhV,KAAK4T,kBAEb,CACIsF,GAAe,EACnB,GAAe,MAAX1L,EAEI0L,EADAiD,IAAe,GAAKD,EAAYxb,QAAU,OAQ9C,GAAI0Z,EAaAlB,EAZ2BlZ,KAAK6b,8BAA8B,CAC1DC,wBAAyB9b,KAAKuS,iBAC9B8I,OAAQA,EACRJ,aAAcA,EACdjB,WAAYA,EACZC,WAAYA,EACZrW,OAAQA,EACRsW,OAAQA,EACR1M,OAAQA,EACR0N,cAAeA,EACfxI,YAAaA,IACdwG,kBAIHA,EAAegD,EAAYxb,OAAS4Z,EAG5C,OAAOlL,OAAO6J,EAAa,CACvB3V,MAAO,KACP4V,aAAcA,EACdG,mBAAoB5C,IAE5B,CACJ,CACA,OAAOrH,OAAO6J,EAAa,CAAE3V,MAAO,KAAM4V,cAAc,GAC5D,EAIAlH,EAAWvS,UAAU6c,UAAY,SAAU9O,GACvC,OAAOxN,KAAKgU,KAAKa,gBAAgB7U,KAAKqQ,OAAQrQ,KAAK6T,UAAUiB,OAAOrH,cAAe,CAAC,GAAGD,EAC3F,EAIAwE,EAAWvS,UAAU6Z,iBAAmB,WACpC,IAAIiD,EAAsC,OAArBvc,KAAK0S,YAE1B,OADA1S,KAAKwc,eAAe,MACbD,CACX,EACAvK,EAAWvS,UAAU+c,eAAiB,SAAU9J,GAC5C1S,KAAK0S,YAAcA,CACvB,EAIAV,EAAWvS,UAAUgd,eAAiB,WAClC,OAAOzc,KAAK0S,aAAe,CAAC,CAChC,EAIAV,EAAWvS,UAAUuY,iBAAmB,SAAUxJ,GAC9C,IAAKE,UAAUF,GACX,OAAOA,EAEX,IAAIkO,EAAe3M,iBAAiBvB,GAChCmO,EAAc3c,KAAK4c,yBAAyBF,GAEhD,OADqBvM,SAAS3B,EAAMmO,EAAcD,EAEtD,EACA1K,EAAWvS,UAAUsb,qBAAuB,SAAUvN,GAClD,IAAIkF,EAAc1S,KAAK0S,aAAe,CAAC,EACvCA,EAAYlF,IAAWkF,EAAYlF,IAAW,GAAK,EACnDxN,KAAK0S,YAAcA,CACvB,EAIAV,EAAWvS,UAAUqb,YAAc,SAAU+B,EAAOrP,GAChD,IAAII,EAAU5N,KAAKgb,YAAY6B,EAAOrP,GACtC,MAAwB,UAAjBI,EAAQC,MAAoBD,EAAQkP,KAC/C,EAIA9K,EAAWvS,UAAUub,YAAc,SAAU6B,EAAOrP,GAChD,OAAOqP,EAAMlE,QAAO,SAAUhL,GAAQ,OAAyC,IAAlCA,EAAKC,QAAQ9M,QAAQ0M,EAAgB,IAAG,EACzF,EAIAwE,EAAWvS,UAAUsd,KAAO,SAAUzZ,EAAOsK,GACzC,IAAIoP,EAAY1Z,EAAM+G,QAAQ,MAAO,IAAM,IAC3C,OAAO+B,QAAQwB,EAAQlN,OAASsc,EAAUtc,QAAUsc,CACxD,EAIAhL,EAAWvS,UAAUib,WAAa,SAAUuC,GAExC,GADAjd,KAAK2S,gBAAkBsK,EAAUxS,cACF,IAA3BzK,KAAKqU,WAAW3T,OAChB,MAAO,GAEX,KAAOV,KAAK2S,eAAejS,OAAS,GAAG,CACnC,IAAK,IAAIH,EAAI,EAAGA,EAAIP,KAAKqU,WAAW3T,OAAQH,IACxC,GAAsE,IAAlEP,KAAKqU,WAAW9T,GAAGkK,cAAc3J,QAAQd,KAAK2S,gBAC9C,OAAO3S,KAAKqU,WAAW9T,GAG/B,IAAI2c,EAAajO,SAASjP,KAAK2S,eAAgB,IAE/C,GAAIuK,GAAc,GAAKA,GAAc,IAAMA,EAAWhN,aAAelQ,KAAK2S,eACtE,OAAO3S,KAAKqU,WAAW6I,EAAa,GAExCld,KAAK2S,eAAiB3S,KAAK2S,eAAevF,UAAU,EAAGpN,KAAK2S,eAAejS,OAC/E,CACA,MAAO,EACX,EAIAsR,EAAWvS,UAAUmb,eAAiB,SAAUqC,EAAWzP,GACvD,IAAI2P,EAAaF,EAAUxS,cAC3B,GAAe,MAAX+C,GAAkBxN,KAAKuU,WAAY,CACnC,GAAIvU,KAAKuU,WAAW6I,GAAG3S,cAAc+O,WAAW2D,GAC5C,OAAOnd,KAAKuU,WAAW6I,GAEtB,GAAIpd,KAAKuU,WAAW8I,GAAG5S,cAAc+O,WAAW2D,GACjD,OAAOnd,KAAKuU,WAAW8I,EAE/B,CACA,MAAO,EACX,EAIArL,EAAWvS,UAAU6U,mBAAqB,SAAUgJ,QACjC,IAAXA,IAAqBA,EAAS,MAElC,IADA,IAAIC,EAAkBvd,KAAKgU,KAAKa,gBAAgB7U,KAAKqQ,OAAQrQ,KAAK6T,UACzDtT,EAAI,EAAGA,EAAIgd,EAAgB7c,OAAQH,IACxC,GAAgC,UAA5Bgd,EAAgBhd,GAAGsN,MAAoB0P,EAAgBhd,GAAGuc,MAC1D,OAAO9c,KAAKgU,KAAKwJ,gBAAgBF,EAAQC,EAAgBhd,GAAGuc,OAGpE,MAAO,EACX,EAIA9K,EAAWvS,UAAU+U,cAAgB,SAAU8I,QAC5B,IAAXA,IAAqBA,EAAS,MAElC,IADA,IAAIC,EAAkBvd,KAAKgU,KAAKa,gBAAgB7U,KAAKqQ,QAC5C9P,EAAI,EAAGA,EAAIgd,EAAgB7c,OAAQH,IACxC,GAAgC,cAA5Bgd,EAAgBhd,GAAGsN,MAAwB0P,EAAgBhd,GAAGuc,MAC9D,OAAO9c,KAAKgU,KAAKwJ,gBAAgBF,EAAQC,EAAgBhd,GAAGuc,OAGpE,OAAO,IACX,EAIA9K,EAAWvS,UAAUyb,cAAgB,SAAUtN,GAC3C,MAAmB,MAAfA,EAAQ,GACD,EAEPgE,4BAA4BxH,KAAKwD,GAC1B,EAEJ,CACX,EAIAoE,EAAWvS,UAAUiU,iBAAmB,SAAUlF,EAAM6B,GAIpD,IAHA,IAAIkN,EAAkBvd,KAAKgU,KAAKa,gBAAgBxE,EAAQrQ,KAAK6T,UACzDgJ,EAAQ,GACR9R,EAAU,GACLxK,EAAI,EAAGA,EAAIgd,EAAgB7c,OAAQH,IAExC,IADA,IAAIkd,EAAazd,KAAKgU,KAAKmB,WAAW3G,EAAM,CAAEZ,QAAS2P,EAAgBhd,GAAGqN,SAAW5N,KAAK6T,UAAUnT,OAC7F+c,EAAa,GAChBZ,EAAM/Z,KAAK9C,KAAK8K,QAAQyS,EAAgBhd,GAAGqN,QAAQ,KAAO5C,UAAUC,iBACpEF,EAAQjI,KAAKya,EAAgBhd,IAC7Bkd,IAGR,IAAIC,EAAc,IAAI7S,KAGtB,OAFA6S,EAAY5S,QAAU+R,EAAMrQ,KAAK,IACjCkR,EAAY3S,QAAUA,EACf2S,CACX,EAIA1L,EAAWvS,UAAUuW,MAAQ,SAAUV,EAAMC,GAQzC,IANA,IAAIoI,EAAa,GACbC,EAAe,GACfvN,EAASkF,EAAKzK,QACd+S,GAA0B,EAC1BC,EAA2B,EAC3BpI,EAAiB1V,KAAK2V,yBAAyBtF,GAC1C0N,EAAoB1N,EAAO3P,OAAS,EAAGqd,GAAqB,EAAGA,IAAqB,CACzF,IAAIlI,EAAkB7V,KAAK8V,mBAAmBP,EAAMwI,GACpD,IAA4D,IAAxD/d,KAAK4S,WAAW9R,QAAQuP,EAAO0N,KAA8B/d,KAAK+U,YAAY1E,EAAO0N,IACjF/d,KAAKuS,iBACLoL,EAAarI,EAAKyI,GAAqBJ,EAGnCrI,EAAK5U,SAAW2P,EAAO3P,OACnBmd,EACAF,EAAarI,EAAKyI,GAAqBJ,EAElCG,EAA2B,GAChCH,EAAarI,EAAKyI,GAAqBJ,IACvCG,GACgC,IAC5BD,GAA0B,IAI9BF,GAAcrI,EAAKyI,EAAoBzI,EAAK5U,OAAS2P,EAAO3P,SAAW,IAAMid,EAIjFA,EAAarI,EAAKyI,GAAqBJ,EAG/CC,EAAevN,EAAO0N,GAAqBH,MAE1C,CACD,IAAIpQ,EAAS6C,EAAO0N,GAChBC,EAA4B,EAChC,GAAIhe,KAAKuS,mBAAsBvS,KAAKuS,mBAAqBvS,KAAK4V,wBAAwBpI,GAAU,CAC5F,KAAOuQ,GAAqB,GAAKvQ,IAAW6C,EAAO0N,IAC/CA,IAEJA,GACJ,CACA,GAAI/d,KAAK0S,aAAe1S,KAAK0S,YAAYlF,GACrCmQ,EAAa,IAAMA,OAGnB,IAAK3d,KAAKuS,kBAAoBvS,KAAK4V,wBAAwBpI,GAAS,CAChE,IAAIuI,EAAe/V,KAAK4V,wBAAwBpI,GAAQ0C,WACxD,GAAe,MAAX1C,EAEA,GADAuI,GAAgB/G,WAAWhP,KAAK4V,wBAAwBpI,IAAWuE,iBAAiB7B,WAChF2F,EAAgBnV,OAASmR,gCACzB8L,EAAajI,EAAelI,GAAQuQ,GAAqBJ,OAGzD5H,GAAgB/G,WAAWhP,KAAK4V,wBAAwBpI,IAAWuE,iBAAiB7B,WAEpFyN,EADwBvR,QAAQyJ,EAAgBnV,OAASqV,EAAarV,QAAUqV,EAC/C4H,EACjCK,EAA4BnI,EAAgBnV,OAAS,EACrDod,EAA2B/H,EAAarV,OAASmV,EAAgBnV,YAKrEid,EADwBvR,QAAQyJ,EAAgBnV,OAASqV,EAAarV,QAAUqV,EAC/C4H,EACjCK,EAA4BnI,EAAgBnV,OAAS,EACrDod,EAA2B/H,EAAarV,OAASmV,EAAgBnV,MAEzE,MAEIid,EAAa3d,KAAKie,cAAc1I,EAAKxK,QAAQgT,IAAsBJ,EAG3E,KAAOC,EAAald,OAASid,EAAWjd,QACpCkd,EAAevN,EAAO0N,GAAqBH,EAEb,IAA9BI,IACAD,EAAqBA,EAAoBC,GAA8B1I,EAAK5U,OAAS2P,EAAO3P,QAEpG,CACJ,CACA,MAAO,CAAE4U,KAAMqI,EAAYtN,OAAQuN,EACvC,EAIA5L,EAAWvS,UAAUwe,cAAgB,SAAUtQ,GAC3C,IAAIuE,EAAoBlS,KAAKkS,mBAAqB,OAClD,OAAIA,EAAkBvE,EAAKE,MAChBqE,EAAkBvE,EAAKE,MAER,kBAAtBqE,EACOvE,EAAKC,QAET5N,KAAKgU,KAAKiK,cAAc7e,OAAOgB,OAAOuN,EAAM,CAAEuQ,SAAUhM,IACnE,EAIAF,EAAWvS,UAAUmd,yBAA2B,SAAUF,GACtD,OAAOA,EAAe1c,KAAKkL,gBACvBwG,sBACAC,oBACR,EAIAK,EAAWvS,UAAUsY,uBAAyB,WAC1C,OAAO/X,KAAKgU,KAAKa,gBAAgB7U,KAAKqQ,QAAQ+I,MAAK,SAAUzL,GAAQ,MAAwB,OAAjBA,EAAKC,OAAkB,GACvG,EACAoE,EAAWvS,UAAUmU,iBAAmB,WACpC,IAAIgB,EAAQ5U,KACZA,KAAKoT,sBAAsBC,UAAY,KACvCjU,OAAO2U,KAAK/T,KAAKoT,sBAAsBE,kBAAkB4C,SAAQ,SAAU9U,GACvEwT,EAAMuJ,qBAAqB/c,EAC/B,GACJ,EACA4Q,EAAWvS,UAAU4X,uBAAyB,SAAU7J,GACpD,IAAIoH,EAAQ5U,KACZA,KAAKme,qBAAqB3Q,GAC1B,IAAI4Q,GAAyB,EAC7Bhf,OAAO2U,KAAK/T,KAAKoT,sBAAsBE,kBAAkB4C,SAAQ,SAAU9U,GACnEwT,EAAMxB,sBAAsBE,iBAAiBlS,IAC7CsN,UAAUkG,EAAMxB,sBAAsBE,iBAAiBlS,GAAKkC,SAC5D8a,GAAyB,EAEjC,IACIA,GACApe,KAAK4T,kBAEb,EACA5B,EAAWvS,UAAU0e,qBAAuB,SAAU3Q,GAC9CxN,KAAKoT,sBAAsBE,iBAAiB9F,KAC5CxN,KAAKoT,sBAAsBE,iBAAiB9F,GAAU,CAClDlK,MAAO,KACPkL,KAAM,KACN+E,gBAAiB,GAG7B,EAIAvB,EAAWvS,UAAU0W,mBAAqB,SAAU3I,GAEhD,OADsBxN,KAAKoT,sBAAsBE,iBAAiB9F,IACxC,CAAC,CAC/B,EAIAwE,EAAWvS,UAAUmW,wBAA0B,SAAUpI,GAErD,OADsBxN,KAAKoT,sBAAsBE,iBAAiB9F,IACvC,CAAC,GAAGlK,KACnC,EACA0O,EAAWvS,UAAUqY,mBAAqB,SAAUtK,EAAQ7C,GACxD,IAAI6E,EAAK7E,EAAGrH,MAAOA,OAAe,IAAPkM,EAAgB,KAAOA,EAAI4C,EAAKzH,EAAG6D,KAAMA,OAAc,IAAP4D,EAAgB,KAAOA,EAAIC,EAAK1H,EAAG4I,gBAAiBA,OAAyB,IAAPlB,EAAgB,EAAIA,EAAIC,EAAK3H,EAAG0I,UAAWA,OAAmB,IAAPf,EAAgB,KAAOA,EAC3NtS,KAAKoT,sBAAsBE,iBAAiB9F,KAC5CxN,KAAKoT,sBAAsBE,iBAAiB9F,GAAQlK,MAAQA,EAC5DtD,KAAKoT,sBAAsBE,iBAAiB9F,GAAQgB,KAAOA,EAC3DxO,KAAKoT,sBAAsBE,iBAAiB9F,GAAQ+F,gBAAkBA,EACtEvT,KAAKoT,sBAAsBC,UAAYA,EAE/C,EAIArB,EAAWvS,UAAU4Z,mBAAqB,WACtC,IAAIzE,EAAQ5U,KACRqZ,GAAqB,EAOzB,OANAja,OAAO2U,KAAK/T,KAAKoT,sBAAsBE,kBAAkB4C,SAAQ,SAAU9U,GACnEwT,EAAMxB,sBAAsBE,iBAAiBlS,IAC7CsN,UAAUkG,EAAMxB,sBAAsBE,iBAAiBlS,GAAKkC,SAC5D+V,GAAqB,EAE7B,IACOA,CACX,EAIArH,EAAWvS,UAAU4e,2BAA6B,SAAU7P,EAAMhB,EAAQgJ,GACtE,IAAIE,EAAWvY,UAAUqQ,GACrBmI,GAAe,EACnB,OAAQnJ,GACJ,IAAK,IACDkJ,EAASL,YAAYK,EAASzG,cAAgBuG,GAC9C,MACJ,IAAK,IACDE,EAAWnY,UAAUyB,KAAKsD,MAAOkT,GACjC,MACJ,IAAK,IACL,IAAK,IACDE,EAASK,QAAQL,EAASpY,UAAYkY,GACtC,MACJ,IAAK,IACL,IAAK,IACDE,EAASM,SAASN,EAASvF,WAAaqF,GACxCG,GAAe,EACf,MACJ,IAAK,IACDD,EAASO,WAAWP,EAAStF,aAAeoF,GAC5CG,GAAe,EACf,MACJ,IAAK,IACDD,EAASQ,WAAWR,EAASrF,aAAemF,GAC5CG,GAAe,EACf,MACJ,IAAK,IACDD,EAASS,gBAAgBT,EAASpF,kBAAoBkF,GACtD,MACJ,IAAK,IACDE,EAASM,SAASN,EAASvF,WAAc,GAAKqF,GAC9CG,GAAe,EAIvB,MAAO,CACHnI,KAAMkI,EACNC,aAAcA,EAEtB,EAIA3E,EAAWvS,UAAUkY,0BAA4B,SAAUnJ,EAAMhB,EAAQlK,GACrE,IAAIoT,EAAWvY,UAAUqQ,GACzB,OAAQhB,GACJ,IAAK,IACDkJ,EAASL,YAAY/S,GACrB,MACJ,IAAK,IACDoT,EAAWnY,UAAUiQ,EAAMlL,EAAQkL,EAAK0C,YACxC,MACJ,IAAK,IACL,IAAK,IACDwF,EAASK,QAAQzT,GACjB,MACJ,IAAK,IACL,IAAK,IAYL,IAAK,IACDoT,EAASM,SAAS1T,GAClB,MAXJ,IAAK,IACDoT,EAASO,WAAW3T,GACpB,MACJ,IAAK,IACDoT,EAASQ,WAAW5T,GACpB,MACJ,IAAK,IACDoT,EAASS,gBAAgB7T,GAOjC,OAAOoT,CACX,EACA1E,EAAWvS,UAAUoY,wBAA0B,WAC3C7X,KAAK0U,gBAAe,EACxB,EAIA1C,EAAWvS,UAAUqW,mBAAqB,SAAUP,EAAM+I,GAGtD,IAFA,IAAIC,EAAchJ,EAAKxK,QAAQuT,GAC3BzI,EAAkB,GACb2I,EAAgBF,EAAWE,EAAgBjJ,EAAKxK,QAAQrK,OAAQ8d,IAAiB,CACtF,IAAI7Q,EAAO4H,EAAKxK,QAAQyT,GACxB,GAAID,EAAY1Q,OAASF,EAAKE,MAAQ0Q,EAAY3Q,UAAYD,EAAKC,QAI/D,MAHAiI,EAAgB/S,KAAK6K,EAK7B,CACA,IAAS6Q,EAAgBF,EAAY,EAAGE,GAAiB,EAAGA,IAAiB,CACrE7Q,EAAO4H,EAAKxK,QAAQyT,GACxB,GAAID,EAAY1Q,OAASF,EAAKE,MAAQ0Q,EAAY3Q,UAAYD,EAAKC,QAI/D,MAHAiI,EAAgB1S,QAAQwK,EAKhC,CACA,OAAOkI,CACX,EAIA7D,EAAWvS,UAAUoc,8BAAgC,SAAUlR,GAC3D,IAAImR,EAAyBnR,EAAGmR,uBAAwBT,EAAS1Q,EAAG0Q,OAAQJ,EAAetQ,EAAGsQ,aAAcjB,EAAarP,EAAGqP,WAAYC,EAAatP,EAAGsP,WAAYrW,EAAS+G,EAAG/G,OAAQsW,EAASvP,EAAGuP,OAAQ1M,EAAS7C,EAAG6C,OAAQ0N,EAAgBvQ,EAAGuQ,cAAexI,EAAc/H,EAAG+H,YAG/Q+L,EAAcze,KAAK+c,KAAK1B,EAAQJ,GAChCyD,EAAmB5C,EACnB,GAAK9B,EAAayE,EAAcxE,EAChC,GAAKrW,EAAS6a,EAAcvE,EAC5B6B,EAAa/b,KAAKgU,KAAKwH,UAAUkD,EAAkB1e,KAAKqQ,OAAQrQ,KAAK6T,UAErE8K,IADqB3e,KAAK0S,aAAe,CAAC,GAAGlF,IAAW,GAChBf,UAAU4O,GAAQ3a,QAAWwa,EAUzE,MAAO,CACHa,WAAYA,EACZ2C,iBAAkBA,EAClBD,YAAaA,EACbzC,kBAboBhN,WAAWyP,GAc/BvF,aAT8B,OAAf6C,IACdrJ,EAAYlF,GACTyN,EAAava,QAAU2a,EAAO3a,OAC9Bie,GAQZ,EACO3M,CACX,CAjiD+B,GAmiD3B4M,QAAU,CACVrT,UAAW,EACXD,OAAQ,GACRE,IAAK,EACLC,MAAO,GACPC,OAAQ,GACRC,WAAY,GACZC,SAAU,GACVC,YAAa,GACbC,WAAY,GACZC,MAAO,GACPC,IAAK,GACLC,KAAM,GACNC,QAAS,GACTC,UAAW,IAGX0S,eAAiB,CACjBC,OAAQ,CAAC,GAETC,WAA4B,WAC5B,SAASA,EAAW3K,GAChBpU,KAAKoU,QAAUhF,OAAO,CAAC,EAAGyP,eAAgBzK,EAC9C,CAsBA,OArBA2K,EAAWtf,UAAUuf,QAAU,WAC/B,EAIAD,EAAWtf,UAAUwf,QAAU,SAAUC,EAAW7P,QACnC,IAATA,IAAmBA,EAAO,CAAC,GAC/B,IAAI8P,EAAY,CACZC,kBAAkB,EAClBC,eAAgB,WACZF,EAAUC,kBAAmB,CACjC,GAEJ,QAAIvP,WAAW7P,KAAKoU,QAAQ0K,OAAOI,MAC/Blf,KAAKoU,QAAQ0K,OAAOI,GAAW9P,OAAO+P,EAAW9P,EAAM,CACnDiQ,OAAQtf,QAELmf,EAAUC,iBAGzB,EACOL,CACX,CA1B+B,IA6B/B,SAAWrU,GACPA,EAA+B,KAAI,OACnCA,EAAgC,MAAI,QACpCA,EAAoC,UAAI,WAC3C,CAJD,CAIGA,2BAA6BA,yBAA2B,CAAC,IAG5D,IAAI6U,qBAAuB,EACvBC,WAAa,YACbC,KAAO,OACPC,YAAc,aACdC,WAAa,YACbC,SAAW,UACXC,MAAQ,QACRC,MAAQ,QACRC,SAAW,UACXC,MAAQ,QACRC,KAAO,OACPC,MAAQ,QACRC,aAAe,iBACfC,YAAc,aACdC,aAAe,cACfC,UAAY,WACZC,SAAW,UACXC,UAAY,WACZC,OAAS,SACTC,wBAA0B,CAC1BrQ,OAAQ,IACRsQ,gBAAgB,EAChBC,YAAa,KACbzO,WAAW,EACXmL,OAAQ,KACRuD,MAAO,CACHC,YAAavB,qBACbwB,OAAQxB,qBACRyB,OAAQzB,qBACRzO,KAAMyO,qBACN1O,IAAK0O,qBACL3O,MAAO2O,qBACP5O,KAAM4O,sBAEVrN,kBAAmB,KACnB4M,QAASnU,GAAK,CAAC,EACXA,GAAG0V,cAAgB,KACnB1V,GAAGmV,OAAS,KACZnV,GAAG2V,WAAa,KAChB3V,GAAGqV,OAAS,KACZrV,GAAG6V,WAAa,KAChB7V,GAAGsV,MAAQ,KACXtV,GAAG4V,UAAY,KACf5V,GAAGoV,UAAY,KACfpV,GAAGyV,aAAe,KAClBzV,GAAG8V,QAAU,KACb9V,IACJsW,6BAA6B,EAC7BC,kCAAkC,EAClCC,kBAAkB,EAClBC,gBAAgB,EAChBC,iBAAiB,EACjBC,eAAgB,GAChBpW,gBAAiBF,UAAUE,gBAC3BqH,kBAAkB,EAClBgP,UAAU,GAEVC,UAA2B,SAAUC,GAErC,SAASD,EAAUpT,EAASgG,GACxB,IAAIQ,EAAQ6M,EAAO9hB,KAAKK,KAAMoU,IAAYpU,KAS1C,OARA4U,EAAM8M,WAAa,KAGnB9M,EAAM+M,YAAc,GACpB/M,EAAMgN,cAAgB,GACtBhN,EAAMiN,gBAAkBnX,yBAAyBoX,KACjDlN,EAAMmN,yBAA2B,CAAEC,MAAO,EAAGC,IAAK,GAClDrN,EAAM1R,KAAKkL,EAASgG,GACbQ,CACX,CA6lCA,OAzmCAhV,UAAU4hB,EAAWC,GAarBriB,OAAOuC,eAAe6f,EAAU/hB,UAAW,QAAS,CAChDuD,IAAK,WACD,OAAOhD,KAAK0hB,YAAc1hB,KAAK0hB,WAAW1M,UAC9C,EACA3O,YAAY,EACZxC,cAAc,IAElB2d,EAAU/hB,UAAUyD,KAAO,SAAUkL,EAASgG,GAC1C,IAAI8N,EAAY3Q,YAAYvR,KAAKoU,QAAQ9Q,OAASnF,UAAU6B,KAAKoU,QAAQ9Q,OAAS,IAAIqM,KAAKyE,EAAQ+N,gBAC9F5Q,YAAY2Q,KACbA,EAAY,MAEhBliB,KAAKoO,QAAUA,EAEfpO,KAAKoU,QAAUhF,OAAO,CAAC,EAAGsR,wBAAyBtM,EAAS,CAAEyM,MAAO1gB,SAAS,CAAC,EAAGugB,wBAAwBG,MAAOzM,EAAQyM,SACzH7gB,KAAKgU,KAAOhU,KAAKoU,QAAQnC,YACzBjS,KAAK0hB,WAAa1hB,KAAKoiB,mBACvBpiB,KAAK0hB,WAAWjN,SAASyN,GACzBliB,KAAKqiB,mBACLriB,KAAKsiB,aACLtiB,KAAKmY,mBAAoB,EACzBnY,KAAK6hB,gBAAkBnX,yBAAyBoX,KAChD9hB,KAAKuiB,aACT,EACAf,EAAU/hB,UAAUuf,QAAU,WAC1Bhf,KAAKwiB,eACLxiB,KAAK0hB,WAAa,KAClBD,EAAOhiB,UAAUuf,QAAQrf,KAAKK,KAClC,EACAwhB,EAAU/hB,UAAU6iB,WAAa,WAC7BtiB,KAAKyiB,mBAAqBziB,KAAKyiB,mBAAmBC,KAAK1iB,MACvDA,KAAKoO,QAAQuU,iBAAiBnD,WAAYxf,KAAKyiB,oBAC/CziB,KAAK4iB,cAAgB5iB,KAAK4iB,cAAcF,KAAK1iB,MAC7CA,KAAKoO,QAAQuU,iBAAiBlD,KAAMzf,KAAK4iB,eACzC5iB,KAAK6iB,eAAiB7iB,KAAK6iB,eAAeH,KAAK1iB,MAC/CA,KAAKoO,QAAQuU,iBAAiB9C,MAAO7f,KAAK6iB,gBAC1C7iB,KAAK8iB,mBAAqB9iB,KAAK8iB,mBAAmBJ,KAAK1iB,MACvDA,KAAKoO,QAAQuU,iBAAiBhD,WAAY3f,KAAK8iB,oBAC/C9iB,KAAKoO,QAAQuU,iBAAiBjD,YAAa1f,KAAK8iB,oBAChD9iB,KAAK+iB,iBAAmB/iB,KAAK+iB,iBAAiBL,KAAK1iB,MACnDA,KAAKoO,QAAQuU,iBAAiB/C,SAAU5f,KAAK+iB,kBAC7C/iB,KAAKgjB,eAAiBhjB,KAAKgjB,eAAeN,KAAK1iB,MAC/CA,KAAKoO,QAAQuU,iBAAiB7C,MAAO9f,KAAKgjB,gBAC1ChjB,KAAKijB,iBAAmBjjB,KAAKijB,iBAAiBP,KAAK1iB,MACnDA,KAAKoO,QAAQuU,iBAAiB5C,SAAU/f,KAAKijB,kBAC7CjjB,KAAKkjB,eAAiBljB,KAAKkjB,eAAeR,KAAK1iB,MAC/CA,KAAKoO,QAAQuU,iBAAiB3C,MAAOhgB,KAAKkjB,gBAC1CljB,KAAKmjB,cAAgBnjB,KAAKmjB,cAAcT,KAAK1iB,MAC7CA,KAAKoO,QAAQuU,iBAAiB1C,KAAMjgB,KAAKmjB,eACzCnjB,KAAKojB,gBAAkBpjB,KAAKojB,gBAAgBV,KAAK1iB,MACjDA,KAAKoO,QAAQuU,iBAAiBlC,OAAQzgB,KAAKojB,iBAC3CpjB,KAAKqjB,eAAiBrjB,KAAKqjB,eAAeX,KAAK1iB,MAC/CA,KAAKoO,QAAQuU,iBAAiBzC,MAAOlgB,KAAKqjB,gBAC1CrjB,KAAKsjB,oBAAsBtjB,KAAKsjB,oBAAoBZ,KAAK1iB,MACzDA,KAAKoO,QAAQuU,iBAAiBxC,aAAcngB,KAAKsjB,qBACjDtjB,KAAKoO,QAAQuU,iBAAiBvC,YAAapgB,KAAKsjB,oBACpD,EACA9B,EAAU/hB,UAAU+iB,aAAe,WAC/BxiB,KAAKoO,QAAQmV,oBAAoB/D,WAAYxf,KAAKyiB,oBAClDziB,KAAKoO,QAAQmV,oBAAoB9D,KAAMzf,KAAK4iB,eAC5C5iB,KAAKoO,QAAQmV,oBAAoB7D,YAAa1f,KAAK8iB,oBACnD9iB,KAAKoO,QAAQmV,oBAAoB5D,WAAY3f,KAAK8iB,oBAClD9iB,KAAKoO,QAAQmV,oBAAoB3D,SAAU5f,KAAK+iB,kBAChD/iB,KAAKoO,QAAQmV,oBAAoB1D,MAAO7f,KAAK6iB,gBAC7C7iB,KAAKoO,QAAQmV,oBAAoBzD,MAAO9f,KAAKgjB,gBAC7ChjB,KAAKoO,QAAQmV,oBAAoBxD,SAAU/f,KAAKijB,kBAChDjjB,KAAKoO,QAAQmV,oBAAoBvD,MAAOhgB,KAAKkjB,gBAC7CljB,KAAKoO,QAAQmV,oBAAoBtD,KAAMjgB,KAAKmjB,eAC5CnjB,KAAKoO,QAAQmV,oBAAoB9C,OAAQzgB,KAAKojB,iBAC9CpjB,KAAKoO,QAAQmV,oBAAoBrD,MAAOlgB,KAAKqjB,gBAC7CrjB,KAAKoO,QAAQmV,oBAAoBpD,aAAcngB,KAAKsjB,qBACpDtjB,KAAKoO,QAAQmV,oBAAoBnD,YAAapgB,KAAKsjB,oBACvD,EACA9B,EAAU/hB,UAAU+T,WAAa,SAAUY,EAASoP,QAChC,IAAZA,IAAsBA,GAAU,GACpCxjB,KAAKoU,QAAUhF,OAAO,CAAC,EAAGpP,KAAKoU,QAASA,EAAS,CAAEyM,MAAO1gB,SAAS,CAAC,EAAGugB,wBAAwBG,MAAOzM,EAAQyM,SAC9G7gB,KAAKyjB,uBACDD,IACAxjB,KAAKwiB,eACLxiB,KAAKkD,KAAKlD,KAAKoO,QAASpO,KAAKoU,SAErC,EAIAoN,EAAU/hB,UAAUgkB,qBAAuB,WACvC,GAAIzjB,KAAK0hB,WAAY,CACjB,IAAIgC,EAAa1jB,KAAK2jB,uBACtB3jB,KAAK0hB,WAAWlO,WAAWkQ,EAC/B,CACJ,EAIAlC,EAAU/hB,UAAUmkB,YAAc,WAC9B5jB,KAAKwiB,eACLxiB,KAAKkD,KAAKlD,KAAKoO,QAASpO,KAAKoU,QACjC,EAIAoN,EAAU/hB,UAAUsN,cAAgB,WAChC,OAAO/M,KAAK6hB,kBAAoBnX,yBAAyBmZ,KAC7D,EACArC,EAAU/hB,UAAUqkB,MAAQ,WACxB9jB,KAAKoO,QAAQ0V,QACT9jB,KAAKoU,QAAQ6M,6BACbjhB,KAAK+jB,qBAAqB,EAElC,EAIAvC,EAAU/hB,UAAUgjB,mBAAqB,SAAU5hB,GAC/CA,EAAEwe,gBACN,EAIAmC,EAAU/hB,UAAUmjB,cAAgB,SAAU/hB,GAC1CA,EAAEwe,gBACN,EAIAmC,EAAU/hB,UAAUqjB,mBAAqB,WACrC9iB,KAAKgkB,kBAAmB,EACxBhkB,KAAKikB,wBAA0BjkB,KAAKkkB,QACxC,EAIA1C,EAAU/hB,UAAUsjB,iBAAmB,SAAUliB,GAC7Cb,KAAKgkB,kBAAmB,EACxBnjB,EAAEwe,gBACN,EAIAmC,EAAU/hB,UAAUojB,eAAiB,SAAUhiB,GAC3Cb,KAAKgkB,kBAAmB,EACxBhkB,KAAKmkB,iCAAkC,EACvC,IAAIC,EAAYpkB,KAAKokB,UAOrB,GANIpkB,KAAK+M,iBAIL/M,KAAKuiB,cAEQ,IAAb1hB,EAAEwjB,aAKF,GAAIrkB,KAAKkkB,UAAYlkB,KAAKoU,QAAQ6M,4BAA6B,CAC3D,IAAIqD,EAAmBtkB,KAAKoO,QAAQtB,iBAAmB9M,KAAKoO,QAAQmW,aAChEC,EAAqB9V,UAAU1O,KAAKoU,QAAQwM,eAC3C5gB,KAAK0hB,WAAW/M,aAChB3U,KAAKikB,wBAGNrL,GADsB0L,GAAoBE,EACb,EAAIxkB,KAAKykB,QAAQ,GAClDzkB,KAAK+jB,qBAAqBnL,EAC9B,MAEI5Y,KAAK0kB,aAAa1kB,KAAK2kB,iBAAiBP,EAAUpC,OAG9D,EAIAR,EAAU/hB,UAAUujB,eAAiB,SAAUniB,GAC3Cb,KAAK4kB,aAAa,CAAEC,MAAOhkB,IAC3B,IAAIikB,EAAkB9kB,KAAK+kB,aAC3B,GAAK/kB,KAAKoO,SAAYpO,KAAK0hB,WAA3B,CAGA,IAAIyC,EAAkCnkB,KAAKmkB,gCAC3C,GAAInkB,KAAKglB,kBAQL,OAPIhlB,KAAKoU,QAAQgN,iBAGbphB,KAAKmY,mBAAoB,GAE7BnY,KAAKilB,cAAcpkB,QACnBb,KAAKglB,mBAAoB,GAG7B,IAAIE,EAAellB,KAAKklB,cAAgB,CAAC,EACrCC,EAAiBD,EAAaE,UAAYxG,QAAQrT,WAAa2Z,EAAa9jB,MAAQiK,IAAIE,UACxF8Z,EAAcH,EAAaE,UAAYxG,QAAQtT,QAAU4Z,EAAa9jB,MAAQiK,IAAIC,OAClFga,EAA0BtlB,KAAK6hB,iBAC/B7hB,KAAKoU,QAAQgN,gBACbkE,IAA4B5a,yBAAyBmZ,OACpDwB,GAAgBF,IACjBnlB,KAAKmY,mBAAoB,GAEzBnY,KAAKoU,QAAQgN,eACbphB,KAAK6hB,gBAAkBnX,yBAAyBmZ,MAGhD7jB,KAAK6hB,gBAAkBnX,yBAAyB6a,UAEpD,IAAIC,EAAWxlB,KAAK+M,gBACpB,GAAIyY,GAAYxlB,KAAKklB,aAAa9jB,MAAQiK,IAAIU,MAE1C/L,KAAKylB,qCAFT,CAKA,IAAIC,EAAuB1lB,KAAK0hB,YAAc1hB,KAAK0hB,WAAW1M,WAC1D2Q,EAAe3lB,KAAK0hB,WAAa1hB,KAAK0hB,WAAWpe,MAAQ,KACzDqH,EAAK3K,KAAK0hB,WAAWtM,mBAAoBuM,EAAchX,EAAG2K,KAAMsM,EAAgBjX,EAAG0F,OACvFrQ,KAAK4hB,cAAgBA,EACrB,IAAIjV,EAAU,GAGNA,EAFJ6Y,IACIL,GAAkBE,GAGbC,IAA4B5a,yBAAyBmZ,OAFhD7jB,KAAK4lB,qBAUTjE,EAEd,IAAI/U,EAAU5M,KAAK+kB,aACfzX,EAAOZ,0BAA0B,CACjCC,QAASA,EACTC,QAASA,EACTC,cAAe7M,KAAK4hB,cACpB9U,eAAgB9M,KAAKokB,UAAUpC,MAC/BjV,cAAeyY,EACfxY,SAAUhN,KAAKklB,eAKnB,GAHI5X,GAAQA,EAAK5M,QAAU4M,EAAK,IAAMA,EAAK,GAAG,KAAOtC,UAAUC,kBAC3DjL,KAAKmkB,iCAAkC,IAEvCqB,GAAclY,GAAwB,IAAhBA,EAAK5M,OAA/B,CAIK,GAAI8kB,GAA4B,IAAhBlY,EAAK5M,OAAc,CACpC,IAAK4M,EAAK,KAAOA,EAAK,GAAG,GAErB,YADAtN,KAAKylB,iCAGJ,GAAID,GAAYlY,EAAK,KACrBA,EAAK,GAAG,KAAOtC,UAAUC,iBAAmBqC,EAAK,GAAG,KAAOtC,UAAUC,iBAEtE,YADAjL,KAAKylB,gCAGb,CACA,IAAII,EAAkC,IAAhBvY,EAAK5M,QAAgB4M,EAAK,GAAG,KAAOtC,UAAUC,gBAChE6a,EAAoB,GACpBC,GAAa,EACbrf,EAAQ,KACZ,IAAKmf,EACD,IAAK,IAAItlB,EAAI,EAAGA,EAAI+M,EAAK5M,OAAQH,IAAK,CAClC,IAAIylB,EAAkBhmB,KAAK0hB,WAAWzJ,UAAU,CAC5CzK,OAAQF,EAAK/M,GAAG,GAChB2X,YAAa5K,EAAK/M,GAAG,GACrB4X,kBAAmBnY,KAAKmY,kBACxBC,mBAAoBpY,KAAK+M,gBACzBuL,aAActY,KAAKoO,QAAQ9K,MAC3BiV,WAAY4M,GAAkBE,EAC9B7M,eAAgBxY,KAAK4hB,gBAEzBkE,EAAkBhjB,KAAKkjB,GAClBA,EAAgB1iB,QACjBoD,EAAQ,CAAEmH,KAAM,UAEpBkY,EAAaC,EAAgB9M,YACjC,CAEClZ,KAAKoU,QAAQiN,kBACd0E,GAAa,GAEjB/lB,KAAKmY,mBAAoB,EACzB,IAUI8N,EAVA7L,EAAiBpa,KAAKoU,QAAQ/D,SAAWrQ,KAAK4hB,eAE7ClT,UAAU1O,KAAKoU,QAAQ/D,SAAWrQ,KAAKoU,QAAQ/D,OAAO3P,OAAS,EAChEwlB,EAAkBJ,EAAkBA,EAAkBplB,OAAS,GAC/DylB,EAA4BD,IAAoBxX,UAAUwX,EAAgB5iB,OAC1E8iB,EAAyBZ,IAAaL,GAAkBE,IAAgBc,EACxEhN,IAAY+M,GAAkBA,EAAgB/M,UAC9CkN,EAAuBrmB,KAAK0hB,WAAW1M,WACvCsR,GAA+BloB,QAAQsnB,EAAsBW,GAC7DE,EAAevmB,KAAK0hB,WAAWpe,MAE/BkjB,EAAmBxmB,KAAKokB,UAC5B,GAAIoB,EAAU,CACV,IAAIiB,EAAWnZ,GAAQA,EAAK5M,OAAS,EAAI4M,EAAK,GAAG,GAAK,KAClDiP,EAAiBvc,KAAK0hB,WAAWjF,iBAAiBgK,GAClDnZ,EAAK5M,QAAU4M,EAAK,GAAG,KAAOtC,UAAUC,gBACpC8a,GACA/lB,KAAK0mB,2BACL1mB,KAAK2mB,kBAAkB,IAElBxN,GACL8M,EAAqBjmB,KAAK4hB,cAAc4E,EAAiBxE,SAErDhiB,KAAKuiB,cACLviB,KAAK0kB,aAAa1kB,KAAK4mB,kBAAkBX,KAGzCjmB,KAAKylB,iCAGJW,GACLpmB,KAAKuiB,cACDjV,EAAK5M,QAAU4M,EAAK,GAAG,KAAOtC,UAAUC,iBACxCjL,KAAK0kB,aAAa1kB,KAAK4mB,kBAAkBtZ,EAAK,GAAG,MAGhD6Y,EACU,MAAXtlB,EAAEgmB,MAAgBtK,IAIb7N,UAAUgX,KAA0BhX,UAAU2X,GACnDrmB,KAAKylB,kCAEC/W,UAAUgX,IAAyBhX,UAAU2X,GACnDrmB,KAAK0mB,2BAEAhY,UAAUgX,IAAyBhX,UAAU2X,GAC9CC,EACAtmB,KAAK0mB,2BAGL1mB,KAAKylB,iCAGH/W,UAAUgX,IAA0BhX,UAAU2X,GAG/CV,IAAiBY,GAItBvmB,KAAKylB,iCANLzlB,KAAK0mB,4BASHP,GAGD/L,GACDpa,KAAK0mB,4BAKR1mB,KAAKoU,QAAQiN,iBAAmB/T,EAAK,GAAG,KAAOtC,UAAUC,kBAK1DjL,KAAK0kB,aAAa1kB,KAAK4mB,kBAAkBtZ,EAAK,GAAG,IAG7D,MACUkY,IACNxlB,KAAKuiB,cACDjV,EAAK5M,QAAU4M,EAAK,GAAG,KAAOtC,UAAUC,iBACxCjL,KAAK0kB,aAAa1kB,KAAK4mB,kBAAkBtZ,EAAK,GAAG,KAEjDtN,KAAKoU,QAAQiN,gBACTwE,GACA7lB,KAAKmY,mBAAoB,EACpBgM,GACDnkB,KAAK2mB,kBAAkB,GAE3B3mB,KAAKmkB,iCAAkC,GAElC4B,IACL/lB,KAAK2mB,kBAAkB,GACvB3mB,KAAKmkB,iCAAkC,GAIvC+B,GAAmBA,EAAgBhN,aAGnClZ,KAAKmY,mBAAoB,EAEpB0N,IACL7lB,KAAKmY,mBAAoB,EACpBgM,GACDnkB,KAAK2mB,kBAAkB,GAE3B3mB,KAAKmkB,iCAAkC,GAG3CgB,GAAkBnlB,KAAKoU,QAAQ8M,kCAE/BlhB,KAAK2mB,mBAAmB,IAGhC3mB,KAAK8mB,sBAAsB,CACvBC,SAAUrB,EACVb,MAAOhkB,IAEXb,KAAKgnB,gBAAgB,CAAEnC,MAAOhkB,EAAG6F,MAAOA,EAAOoe,gBAAiBA,EAAiBmC,gBAAiBjnB,KAAK+kB,eACnGS,GAIAxlB,KAAKqiB,kBA5JT,MAbIriB,KAAKylB,gCAjCT,CAhCA,CA4OJ,EAIAjE,EAAU/hB,UAAUyjB,eAAiB,SAAUriB,GACvCb,KAAKknB,aAAa,CAAErC,MAAOhkB,MAG/Bb,KAAKkkB,UAAW,EAChBlkB,KAAK6hB,gBAAkBnX,yBAAyBoX,KAChD9hB,KAAKmkB,iCAAkC,EACvCnkB,KAAKmnB,sBACAnnB,KAAKgkB,kBACNhkB,KAAKykB,MAAM,EAAGzkB,KAAK+kB,aAAarkB,QAEpCV,KAAKgkB,kBAAmB,EACxBhkB,KAAKonB,gBAAgB,CAAEvC,MAAOhkB,IAClC,EAIA2gB,EAAU/hB,UAAU0jB,cAAgB,SAAUtiB,GAC1Cb,KAAKmY,mBAAoB,EACzBnY,KAAKkkB,UAAW,EACZlkB,KAAKqnB,YAAY,CAAExC,MAAOhkB,MAG1Bb,KAAKoU,QAAQmN,UACbvhB,KAAKuhB,WAETvhB,KAAK6hB,gBAAkBnX,yBAAyBoX,KAChD9hB,KAAKmkB,iCAAkC,EACvCnkB,KAAKmnB,sBACLnnB,KAAKsnB,eAAe,CAAEzC,MAAOhkB,IACjC,EAIA2gB,EAAU/hB,UAAU2jB,gBAAkB,SAAUviB,GAC5Cb,KAAKunB,cAAc,CAAE1C,MAAOhkB,GAChC,EAIA2gB,EAAU/hB,UAAUwjB,iBAAmB,SAAUpiB,GAC7C,IAAIb,KAAKwnB,eAAe,CAAE3C,MAAOhkB,IAAjC,CAGA,IAAI8J,EAAK3K,KAAKokB,UAAWpC,EAAQrX,EAAGqX,MAAOC,EAAMtX,EAAGsX,IAChD4C,EAAQhkB,EAIZ,GAHAb,KAAKklB,aAAerkB,EACpBb,KAAK4lB,qBAAuB5lB,KAAKoO,QAAQ9K,MACzCtD,KAAK+hB,yBAA2B,CAAEC,MAAOA,EAAOC,IAAKA,GACjDjiB,KAAKynB,8BAA8B5mB,GAAI,CACvC,IAAI6mB,EAAW7mB,EAAEukB,UAAYxG,QAAQpT,IACrC,IAAIkc,EAkBA,OAFA7mB,EAAEwe,sBACFrf,KAAK2mB,kBAAkB,GAhBvB,IAAInX,EAAKxP,KAAKokB,UAAWtX,EAAiB0C,EAAGwS,MAAOuC,EAAe/U,EAAGyS,IAOtE,GANIphB,EAAE8mB,UAAYD,EACd1nB,KAAK2mB,mBAAmB,GAGxB3mB,KAAK2mB,kBAAkB,GAEvB7Z,IAAmB9M,KAAKokB,UAAUpC,OAASuC,IAAiBvkB,KAAKokB,UAAUnC,IAG3E,YADAphB,EAAEwe,gBAUd,CACA,IAAI7R,EAASxN,KAAK4hB,cAAc5hB,KAAKokB,UAAUpC,OAC3Ctd,EAAO1E,KAAK4nB,kBAAkBpa,GAC9Bqa,GAAuB,EACvB/C,EAAkB9kB,KAAK+kB,aAC3B,KAAIlkB,EAAEinB,QAAUjnB,EAAEknB,SAAWlnB,EAAEmnB,SAAWnnB,EAAEukB,UAAYxG,QAAQpT,KAAhE,CAGA,OAAQ3K,EAAEukB,SACN,KAAKxG,QAAQjT,WACT3L,KAAK2mB,mBAAmB,GACxBkB,GAAuB,EACvB7nB,KAAKmkB,iCAAkC,EACvC,MACJ,KAAKvF,QAAQhT,SACT5L,KAAKioB,uBAAuBvjB,EAAM8I,EAAQqX,GACtCC,IAAoB9kB,KAAK+kB,cACzB/kB,KAAKgnB,gBAAgB,CAAEnC,MAAOhkB,EAAG6F,MAAO,KAAMugB,gBAAiBjnB,KAAK+kB,aAAcD,gBAAiBA,IAEvG+C,GAAuB,EACvB7nB,KAAKmkB,iCAAkC,EACvC,MACJ,KAAKvF,QAAQ/S,YACT7L,KAAK2mB,kBAAkB,GACvBkB,GAAuB,EACvB7nB,KAAKmkB,iCAAkC,EACvC,MACJ,KAAKvF,QAAQ9S,WACT9L,KAAKioB,wBAAwBvjB,EAAM8I,EAAQqX,GACvCC,IAAoB9kB,KAAK+kB,cACzB/kB,KAAKgnB,gBAAgB,CAAEnC,MAAOhkB,EAAG6F,MAAO,KAAMugB,gBAAiBjnB,KAAK+kB,aAAcD,gBAAiBA,IAEvG+C,GAAuB,EACvB7nB,KAAKmkB,iCAAkC,EACvC,MACJ,KAAKvF,QAAQnT,MAET,MACJ,KAAKmT,QAAQ3S,KACTjM,KAAK+jB,qBAAqB,GAC1B8D,GAAuB,EACvB7nB,KAAKmkB,iCAAkC,EACvCnkB,KAAKmY,mBAAoB,EACzB,MACJ,KAAKyG,QAAQ5S,IACThM,KAAK+jB,qBAAqB/jB,KAAK+kB,aAAarkB,QAC5CmnB,GAAuB,EACvB7nB,KAAKmkB,iCAAkC,EACvCnkB,KAAKmY,mBAAoB,EACzB,MACJ,QAEI,OAEJ0P,GACAhnB,EAAEwe,gBAhDN,CAnCA,CAqFJ,EAIAmC,EAAU/hB,UAAU4jB,eAAiB,WACjCrjB,KAAKglB,mBAAoB,CAC7B,EAIAxD,EAAU/hB,UAAU6jB,oBAAsB,SAAUziB,GAChD,IAAIikB,EAAkB9kB,KAAK+kB,aAC3B,GAAK/kB,KAAKoU,QAAQ+M,mBAAoBnhB,KAAKkoB,kBAAkB,CAAErD,MAAOhkB,KAGjEb,KAAKkkB,SAAV,CAGA,IAAIW,EAAQhkB,EACRgkB,EAAM8C,SACN3nB,KAAK2mB,mBAAmB9B,EAAMsD,aAAetD,EAAMR,QAAU,GAAK,EAAI,GAGtErkB,KAAKioB,wBAAwBpD,EAAMsD,aAAetD,EAAMR,QAAU,EAAI,GAAK,GAE/EQ,EAAMnH,aAAc,EAChBmH,EAAMxF,gBACNwF,EAAMxF,iBAENwF,EAAMuD,iBACNvD,EAAMuD,kBAENtD,IAAoB9kB,KAAK+kB,cACzB/kB,KAAKgnB,gBAAgB,CAAEnC,MAAOhkB,EAAG6F,MAAO,KAAMugB,gBAAiBjnB,KAAK+kB,aAAcD,gBAAiBA,GAhBvG,CAkBJ,EACAtD,EAAU/hB,UAAUwlB,cAAgB,SAAUpkB,GAC1C,IAAIyC,EAAQtD,KAAKgU,KAAKwH,UAAUxb,KAAK+kB,aAAc/kB,KAAKqoB,cAAgBroB,KAAKsD,MACzEoL,UAAUpL,IAAUtD,KAAK0hB,WAAW3J,2BACpCzU,EAAQtD,KAAK0hB,WAAW1J,iBAAiB1U,IAE7C,IAAIglB,EAAqBtoB,KAAK0hB,YAAc1hB,KAAK0hB,WAAW1M,WAC5DhV,KAAKuoB,WAAWjlB,GAChBtD,KAAK8mB,sBAAsB,CACvBC,SAAUuB,EACVzD,MAAOhkB,GAEf,EACAzB,OAAOuC,eAAe6f,EAAU/hB,UAAW,eAAgB,CACvDuD,IAAK,WACD,OAAQhD,KAAKoO,SAAW,CAAC,GAAG9K,OAAS,EACzC,EACA+C,YAAY,EACZxC,cAAc,IAElBzE,OAAOuC,eAAe6f,EAAU/hB,UAAW,cAAe,CACtDuD,IAAK,WACD,OAAKhD,KAAKoU,QAAQ/D,OAGiB,iBAAxBrQ,KAAKoU,QAAQ/D,OACbrQ,KAAKoU,QAAQ/D,OAGbrQ,KAAKoU,QAAQ/D,OAAOgY,YANpBrd,UAAUG,iBAQzB,EACA9E,YAAY,EACZxC,cAAc,IAElBzE,OAAOuC,eAAe6f,EAAU/hB,UAAW,gBAAiB,CACxDuD,IAAK,WACD,OAAKhD,KAAKoU,QAAQ/D,OAGiB,iBAAxBrQ,KAAKoU,QAAQ/D,OACbrQ,KAAKoU,QAAQ/D,OAGbrQ,KAAKoU,QAAQ/D,OAAOmY,cANpBxd,UAAUG,iBAQzB,EACA9E,YAAY,EACZxC,cAAc,IAElBzE,OAAOuC,eAAe6f,EAAU/hB,UAAW,YAAa,CACpDuD,IAAK,WACD,IAAI0a,EAAc,CAAEsE,MAAO,EAAGC,IAAK,GAOnC,OANqB,OAAjBjiB,KAAKoO,cAAoDlI,IAAhClG,KAAKoO,QAAQtB,iBACtC4Q,EAAc,CACVsE,MAAOhiB,KAAKoO,QAAQtB,eACpBmV,IAAKjiB,KAAKoO,QAAQmW,eAGnB7G,CACX,EACArX,YAAY,EACZxC,cAAc,IAElB2d,EAAU/hB,UAAUilB,aAAe,SAAUN,GACrCpkB,KAAKoO,SAAWQ,SAAS6Z,gBAAkBzoB,KAAKoO,UAChDpO,KAAKoO,QAAQsa,kBAAkBtE,EAAUpC,MAAOoC,EAAUnC,KACtDmC,EAAUpC,QAAUoC,EAAUnC,MAC9BjiB,KAAK6hB,gBAAkBnX,yBAAyB6a,WAG5D,EAIA/D,EAAU/hB,UAAUmnB,kBAAoB,SAAUpZ,GAG9C,IAFA,IAAIwU,GAAS,EACTC,EAAM,EACD1hB,EAAI,EAAGA,EAAIP,KAAK4hB,cAAclhB,OAAQH,IACvCP,KAAK4hB,cAAcrhB,KAAOiN,IAC1ByU,EAAM1hB,EAAI,GACK,IAAXyhB,IACAA,EAAQzhB,IAepB,OAXIyhB,EAAQ,IACRA,EAAQ,GAEPhiB,KAAKoU,QAAQ7B,kBAAoBvS,KAAK4hB,cAAclhB,SAAWV,KAAK2hB,YAAYjhB,SAC7EV,KAAK4hB,cAAclhB,OAASV,KAAK2hB,YAAYjhB,OAC7CuhB,GAAOjiB,KAAK2hB,YAAYjhB,OAASV,KAAK4hB,cAAclhB,OAGpDuhB,EAAM5V,KAAKC,IAAI,EAAG2V,GAAOjiB,KAAK4hB,cAAclhB,OAASV,KAAK2hB,YAAYjhB,UAGvE,CAAEshB,MAAOA,EAAOC,IAAKA,EAChC,EAIAT,EAAU/hB,UAAUklB,iBAAmB,SAAU/L,GAE7C,IADA,IAAIwL,EAAY,CAAEpC,MAAOpJ,EAAOqJ,IAAKrJ,GAC5BrY,EAAIqY,EAAO7R,EAAI6R,EAAQ,EAAGrY,EAAIP,KAAK4hB,cAAclhB,QAAUqG,GAAK,EAAGxG,IAAKwG,IAAK,CAClF,GAAIxG,EAAIP,KAAK4hB,cAAclhB,QAAUV,KAAK4hB,cAAcrhB,KAAOyK,UAAUC,gBAAiB,CACtFmZ,EAAYpkB,KAAK4mB,kBAAkB5mB,KAAK4hB,cAAcrhB,IACtD,KACJ,CACA,GAAIwG,GAAK,GAAK/G,KAAK4hB,cAAc7a,KAAOiE,UAAUC,gBAAiB,CAC/DmZ,EAAYpkB,KAAK4mB,kBAAkB5mB,KAAK4hB,cAAc7a,IACtD,KACJ,CACJ,CACA,OAAOqd,CACX,EACA5C,EAAU/hB,UAAUknB,kBAAoB,SAAUnQ,GAC9C,IAAI4N,EAAYpkB,KAAKokB,UACrB,GAAIpkB,KAAK+M,gBAAiB,CACtB,IAAIiV,EAAQoC,EAAUpC,MAClB2G,EAAgB3oB,KAAK4hB,cAAcI,EAAQ,GAC3CxU,EAAS,GACTob,EAAkB,GACtB,GAAIpS,EAAS,GACT,IAAK,IAAIjW,EAAIyhB,EAAQxL,EAAQjW,GAAK,EAAGA,IAEjC,IADAqoB,EAAkB5oB,KAAK4hB,cAAcrhB,MACbyK,UAAUC,iBAC9B2d,IAAoBD,EAAe,CACnC3G,EAAQzhB,EACRiN,EAASob,EACT,KACJ,OAIJ,IAASroB,EAAIyhB,EAAQxL,EAAQjW,EAAIP,KAAK4hB,cAAclhB,OAAQH,IAExD,IADAqoB,EAAkB5oB,KAAK4hB,cAAcrhB,MACbyK,UAAUC,iBAC9B2d,IAAoBD,EAAe,CACnC3G,EAAQzhB,EACRiN,EAASob,EACT,KACJ,CAGR,GAAIpb,EAIA,OAHAxN,KAAKuiB,cACLviB,KAAK0kB,aAAa1kB,KAAK4mB,kBAAkBpZ,SACzCxN,KAAK6hB,gBAAkBnX,yBAAyB6a,UAGxD,CACAvlB,KAAK6hB,gBAAkBnX,yBAAyBoX,KAChD,IAAInX,EAAK3K,KAAKokB,UAAWtX,EAAiBnC,EAAGqX,MAAOuC,EAAe5Z,EAAGsX,IACtE,GAAInV,EAAiByX,GACjBvkB,KAAK4hB,cAAc9U,KAAoB9M,KAAK4hB,cAAc2C,EAAe,GAIzE,OAHAvkB,KAAK0kB,aAAa1kB,KAAK2kB,iBAAiBnO,EAAS,EAAI1J,EAAiByX,EAAe,IACrFvkB,KAAKmY,mBAAoB,OACzBnY,KAAK6hB,gBAAkBnX,yBAAyBoX,MAKpD,IAFA,IAAI+G,EAAuB7oB,KAAK4hB,cAAc9U,GAC1ChG,EAAIgG,EAAiB0J,EAClB1P,EAAI,GAAKA,EAAI9G,KAAK4hB,cAAclhB,SAC/BV,KAAK4hB,cAAc9a,KAAO+hB,GAC1B7oB,KAAK4hB,cAAc9a,KAAOkE,UAAUC,kBAGxCnE,GAAK0P,EAET,GAAIxW,KAAK4hB,cAAc9a,KAAOkE,UAAUC,gBAAxC,CAKA,IADA,IAAI9L,EAAI2H,EACD3H,GAAK,GAAKA,EAAIa,KAAK4hB,cAAclhB,QAChCV,KAAK4hB,cAAcziB,KAAOa,KAAK4hB,cAAc9a,IAGjD3H,GAAKqX,EAEL1P,EAAI3H,IAAMA,EAAI,IAAM2N,GAAkBhG,EAAI,IAAMyd,IAChDvkB,KAAK0kB,aAAa,CAAE1C,MAAO7iB,EAAI,EAAG8iB,IAAKnb,EAAI,IAC3C9G,KAAKmY,mBAAoB,GAEpBrR,EAAI3H,IAAM2H,IAAMgG,GAAkB3N,IAAMolB,KAC7CvkB,KAAK0kB,aAAa,CAAE1C,MAAOlb,EAAGmb,IAAK9iB,IACnCa,KAAKmY,mBAAoB,GAE7BnY,KAAK6hB,gBAAkBnX,yBAAyBoX,IAhBhD,CAiBJ,EACAN,EAAU/hB,UAAUwoB,uBAAyB,SAAUzR,EAAQhJ,EAAQqX,GAGnE,QAFe,IAAXrX,IAAqBA,EAAS,SACpB,IAAVqX,IAAoBA,EAAQ,CAAC,GAC5B7kB,KAAK0hB,aAAc1hB,KAAKoU,QAAQ0U,SAArC,CAGA,IAAI/B,EAAW/mB,KAAKsD,MAChBoB,EAAO6a,qBACPkF,EAAQzkB,KAAKykB,QAEjB,GAAe,OADfjX,EAASA,GAAUxN,KAAK4hB,cAAc6C,EAAM,QACpBzkB,KAAKoU,QAAQyM,MAAMC,aAAe9gB,KAAKoU,QAAQyM,MAAMC,cAAgBvB,sBAAuB,CAChH,IAAIwJ,EAAW3Y,0BAA0BpQ,KAAKqoB,aAC9C3jB,EAAO6L,mBAAmBwY,EAC9B,CACA/oB,KAAK0hB,WAAWnL,WAAW/I,EAAQ9I,EAAO8R,GAC1CxW,KAAK8mB,sBAAsB,CACvBC,SAAUA,EACVlC,MAAOA,IAEX7kB,KAAKuiB,cACLviB,KAAK0kB,aAAa1kB,KAAK4mB,kBAAkBpZ,GAfzC,CAgBJ,EAIAgU,EAAU/hB,UAAUqnB,sBAAwB,SAAUzX,GAElD,QADa,IAATA,IAAmBA,EAAO,CAAE0X,SAAU,KAAMlC,MAAO,CAAC,KACnDzmB,QAAQ4B,KAAKsD,MAAO+L,EAAK0X,UAC1B,OAAO/mB,KAAKgpB,mBAAmB3Z,EAEvC,EAIAmS,EAAU/hB,UAAUupB,mBAAqB,SAAU3Z,GAE/C,YADa,IAATA,IAAmBA,EAAO,CAAE0X,SAAU,KAAMlC,MAAO,CAAC,IACjD7kB,KAAKif,QAAQoB,aAAcjR,OAAOC,EAAM,CAC3C/L,MAAOtD,KAAKsD,QAEpB,EAIAke,EAAU/hB,UAAUmlB,aAAe,SAAUvV,GAEzC,YADa,IAATA,IAAmBA,EAAO,CAAEwV,MAAO,CAAC,IACjC7kB,KAAKif,QAAQa,MAAO1Q,OAAOC,EAAM,CACpC/L,MAAOtD,KAAKsD,QAEpB,EAIAke,EAAU/hB,UAAUunB,gBAAkB,SAAU3X,GAE5C,YADa,IAATA,IAAmBA,EAAO,CAAEwV,MAAO,CAAC,EAAGne,MAAO,KAAMoe,gBAAiB,GAAImC,gBAAiB,KACvFjnB,KAAKif,QAAQqB,UAAWlR,OAAOC,EAAM,CACxC/L,MAAOtD,KAAKsD,QAEpB,EAIAke,EAAU/hB,UAAUynB,aAAe,SAAU7X,GAEzC,YADa,IAATA,IAAmBA,EAAO,CAAEwV,MAAO,CAAC,IACjC7kB,KAAKif,QAAQe,MAAO5Q,OAAO,CAAC,EAAGC,GAC1C,EAIAmS,EAAU/hB,UAAU2nB,gBAAkB,SAAU/X,GAE5C,YADa,IAATA,IAAmBA,EAAO,CAAEwV,MAAO,CAAC,IACjC7kB,KAAKif,QAAQuB,UAAWpR,OAAO,CAAC,EAAGC,GAC9C,EAIAmS,EAAU/hB,UAAU4nB,YAAc,SAAUhY,GAExC,YADa,IAATA,IAAmBA,EAAO,CAAEwV,MAAO,CAAC,IACjC7kB,KAAKif,QAAQgB,KAAM7Q,OAAO,CAAC,EAAGC,GACzC,EAIAmS,EAAU/hB,UAAU6nB,eAAiB,SAAUjY,GAE3C,YADa,IAATA,IAAmBA,EAAO,CAAEwV,MAAO,CAAC,IACjC7kB,KAAKif,QAAQsB,SAAUnR,OAAO,CAAC,EAAGC,GAC7C,EAIAmS,EAAU/hB,UAAU8nB,cAAgB,SAAUlY,GAE1C,YADa,IAATA,IAAmBA,EAAO,CAAEwV,MAAO,CAAC,IACjC7kB,KAAKif,QAAQwB,OAAQrR,OAAOC,EAAM,CACrC/L,MAAOtD,KAAKsD,QAEpB,EAIAke,EAAU/hB,UAAU+nB,eAAiB,SAAUnY,GAE3C,YADa,IAATA,IAAmBA,EAAO,CAAEwV,MAAO,CAAC,IACjC7kB,KAAKif,QAAQc,SAAU3Q,OAAO,CAAC,EAAGC,GAC7C,EAIAmS,EAAU/hB,UAAUyoB,kBAAoB,SAAU7Y,GAE9C,YADa,IAATA,IAAmBA,EAAO,CAAEwV,MAAO,CAAC,IACjC7kB,KAAKif,QAAQmB,YAAahR,OAAO,CAAC,EAAGC,GAChD,EAIAmS,EAAU/hB,UAAU8iB,YAAc,WAC9BviB,KAAKqiB,mBACLriB,KAAKmnB,qBACT,EAIA3F,EAAU/hB,UAAUinB,yBAA2B,WAC3C,IAAI/b,EAAK3K,KAAKokB,UAAWpC,EAAQrX,EAAGqX,MAAOC,EAAMtX,EAAGsX,IAChDgH,EAAqBjpB,KAAK+kB,aAAarkB,OAC3CV,KAAKuiB,cACL,IAAI2G,EAAkBlpB,KAAK+kB,aAAarkB,OAASuoB,EACjDjpB,KAAK0kB,aAAa,CACd1C,MAAOA,EAAQkH,EACfjH,IAAKA,EAAMiH,GAEnB,EAIA1H,EAAU/hB,UAAU4iB,iBAAmB,WACnC,IAAI1X,EAAK3K,KAAK0hB,WAAWtM,mBAAoBuM,EAAchX,EAAG2K,KAAMsM,EAAgBjX,EAAG0F,OACvFrQ,KAAK4hB,cAAgBA,EACrB5hB,KAAK2hB,YAAcA,CACvB,EAIAH,EAAU/hB,UAAU0pB,gBAAkB,SAAU7lB,GAC5CtD,KAAKoO,QAAQ9K,MAAQA,CACzB,EAIAke,EAAU/hB,UAAUmoB,kBAAoB,SAAUpa,GAE9C,OAAQA,GACJ,IAAK,IACD,OAAOsB,OAAO9O,KAAKoU,QAAQyM,MAAMC,aACrC,IAAK,IACD,OAAOhS,OAAO9O,KAAKoU,QAAQyM,MAAME,QACrC,IAAK,IACD,OAAOjS,OAAO9O,KAAKoU,QAAQyM,MAAMG,QAErC,IAAK,IAEL,IAAK,IACD,OAAOlS,OAAO9O,KAAKoU,QAAQyM,MAAM/P,MACrC,IAAK,IACD,OAAOhC,OAAO9O,KAAKoU,QAAQyM,MAAMjQ,OAErC,IAAK,IAGL,IAAK,IACD,OAAO9B,OAAO9O,KAAKoU,QAAQyM,MAAMhQ,KAErC,IAAK,IACD,OAAO/B,OAAO9O,KAAKoU,QAAQyM,MAAMlQ,MACrC,QACI,OAAO4O,qBAGnB,EAIAiC,EAAU/hB,UAAUgmB,+BAAiC,WACjDzlB,KAAKopB,8BACLppB,KAAKqpB,iCACT,EAIA7H,EAAU/hB,UAAU2pB,4BAA8B,WAC9CppB,KAAKmpB,gBAAgBnpB,KAAK4lB,sBAAwB,GACtD,EAIApE,EAAU/hB,UAAU4pB,gCAAkC,WAClD,IAAI1e,EAAK3K,KAAK+hB,yBAA0BC,EAAQrX,EAAGqX,MAAOC,EAAMtX,EAAGsX,IACnEjiB,KAAK0kB,aAAa,CAAE1C,MAAOA,GAAS,EAAGC,IAAKA,GAAO,GACvD,EACAT,EAAU/hB,UAAU8oB,WAAa,SAAUjlB,GACvCtD,KAAKspB,YAAYhmB,GACjBtD,KAAK0hB,WAAa1hB,KAAKupB,cAAcjmB,GACrCtD,KAAKmnB,qBACT,EACA3F,EAAU/hB,UAAU6pB,YAAc,SAAUhmB,GACxC,GAAIA,IAAUiO,YAAYjO,GACtB,MAAM,IAAIuG,MAAM,0DAExB,EACA2X,EAAU/hB,UAAU0nB,oBAAsB,WACtC,IAAI/Y,EAAUpO,KAAKoO,QACfiC,EAASrQ,KAAKkkB,SAAWlkB,KAAKqoB,YAAcroB,KAAKwoB,cACjD7d,EAAK3K,KAAK0hB,WAAWtM,iBAAiB/E,GAASsR,EAAchX,EAAG2K,KAAMsM,EAAgBjX,EAAG0F,OAC7FrQ,KAAK4hB,cAAgBA,EACrB5hB,KAAK2hB,YAAcA,EACnB,IAAIhB,EAAiB3gB,KAAKoU,QAAQuM,gBAAkBjS,UAAU1O,KAAKoU,QAAQwM,aACvE4I,GAAmBxpB,KAAKkkB,UACxBvD,IACC3gB,KAAK0hB,WAAW/M,WACjBgM,GAAkBjS,UAAU1O,KAAKoU,QAAQwM,eACzCxS,EAAQwS,YAAc5gB,KAAKoU,QAAQwM,aAEvC,IAAIqG,EAAkBuC,EAAkB,GAAK7H,EAC7C3hB,KAAK4lB,qBAAuB5lB,KAAK+kB,aACjC/kB,KAAKmpB,gBAAgBlC,EACzB,EAIAzF,EAAU/hB,UAAUglB,MAAQ,SAAUzC,EAAOC,QAC7B,IAARA,IAAkBA,EAAMD,GAC5B,IAAIyH,OAAuBvjB,IAAV8b,EACbtE,EAAc,CAACsE,EAAOA,GACtB5T,EAAUpO,KAAKoO,QACnB,IAAIqb,IAAezpB,KAAKoU,QAAQsV,WAAY1pB,KAAKoU,QAAQ0U,SAAzD,CAGA,SACmC5iB,IAA3BkI,EAAQtB,iBACJ2c,IACI9a,uBAAyBC,SAAS6Z,gBAAkBra,GACpDA,EAAQ0V,QAEZ1V,EAAQsa,kBAAkB1G,EAAOC,IAErCvE,EAAc,CAACtP,EAAQtB,eAAgBsB,EAAQmW,cAEvD,CACA,MAAO1jB,GACH6c,EAAc,EAClB,CACA,OAAOA,CAfP,CAgBJ,EACA8D,EAAU/hB,UAAUskB,qBAAuB,SAAUnL,GAEjD,IAAK,IAAIrY,EAAIqY,EAAO7R,EAAI6R,EAAQ,EAAGrY,EAAIP,KAAK4hB,cAAclhB,QAAUqG,GAAK,EAAGxG,IAAKwG,IAAK,CAClF,GAAIxG,EAAIP,KAAK4hB,cAAclhB,QAAoC,MAA1BV,KAAK4hB,cAAcrhB,GAEpD,YADAP,KAAK2pB,kBAAkB3pB,KAAK4hB,cAAcrhB,IAG9C,GAAIwG,GAAK,GAA+B,MAA1B/G,KAAK4hB,cAAc7a,GAE7B,YADA/G,KAAK2pB,kBAAkB3pB,KAAK4hB,cAAc7a,GAGlD,CACJ,EACAya,EAAU/hB,UAAUkqB,kBAAoB,SAAUnc,GAG9C,IAFA,IAAIoc,GAAS,EACT3H,EAAM,EACD1hB,EAAI,EAAGA,EAAIP,KAAK4hB,cAAclhB,OAAQH,IACvCP,KAAK4hB,cAAcrhB,KAAOiN,IAC1ByU,EAAM1hB,EAAI,GACK,IAAXqpB,IACAA,EAAQrpB,IAIhBqpB,EAAQ,IACRA,EAAQ,GAEZ5pB,KAAKykB,MAAM,EAAG,GACdzkB,KAAKykB,MAAMmF,EAAO3H,EACtB,EAIAT,EAAU/hB,UAAU8pB,cAAgB,SAAUjmB,GAC1C,IAAIoP,GAAgB1S,KAAK0hB,YAAc,CAAC,GAAM,MAAMhP,YACpD1S,KAAKoU,QAAQ9Q,MAAQA,EACrB,IAAIoe,EAAa1hB,KAAKoiB,mBAEtB,OADAV,EAAWlF,eAAexc,KAAKkkB,SAAWxR,EAAc,MACjDgP,CACX,EAKAF,EAAU/hB,UAAU2iB,iBAAmB,WACnC,IAAIvD,EAAiB7e,KAAK2jB,uBAE1B,OADiB,IAAI3R,WAAW5C,OAAO,CAAC,EAAGyP,GAE/C,EAIA2C,EAAU/hB,UAAUkkB,qBAAuB,WAUvC,MATiB,CACb1R,YAAajS,KAAKoU,QAAQnC,YAC1BC,kBAAmBlS,KAAKoU,QAAQlC,kBAAoBlS,KAAKoU,QAAQlC,kBAAoB,gBACrF7B,OAAQrQ,KAAKqoB,YACblW,UAAWnS,KAAKoU,QAAQjC,UACxBjH,gBAAiBlL,KAAKoU,QAAQlJ,gBAC9BqH,iBAAkBvS,KAAKoU,QAAQ7B,iBAC/BjP,MAAOtD,KAAKoU,QAAQ9Q,MAG5B,EAKAke,EAAU/hB,UAAUgoB,8BAAgC,SAAUoC,GAC1D,IAAIvI,GAAkBthB,KAAKoU,QAAQkN,gBAAkB,IAChD5T,KAAI,SAAUjK,GAAK,OAAOA,EAAEyM,WAAWzF,cAAcqf,MAAQ,IAClE,OAAIxI,EAAexgB,QAAQ+oB,EAAUzE,QAAQlV,aAAe,GACxDoR,EAAexgB,QAAQ+oB,EAAUzE,UAAY,GAC7C9D,EAAexgB,QAAQ+oB,EAAUzoB,IAAIqJ,cAAcqf,SAAW,CAItE,EAIAtI,EAAU/hB,UAAU8hB,SAAW,WAC3B,IAA4D1Q,EAAKD,EAAOD,EAAM6B,EAAOzB,EAASC,EAA1F0Q,EAAa1hB,KAAK0hB,WAAYqI,EAAc,IAAIpa,MAChD+R,EAAWlT,MAAQkT,EAAW9Q,OAAS8Q,EAAW/Q,MAAQ+Q,EAAWlP,OAASkP,EAAW3Q,SAAW2Q,EAAW1Q,WAC/GL,EAAO+Q,EAAW/Q,KAAO+Q,EAAWpe,MAAM2M,cAAgB8Z,EAAY9Z,cAClEW,EAAQ8Q,EAAW9Q,MAAQ8Q,EAAWpe,MAAM4N,WAAa6Y,EAAY7Y,WACrEL,EAAM6Q,EAAWlT,KAAOkT,EAAWpe,MAAMhF,UAAYyrB,EAAYzrB,UACjEkU,EAAQkP,EAAWlP,MAAQkP,EAAWpe,MAAM6N,WAAa4Y,EAAY5Y,WACrEJ,EAAU2Q,EAAW3Q,QAAU2Q,EAAWpe,MAAM8N,aAAe2Y,EAAY3Y,aAC3EJ,EAAU0Q,EAAW1Q,QAAU0Q,EAAWpe,MAAM+N,aAAe0Y,EAAY1Y,aAC/EqQ,EAAWjN,SAAS,IAAI9E,KAAKgB,EAAMC,EAAOC,EAAK2B,EAAOzB,EAASC,IAC/DhR,KAAKmnB,sBACLnnB,KAAKgpB,qBAEb,EACOxH,CACX,CA3mC8B,CA2mC5BzC,mBAEOyC,eAAgBxY,4BAA6BJ,4BAA6B1E,uBAC1EzF","ignoreList":[],"sourcesContent":["import { c as cloneDate, i as isEqual, a as createDate, g as getDate, b as addMonths, l as lastDayOfMonth } from './kendo.date-math.cmn.chunk.js';\n\nconst __meta__ = {\n    id: \"dateinputs-common.cmn.chunk\",\n    name: \"DateinputsCommonCmnChunk\",\n    category: \"web\",\n    description: \"A reusable outputed chunk of code\",\n    depends: ['date-math.cmn.chunk'],\n    hidden: true,\n    chunk: true\n};\n\n\n\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  };\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nfunction __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nfunction __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nfunction __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nfunction __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nfunction __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nfunction __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nfunction __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nfunction __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nfunction __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nfunction __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nfunction __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nfunction __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nfunction __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nfunction __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nfunction __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nfunction __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nfunction __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nvar tslib_es6 = {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n\nvar Mask = /** @class */ (function () {\n    function Mask() {\n        this.symbols = '';\n        this.partMap = [];\n    }\n    return Mask;\n}());\n\nvar Constants = {\n    formatSeparator: \"_\",\n    twoDigitYearMax: 68,\n    defaultDateFormat: \"d\",\n    defaultLocaleId: \"en\"\n};\n\nvar Key = {\n    DELETE: \"Delete\",\n    BACKSPACE: \"Backspace\",\n    TAB: \"Tab\",\n    ENTER: \"Enter\",\n    ESCAPE: \"Escape\",\n    ARROW_LEFT: \"ArrowLeft\",\n    ARROW_UP: \"ArrowUp\",\n    ARROW_RIGHT: \"ArrowRight\",\n    ARROW_DOWN: \"ArrowDown\",\n    SPACE: \" \",\n    END: \"End\",\n    HOME: \"Home\",\n    PAGE_UP: \"PageUp\",\n    PAGE_DOWN: \"PageDown\"\n};\n\n/**\n * @hidden\n */\nvar padZero = function (length) { return new Array(Math.max(length, 0)).fill('0').join(''); };\n/**\n * @hidden\n */\nvar unpadZero = function (value) { return value.replace(/^0*/, ''); };\n/**\n * @hidden\n */\nvar approximateStringMatching = function (_a) {\n    var oldText = _a.oldText, newText = _a.newText, formatPattern = _a.formatPattern, selectionStart = _a.selectionStart, isInCaretMode = _a.isInCaretMode, keyEvent = _a.keyEvent;\n    /*\n      Remove the right part of the cursor.\n      oldFormat = oldFormat.substring(0, caret + oldText.length - newText.length);\n    */\n    var oldIndex = selectionStart + oldText.length - newText.length;\n    var oldTextSeparator = oldText[oldIndex];\n    var oldSegmentText = oldText.substring(0, oldIndex);\n    var newSegmentText = newText.substring(0, selectionStart);\n    var diff = [];\n    /* Handle the typing of a single character over the same selection. */\n    if (oldSegmentText === newSegmentText && selectionStart > 0) {\n        diff.push([formatPattern[selectionStart - 1], newSegmentText[selectionStart - 1]]);\n        return diff;\n    }\n    if (oldSegmentText.indexOf(newSegmentText) === 0 && (isInCaretMode &&\n        (keyEvent.key === Key.DELETE || keyEvent.key === Key.BACKSPACE)) ||\n        (oldSegmentText.indexOf(newSegmentText) === 0 && !isInCaretMode &&\n            (newSegmentText.length === 0 ||\n                formatPattern[newSegmentText.length - 1] !== formatPattern[newSegmentText.length]))) {\n        /* Handle Delete/Backspace. */\n        var deletedSymbol = '';\n        /*\n            The whole text is replaced by the same character.\n            A nasty patch is required to keep the selection in the first segment.\n        */\n        if (!isInCaretMode && newSegmentText.length === 1) {\n            diff.push([formatPattern[0], newSegmentText[0]]);\n        }\n        for (var i = newSegmentText.length; i < oldSegmentText.length; i++) {\n            if (formatPattern[i] !== deletedSymbol && formatPattern[i] !== Constants.formatSeparator) {\n                deletedSymbol = formatPattern[i];\n                diff.push([deletedSymbol, '']);\n            }\n        }\n        return diff;\n    }\n    /*\n        Handle the insertion of the text (the new text is longer than the previous one).\n        Handle the typing over a literal as well.\n    */\n    if ((isInCaretMode &&\n        (newSegmentText.indexOf(oldSegmentText) === 0 ||\n            formatPattern[selectionStart - 1] === Constants.formatSeparator)) ||\n        (!isInCaretMode &&\n            (newSegmentText.indexOf(oldSegmentText) === 0 ||\n                formatPattern[selectionStart - 1] === Constants.formatSeparator))) {\n        var symbol = formatPattern[0];\n        for (var i = Math.max(0, oldSegmentText.length - 1); i < formatPattern.length; i++) {\n            if (formatPattern[i] !== Constants.formatSeparator) {\n                symbol = formatPattern[i];\n                break;\n            }\n        }\n        return [[symbol, newSegmentText[selectionStart - 1]]];\n    }\n    /* Handle the entering of a space or a separator for navigating to the next item. */\n    if ((newSegmentText[newSegmentText.length - 1] === ' ') ||\n        (newSegmentText[newSegmentText.length - 1] === oldTextSeparator && formatPattern[oldIndex] === '_')) {\n        return [[formatPattern[selectionStart - 1], Constants.formatSeparator]];\n    }\n    /* Handle typing over a correctly selected part. */\n    var result = [[formatPattern[selectionStart - 1], newSegmentText[selectionStart - 1]]];\n    return result;\n};\n/**\n * @hidden\n */\nvar dateSymbolMap = function (map, part) {\n    map[part.pattern[0]] = part.type;\n    return map;\n};\n/**\n * @hidden\n */\nvar isInRange = function (candidate, min, max) { return (candidate === null || !((min && min > candidate) || (max && max < candidate))); };\n\nvar isObject = function (value) { return value && typeof (value) === \"object\" && !Array.isArray(value); };\nvar isHtmlElement = function (element) { return element instanceof HTMLElement; };\nvar dateSetter = function (method) { return function (date, value) {\n    var clone = cloneDate(date);\n    clone[method](value);\n    return clone;\n}; };\n/**\n * @hidden\n */\nvar isPresent = function (value) { return value !== undefined && value !== null; };\n/**\n * @hidden\n */\nvar isDocumentAvailable = function () { return !!document; };\n/**\n * @hidden\n */\nvar isNumber = function (value) { return isPresent(value) && typeof (value) === \"number\" && !Number.isNaN(value); };\n/**\n * @hidden\n */\nvar parseToInt = function (value) { return parseInt(value, 10); };\n/**\n * @hidden\n */\nvar isParseableToInt = function (value) { return isNumber(parseToInt(value)) && /^[0-9]+$/.test(value); };\n/**\n * @hidden\n */\nvar clamp = function (value, min, max) { return Math.min(max, Math.max(min, value)); };\n/**\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nvar extend = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return Object.assign.apply(Object, args);\n};\n/**\n * @hidden\n */\nvar deepExtend = function (target) {\n    var _a, _b;\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    if (!sources.length) {\n        return target;\n    }\n    var source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (var key in source) {\n            if (isHtmlElement(source[key])) {\n                target[key] = source[key];\n            }\n            else if (isObject(source[key]) && !(source[key] instanceof Date)) {\n                if (!target[key] || !isObject(target[key])) {\n                    extend(target, (_a = {}, _a[key] = {}, _a));\n                }\n                deepExtend(target[key], source[key]);\n            }\n            else {\n                extend(target, (_b = {}, _b[key] = source[key], _b));\n            }\n        }\n    }\n    return deepExtend.apply(void 0, [target].concat(sources));\n};\n/**\n * @hidden\n */\nvar noop = function () { };\n/**\n * @hidden\n */\nvar isFunction = function (fn) { return typeof (fn) === \"function\"; };\n/**\n * @hidden\n */\nvar cropTwoDigitYear = function (date) {\n    if (!isPresent(date) || isNaN(date.getTime())) {\n        return 0;\n    }\n    return Number(date\n        .getFullYear()\n        .toString()\n        .slice(-2));\n};\n/**\n * @hidden\n */\nvar setYears = dateSetter('setFullYear');\n/**\n * @hidden\n */\nvar millisecondDigitsInFormat = function (format) {\n    var result = format && format.match(/S+(\\1)/);\n    return result ? result[0].length : 0;\n};\n/**\n * @hidden\n */\nvar millisecondStepFor = function (digits) {\n    return Math.pow(10, 3 - digits);\n};\n/**\n * @hidden\n */\nvar areDatePartsEqualTo = function (date, year, month, day, hour, minutes, seconds, milliseconds) {\n    if (date &&\n        date.getFullYear() === year &&\n        date.getMonth() === month &&\n        date.getDate() === day &&\n        date.getHours() === hour &&\n        date.getMinutes() === minutes &&\n        date.getSeconds() === seconds &&\n        date.getMilliseconds() === milliseconds) {\n        return true;\n    }\n    return false;\n};\n/**\n * @hidden\n */\nvar isValidDate = function (value) { return isPresent(value) && value.getTime && isNumber(value.getTime()); };\n\nvar MONTH_INDEX_FEBRUARY = 1;\nvar DEFAULT_LEAP_YEAR = 2000;\nvar PREVIOUS_CENTURY_BASE = 1900;\nvar CURRENT_CENTURY_BASE = 2000;\nvar SHORT_PATTERN_LENGTH_REGEXP = /d|M|H|h|m|s/;\nvar MONTH_PART_WITH_WORDS_THRESHOLD = 2;\nvar MONTH_SYMBOL = \"M\";\n// JS months start from 0 (January) instead of 1 (January)\nvar JS_MONTH_OFFSET = 1;\nvar DateObject = /** @class */ (function () {\n    function DateObject(_a) {\n        var intlService = _a.intlService, formatPlaceholder = _a.formatPlaceholder, format = _a.format, _b = _a.cycleTime, cycleTime = _b === void 0 ? false : _b, _c = _a.twoDigitYearMax, twoDigitYearMax = _c === void 0 ? Constants.twoDigitYearMax : _c, _d = _a.value, value = _d === void 0 ? null : _d, _e = _a.autoCorrectParts, autoCorrectParts = _e === void 0 ? true : _e;\n        this.year = true;\n        this.month = true;\n        this.date = true;\n        this.hours = true;\n        this.minutes = true;\n        this.seconds = true;\n        this.milliseconds = true;\n        this.dayperiod = true;\n        this.leadingZero = null;\n        this.typedMonthPart = '';\n        this.knownParts = 'adHhmMsEyS';\n        this.symbols = {\n            'E': 'E',\n            'H': 'H',\n            'M': 'M',\n            'a': 'a',\n            'd': 'd',\n            'h': 'h',\n            'm': 'm',\n            's': 's',\n            'y': 'y',\n            'S': 'S'\n        };\n        this._value = this.getDefaultDate();\n        this.cycleTime = false;\n        this._partiallyInvalidDate = {\n            startDate: null,\n            invalidDateParts: {\n                'E': { value: null, date: null, startDateOffset: 0 },\n                'H': { value: null, date: null, startDateOffset: 0 },\n                'M': { value: null, date: null, startDateOffset: 0 },\n                'a': { value: null, date: null, startDateOffset: 0 },\n                'd': { value: null, date: null, startDateOffset: 0 },\n                'h': { value: null, date: null, startDateOffset: 0 },\n                'm': { value: null, date: null, startDateOffset: 0 },\n                's': { value: null, date: null, startDateOffset: 0 },\n                'y': { value: null, date: null, startDateOffset: 0 },\n                'S': { value: null, date: null, startDateOffset: 0 }\n            }\n        };\n        this.setOptions({\n            intlService: intlService,\n            formatPlaceholder: formatPlaceholder,\n            format: format,\n            cycleTime: cycleTime,\n            twoDigitYearMax: twoDigitYearMax,\n            value: value,\n            autoCorrectParts: autoCorrectParts\n        });\n        if (!value) {\n            this._value = this.getDefaultDate();\n            var sampleFormat = this.dateFormatString(this.value, this.format).symbols;\n            for (var i = 0; i < sampleFormat.length; i++) {\n                this.setExisting(sampleFormat[i], false);\n            }\n        }\n        else {\n            this._value = cloneDate(value);\n        }\n    }\n    Object.defineProperty(DateObject.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            if (value && !(value instanceof Date)) {\n                // throw new Error(\"The 'value' should be a valid JavaScript Date instance.\");\n                return;\n            }\n            this._value = value;\n            this.resetInvalidDate();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateObject.prototype, \"localeId\", {\n        get: function () {\n            var localeId = Constants.defaultLocaleId;\n            var cldrKeys = Object.keys(this.intl.cldr);\n            for (var i = 0; i < cldrKeys.length; i++) {\n                var key = cldrKeys[i];\n                var value = this.intl.cldr[key];\n                if (value.name && value.calendar && value.numbers &&\n                    value.name !== Constants.defaultLocaleId) {\n                    localeId = value.name;\n                    break;\n                }\n            }\n            return localeId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    DateObject.prototype.setOptions = function (options) {\n        this.intl = options.intlService;\n        this.formatPlaceholder = options.formatPlaceholder || 'wide';\n        this.format = options.format;\n        this.cycleTime = options.cycleTime;\n        this.monthNames = this.allFormattedMonths(this.localeId);\n        this.dayPeriods = this.allDayPeriods(this.localeId);\n        this.twoDigitYearMax = options.twoDigitYearMax;\n        this.autoCorrectParts = options.autoCorrectParts;\n    };\n    DateObject.prototype.setValue = function (value) {\n        if (!value) {\n            this._value = this.getDefaultDate();\n            this.modifyExisting(false);\n        }\n        else if (!isEqual(value, this._value)) {\n            this._value = cloneDate(value);\n            this.modifyExisting(true);\n        }\n        this.resetInvalidDate();\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.hasValue = function () {\n        var _this = this;\n        var pred = function (a, p) { return a || p.type !== 'literal' && p.type !== 'dayperiod' && _this.getExisting(p.pattern[0]); };\n        return this.intl.splitDateFormat(this.format, this.localeId).reduce(pred, false);\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.getValue = function () {\n        for (var i = 0; i < this.knownParts.length; i++) {\n            if (!this.getExisting(this.knownParts[i])) {\n                return null;\n            }\n        }\n        return cloneDate(this.value);\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.createDefaultDate = function () {\n        // use the leap year 2000 that has 29th February\n        // and a month that has 31 days\n        // so that the default date can accommodate maximum date values\n        // it is better to use a fixed date instead of new Date()\n        // as otherwise the\n        return createDate(DEFAULT_LEAP_YEAR, 0, 31);\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.getDefaultDate = function () {\n        return getDate(this.createDefaultDate());\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.getFormattedDate = function (format) {\n        return this.intl.formatDate(this.getValue(), format, this.localeId);\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.getTextAndFormat = function (customFormat) {\n        if (customFormat === void 0) { customFormat = \"\"; }\n        var format = customFormat || this.format;\n        var text = this.intl.formatDate(this.value, format, this.localeId);\n        var mask = this.dateFormatString(this.value, format);\n        if (!this.autoCorrectParts && this._partiallyInvalidDate.startDate) {\n            var partiallyInvalidText = \"\";\n            var formattedDate = this.intl.formatDate(this.value, format, this.localeId);\n            var formattedDates = this.getFormattedInvalidDates(format);\n            for (var i = 0; i < formattedDate.length; i++) {\n                var symbol = mask.symbols[i];\n                if (mask.partMap[i].type === \"literal\") {\n                    partiallyInvalidText += text[i];\n                }\n                else if (this.getInvalidDatePartValue(symbol)) {\n                    var partsForSegment = this.getPartsForSegment(mask, i);\n                    if (symbol === \"M\") {\n                        var datePartText = (parseToInt(this.getInvalidDatePartValue(symbol)) + JS_MONTH_OFFSET).toString();\n                        if (partsForSegment.length > MONTH_PART_WITH_WORDS_THRESHOLD) {\n                            partiallyInvalidText += formattedDates[symbol][i];\n                        }\n                        else {\n                            if (this.getInvalidDatePartValue(symbol)) {\n                                var formattedDatePart = padZero(partsForSegment.length - datePartText.length) + datePartText;\n                                partiallyInvalidText += formattedDatePart;\n                                // add -1 as the first character in the segment is at index i\n                                i += partsForSegment.length - 1;\n                            }\n                            else {\n                                partiallyInvalidText += formattedDates[symbol][i];\n                            }\n                        }\n                    }\n                    else {\n                        if (this.getInvalidDatePartValue(symbol)) {\n                            var datePartText = this.getInvalidDatePartValue(symbol).toString();\n                            var formattedDatePart = padZero(partsForSegment.length - datePartText.length) + datePartText;\n                            partiallyInvalidText += formattedDatePart;\n                            // add -1 as the first character in the segment is at index i\n                            i += partsForSegment.length - 1;\n                        }\n                        else {\n                            partiallyInvalidText += formattedDates[symbol][i];\n                        }\n                    }\n                }\n                else {\n                    partiallyInvalidText += text[i];\n                }\n            }\n            text = partiallyInvalidText;\n        }\n        var result = this.merge(text, mask);\n        return result;\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.getFormattedInvalidDates = function (customFormat) {\n        var _this = this;\n        if (customFormat === void 0) { customFormat = \"\"; }\n        var format = customFormat || this.format;\n        var formattedDatesForSymbol = {\n            'E': '',\n            'H': '',\n            'M': '',\n            'a': '',\n            'd': '',\n            'h': '',\n            'm': '',\n            's': '',\n            'y': '',\n            'S': ''\n        };\n        Object.keys(this._partiallyInvalidDate.invalidDateParts).forEach(function (key) {\n            var date = _this.getInvalidDatePart(key).date;\n            if (date) {\n                var formattedInvalidDate = _this.intl.formatDate(date, format, _this.localeId);\n                formattedDatesForSymbol[key] = formattedInvalidDate;\n            }\n        });\n        return formattedDatesForSymbol;\n    };\n    DateObject.prototype.modifyExisting = function (value) {\n        var sampleFormat = this.dateFormatString(this.value, this.format).symbols;\n        for (var i = 0; i < sampleFormat.length; i++) {\n            this.setExisting(sampleFormat[i], value);\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.getExisting = function (symbol) {\n        switch (symbol) {\n            case 'y': return this.year;\n            case 'M':\n            case 'L': return this.month;\n            case 'd': return this.date;\n            case 'E': return this.date && this.month && this.year;\n            case 'h':\n            case 'H': return this.hours;\n            case 't':\n            case 'a': return this.dayperiod;\n            case 'm': return this.minutes;\n            case 's': return this.seconds;\n            case \"S\": return this.milliseconds;\n            default:\n                return true;\n        }\n    };\n    DateObject.prototype.setExisting = function (symbol, value) {\n        switch (symbol) {\n            case 'y':\n                // allow 2/29 dates\n                this.year = value;\n                if (value === false) {\n                    this._value.setFullYear(DEFAULT_LEAP_YEAR);\n                }\n                break;\n            case 'M':\n                // make sure you can type 31 in the day part\n                this.month = value;\n                if (value === false) {\n                    if (this.autoCorrectParts) {\n                        this._value.setMonth(0);\n                    }\n                }\n                break;\n            case 'd':\n                this.date = value;\n                break;\n            case 'h':\n            case 'H':\n                this.hours = value;\n                break;\n            case 't':\n            case 'a':\n                this.dayperiod = value;\n                break;\n            case 'm':\n                this.minutes = value;\n                break;\n            case 's':\n                this.seconds = value;\n                break;\n            case \"S\":\n                this.milliseconds = value;\n                break;\n            default:\n                break;\n        }\n        if (this.getValue()) {\n            this.resetInvalidDate();\n        }\n    };\n    DateObject.prototype.modifyPart = function (symbol, offset) {\n        if (!isPresent(symbol) || !isPresent(offset) || offset === 0) {\n            return;\n        }\n        var newValue = cloneDate(this.value);\n        var timeModified = false;\n        var invalidDateFound;\n        var isMonth = symbol === \"M\";\n        var isDay = symbol === \"d\" || symbol === \"E\";\n        var symbolExists = this.getExisting(symbol);\n        if (!this.autoCorrectParts && (isDay || isMonth)) {\n            var invalidDateParts = this._partiallyInvalidDate.invalidDateParts || {};\n            var invalidDatePartValue = this.getInvalidDatePartValue(symbol);\n            var year = invalidDateParts.y.value || newValue.getFullYear();\n            var month = invalidDateParts.M.value || newValue.getMonth();\n            var day = invalidDateParts.d.value || invalidDateParts.E.value || newValue.getDate();\n            var hour = invalidDateParts.h.value || invalidDateParts.H.value || newValue.getHours();\n            var minutes = invalidDateParts.m.value || newValue.getMinutes();\n            var seconds = invalidDateParts.s.value || newValue.getSeconds();\n            var milliseconds = invalidDateParts.S.value || newValue.getMilliseconds();\n            switch (symbol) {\n                case 'y':\n                    year += offset;\n                    break;\n                case 'M':\n                    month += offset;\n                    break;\n                case 'd':\n                case 'E':\n                    day += offset;\n                    break;\n                // case 'h':\n                // case 'H': hour += offset; break;\n                // case 'm': minutes += offset; break;\n                // case 's': seconds += offset; break;\n                // case 'S': milliseconds += offset; break;\n                default: break;\n            }\n            if (symbol === \"M\") {\n                if ((month < 0 || month > 11)) {\n                    if (symbolExists) {\n                        this.setExisting(symbol, false);\n                        this.resetInvalidDateSymbol(symbol);\n                        return;\n                    }\n                }\n                if (!symbolExists) {\n                    if (month < 0) {\n                        month = clamp(11 + ((month % 11) + 1), 0, 11);\n                    }\n                    else {\n                        var monthValue = isPresent(invalidDatePartValue) ?\n                            month :\n                            ((offset - JS_MONTH_OFFSET) % 12);\n                        month = clamp(monthValue, 0, 11);\n                    }\n                    month = clamp(month, 0, 11);\n                }\n                month = clamp(month, 0, 11);\n            }\n            else if (symbol === \"d\") {\n                if (symbolExists) {\n                    if (day <= 0 || day > 31) {\n                        this.setExisting(symbol, false);\n                        this.resetInvalidDateSymbol(symbol);\n                        return;\n                    }\n                }\n                else if (!symbolExists) {\n                    if (isPresent(invalidDatePartValue)) {\n                        if (day <= 0 || day > 31) {\n                            this.setExisting(symbol, false);\n                            this.resetInvalidDateSymbol(symbol);\n                            return;\n                        }\n                    }\n                    if (offset < 0) {\n                        var dayValue = isPresent(invalidDatePartValue) ? day : 1 + (31 - Math.abs(offset % 31));\n                        day = clamp(dayValue, 1, 31);\n                    }\n                    else {\n                        var dayValue = isPresent(invalidDatePartValue) ? day : offset % 31;\n                        day = clamp(dayValue, 1, 31);\n                    }\n                    day = clamp(day, 1, 31);\n                }\n            }\n            var dateCandidate = createDate(year, month, day, hour, minutes, seconds, milliseconds);\n            var newValueCandidate = isMonth || isDay ?\n                this.modifyDateSymbolWithValue(newValue, symbol, isMonth ? month : day) :\n                null;\n            var dateCandidateExists = areDatePartsEqualTo(dateCandidate, year, month, day, hour, minutes, seconds, milliseconds);\n            if (this.getValue() && areDatePartsEqualTo(dateCandidate, year, month, day, hour, minutes, seconds, milliseconds)) {\n                newValue = cloneDate(dateCandidate);\n                this.markDatePartsAsExisting();\n            }\n            else if (isMonth && newValueCandidate) {\n                if (newValueCandidate.getMonth() === month) {\n                    if (this.getExisting(\"d\")) {\n                        if (dateCandidateExists) {\n                            newValue = cloneDate(dateCandidate);\n                            this.resetInvalidDateSymbol(symbol);\n                        }\n                        else {\n                            invalidDateFound = true;\n                            this.setInvalidDatePart(symbol, {\n                                value: month,\n                                date: cloneDate(newValueCandidate),\n                                startDateOffset: offset,\n                                startDate: cloneDate(this.value)\n                            });\n                            this.setExisting(symbol, false);\n                        }\n                    }\n                    else if (dateCandidateExists) {\n                        this.resetInvalidDateSymbol(symbol);\n                        newValue = cloneDate(dateCandidate);\n                        if (this.getExisting(\"M\") && this.getExisting(\"y\")) {\n                            // changing from 28/Feb to 29/Feb to 29/March\n                            this.setExisting(\"d\", true);\n                            this.resetInvalidDateSymbol(\"d\");\n                        }\n                    }\n                    else {\n                        this.resetInvalidDateSymbol(symbol);\n                        newValue = cloneDate(newValueCandidate);\n                    }\n                }\n                else {\n                    invalidDateFound = true;\n                    this.setInvalidDatePart(symbol, {\n                        value: month,\n                        date: cloneDate(newValueCandidate),\n                        startDateOffset: offset,\n                        startDate: cloneDate(this.value)\n                    });\n                    this.setExisting(symbol, false);\n                }\n            }\n            else if (isDay && newValueCandidate) {\n                if (newValueCandidate.getDate() === day) {\n                    if (this.getExisting(\"M\")) {\n                        if (dateCandidateExists) {\n                            newValue = cloneDate(dateCandidate);\n                            this.resetInvalidDateSymbol(symbol);\n                        }\n                        else {\n                            invalidDateFound = true;\n                            this.setInvalidDatePart(symbol, {\n                                value: day,\n                                date: cloneDate(newValueCandidate),\n                                startDateOffset: offset,\n                                startDate: cloneDate(this.value)\n                            });\n                            this.setExisting(symbol, false);\n                        }\n                    }\n                    else if (dateCandidateExists) {\n                        newValue = cloneDate(dateCandidate);\n                        this.resetInvalidDateSymbol(symbol);\n                        if (this.getExisting(\"d\") && this.getExisting(\"y\")) {\n                            // changing from 31/Jan to 31/Feb to 28/Feb\n                            this.setExisting(\"M\", true);\n                            this.resetInvalidDateSymbol(\"M\");\n                        }\n                    }\n                    else {\n                        this.resetInvalidDateSymbol(symbol);\n                        newValue = cloneDate(newValueCandidate);\n                    }\n                }\n                else {\n                    invalidDateFound = true;\n                    this.setInvalidDatePart(symbol, {\n                        value: day,\n                        date: cloneDate(this.value),\n                        startDateOffset: offset,\n                        startDate: cloneDate(this.value)\n                    });\n                    this.setExisting(symbol, false);\n                }\n            }\n        }\n        else {\n            switch (symbol) {\n                case 'y':\n                    newValue.setFullYear(newValue.getFullYear() + offset);\n                    break;\n                case 'M':\n                    newValue = addMonths(this.value, offset);\n                    break;\n                case 'd':\n                case 'E':\n                    newValue.setDate(newValue.getDate() + offset);\n                    break;\n                case 'h':\n                case 'H':\n                    newValue.setHours(newValue.getHours() + offset);\n                    timeModified = true;\n                    break;\n                case 'm':\n                    newValue.setMinutes(newValue.getMinutes() + offset);\n                    timeModified = true;\n                    break;\n                case 's':\n                    newValue.setSeconds(newValue.getSeconds() + offset);\n                    timeModified = true;\n                    break;\n                case \"S\":\n                    newValue.setMilliseconds(newValue.getMilliseconds() + offset);\n                    break;\n                case 'a':\n                    newValue.setHours(newValue.getHours() + (12 * offset));\n                    timeModified = true;\n                    break;\n                default: break;\n            }\n        }\n        if (this.shouldNormalizeCentury()) {\n            newValue = this.normalizeCentury(newValue);\n        }\n        if (timeModified && !this.cycleTime && newValue.getDate() !== this._value.getDate()) {\n            // todo: blazor has this fix, but this fails a unit test\n            // newValue.setDate(this._value.getDate());\n            // newValue.setMonth(this._value.getMonth());\n            // newValue.setFullYear(this._value.getFullYear());\n        }\n        if (!invalidDateFound) {\n            this.setExisting(symbol, true);\n            this._value = newValue;\n            if (this.getValue()) {\n                this.resetInvalidDate();\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.parsePart = function (_a) {\n        var symbol = _a.symbol, currentChar = _a.currentChar, resetSegmentValue = _a.resetSegmentValue, cycleSegmentValue = _a.cycleSegmentValue, rawInputValue = _a.rawTextValue, isDeleting = _a.isDeleting, originalFormat = _a.originalFormat;\n        var isInCaretMode = !cycleSegmentValue;\n        var dateParts = this.dateFormatString(this.value, this.format);\n        var datePartsLiterals = dateParts.partMap\n            .filter(function (x) { return x.type === \"literal\"; })\n            .map(function (x, index) {\n            return {\n                datePartIndex: index,\n                type: x.type,\n                pattern: x.pattern,\n                literal: \"\"\n            };\n        });\n        var flatDateParts = dateParts.partMap\n            .map(function (x) {\n            return {\n                type: x.type,\n                pattern: x.pattern,\n                text: \"\"\n            };\n        });\n        for (var i = 0; i < datePartsLiterals.length; i++) {\n            var datePart = datePartsLiterals[i];\n            for (var j = 0; j < datePart.pattern.length; j++) {\n                if (datePartsLiterals[i + j]) {\n                    datePartsLiterals[i + j].literal = datePart.pattern[j];\n                }\n            }\n            i += datePart.pattern.length - 1;\n        }\n        for (var i = 0; i < flatDateParts.length; i++) {\n            var datePart = flatDateParts[i];\n            for (var j = 0; j < datePart.pattern.length; j++) {\n                if (flatDateParts[i + j]) {\n                    flatDateParts[i + j].text = datePart.pattern[j];\n                }\n            }\n            i += datePart.pattern.length - 1;\n        }\n        var shouldResetPart = isInCaretMode && symbol === \"M\" && dateParts.partMap\n            .filter(function (x) { return x.type === \"month\"; })\n            .some(function (x) { return x.pattern.length > MONTH_PART_WITH_WORDS_THRESHOLD; });\n        var parseResult = {\n            value: null,\n            switchToNext: false,\n            resetPart: shouldResetPart,\n            hasInvalidDatePart: false\n        };\n        if (!currentChar) {\n            if (isInCaretMode) {\n                for (var i = 0; i < datePartsLiterals.length; i++) {\n                    var literal = datePartsLiterals[i].literal;\n                    var rawValueStartsWithLiteral = rawInputValue.startsWith(literal);\n                    var rawValueEndsWithLiteral = rawInputValue.endsWith(literal);\n                    var rawValueHasConsecutiveLiterals = rawInputValue.indexOf(literal + literal) >= 0;\n                    if (rawValueStartsWithLiteral || rawValueEndsWithLiteral || rawValueHasConsecutiveLiterals) {\n                        this.resetLeadingZero();\n                        this.setExisting(symbol, false);\n                        this.resetInvalidDateSymbol(symbol);\n                        return extend(parseResult, { value: null, switchToNext: false });\n                    }\n                }\n            }\n            else {\n                this.resetLeadingZero();\n                this.setExisting(symbol, false);\n                this.resetInvalidDateSymbol(symbol);\n                return extend(parseResult, { value: null, switchToNext: false });\n            }\n        }\n        var baseDate = this.intl.formatDate(this.value, this.format, this.localeId);\n        var baseFormat = dateParts.symbols;\n        var replaced = false;\n        var prefix = '';\n        var current = '';\n        var datePartText = '';\n        var basePrefix = '';\n        var baseSuffix = '';\n        var suffix = '';\n        var convertedBaseFormat = \"\";\n        for (var i = 0; i < flatDateParts.length; i++) {\n            convertedBaseFormat += flatDateParts[i].text;\n        }\n        var hasFixedFormat = (this.format === baseFormat) ||\n            (this.format === convertedBaseFormat) ||\n            (this.format === originalFormat) ||\n            (this.format.length === originalFormat.length);\n        var datePartStartIndex = (hasFixedFormat ? convertedBaseFormat : originalFormat).indexOf(symbol);\n        var datePartEndIndex = (hasFixedFormat ? convertedBaseFormat : originalFormat).lastIndexOf(symbol);\n        var segmentLength = datePartEndIndex - datePartStartIndex + 1;\n        var formatToTextLengthDiff = originalFormat.length - rawInputValue.length;\n        if (isInCaretMode || (!isInCaretMode && !this.autoCorrectParts)) {\n            for (var i = 0; i < baseDate.length; i++) {\n                if (baseFormat[i] === symbol) {\n                    var existing = this.getExisting(symbol);\n                    current += existing ? baseDate[i] : '0';\n                    if (formatToTextLengthDiff > 0) {\n                        if (datePartText.length + formatToTextLengthDiff < segmentLength) {\n                            datePartText += rawInputValue[i] || \"\";\n                        }\n                    }\n                    else {\n                        datePartText += rawInputValue[i] || \"\";\n                    }\n                    replaced = true;\n                }\n                else if (!replaced) {\n                    prefix += baseDate[i];\n                    basePrefix += baseDate[i];\n                }\n                else {\n                    suffix += baseDate[i];\n                    baseSuffix += baseDate[i];\n                }\n            }\n            if (hasFixedFormat) {\n                if (convertedBaseFormat.length < rawInputValue.length) {\n                    datePartText += currentChar;\n                }\n                else if (!isDeleting && originalFormat.length > rawInputValue.length) {\n                    // let the parsing to determine if the incomplete value is valid\n                }\n                if (datePartText.length > segmentLength) {\n                    return extend(parseResult, { value: null, switchToNext: false });\n                }\n            }\n            if (!hasFixedFormat || (hasFixedFormat && !this.autoCorrectParts)) {\n                current = \"\";\n                datePartText = \"\";\n                prefix = \"\";\n                suffix = \"\";\n                replaced = false;\n                for (var i = 0; i < originalFormat.length; i++) {\n                    if (originalFormat[i] === symbol) {\n                        var existing = this.getExisting(symbol);\n                        current += existing ? baseDate[i] || \"\" : '0';\n                        if (formatToTextLengthDiff > 0) {\n                            if (datePartText.length + formatToTextLengthDiff < segmentLength) {\n                                datePartText += rawInputValue[i] || \"\";\n                            }\n                        }\n                        else {\n                            datePartText += rawInputValue[i] || \"\";\n                        }\n                        replaced = true;\n                    }\n                    else if (!replaced) {\n                        prefix += rawInputValue[i] || \"\";\n                    }\n                    else {\n                        suffix += rawInputValue[i - formatToTextLengthDiff] || \"\";\n                    }\n                }\n                if (originalFormat.length < rawInputValue.length) {\n                    datePartText += currentChar;\n                }\n            }\n        }\n        if (!isInCaretMode) {\n            if (this.autoCorrectParts) {\n                current = \"\";\n                datePartText = \"\";\n                prefix = \"\";\n                suffix = \"\";\n                replaced = false;\n                for (var i = 0; i < baseDate.length; i++) {\n                    if (baseFormat[i] === symbol) {\n                        var existing = this.getExisting(symbol);\n                        current += existing ? baseDate[i] : '0';\n                        replaced = true;\n                    }\n                    else if (!replaced) {\n                        prefix += baseDate[i];\n                    }\n                    else {\n                        suffix += baseDate[i];\n                    }\n                }\n            }\n            else {\n                current = resetSegmentValue ? datePartText : current;\n            }\n        }\n        var parsedDate = null;\n        var month = this.matchMonth(currentChar);\n        var dayPeriod = this.matchDayPeriod(currentChar, symbol);\n        var isZeroCurrentChar = currentChar === '0';\n        var leadingZero = this.leadingZero || {};\n        if (isZeroCurrentChar) {\n            if (datePartText === \"0\") {\n                datePartText = current;\n            }\n            var valueNumber = parseToInt(resetSegmentValue ?\n                currentChar :\n                (isInCaretMode ? datePartText : current) + currentChar);\n            if (valueNumber === 0 && !this.isAbbrMonth(dateParts.partMap, symbol)) {\n                this.incrementLeadingZero(symbol);\n            }\n        }\n        else {\n            this.resetLeadingZero();\n        }\n        var partPattern = this.partPattern(dateParts.partMap, symbol);\n        var patternValue = partPattern ? partPattern.pattern : null;\n        var patternLength = this.patternLength(patternValue) || patternValue.length;\n        if (isInCaretMode) {\n            if (isDeleting && !datePartText) {\n                this.setExisting(symbol, false);\n                return extend(parseResult, { value: null, switchToNext: false });\n            }\n        }\n        var currentMaxLength = current.length - 3;\n        var tryParse = true;\n        var middle = isInCaretMode ? datePartText : current;\n        for (var i = Math.max(0, currentMaxLength); i <= current.length; i++) {\n            if (!tryParse) {\n                break;\n            }\n            middle = resetSegmentValue ?\n                currentChar :\n                isInCaretMode ?\n                    datePartText :\n                    (current.substring(i) + currentChar);\n            if (isInCaretMode || !this.autoCorrectParts) {\n                tryParse = false;\n                middle = unpadZero(middle);\n                // middle = padZero(segmentLength - middle.length) + middle;\n                middle = padZero(patternLength - middle.length) + middle;\n            }\n            var middleNumber = parseInt(middle, 10);\n            var candidateDateString = prefix + middle + suffix;\n            parsedDate = this.intl.parseDate(candidateDateString, this.format, this.localeId);\n            var autoCorrectedPrefixAndSuffix = false;\n            if (isInCaretMode && !isValidDate(parsedDate)) {\n                // if part of the date is not available, e.g. \"d\"\n                // but an expanded format like \"F\" is used\n                // the element value can be \"EEEE, February 1, 2022 3:04:05 AM\"\n                // which is not parsable by intl\n                // use the base prefix and suffix, e.g. convert the candidate date string\n                // to \"Thursday, February 1, 2022 3:04:05 AM\"\n                // as \"EEEE, February...\" is not parsable\n                if (this.autoCorrectParts) {\n                    parsedDate = this.intl.parseDate(basePrefix + middle + baseSuffix, this.format, this.localeId);\n                    autoCorrectedPrefixAndSuffix = true;\n                }\n            }\n            var isCurrentCharParsable = !isNaN(parseInt(currentChar, 10)) || (isInCaretMode && isDeleting && currentChar === \"\");\n            if (!parsedDate && !isNaN(middleNumber) && isCurrentCharParsable && this.autoCorrectParts) {\n                if (symbol === MONTH_SYMBOL && !month) {\n                    // JS months start from 0 (January) instead of 1 (January)\n                    var monthNumber = middleNumber - JS_MONTH_OFFSET;\n                    if (monthNumber > -1 && monthNumber < 12) {\n                        parsedDate = cloneDate(this.value);\n                        parsedDate.setMonth(monthNumber);\n                        if (parsedDate.getMonth() !== monthNumber) {\n                            parsedDate = lastDayOfMonth(addMonths(parsedDate, -1));\n                        }\n                    }\n                }\n                if (symbol === 'y') {\n                    parsedDate = createDate(parseInt(middle, 10), this.month ? this.value.getMonth() : 0, this.date ? this.value.getDate() : 1, this.hours ? this.value.getHours() : 0, this.minutes ? this.value.getMinutes() : 0, this.seconds ? this.value.getSeconds() : 0, this.milliseconds ? this.value.getMilliseconds() : 0);\n                    if (((isInCaretMode && isValidDate(parsedDate)) ||\n                        (!isInCaretMode && parsedDate)) && this.date && parsedDate.getDate() !== this.value.getDate()) {\n                        parsedDate = lastDayOfMonth(addMonths(parsedDate, -1));\n                    }\n                }\n            }\n            if ((isInCaretMode && isValidDate(parsedDate)) || (!isInCaretMode && parsedDate)) {\n                // move to next segment if the part will overflow with next char\n                // when start from empty date (01, then 010), padded zeros should be trimmed\n                var peekResult = this.isPeekDateOverflowingDatePart({\n                    useBasePrefixAndSuffix: autoCorrectedPrefixAndSuffix,\n                    middle: middle,\n                    patternValue: patternValue,\n                    basePrefix: basePrefix,\n                    baseSuffix: baseSuffix,\n                    prefix: prefix,\n                    suffix: suffix,\n                    symbol: symbol,\n                    patternLength: patternLength,\n                    leadingZero: leadingZero\n                });\n                var switchToNext = peekResult.switchToNext;\n                if (this.shouldNormalizeCentury()) {\n                    parsedDate = this.normalizeCentury(parsedDate);\n                }\n                if (symbol === 'H' && parsedDate.getHours() >= 12) {\n                    this.setExisting('a', true);\n                }\n                this._value = parsedDate;\n                this.setExisting(symbol, true);\n                this.resetInvalidDateSymbol(symbol);\n                if (!this.autoCorrectParts) {\n                    if (symbol === \"M\") {\n                        if (this.getExisting(\"M\") && this.getExisting(\"y\")) {\n                            // changing from 28/Feb to 29/Feb to 29/March\n                            this.setExisting(\"d\", true);\n                            this.resetInvalidDateSymbol(\"d\");\n                        }\n                    }\n                    else if (symbol === \"d\") {\n                        if (this.getExisting(\"d\") && this.getExisting(\"y\")) {\n                            // changing from 31/Jan to 31/Feb to 28/Feb\n                            this.setExisting(\"M\", true);\n                            this.resetInvalidDateSymbol(\"M\");\n                        }\n                    }\n                    if (!this.hasInvalidDatePart()) {\n                        this.markDatePartsAsExisting();\n                        if (!peekResult.peekedDate && peekResult.switchToNext && !this.autoCorrectParts) {\n                            if (symbol === \"M\") {\n                                // skip processing the month\n                            }\n                            else if (symbol === \"d\") {\n                                if (peekResult.parsedPeekedValue === 30 &&\n                                    this.value.getMonth() === MONTH_INDEX_FEBRUARY) {\n                                    // the peekValue cannot be constructed\n                                    // as there cannot be more than 29 days in February\n                                    // still the segment should not be switched as autoCorrectParts=\"false\"\n                                    // should allow typing \"30\"\n                                    switchToNext = false;\n                                }\n                            }\n                        }\n                    }\n                }\n                return extend(parseResult, { value: this.value, switchToNext: switchToNext });\n            }\n        }\n        if (month) {\n            parsedDate = this.intl.parseDate(prefix + month + suffix, this.format, this.localeId);\n            if (parsedDate) {\n                this._value = parsedDate;\n                this.setExisting(symbol, true);\n                return extend(parseResult, { value: this.value, switchToNext: false });\n            }\n        }\n        if (dayPeriod) {\n            parsedDate = this.intl.parseDate(prefix + dayPeriod + suffix, this.format) ||\n                this.intl.parseDate(basePrefix + dayPeriod + baseSuffix, this.format);\n            if (parsedDate) {\n                this._value = parsedDate;\n                this.setExisting(symbol, true);\n                return extend(parseResult, { value: this.value, switchToNext: true });\n            }\n        }\n        if (isZeroCurrentChar) {\n            this.setExisting(symbol, false);\n        }\n        if (!this.autoCorrectParts) {\n            var datePartValue = void 0;\n            var textToParse = isInCaretMode ? datePartText : middle;\n            var parsedValue = parseToInt(textToParse);\n            if (isNumber(parsedValue) && isParseableToInt(textToParse)) {\n                if ((symbol === \"d\" && (parsedValue <= 0 || parsedValue > 31)) ||\n                    (symbol === \"M\" && (parsedValue <= 0 || parsedValue > 11))) {\n                    if (isInCaretMode) {\n                        return extend(parseResult, {\n                            value: null,\n                            switchToNext: false\n                        });\n                    }\n                    else {\n                        // the value overflows the possible value range\n                        // thus reset the segment value regardless of the \"resetSegmentValue\" flag\n                        // otherwise the input is ignored and you cannot change the value,\n                        // e.g. \"03->(press 2)->02\" will not work and the user will be blocked on \"03\"\n                        textToParse = currentChar;\n                        parsedValue = parseToInt(textToParse);\n                    }\n                }\n                if (!isNumber(parsedValue) || !isParseableToInt(textToParse)) {\n                    return extend(parseResult, { value: null, switchToNext: false });\n                }\n                datePartValue = symbol === \"M\" ?\n                    parsedValue - JS_MONTH_OFFSET :\n                    parsedValue;\n                var isMonth = symbol === \"M\";\n                var isDay = symbol === \"d\";\n                var newValue = cloneDate(this._value);\n                var invalidDateParts = this._partiallyInvalidDate.invalidDateParts || {};\n                var year = invalidDateParts.y.value || newValue.getFullYear();\n                /* tslint:disable:no-shadowed-variable */\n                var month_1 = isMonth ? datePartValue : invalidDateParts.M.value || newValue.getMonth();\n                /* tslint:enable:no-shadowed-variable */\n                var day = isDay ? datePartValue : invalidDateParts.d.value || invalidDateParts.E.value || newValue.getDate();\n                var hour = invalidDateParts.h.value || invalidDateParts.H.value || newValue.getHours();\n                var minutes = invalidDateParts.m.value || newValue.getMinutes();\n                var seconds = invalidDateParts.s.value || newValue.getSeconds();\n                var milliseconds = invalidDateParts.S.value || newValue.getMilliseconds();\n                var dateCandidate = createDate(year, month_1, day, hour, minutes, seconds, milliseconds);\n                var dateCandidateExists = areDatePartsEqualTo(dateCandidate, year, month_1, day, hour, minutes, seconds, milliseconds);\n                var newValueCandidate = isMonth || isDay ?\n                    this.modifyDateSymbolWithValue(newValue, symbol, isMonth ? month_1 : day) :\n                    null;\n                var invalidDateFound = false;\n                if (isMonth && newValueCandidate) {\n                    if (newValueCandidate.getMonth() === month_1) {\n                        if (this.getExisting(\"d\")) {\n                            if (dateCandidateExists) {\n                                newValue = cloneDate(dateCandidate);\n                                this.resetInvalidDateSymbol(symbol);\n                            }\n                            else {\n                                invalidDateFound = true;\n                                this.setInvalidDatePart(symbol, {\n                                    value: month_1,\n                                    date: cloneDate(newValueCandidate),\n                                    startDate: cloneDate(this.value)\n                                });\n                                this.setExisting(symbol, false);\n                            }\n                        }\n                        else if (dateCandidateExists) {\n                            this.resetInvalidDateSymbol(symbol);\n                            newValue = cloneDate(dateCandidate);\n                            if (this.getExisting(\"M\") && this.getExisting(\"y\")) {\n                                // changing from 28/Feb to 29/Feb to 29/March\n                                this.setExisting(\"d\", true);\n                                this.resetInvalidDateSymbol(\"d\");\n                            }\n                        }\n                        else {\n                            this.resetInvalidDateSymbol(symbol);\n                            newValue = cloneDate(newValueCandidate);\n                        }\n                    }\n                    else {\n                        invalidDateFound = true;\n                        this.setInvalidDatePart(symbol, {\n                            value: month_1,\n                            date: cloneDate(newValueCandidate),\n                            startDate: cloneDate(this.value)\n                        });\n                        this.setExisting(symbol, false);\n                    }\n                }\n                else if (isDay && newValueCandidate) {\n                    if (newValueCandidate.getDate() === day) {\n                        if (this.getExisting(\"M\")) {\n                            if (dateCandidateExists) {\n                                newValue = cloneDate(dateCandidate);\n                                this.resetInvalidDateSymbol(symbol);\n                            }\n                            else {\n                                invalidDateFound = true;\n                                this.setInvalidDatePart(symbol, {\n                                    value: day,\n                                    date: cloneDate(newValueCandidate),\n                                    startDate: cloneDate(this.value)\n                                });\n                                this.setExisting(symbol, false);\n                            }\n                        }\n                        else if (dateCandidateExists) {\n                            newValue = cloneDate(dateCandidate);\n                            this.resetInvalidDateSymbol(symbol);\n                            if (this.getExisting(\"d\") && this.getExisting(\"y\")) {\n                                // changing from 31/Jan to 31/Feb to 28/Feb\n                                this.setExisting(\"M\", true);\n                                this.resetInvalidDateSymbol(\"M\");\n                            }\n                        }\n                        else {\n                            this.resetInvalidDateSymbol(symbol);\n                            newValue = cloneDate(newValueCandidate);\n                        }\n                    }\n                    else {\n                        invalidDateFound = true;\n                        this.setInvalidDatePart(symbol, {\n                            value: day,\n                            date: cloneDate(this.value),\n                            startDate: cloneDate(this.value)\n                        });\n                        this.setExisting(symbol, false);\n                    }\n                }\n                if (!invalidDateFound) {\n                    this.setExisting(symbol, true);\n                    if (isInCaretMode && !isValidDate(parsedDate)) {\n                        var valueCandidate = this.intl.parseDate(basePrefix + middle + baseSuffix, this.format, this.localeId);\n                        if (isValidDate(valueCandidate)) {\n                            this._value = valueCandidate;\n                        }\n                    }\n                    else {\n                        this._value = newValue;\n                    }\n                    if (this.getValue()) {\n                        this.resetInvalidDate();\n                    }\n                }\n                var switchToNext = false;\n                if (symbol === \"M\") {\n                    if (parsedValue >= 2 || textToParse.length >= 2) {\n                        switchToNext = true;\n                    }\n                    else {\n                        switchToNext = false;\n                    }\n                }\n                else {\n                    if (hasFixedFormat) {\n                        var peekDateSwitchToNext = this.isPeekDateOverflowingDatePart({\n                            useBasePrefixAndSuffix: !this.autoCorrectParts,\n                            middle: middle,\n                            patternValue: patternValue,\n                            basePrefix: basePrefix,\n                            baseSuffix: baseSuffix,\n                            prefix: prefix,\n                            suffix: suffix,\n                            symbol: symbol,\n                            patternLength: patternLength,\n                            leadingZero: leadingZero\n                        }).switchToNext;\n                        switchToNext = peekDateSwitchToNext;\n                    }\n                    else {\n                        switchToNext = textToParse.length > segmentLength;\n                    }\n                }\n                return extend(parseResult, {\n                    value: null,\n                    switchToNext: switchToNext,\n                    hasInvalidDatePart: invalidDateFound\n                });\n            }\n        }\n        return extend(parseResult, { value: null, switchToNext: false });\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.symbolMap = function (symbol) {\n        return this.intl.splitDateFormat(this.format, this.localeId).reduce(dateSymbolMap, {})[symbol];\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.resetLeadingZero = function () {\n        var hasLeadingZero = this.leadingZero !== null;\n        this.setLeadingZero(null);\n        return hasLeadingZero;\n    };\n    DateObject.prototype.setLeadingZero = function (leadingZero) {\n        this.leadingZero = leadingZero;\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.getLeadingZero = function () {\n        return this.leadingZero || {};\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.normalizeCentury = function (date) {\n        if (!isPresent(date)) {\n            return date;\n        }\n        var twoDigitYear = cropTwoDigitYear(date);\n        var centuryBase = this.getNormalizedCenturyBase(twoDigitYear);\n        var normalizedDate = setYears(date, centuryBase + twoDigitYear);\n        return normalizedDate;\n    };\n    DateObject.prototype.incrementLeadingZero = function (symbol) {\n        var leadingZero = this.leadingZero || {};\n        leadingZero[symbol] = (leadingZero[symbol] || 0) + 1;\n        this.leadingZero = leadingZero;\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.isAbbrMonth = function (parts, symbol) {\n        var pattern = this.partPattern(parts, symbol);\n        return pattern.type === 'month' && pattern.names;\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.partPattern = function (parts, symbol) {\n        return parts.filter(function (part) { return part.pattern.indexOf(symbol) !== -1; })[0];\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.peek = function (value, pattern) {\n        var peekValue = value.replace(/^0*/, '') + '0';\n        return padZero(pattern.length - peekValue.length) + peekValue;\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.matchMonth = function (typedChar) {\n        this.typedMonthPart += typedChar.toLowerCase();\n        if (this.monthNames.length === 0) {\n            return '';\n        }\n        while (this.typedMonthPart.length > 0) {\n            for (var i = 0; i < this.monthNames.length; i++) {\n                if (this.monthNames[i].toLowerCase().indexOf(this.typedMonthPart) === 0) {\n                    return this.monthNames[i];\n                }\n            }\n            var monthAsNum = parseInt(this.typedMonthPart, 10);\n            /* ensure they exact match */\n            if (monthAsNum >= 1 && monthAsNum <= 12 && monthAsNum.toString() === this.typedMonthPart) {\n                return this.monthNames[monthAsNum - 1];\n            }\n            this.typedMonthPart = this.typedMonthPart.substring(1, this.typedMonthPart.length);\n        }\n        return '';\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.matchDayPeriod = function (typedChar, symbol) {\n        var lowerChart = typedChar.toLowerCase();\n        if (symbol === 'a' && this.dayPeriods) {\n            if (this.dayPeriods.am.toLowerCase().startsWith(lowerChart)) {\n                return this.dayPeriods.am;\n            }\n            else if (this.dayPeriods.pm.toLowerCase().startsWith(lowerChart)) {\n                return this.dayPeriods.pm;\n            }\n        }\n        return '';\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.allFormattedMonths = function (locale) {\n        if (locale === void 0) { locale = \"en\"; }\n        var dateFormatParts = this.intl.splitDateFormat(this.format, this.localeId);\n        for (var i = 0; i < dateFormatParts.length; i++) {\n            if (dateFormatParts[i].type === 'month' && dateFormatParts[i].names) {\n                return this.intl.dateFormatNames(locale, dateFormatParts[i].names);\n            }\n        }\n        return [];\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.allDayPeriods = function (locale) {\n        if (locale === void 0) { locale = \"en\"; }\n        var dateFormatParts = this.intl.splitDateFormat(this.format);\n        for (var i = 0; i < dateFormatParts.length; i++) {\n            if (dateFormatParts[i].type === \"dayperiod\" && dateFormatParts[i].names) {\n                return this.intl.dateFormatNames(locale, dateFormatParts[i].names);\n            }\n        }\n        return null;\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.patternLength = function (pattern) {\n        if (pattern[0] === 'y') {\n            return 4;\n        }\n        if (SHORT_PATTERN_LENGTH_REGEXP.test(pattern)) {\n            return 2;\n        }\n        return 0;\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.dateFormatString = function (date, format) {\n        var dateFormatParts = this.intl.splitDateFormat(format, this.localeId);\n        var parts = [];\n        var partMap = [];\n        for (var i = 0; i < dateFormatParts.length; i++) {\n            var partLength = this.intl.formatDate(date, { pattern: dateFormatParts[i].pattern }, this.localeId).length;\n            while (partLength > 0) {\n                parts.push(this.symbols[dateFormatParts[i].pattern[0]] || Constants.formatSeparator);\n                partMap.push(dateFormatParts[i]);\n                partLength--;\n            }\n        }\n        var returnValue = new Mask();\n        returnValue.symbols = parts.join('');\n        returnValue.partMap = partMap;\n        return returnValue;\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.merge = function (text, mask) {\n        // Important: right to left.\n        var resultText = '';\n        var resultFormat = '';\n        var format = mask.symbols;\n        var processTextSymbolsEnded = false;\n        var ignoreFormatSymbolsCount = 0;\n        var formattedDates = this.getFormattedInvalidDates(format);\n        for (var formatSymbolIndex = format.length - 1; formatSymbolIndex >= 0; formatSymbolIndex--) {\n            var partsForSegment = this.getPartsForSegment(mask, formatSymbolIndex);\n            if (this.knownParts.indexOf(format[formatSymbolIndex]) === -1 || this.getExisting(format[formatSymbolIndex])) {\n                if (this.autoCorrectParts) {\n                    resultText = text[formatSymbolIndex] + resultText;\n                }\n                else {\n                    if (text.length !== format.length) {\n                        if (processTextSymbolsEnded) {\n                            resultText = text[formatSymbolIndex] + resultText;\n                        }\n                        else if (ignoreFormatSymbolsCount > 0) {\n                            resultText = text[formatSymbolIndex] + resultText;\n                            ignoreFormatSymbolsCount--;\n                            if (ignoreFormatSymbolsCount <= 0) {\n                                processTextSymbolsEnded = true;\n                            }\n                        }\n                        else {\n                            resultText = (text[formatSymbolIndex + text.length - format.length] || \"\") + resultText;\n                        }\n                    }\n                    else {\n                        resultText = text[formatSymbolIndex] + resultText;\n                    }\n                }\n                resultFormat = format[formatSymbolIndex] + resultFormat;\n            }\n            else {\n                var symbol = format[formatSymbolIndex];\n                var formatSymbolIndexModifier = 0;\n                if (this.autoCorrectParts || (!this.autoCorrectParts && !this.getInvalidDatePartValue(symbol))) {\n                    while (formatSymbolIndex >= 0 && symbol === format[formatSymbolIndex]) {\n                        formatSymbolIndex--;\n                    }\n                    formatSymbolIndex++;\n                }\n                if (this.leadingZero && this.leadingZero[symbol]) {\n                    resultText = '0' + resultText;\n                }\n                else {\n                    if (!this.autoCorrectParts && this.getInvalidDatePartValue(symbol)) {\n                        var datePartText = this.getInvalidDatePartValue(symbol).toString();\n                        if (symbol === \"M\") {\n                            datePartText = (parseToInt(this.getInvalidDatePartValue(symbol)) + JS_MONTH_OFFSET).toString();\n                            if (partsForSegment.length > MONTH_PART_WITH_WORDS_THRESHOLD) {\n                                resultText = formattedDates[symbol][formatSymbolIndex] + resultText;\n                            }\n                            else {\n                                datePartText = (parseToInt(this.getInvalidDatePartValue(symbol)) + JS_MONTH_OFFSET).toString();\n                                var formattedDatePart = padZero(partsForSegment.length - datePartText.length) + datePartText;\n                                resultText = formattedDatePart + resultText;\n                                formatSymbolIndexModifier = partsForSegment.length - 1;\n                                ignoreFormatSymbolsCount = datePartText.length - partsForSegment.length;\n                            }\n                        }\n                        else {\n                            var formattedDatePart = padZero(partsForSegment.length - datePartText.length) + datePartText;\n                            resultText = formattedDatePart + resultText;\n                            formatSymbolIndexModifier = partsForSegment.length - 1;\n                            ignoreFormatSymbolsCount = datePartText.length - partsForSegment.length;\n                        }\n                    }\n                    else {\n                        resultText = this.dateFieldName(mask.partMap[formatSymbolIndex]) + resultText;\n                    }\n                }\n                while (resultFormat.length < resultText.length) {\n                    resultFormat = format[formatSymbolIndex] + resultFormat;\n                }\n                if (formatSymbolIndexModifier !== 0) {\n                    formatSymbolIndex = (formatSymbolIndex - formatSymbolIndexModifier) + (text.length - format.length);\n                }\n            }\n        }\n        return { text: resultText, format: resultFormat };\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.dateFieldName = function (part) {\n        var formatPlaceholder = this.formatPlaceholder || 'wide';\n        if (formatPlaceholder[part.type]) {\n            return formatPlaceholder[part.type];\n        }\n        if (formatPlaceholder === 'formatPattern') {\n            return part.pattern;\n        }\n        return this.intl.dateFieldName(Object.assign(part, { nameType: formatPlaceholder }));\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.getNormalizedCenturyBase = function (twoDigitYear) {\n        return twoDigitYear > this.twoDigitYearMax ?\n            PREVIOUS_CENTURY_BASE :\n            CURRENT_CENTURY_BASE;\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.shouldNormalizeCentury = function () {\n        return this.intl.splitDateFormat(this.format).some(function (part) { return part.pattern === 'yy'; });\n    };\n    DateObject.prototype.resetInvalidDate = function () {\n        var _this = this;\n        this._partiallyInvalidDate.startDate = null;\n        Object.keys(this._partiallyInvalidDate.invalidDateParts).forEach(function (key) {\n            _this.resetInvalidDatePart(key);\n        });\n    };\n    DateObject.prototype.resetInvalidDateSymbol = function (symbol) {\n        var _this = this;\n        this.resetInvalidDatePart(symbol);\n        var shouldResetInvalidDate = true;\n        Object.keys(this._partiallyInvalidDate.invalidDateParts).forEach(function (key) {\n            if (_this._partiallyInvalidDate.invalidDateParts[key] &&\n                isPresent(_this._partiallyInvalidDate.invalidDateParts[key].value)) {\n                shouldResetInvalidDate = false;\n            }\n        });\n        if (shouldResetInvalidDate) {\n            this.resetInvalidDate();\n        }\n    };\n    DateObject.prototype.resetInvalidDatePart = function (symbol) {\n        if (this._partiallyInvalidDate.invalidDateParts[symbol]) {\n            this._partiallyInvalidDate.invalidDateParts[symbol] = {\n                value: null,\n                date: null,\n                startDateOffset: 0\n            };\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.getInvalidDatePart = function (symbol) {\n        var invalidDatePart = this._partiallyInvalidDate.invalidDateParts[symbol];\n        return invalidDatePart || {};\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.getInvalidDatePartValue = function (symbol) {\n        var invalidDatePart = this._partiallyInvalidDate.invalidDateParts[symbol];\n        return (invalidDatePart || {}).value;\n    };\n    DateObject.prototype.setInvalidDatePart = function (symbol, _a) {\n        var _b = _a.value, value = _b === void 0 ? null : _b, _c = _a.date, date = _c === void 0 ? null : _c, _d = _a.startDateOffset, startDateOffset = _d === void 0 ? 0 : _d, _e = _a.startDate, startDate = _e === void 0 ? null : _e;\n        if (this._partiallyInvalidDate.invalidDateParts[symbol]) {\n            this._partiallyInvalidDate.invalidDateParts[symbol].value = value;\n            this._partiallyInvalidDate.invalidDateParts[symbol].date = date;\n            this._partiallyInvalidDate.invalidDateParts[symbol].startDateOffset = startDateOffset;\n            this._partiallyInvalidDate.startDate = startDate;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.hasInvalidDatePart = function () {\n        var _this = this;\n        var hasInvalidDatePart = false;\n        Object.keys(this._partiallyInvalidDate.invalidDateParts).forEach(function (key) {\n            if (_this._partiallyInvalidDate.invalidDateParts[key] &&\n                isPresent(_this._partiallyInvalidDate.invalidDateParts[key].value)) {\n                hasInvalidDatePart = true;\n            }\n        });\n        return hasInvalidDatePart;\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.modifyDateSymbolWithOffset = function (date, symbol, offset) {\n        var newValue = cloneDate(date);\n        var timeModified = false;\n        switch (symbol) {\n            case 'y':\n                newValue.setFullYear(newValue.getFullYear() + offset);\n                break;\n            case 'M':\n                newValue = addMonths(this.value, offset);\n                break;\n            case 'd':\n            case 'E':\n                newValue.setDate(newValue.getDate() + offset);\n                break;\n            case 'h':\n            case 'H':\n                newValue.setHours(newValue.getHours() + offset);\n                timeModified = true;\n                break;\n            case 'm':\n                newValue.setMinutes(newValue.getMinutes() + offset);\n                timeModified = true;\n                break;\n            case 's':\n                newValue.setSeconds(newValue.getSeconds() + offset);\n                timeModified = true;\n                break;\n            case \"S\":\n                newValue.setMilliseconds(newValue.getMilliseconds() + offset);\n                break;\n            case 'a':\n                newValue.setHours(newValue.getHours() + (12 * offset));\n                timeModified = true;\n                break;\n            default: break;\n        }\n        return {\n            date: newValue,\n            timeModified: timeModified\n        };\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.modifyDateSymbolWithValue = function (date, symbol, value) {\n        var newValue = cloneDate(date);\n        switch (symbol) {\n            case 'y':\n                newValue.setFullYear(value);\n                break;\n            case 'M':\n                newValue = addMonths(date, value - date.getMonth());\n                break;\n            case 'd':\n            case 'E':\n                newValue.setDate(value);\n                break;\n            case 'h':\n            case 'H':\n                newValue.setHours(value);\n                break;\n            case 'm':\n                newValue.setMinutes(value);\n                break;\n            case 's':\n                newValue.setSeconds(value);\n                break;\n            case \"S\":\n                newValue.setMilliseconds(value);\n                break;\n            case 'a':\n                newValue.setHours(value);\n                break;\n            default: break;\n        }\n        return newValue;\n    };\n    DateObject.prototype.markDatePartsAsExisting = function () {\n        this.modifyExisting(true);\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.getPartsForSegment = function (mask, partIndex) {\n        var segmentPart = mask.partMap[partIndex];\n        var partsForSegment = [];\n        for (var maskPartIndex = partIndex; maskPartIndex < mask.partMap.length; maskPartIndex++) {\n            var part = mask.partMap[maskPartIndex];\n            if (segmentPart.type === part.type && segmentPart.pattern === part.pattern) {\n                partsForSegment.push(part);\n            }\n            else {\n                break;\n            }\n        }\n        for (var maskPartIndex = partIndex - 1; maskPartIndex >= 0; maskPartIndex--) {\n            var part = mask.partMap[maskPartIndex];\n            if (segmentPart.type === part.type && segmentPart.pattern === part.pattern) {\n                partsForSegment.unshift(part);\n            }\n            else {\n                break;\n            }\n        }\n        return partsForSegment;\n    };\n    /**\n     * @hidden\n     */\n    DateObject.prototype.isPeekDateOverflowingDatePart = function (_a) {\n        var useBasePrefixAndSuffix = _a.useBasePrefixAndSuffix, middle = _a.middle, patternValue = _a.patternValue, basePrefix = _a.basePrefix, baseSuffix = _a.baseSuffix, prefix = _a.prefix, suffix = _a.suffix, symbol = _a.symbol, patternLength = _a.patternLength, leadingZero = _a.leadingZero;\n        // move to next segment if the part will overflow with next char\n        // when start from empty date (01, then 010), padded zeros should be trimmed\n        var peekedValue = this.peek(middle, patternValue);\n        var peekedDateString = useBasePrefixAndSuffix ?\n            \"\" + basePrefix + peekedValue + baseSuffix :\n            \"\" + prefix + peekedValue + suffix;\n        var peekedDate = this.intl.parseDate(peekedDateString, this.format, this.localeId);\n        var leadingZeroOffset = (this.leadingZero || {})[symbol] || 0;\n        var patternSatisfied = (leadingZeroOffset + unpadZero(middle).length) >= patternLength;\n        var parsedPeekedValue = parseToInt(peekedValue);\n        if (symbol === \"M\") {\n        }\n        else if (symbol === \"d\") {\n        }\n        var switchToNext = peekedDate === null ||\n            (leadingZero[symbol] ?\n                patternValue.length <= middle.length :\n                patternSatisfied);\n        return {\n            peekedDate: peekedDate,\n            peekedDateString: peekedDateString,\n            peekedValue: peekedValue,\n            parsedPeekedValue: parsedPeekedValue,\n            switchToNext: switchToNext\n        };\n    };\n    return DateObject;\n}());\n\nvar KeyCode = {\n    BACKSPACE: 8,\n    DELETE: 46,\n    TAB: 9,\n    ENTER: 13,\n    ESCAPE: 27,\n    ARROW_LEFT: 37,\n    ARROW_UP: 38,\n    ARROW_RIGHT: 39,\n    ARROW_DOWN: 40,\n    SPACE: 32,\n    END: 35,\n    HOME: 36,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34\n};\n\nvar defaultOptions = {\n    events: {}\n};\nvar Observable = /** @class */ (function () {\n    function Observable(options) {\n        this.options = extend({}, defaultOptions, options);\n    }\n    Observable.prototype.destroy = function () {\n    };\n    /**\n     * @hidden\n     */\n    Observable.prototype.trigger = function (eventName, args) {\n        if (args === void 0) { args = {}; }\n        var eventData = {\n            defaultPrevented: false,\n            preventDefault: function () {\n                eventData.defaultPrevented = true;\n            }\n        };\n        if (isFunction(this.options.events[eventName])) {\n            this.options.events[eventName](extend(eventData, args, {\n                sender: this\n            }));\n            return eventData.defaultPrevented;\n        }\n        return false;\n    };\n    return Observable;\n}());\n\nvar DateInputInteractionMode;\n(function (DateInputInteractionMode) {\n    DateInputInteractionMode[\"None\"] = \"none\";\n    DateInputInteractionMode[\"Caret\"] = \"caret\";\n    DateInputInteractionMode[\"Selection\"] = \"selection\";\n})(DateInputInteractionMode || (DateInputInteractionMode = {}));\n\nvar _a;\nvar DEFAULT_SEGMENT_STEP = 1;\nvar DRAG_START = \"dragStart\";\nvar DROP = \"drop\";\nvar TOUCH_START = \"touchstart\";\nvar MOUSE_DOWN = \"mousedown\";\nvar MOUSE_UP = \"mouseup\";\nvar CLICK = \"click\";\nvar INPUT = \"input\";\nvar KEY_DOWN = \"keydown\";\nvar FOCUS = \"focus\";\nvar BLUR = \"blur\";\nvar PASTE = \"paste\";\nvar MOUSE_SCROLL = \"DOMMouseScroll\";\nvar MOUSE_WHEEL = \"mousewheel\";\nvar VALUE_CHANGE = \"valueChange\";\nvar INPUT_END = \"inputEnd\";\nvar BLUR_END = \"blurEnd\";\nvar FOCUS_END = \"focusEnd\";\nvar CHANGE = \"change\";\nvar defaultDateInputOptions = {\n    format: \"d\",\n    hasPlaceholder: false,\n    placeholder: null,\n    cycleTime: true,\n    locale: null,\n    steps: {\n        millisecond: DEFAULT_SEGMENT_STEP,\n        second: DEFAULT_SEGMENT_STEP,\n        minute: DEFAULT_SEGMENT_STEP,\n        hour: DEFAULT_SEGMENT_STEP,\n        day: DEFAULT_SEGMENT_STEP,\n        month: DEFAULT_SEGMENT_STEP,\n        year: DEFAULT_SEGMENT_STEP\n    },\n    formatPlaceholder: null,\n    events: (_a = {},\n        _a[VALUE_CHANGE] = null,\n        _a[INPUT] = null,\n        _a[INPUT_END] = null,\n        _a[FOCUS] = null,\n        _a[FOCUS_END] = null,\n        _a[BLUR] = null,\n        _a[BLUR_END] = null,\n        _a[KEY_DOWN] = null,\n        _a[MOUSE_WHEEL] = null,\n        _a[CHANGE] = null,\n        _a),\n    selectNearestSegmentOnFocus: false,\n    selectPreviousSegmentOnBackspace: false,\n    enableMouseWheel: false,\n    allowCaretMode: false,\n    autoSwitchParts: true,\n    autoSwitchKeys: [],\n    twoDigitYearMax: Constants.twoDigitYearMax,\n    autoCorrectParts: true,\n    autoFill: false\n};\nvar DateInput = /** @class */ (function (_super) {\n    __extends(DateInput, _super);\n    function DateInput(element, options) {\n        var _this = _super.call(this, options) || this;\n        _this.dateObject = null;\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        _this.currentText = '';\n        _this.currentFormat = '';\n        _this.interactionMode = DateInputInteractionMode.None;\n        _this.previousElementSelection = { start: 0, end: 0 };\n        _this.init(element, options);\n        return _this;\n    }\n    Object.defineProperty(DateInput.prototype, \"value\", {\n        get: function () {\n            return this.dateObject && this.dateObject.getValue();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DateInput.prototype.init = function (element, options) {\n        var dateValue = isValidDate(this.options.value) ? cloneDate(this.options.value) : new Date(options.formattedValue);\n        if (!isValidDate(dateValue)) {\n            dateValue = null;\n        }\n        this.element = element;\n        // this.element._kendoWidget = this;\n        this.options = extend({}, defaultDateInputOptions, options, { steps: __assign({}, defaultDateInputOptions.steps, options.steps) });\n        this.intl = this.options.intlService;\n        this.dateObject = this.createDateObject();\n        this.dateObject.setValue(dateValue);\n        this.setTextAndFormat();\n        this.bindEvents();\n        this.resetSegmentValue = true;\n        this.interactionMode = DateInputInteractionMode.None;\n        this.forceUpdate();\n    };\n    DateInput.prototype.destroy = function () {\n        this.unbindEvents();\n        this.dateObject = null;\n        _super.prototype.destroy.call(this);\n    };\n    DateInput.prototype.bindEvents = function () {\n        this.onElementDragStart = this.onElementDragStart.bind(this);\n        this.element.addEventListener(DRAG_START, this.onElementDragStart);\n        this.onElementDrop = this.onElementDrop.bind(this);\n        this.element.addEventListener(DROP, this.onElementDrop);\n        this.onElementClick = this.onElementClick.bind(this);\n        this.element.addEventListener(CLICK, this.onElementClick);\n        this.onElementMouseDown = this.onElementMouseDown.bind(this);\n        this.element.addEventListener(MOUSE_DOWN, this.onElementMouseDown);\n        this.element.addEventListener(TOUCH_START, this.onElementMouseDown);\n        this.onElementMouseUp = this.onElementMouseUp.bind(this);\n        this.element.addEventListener(MOUSE_UP, this.onElementMouseUp);\n        this.onElementInput = this.onElementInput.bind(this);\n        this.element.addEventListener(INPUT, this.onElementInput);\n        this.onElementKeyDown = this.onElementKeyDown.bind(this);\n        this.element.addEventListener(KEY_DOWN, this.onElementKeyDown);\n        this.onElementFocus = this.onElementFocus.bind(this);\n        this.element.addEventListener(FOCUS, this.onElementFocus);\n        this.onElementBlur = this.onElementBlur.bind(this);\n        this.element.addEventListener(BLUR, this.onElementBlur);\n        this.onElementChange = this.onElementChange.bind(this);\n        this.element.addEventListener(CHANGE, this.onElementChange);\n        this.onElementPaste = this.onElementPaste.bind(this);\n        this.element.addEventListener(PASTE, this.onElementPaste);\n        this.onElementMouseWheel = this.onElementMouseWheel.bind(this);\n        this.element.addEventListener(MOUSE_SCROLL, this.onElementMouseWheel);\n        this.element.addEventListener(MOUSE_WHEEL, this.onElementMouseWheel);\n    };\n    DateInput.prototype.unbindEvents = function () {\n        this.element.removeEventListener(DRAG_START, this.onElementDragStart);\n        this.element.removeEventListener(DROP, this.onElementDrop);\n        this.element.removeEventListener(TOUCH_START, this.onElementMouseDown);\n        this.element.removeEventListener(MOUSE_DOWN, this.onElementMouseDown);\n        this.element.removeEventListener(MOUSE_UP, this.onElementMouseUp);\n        this.element.removeEventListener(CLICK, this.onElementClick);\n        this.element.removeEventListener(INPUT, this.onElementInput);\n        this.element.removeEventListener(KEY_DOWN, this.onElementKeyDown);\n        this.element.removeEventListener(FOCUS, this.onElementFocus);\n        this.element.removeEventListener(BLUR, this.onElementBlur);\n        this.element.removeEventListener(CHANGE, this.onElementChange);\n        this.element.removeEventListener(PASTE, this.onElementPaste);\n        this.element.removeEventListener(MOUSE_SCROLL, this.onElementMouseWheel);\n        this.element.removeEventListener(MOUSE_WHEEL, this.onElementMouseWheel);\n    };\n    DateInput.prototype.setOptions = function (options, refresh) {\n        if (refresh === void 0) { refresh = false; }\n        this.options = extend({}, this.options, options, { steps: __assign({}, defaultDateInputOptions.steps, options.steps) });\n        this.setDateObjectOptions();\n        if (refresh) {\n            this.unbindEvents();\n            this.init(this.element, this.options);\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.setDateObjectOptions = function () {\n        if (this.dateObject) {\n            var newOptions = this.getDateObjectOptions();\n            this.dateObject.setOptions(newOptions);\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.resetLocale = function () {\n        this.unbindEvents();\n        this.init(this.element, this.options);\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.isInCaretMode = function () {\n        return this.interactionMode === DateInputInteractionMode.Caret;\n    };\n    DateInput.prototype.focus = function () {\n        this.element.focus();\n        if (this.options.selectNearestSegmentOnFocus) {\n            this.selectNearestSegment(0);\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementDragStart = function (e) {\n        e.preventDefault();\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementDrop = function (e) {\n        e.preventDefault();\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementMouseDown = function () {\n        this.mouseDownStarted = true;\n        this.focusedPriorToMouseDown = this.isActive;\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementMouseUp = function (e) {\n        this.mouseDownStarted = false;\n        e.preventDefault();\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementClick = function (e) {\n        this.mouseDownStarted = false;\n        this.switchedPartOnPreviousKeyAction = false;\n        var selection = this.selection;\n        if (this.isInCaretMode()) {\n            // explicitly refresh the input element value\n            // caret mode can change the number of symbols in the element\n            // thus clicking on a segment can result in incorrect selection\n            this.forceUpdate();\n        }\n        if (e.detail === 3) {\n            // when 3 clicks occur, leave the native event to handle the change\n            // this results in selecting the whole element value\n        }\n        else {\n            if (this.isActive && this.options.selectNearestSegmentOnFocus) {\n                var selectionPresent = this.element.selectionStart !== this.element.selectionEnd;\n                var placeholderToggled = isPresent(this.options.placeholder) &&\n                    !this.dateObject.hasValue() &&\n                    !this.focusedPriorToMouseDown;\n                // focus first segment if the user hasn't selected something during mousedown and if the placeholder was just toggled\n                var selectFirstSegment = !selectionPresent && placeholderToggled;\n                var index = selectFirstSegment ? 0 : this.caret()[0];\n                this.selectNearestSegment(index);\n            }\n            else {\n                this.setSelection(this.selectionByIndex(selection.start));\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementInput = function (e) {\n        this.triggerInput({ event: e });\n        var oldElementValue = this.elementValue;\n        if (!this.element || !this.dateObject) {\n            return;\n        }\n        var switchedPartOnPreviousKeyAction = this.switchedPartOnPreviousKeyAction;\n        if (this.isPasteInProgress) {\n            if (this.options.allowCaretMode) {\n                // pasting should leave the input with caret\n                // thus allow direct input instead of selection mode\n                this.resetSegmentValue = false;\n            }\n            this.updateOnPaste(e);\n            this.isPasteInProgress = false;\n            return;\n        }\n        var keyDownEvent = this.keyDownEvent || {};\n        var isBackspaceKey = keyDownEvent.keyCode === KeyCode.BACKSPACE || keyDownEvent.key === Key.BACKSPACE;\n        var isDeleteKey = keyDownEvent.keyCode === KeyCode.DELETE || keyDownEvent.key === Key.DELETE;\n        var originalInteractionMode = this.interactionMode;\n        if (this.options.allowCaretMode &&\n            originalInteractionMode !== DateInputInteractionMode.Caret &&\n            !isDeleteKey && !isBackspaceKey) {\n            this.resetSegmentValue = true;\n        }\n        if (this.options.allowCaretMode) {\n            this.interactionMode = DateInputInteractionMode.Caret;\n        }\n        else {\n            this.interactionMode = DateInputInteractionMode.Selection;\n        }\n        var hasCaret = this.isInCaretMode();\n        if (hasCaret && this.keyDownEvent.key === Key.SPACE) {\n            // do not allow custom \"holes\" in the date segments\n            this.restorePreviousInputEventState();\n            return;\n        }\n        var oldExistingDateValue = this.dateObject && this.dateObject.getValue();\n        var oldDateValue = this.dateObject ? this.dateObject.value : null;\n        var _a = this.dateObject.getTextAndFormat(), currentText = _a.text, currentFormat = _a.format;\n        this.currentFormat = currentFormat;\n        var oldText = \"\";\n        if (hasCaret) {\n            if (isBackspaceKey || isDeleteKey) {\n                oldText = this.previousElementValue;\n            }\n            else if (originalInteractionMode === DateInputInteractionMode.Caret) {\n                oldText = this.previousElementValue;\n            }\n            else {\n                oldText = currentText;\n            }\n        }\n        else {\n            oldText = currentText;\n        }\n        var newText = this.elementValue;\n        var diff = approximateStringMatching({\n            oldText: oldText,\n            newText: newText,\n            formatPattern: this.currentFormat,\n            selectionStart: this.selection.start,\n            isInCaretMode: hasCaret,\n            keyEvent: this.keyDownEvent\n        });\n        if (diff && diff.length && diff[0] && diff[0][1] !== Constants.formatSeparator) {\n            this.switchedPartOnPreviousKeyAction = false;\n        }\n        if (hasCaret && (!diff || diff.length === 0)) {\n            this.restorePreviousInputEventState();\n            return;\n        }\n        else if (hasCaret && diff.length === 1) {\n            if (!diff[0] || !diff[0][0]) {\n                this.restorePreviousInputEventState();\n                return;\n            }\n            else if (hasCaret && diff[0] &&\n                (diff[0][0] === Constants.formatSeparator || diff[0][1] === Constants.formatSeparator)) {\n                this.restorePreviousInputEventState();\n                return;\n            }\n        }\n        var navigationOnly = (diff.length === 1 && diff[0][1] === Constants.formatSeparator);\n        var parsePartsResults = [];\n        var switchPart = false;\n        var error = null;\n        if (!navigationOnly) {\n            for (var i = 0; i < diff.length; i++) {\n                var parsePartResult = this.dateObject.parsePart({\n                    symbol: diff[i][0],\n                    currentChar: diff[i][1],\n                    resetSegmentValue: this.resetSegmentValue,\n                    cycleSegmentValue: !this.isInCaretMode(),\n                    rawTextValue: this.element.value,\n                    isDeleting: isBackspaceKey || isDeleteKey,\n                    originalFormat: this.currentFormat\n                });\n                parsePartsResults.push(parsePartResult);\n                if (!parsePartResult.value) {\n                    error = { type: \"parse\" };\n                }\n                switchPart = parsePartResult.switchToNext;\n            }\n        }\n        if (!this.options.autoSwitchParts) {\n            switchPart = false;\n        }\n        this.resetSegmentValue = false;\n        var hasFixedFormat = this.options.format === this.currentFormat ||\n            // all not fixed formats are 1 symbol, e.g. \"d\"\n            (isPresent(this.options.format) && this.options.format.length > 1);\n        var lastParseResult = parsePartsResults[parsePartsResults.length - 1];\n        var lastParseResultHasNoValue = lastParseResult && !isPresent(lastParseResult.value);\n        var parsingFailedOnDelete = (hasCaret && (isBackspaceKey || isDeleteKey) && lastParseResultHasNoValue);\n        var resetPart = lastParseResult ? lastParseResult.resetPart : false;\n        var newExistingDateValue = this.dateObject.getValue();\n        var hasExistingDateValueChanged = !isEqual(oldExistingDateValue, newExistingDateValue);\n        var newDateValue = this.dateObject.value;\n        var symbolForSelection;\n        var currentSelection = this.selection;\n        if (hasCaret) {\n            var diffChar = diff && diff.length > 0 ? diff[0][0] : null;\n            var hasLeadingZero = this.dateObject.getLeadingZero()[diffChar];\n            if (diff.length && diff[0][0] !== Constants.formatSeparator) {\n                if (switchPart) {\n                    this.forceUpdateWithSelection();\n                    this.switchDateSegment(1);\n                }\n                else if (resetPart) {\n                    symbolForSelection = this.currentFormat[currentSelection.start];\n                    if (symbolForSelection) {\n                        this.forceUpdate();\n                        this.setSelection(this.selectionBySymbol(symbolForSelection));\n                    }\n                    else {\n                        this.restorePreviousInputEventState();\n                    }\n                }\n                else if (parsingFailedOnDelete) {\n                    this.forceUpdate();\n                    if (diff.length && diff[0][0] !== Constants.formatSeparator) {\n                        this.setSelection(this.selectionBySymbol(diff[0][0]));\n                    }\n                }\n                else if (lastParseResultHasNoValue) {\n                    if (e.data === \"0\" && hasLeadingZero) {\n                        // do not reset element value on a leading zero\n                        // wait for consecutive input to determine the value\n                    }\n                    else if (isPresent(oldExistingDateValue) && !isPresent(newExistingDateValue)) {\n                        this.restorePreviousInputEventState();\n                    }\n                    else if (!isPresent(oldExistingDateValue) && isPresent(newExistingDateValue)) {\n                        this.forceUpdateWithSelection();\n                    }\n                    else if (isPresent(oldExistingDateValue) && isPresent(newExistingDateValue)) {\n                        if (hasExistingDateValueChanged) {\n                            this.forceUpdateWithSelection();\n                        }\n                        else {\n                            this.restorePreviousInputEventState();\n                        }\n                    }\n                    else if (!isPresent(oldExistingDateValue) && !isPresent(newExistingDateValue)) {\n                        this.forceUpdateWithSelection();\n                    }\n                    else if (oldDateValue !== newDateValue) {\n                        // this can happen on auto correct when no valid value is parsed\n                    }\n                    else {\n                        this.restorePreviousInputEventState();\n                    }\n                }\n                else if (!lastParseResultHasNoValue) {\n                    // the user types a valid but incomplete date (e.g. year \"123\" with format \"yyyy\")\n                    // let them continue typing, but refresh for not fixed formats\n                    if (!hasFixedFormat) {\n                        this.forceUpdateWithSelection();\n                    }\n                }\n            }\n            else {\n                if (!this.options.autoSwitchParts && diff[0][1] === Constants.formatSeparator) {\n                    // do not change the selection when a separator is pressed\n                    // this should happen only if autoSwitchKeys contains the separator explicitly\n                }\n                else {\n                    this.setSelection(this.selectionBySymbol(diff[0][0]));\n                }\n            }\n        }\n        else if (!hasCaret) {\n            this.forceUpdate();\n            if (diff.length && diff[0][0] !== Constants.formatSeparator) {\n                this.setSelection(this.selectionBySymbol(diff[0][0]));\n            }\n            if (this.options.autoSwitchParts) {\n                if (navigationOnly) {\n                    this.resetSegmentValue = true;\n                    if (!switchedPartOnPreviousKeyAction) {\n                        this.switchDateSegment(1);\n                    }\n                    this.switchedPartOnPreviousKeyAction = true;\n                }\n                else if (switchPart) {\n                    this.switchDateSegment(1);\n                    this.switchedPartOnPreviousKeyAction = true;\n                }\n            }\n            else {\n                if (lastParseResult && lastParseResult.switchToNext) {\n                    // the value is complete and should be switched, but the \"autoSwitchParts\" option prevents this\n                    // ensure that the segment value can be reset on next input\n                    this.resetSegmentValue = true;\n                }\n                else if (navigationOnly) {\n                    this.resetSegmentValue = true;\n                    if (!switchedPartOnPreviousKeyAction) {\n                        this.switchDateSegment(1);\n                    }\n                    this.switchedPartOnPreviousKeyAction = true;\n                }\n            }\n            if (isBackspaceKey && this.options.selectPreviousSegmentOnBackspace) {\n                // kendo angular have this UX\n                this.switchDateSegment(-1);\n            }\n        }\n        this.tryTriggerValueChange({\n            oldValue: oldExistingDateValue,\n            event: e\n        });\n        this.triggerInputEnd({ event: e, error: error, oldElementValue: oldElementValue, newElementValue: this.elementValue });\n        if (hasCaret) {\n            // a format like \"F\" can dynamically change the resolved format pattern based on the value, e.g.\n            // \"Tuesday, February 1, 2022 3:04:05 AM\" becomes\n            // \"Wednesday, February 2, 2022 3:04:05 AM\" giving a diff of 2 (\"Tuesday\".length - \"Wednesday\".length)\n            this.setTextAndFormat();\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementFocus = function (e) {\n        if (this.triggerFocus({ event: e })) {\n            return;\n        }\n        this.isActive = true;\n        this.interactionMode = DateInputInteractionMode.None;\n        this.switchedPartOnPreviousKeyAction = false;\n        this.refreshElementValue();\n        if (!this.mouseDownStarted) {\n            this.caret(0, this.elementValue.length);\n        }\n        this.mouseDownStarted = false;\n        this.triggerFocusEnd({ event: e });\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementBlur = function (e) {\n        this.resetSegmentValue = true;\n        this.isActive = false;\n        if (this.triggerBlur({ event: e })) {\n            return;\n        }\n        if (this.options.autoFill) {\n            this.autoFill();\n        }\n        this.interactionMode = DateInputInteractionMode.None;\n        this.switchedPartOnPreviousKeyAction = false;\n        this.refreshElementValue();\n        this.triggerBlurEnd({ event: e });\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementChange = function (e) {\n        this.triggerChange({ event: e });\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementKeyDown = function (e) {\n        if (this.triggerKeyDown({ event: e })) {\n            return;\n        }\n        var _a = this.selection, start = _a.start, end = _a.end;\n        var event = e;\n        this.keyDownEvent = e;\n        this.previousElementValue = this.element.value;\n        this.previousElementSelection = { start: start, end: end };\n        if (this.keyEventMatchesAutoSwitchKeys(e)) {\n            var isTabKey = e.keyCode === KeyCode.TAB;\n            if (isTabKey) {\n                var _b = this.selection, selectionStart = _b.start, selectionEnd = _b.end;\n                if (e.shiftKey && isTabKey) {\n                    this.switchDateSegment(-1);\n                }\n                else {\n                    this.switchDateSegment(1);\n                }\n                if (selectionStart !== this.selection.start || selectionEnd !== this.selection.end) {\n                    // when the selection changes, prevent the default Tab behavior\n                    e.preventDefault();\n                    return;\n                }\n            }\n            else {\n                // do not allow the \"input\" event to be triggered\n                e.preventDefault();\n                this.switchDateSegment(1);\n                return;\n            }\n        }\n        var symbol = this.currentFormat[this.selection.start];\n        var step = this.getStepFromSymbol(symbol);\n        var shouldPreventDefault = false;\n        var oldElementValue = this.elementValue;\n        if (e.altKey || e.ctrlKey || e.metaKey || e.keyCode === KeyCode.TAB) {\n            return;\n        }\n        switch (e.keyCode) {\n            case KeyCode.ARROW_LEFT:\n                this.switchDateSegment(-1);\n                shouldPreventDefault = true;\n                this.switchedPartOnPreviousKeyAction = false;\n                break;\n            case KeyCode.ARROW_UP:\n                this.modifyDateSegmentValue(step, symbol, event);\n                if (oldElementValue !== this.elementValue) {\n                    this.triggerInputEnd({ event: e, error: null, newElementValue: this.elementValue, oldElementValue: oldElementValue });\n                }\n                shouldPreventDefault = true;\n                this.switchedPartOnPreviousKeyAction = false;\n                break;\n            case KeyCode.ARROW_RIGHT:\n                this.switchDateSegment(1);\n                shouldPreventDefault = true;\n                this.switchedPartOnPreviousKeyAction = false;\n                break;\n            case KeyCode.ARROW_DOWN:\n                this.modifyDateSegmentValue(-step, symbol, event);\n                if (oldElementValue !== this.elementValue) {\n                    this.triggerInputEnd({ event: e, error: null, newElementValue: this.elementValue, oldElementValue: oldElementValue });\n                }\n                shouldPreventDefault = true;\n                this.switchedPartOnPreviousKeyAction = false;\n                break;\n            case KeyCode.ENTER:\n                // todo: handle \"change\" event\n                break;\n            case KeyCode.HOME:\n                this.selectNearestSegment(0);\n                shouldPreventDefault = true;\n                this.switchedPartOnPreviousKeyAction = false;\n                this.resetSegmentValue = true;\n                break;\n            case KeyCode.END:\n                this.selectNearestSegment(this.elementValue.length);\n                shouldPreventDefault = true;\n                this.switchedPartOnPreviousKeyAction = false;\n                this.resetSegmentValue = true;\n                break;\n            default:\n                // allow the \"input\" event to handle the change\n                return;\n        }\n        if (shouldPreventDefault) {\n            e.preventDefault();\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementPaste = function () {\n        this.isPasteInProgress = true;\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.onElementMouseWheel = function (e) {\n        var oldElementValue = this.elementValue;\n        if (!this.options.enableMouseWheel || this.triggerMouseWheel({ event: e })) {\n            return;\n        }\n        if (!this.isActive) {\n            return;\n        }\n        var event = e;\n        if (event.shiftKey) {\n            this.switchDateSegment((event.wheelDelta || -event.detail) > 0 ? -1 : 1);\n        }\n        else {\n            this.modifyDateSegmentValue((event.wheelDelta || -event.detail) > 0 ? 1 : -1);\n        }\n        event.returnValue = false;\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n        if (oldElementValue !== this.elementValue) {\n            this.triggerInputEnd({ event: e, error: null, newElementValue: this.elementValue, oldElementValue: oldElementValue });\n        }\n    };\n    DateInput.prototype.updateOnPaste = function (e) {\n        var value = this.intl.parseDate(this.elementValue, this.inputFormat) || this.value;\n        if (isPresent(value) && this.dateObject.shouldNormalizeCentury()) {\n            value = this.dateObject.normalizeCentury(value);\n        }\n        var oldDateObjectValue = this.dateObject && this.dateObject.getValue();\n        this.writeValue(value);\n        this.tryTriggerValueChange({\n            oldValue: oldDateObjectValue,\n            event: e\n        });\n    };\n    Object.defineProperty(DateInput.prototype, \"elementValue\", {\n        get: function () {\n            return (this.element || {}).value || '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateInput.prototype, \"inputFormat\", {\n        get: function () {\n            if (!this.options.format) {\n                return Constants.defaultDateFormat;\n            }\n            if (typeof this.options.format === 'string') {\n                return this.options.format;\n            }\n            else {\n                return this.options.format.inputFormat;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateInput.prototype, \"displayFormat\", {\n        get: function () {\n            if (!this.options.format) {\n                return Constants.defaultDateFormat;\n            }\n            if (typeof this.options.format === 'string') {\n                return this.options.format;\n            }\n            else {\n                return this.options.format.displayFormat;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DateInput.prototype, \"selection\", {\n        get: function () {\n            var returnValue = { start: 0, end: 0 };\n            if (this.element !== null && this.element.selectionStart !== undefined) {\n                returnValue = {\n                    start: this.element.selectionStart,\n                    end: this.element.selectionEnd\n                };\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DateInput.prototype.setSelection = function (selection) {\n        if (this.element && document.activeElement === this.element) {\n            this.element.setSelectionRange(selection.start, selection.end);\n            if (selection.start !== selection.end) {\n                this.interactionMode = DateInputInteractionMode.Selection;\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.selectionBySymbol = function (symbol) {\n        var start = -1;\n        var end = 0;\n        for (var i = 0; i < this.currentFormat.length; i++) {\n            if (this.currentFormat[i] === symbol) {\n                end = i + 1;\n                if (start === -1) {\n                    start = i;\n                }\n            }\n        }\n        if (start < 0) {\n            start = 0;\n        }\n        if (!this.options.autoCorrectParts && this.currentFormat.length !== this.currentText.length) {\n            if (this.currentFormat.length < this.currentText.length) {\n                end += this.currentText.length - this.currentFormat.length;\n            }\n            else {\n                end = Math.max(0, end - (this.currentFormat.length - this.currentText.length));\n            }\n        }\n        return { start: start, end: end };\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.selectionByIndex = function (index) {\n        var selection = { start: index, end: index };\n        for (var i = index, j = index - 1; i < this.currentFormat.length || j >= 0; i++, j--) {\n            if (i < this.currentFormat.length && this.currentFormat[i] !== Constants.formatSeparator) {\n                selection = this.selectionBySymbol(this.currentFormat[i]);\n                break;\n            }\n            if (j >= 0 && this.currentFormat[j] !== Constants.formatSeparator) {\n                selection = this.selectionBySymbol(this.currentFormat[j]);\n                break;\n            }\n        }\n        return selection;\n    };\n    DateInput.prototype.switchDateSegment = function (offset) {\n        var selection = this.selection;\n        if (this.isInCaretMode()) {\n            var start = selection.start;\n            var currentSymbol = this.currentFormat[start - 1];\n            var symbol = \"\";\n            var symbolCandidate = \"\";\n            if (offset < 0) {\n                for (var i = start + offset; i >= 0; i--) {\n                    symbolCandidate = this.currentFormat[i];\n                    if (symbolCandidate !== Constants.formatSeparator &&\n                        symbolCandidate !== currentSymbol) {\n                        start = i;\n                        symbol = symbolCandidate;\n                        break;\n                    }\n                }\n            }\n            else {\n                for (var i = start + offset; i < this.currentFormat.length; i++) {\n                    symbolCandidate = this.currentFormat[i];\n                    if (symbolCandidate !== Constants.formatSeparator &&\n                        symbolCandidate !== currentSymbol) {\n                        start = i;\n                        symbol = symbolCandidate;\n                        break;\n                    }\n                }\n            }\n            if (symbol) {\n                this.forceUpdate();\n                this.setSelection(this.selectionBySymbol(symbol));\n                this.interactionMode = DateInputInteractionMode.Selection;\n                return;\n            }\n        }\n        this.interactionMode = DateInputInteractionMode.None;\n        var _a = this.selection, selectionStart = _a.start, selectionEnd = _a.end;\n        if (selectionStart < selectionEnd &&\n            this.currentFormat[selectionStart] !== this.currentFormat[selectionEnd - 1]) {\n            this.setSelection(this.selectionByIndex(offset > 0 ? selectionStart : selectionEnd - 1));\n            this.resetSegmentValue = true;\n            this.interactionMode = DateInputInteractionMode.None;\n            return;\n        }\n        var previousFormatSymbol = this.currentFormat[selectionStart];\n        var a = selectionStart + offset;\n        while (a > 0 && a < this.currentFormat.length) {\n            if (this.currentFormat[a] !== previousFormatSymbol &&\n                this.currentFormat[a] !== Constants.formatSeparator) {\n                break;\n            }\n            a += offset;\n        }\n        if (this.currentFormat[a] === Constants.formatSeparator) {\n            // no known symbol is found\n            return;\n        }\n        var b = a;\n        while (b >= 0 && b < this.currentFormat.length) {\n            if (this.currentFormat[b] !== this.currentFormat[a]) {\n                break;\n            }\n            b += offset;\n        }\n        if (a > b && (b + 1 !== selectionStart || a + 1 !== selectionEnd)) {\n            this.setSelection({ start: b + 1, end: a + 1 });\n            this.resetSegmentValue = true;\n        }\n        else if (a < b && (a !== selectionStart || b !== selectionEnd)) {\n            this.setSelection({ start: a, end: b });\n            this.resetSegmentValue = true;\n        }\n        this.interactionMode = DateInputInteractionMode.None;\n    };\n    DateInput.prototype.modifyDateSegmentValue = function (offset, symbol, event) {\n        if (symbol === void 0) { symbol = \"\"; }\n        if (event === void 0) { event = {}; }\n        if (!this.dateObject || this.options.readonly) {\n            return;\n        }\n        var oldValue = this.value;\n        var step = DEFAULT_SEGMENT_STEP;\n        var caret = this.caret();\n        symbol = symbol || this.currentFormat[caret[0]];\n        if (symbol === \"S\" && (!this.options.steps.millisecond || this.options.steps.millisecond === DEFAULT_SEGMENT_STEP)) {\n            var msDigits = millisecondDigitsInFormat(this.inputFormat);\n            step = millisecondStepFor(msDigits);\n        }\n        this.dateObject.modifyPart(symbol, step * offset);\n        this.tryTriggerValueChange({\n            oldValue: oldValue,\n            event: event\n        });\n        this.forceUpdate();\n        this.setSelection(this.selectionBySymbol(symbol));\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.tryTriggerValueChange = function (args) {\n        if (args === void 0) { args = { oldValue: null, event: {} }; }\n        if (!isEqual(this.value, args.oldValue)) {\n            return this.triggerValueChange(args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.triggerValueChange = function (args) {\n        if (args === void 0) { args = { oldValue: null, event: {} }; }\n        return this.trigger(VALUE_CHANGE, extend(args, {\n            value: this.value\n        }));\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.triggerInput = function (args) {\n        if (args === void 0) { args = { event: {} }; }\n        return this.trigger(INPUT, extend(args, {\n            value: this.value\n        }));\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.triggerInputEnd = function (args) {\n        if (args === void 0) { args = { event: {}, error: null, oldElementValue: '', newElementValue: '' }; }\n        return this.trigger(INPUT_END, extend(args, {\n            value: this.value\n        }));\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.triggerFocus = function (args) {\n        if (args === void 0) { args = { event: {} }; }\n        return this.trigger(FOCUS, extend({}, args));\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.triggerFocusEnd = function (args) {\n        if (args === void 0) { args = { event: {} }; }\n        return this.trigger(FOCUS_END, extend({}, args));\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.triggerBlur = function (args) {\n        if (args === void 0) { args = { event: {} }; }\n        return this.trigger(BLUR, extend({}, args));\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.triggerBlurEnd = function (args) {\n        if (args === void 0) { args = { event: {} }; }\n        return this.trigger(BLUR_END, extend({}, args));\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.triggerChange = function (args) {\n        if (args === void 0) { args = { event: {} }; }\n        return this.trigger(CHANGE, extend(args, {\n            value: this.value\n        }));\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.triggerKeyDown = function (args) {\n        if (args === void 0) { args = { event: {} }; }\n        return this.trigger(KEY_DOWN, extend({}, args));\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.triggerMouseWheel = function (args) {\n        if (args === void 0) { args = { event: {} }; }\n        return this.trigger(MOUSE_WHEEL, extend({}, args));\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.forceUpdate = function () {\n        this.setTextAndFormat();\n        this.refreshElementValue();\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.forceUpdateWithSelection = function () {\n        var _a = this.selection, start = _a.start, end = _a.end;\n        var elementValueLength = this.elementValue.length;\n        this.forceUpdate();\n        var selectionOffset = this.elementValue.length - elementValueLength;\n        this.setSelection({\n            start: start + selectionOffset,\n            end: end + selectionOffset\n        });\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.setTextAndFormat = function () {\n        var _a = this.dateObject.getTextAndFormat(), currentText = _a.text, currentFormat = _a.format;\n        this.currentFormat = currentFormat;\n        this.currentText = currentText;\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.setElementValue = function (value) {\n        this.element.value = value;\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.getStepFromSymbol = function (symbol) {\n        /* eslint-disable no-fallthrough */\n        switch (symbol) {\n            case \"S\":\n                return Number(this.options.steps.millisecond);\n            case \"s\":\n                return Number(this.options.steps.second);\n            case \"m\":\n                return Number(this.options.steps.minute);\n            // represents hour as value from 01 through 12\n            case \"h\":\n            // represents hour as value from 01 through 23\n            case \"H\":\n                return Number(this.options.steps.hour);\n            case \"M\":\n                return Number(this.options.steps.month);\n            // there is no 'D' format specifier for day\n            case \"d\":\n            // used for formats such as \"EEEE, MMMM d, yyyy\",\n            // where \"EEEE\" stands for full name of the day e.g. Monday\n            case \"E\":\n                return Number(this.options.steps.day);\n            // there is no 'Y' format specifier for year\n            case \"y\":\n                return Number(this.options.steps.year);\n            default:\n                return DEFAULT_SEGMENT_STEP;\n        }\n        /* eslint-enable no-fallthrough */\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.restorePreviousInputEventState = function () {\n        this.restorePreviousElementValue();\n        this.restorePreviousElementSelection();\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.restorePreviousElementValue = function () {\n        this.setElementValue(this.previousElementValue || '');\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.restorePreviousElementSelection = function () {\n        var _a = this.previousElementSelection, start = _a.start, end = _a.end;\n        this.setSelection({ start: start || 0, end: end || 0 });\n    };\n    DateInput.prototype.writeValue = function (value) {\n        this.verifyValue(value);\n        this.dateObject = this.getDateObject(value);\n        this.refreshElementValue();\n    };\n    DateInput.prototype.verifyValue = function (value) {\n        if (value && !isValidDate(value)) {\n            throw new Error(\"The 'value' should be a valid JavaScript Date instance.\");\n        }\n    };\n    DateInput.prototype.refreshElementValue = function () {\n        var element = this.element;\n        var format = this.isActive ? this.inputFormat : this.displayFormat;\n        var _a = this.dateObject.getTextAndFormat(format), currentText = _a.text, currentFormat = _a.format;\n        this.currentFormat = currentFormat;\n        this.currentText = currentText;\n        var hasPlaceholder = this.options.hasPlaceholder || isPresent(this.options.placeholder);\n        var showPlaceholder = !this.isActive &&\n            hasPlaceholder &&\n            !this.dateObject.hasValue();\n        if (hasPlaceholder && isPresent(this.options.placeholder)) {\n            element.placeholder = this.options.placeholder;\n        }\n        var newElementValue = showPlaceholder ? \"\" : currentText;\n        this.previousElementValue = this.elementValue;\n        this.setElementValue(newElementValue);\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.caret = function (start, end) {\n        if (end === void 0) { end = start; }\n        var isPosition = start !== undefined;\n        var returnValue = [start, start];\n        var element = this.element;\n        if (isPosition && (this.options.disabled || this.options.readonly)) {\n            return undefined;\n        }\n        try {\n            if (element.selectionStart !== undefined) {\n                if (isPosition) {\n                    if (isDocumentAvailable() && document.activeElement !== element) {\n                        element.focus();\n                    }\n                    element.setSelectionRange(start, end);\n                }\n                returnValue = [element.selectionStart, element.selectionEnd];\n            }\n        }\n        catch (e) {\n            returnValue = [];\n        }\n        return returnValue;\n    };\n    DateInput.prototype.selectNearestSegment = function (index) {\n        // Finds the nearest (in both directions) known part.\n        for (var i = index, j = index - 1; i < this.currentFormat.length || j >= 0; i++, j--) {\n            if (i < this.currentFormat.length && this.currentFormat[i] !== \"_\") {\n                this.selectDateSegment(this.currentFormat[i]);\n                return;\n            }\n            if (j >= 0 && this.currentFormat[j] !== \"_\") {\n                this.selectDateSegment(this.currentFormat[j]);\n                return;\n            }\n        }\n    };\n    DateInput.prototype.selectDateSegment = function (symbol) {\n        var begin = -1;\n        var end = 0;\n        for (var i = 0; i < this.currentFormat.length; i++) {\n            if (this.currentFormat[i] === symbol) {\n                end = i + 1;\n                if (begin === -1) {\n                    begin = i;\n                }\n            }\n        }\n        if (begin < 0) {\n            begin = 0;\n        }\n        this.caret(0, 0);\n        this.caret(begin, end);\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.getDateObject = function (value) {\n        var leadingZero = ((this.dateObject || {}) || null).leadingZero;\n        this.options.value = value;\n        var dateObject = this.createDateObject();\n        dateObject.setLeadingZero(this.isActive ? leadingZero : null);\n        return dateObject;\n    };\n    /* tslint:disable:align */\n    /**\n     * @hidden\n     */\n    DateInput.prototype.createDateObject = function () {\n        var defaultOptions = this.getDateObjectOptions();\n        var dateObject = new DateObject(extend({}, defaultOptions));\n        return dateObject;\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.getDateObjectOptions = function () {\n        var newOptions = {\n            intlService: this.options.intlService,\n            formatPlaceholder: this.options.formatPlaceholder ? this.options.formatPlaceholder : 'formatPattern',\n            format: this.inputFormat,\n            cycleTime: this.options.cycleTime,\n            twoDigitYearMax: this.options.twoDigitYearMax,\n            autoCorrectParts: this.options.autoCorrectParts,\n            value: this.options.value\n        };\n        return newOptions;\n    };\n    /* tslint:enable:align */\n    /**\n     * @hidden\n     */\n    DateInput.prototype.keyEventMatchesAutoSwitchKeys = function (keyObject) {\n        var autoSwitchKeys = (this.options.autoSwitchKeys || [])\n            .map(function (x) { return x.toString().toLowerCase().trim(); });\n        if (autoSwitchKeys.indexOf(keyObject.keyCode.toString()) >= 0 ||\n            autoSwitchKeys.indexOf(keyObject.keyCode) >= 0 ||\n            autoSwitchKeys.indexOf(keyObject.key.toLowerCase().trim()) >= 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @hidden\n     */\n    DateInput.prototype.autoFill = function () {\n        var dateObject = this.dateObject, currentDate = new Date(), day, month, year, hours, minutes, seconds;\n        if (dateObject.date || dateObject.month || dateObject.year || dateObject.hours || dateObject.minutes || dateObject.seconds) {\n            year = dateObject.year ? dateObject.value.getFullYear() : currentDate.getFullYear(),\n                month = dateObject.month ? dateObject.value.getMonth() : currentDate.getMonth(),\n                day = dateObject.date ? dateObject.value.getDate() : currentDate.getDate(),\n                hours = dateObject.hours ? dateObject.value.getHours() : currentDate.getHours(),\n                minutes = dateObject.minutes ? dateObject.value.getMinutes() : currentDate.getMinutes(),\n                seconds = dateObject.seconds ? dateObject.value.getSeconds() : currentDate.getSeconds();\n            dateObject.setValue(new Date(year, month, day, hours, minutes, seconds));\n            this.refreshElementValue();\n            this.triggerValueChange();\n        }\n    };\n    return DateInput;\n}(Observable));\n\nexport { DateInput as D, __classPrivateFieldSet as _, __classPrivateFieldGet as a, __awaiter as b };\nexport { __meta__ };"]}