#pragma checksum "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "47c8d80133c2fe0a58b481788a640d002b56d75a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Bestilling_Index), @"mvc.1.0.view", @"/Views/Bestilling/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Visual Stuido 17\KipWeb5\Views\_ViewImports.cshtml"
using KipWeb5;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Visual Stuido 17\KipWeb5\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
using TXTextControl.Web.MVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
using TXTextControl.Web;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"47c8d80133c2fe0a58b481788a640d002b56d75a", @"/Views/Bestilling/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ec4a0d041100f1c7f5b87fd2c1f80209d75b00ee", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Bestilling_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<KipWeb5.Models.Bestilling.BestillingModel>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/mail-back-filled-send.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/document-order-printer-filled.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/report-save-filled.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/gravminne.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/label-text.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/script-filled.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Ny.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Lagre.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/Slette.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/document-text-graph.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/button-remove.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/find.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/find-cancel-filled.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/filter.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_BestillingInfo", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("controller", new global::Microsoft.AspNetCore.Html.HtmlString("Bestilling"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("Lagre"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("Bestilling"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onsubmit", new global::Microsoft.AspNetCore.Html.HtmlString("return false;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("mt-3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 8 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
  
    ViewData["Title"] = Localizer["Bestilling"];
    ViewData["LogOnOk"] = "2";
    ViewData["Menu"] = "GP";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<script type=\"text/x-kendo-tmpl\" id=\"template2\">\r\n    <div class=\"folder\">\r\n        <img src=\"");
#nullable restore
#line 17 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Content("~/images/#: icon#.svg"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""" />
        <p>#:fileTittel#</p>
    </div>
</script>

<script src=""https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.2.2/pdf.js""></script>


<style>
    
    .k-grid td {
        white-space: nowrap;
        text-overflow: ellipsis;
        }

    #bestillingListe {
        height: 100%;
    }

    .k-fab-text {
        display: none;
    }

    div.k-listbox {
        height: 530px;
    }

    .k-checkbox-label {
        margin-right: 15px;
    }

    .btn img {
        width: 24px;
        height: 24px;
    }

    .btn {
        padding: 5px;
        background-color: aliceblue;
        border-color: lightgray;
    }

    .disabled {
        opacity: 0.5;
        pointer-events: none;
    }

    .table > tbody > tr > td {
        padding-left: 1px;
        padding-top: 3px;
        margin: 6px 3px 3px 0px;
        border: 0px;
        vertical-align: text-bottom;
    }

    .ellipsis-overflow {
        text-overflow: ellipsis;
        white-space:nowr");
            WriteLiteral(@"ap;
    }


    .k-checkbox-label {
        line-height: 28px;
        margin-left: 10px;
    }

    #tabKremasjon .k-checkbox-label {
        margin-left: 10px;
        line-height: 20px;
    }

    #tabKirkegard .k-checkbox-label {
        margin-left: 10px;
        line-height: 20px;
    }

    #tabSeremoni .k-checkbox-label {
        margin-left: 10px;
        line-height: 20px;
    }

    #tabFaktura .k-checkbox-label {
        margin-left: 10px;
        line-height: 20px;
    }
     
    #soekeFilter .command img {
        width: 32px;
        height: 32px;
    }

    #soekeFilter .command {
        height: 50px;
        font-size: 14px;
        font-weight: normal;
    }

    #dokListe .k-listview {
        background-color: transparent;
        border-color: transparent;
    }

    .folder {
        float: left;
        position: relative;
        margin-right: 10px;
    }


    .folder img {
        width: 32px;
        height: 32px;
        disp");
            WriteLiteral(@"lay: block;
        margin-left: auto;
        margin-right: auto;
        margin-top: 2px;
    }

    .folder p {
        padding: 3px 5px 0px 5px;
        font-size: 10px;
        font-weight: normal;
        color: #999;
        text-align: center;
        margin-bottom: 1px;
    }

    .folder:checked {
        font-weight: bold;
        color: red;
    }

    .folder:hover p {
        font-weight: bold;
        color: black;
    }

    div.k-window{
        border: 1px solid lightgray;
    }
</style>


");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47c8d80133c2fe0a58b481788a640d002b56d75a14775", async() => {
                WriteLiteral("\r\n    <div id=\"confirm\"></div>\r\n\r\n    <div class=\"container-fluid\">\r\n\r\n        <div class=\"row\" id=\"heading\" style=\"min-height: 70px;\">\r\n\r\n            <div class=\"col-2 unselectable\">\r\n                <h3>");
#nullable restore
#line 168 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
               Write(Localizer["Bestillinger"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</h3>
            </div>

            <div class=""col-10"">

                <div style=""display: flex; flex-direction: row;"">
                   
                    <button type=""button"" id=""btnSendBekr"" disabled class=""command"" onclick=""SendBekreftelseEpost()"" style=""width: 230px; margin-right: 7px;"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a15840", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
#nullable restore
#line 177 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                   Write(Localizer["Send bekreftelse"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                        <p>Send bekreftelse om gravferd til byrå</p>
                    </button>

                    <button type=""button"" id=""btnBestSeremoni"" disabled class=""command"" onclick=""showDialogGravseddel()"" style=""width: 240px; margin-right: 7px;"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a17488", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
#nullable restore
#line 183 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                   Write(Localizer["Bestilling seremoni"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                        <p>Lag bekreftelse seremoni og vis</p>
                    </button>

                    <button type=""button"" id=""btnArkiver"" disabled class=""command"" onclick=""BestillingArkiver()"" style=""width: 170px; margin-right: 7px;"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a19125", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
#nullable restore
#line 189 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                   Write(Localizer["Arkiver"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                        <p>Overfør bestillingen til gravarkivet</p>
                    </button>

                    <button type=""button"" id=""btnGravarkiv"" class=""command"" onclick=""VisGravarkiv()"" style=""display: none; width: 170px; margin-right: 7px;"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a20758", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
#nullable restore
#line 195 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                   Write(Localizer["Gravarkiv"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                        <p>Vis graven i gravarkivet</p>
                    </button>

                    <button type=""button"" style=""width: 190px; margin-right: 7px;"" class=""command"" onclick=""showDialogEtikettskriver()"" id=""idEtikett"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a22375", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
#nullable restore
#line 201 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                   Write(Localizer["Utskrift Etikett"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                        <p>Skriver ut etikett på valgte lokasjon</p>
                    </button>

                    <button type=""button"" style=""width: 150px; margin-right: 7px;"" class=""command"" onclick=""showDialogLogg()"" id=""idKisteLogg"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a24004", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        ");
#nullable restore
#line 207 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                   Write(Localizer["Kistelogg"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                        <p>Kistelogg</p>
                    </button>

                </div>

            </div>

        </div>

        <div class=""row"" style=""min-height: 720px; border: 1px solid lightgrey; padding: 10px;"">

            <div class=""col-4"">

                <div class=""row"">

                    <div class=""col-lg-6"" style=""display: flex; flex-direction: row;"">

                        <div>
                            <button type=""button"" name=""nyMappe"" class=""commandline"" onclick=""nyBestilling()"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a25942", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <figcaption>Ny</figcaption>
                            </button>
                        </div>

                        <div>
                            <button type=""button"" class=""commandline"" id=""btnLagre"" onclick=""lagreBestilling()"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a27347", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <figcaption>Lagre</figcaption>
                            </button>
                        </div>

                        <div>
                            <button type=""button"" style=""display: none"" name=""mappeEndre"" id=""mappeEndre"" class=""commandline"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a28771", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                Slette
                            </button>
                        </div>

                        <div>
                            <button type=""button"" name=""utskrift"" id=""utskrift"" onclick=""showDialogRapporter()"" class=""commandline"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a30177", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                Rapporter
                            </button>
                        </div>

                    </div>

                    <div class=""col-lg-6"">

                        <div class=""row"">
                            <div class=""col-lg-12"" style=""margin-top: 10px;"">
                                Vis søkefelt

                                ");
#nullable restore
#line 261 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                            Write(Html.Kendo().Switch()
                                    .Name("switch")
                                    .HtmlAttributes(new {style = "margin-left: 10px;"})
                                    .Messages(c => c.Checked("Ja").Unchecked("Nei"))
                                    .Events(e => e.Change("filterSokefelt"))
                                    );

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                            </div>
                        </div>
                        <div class=""row align-items-center"" style=""margin-top: 10px;"">
                            <div class=""col-12"" style=""display: flex; flex-direction: row;"">
                                <input id=""BNavn"" Class=""form-control sokeFelt"" oninput=""visBestillinger()"" placeholder=""søk etter avdødes navn"" style=""width: calc(100% - 30px)"">
                                <button type=""button"" class=""commandInline"" onclick=""clearKunde()"">
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a32837", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                </button>
                            </div>
                                    
                        </div>
                    </div>

                </div>

                <div class=""row"">
                    <div id=""soekeFilter"" style=""display: none;"">
                        <div class=""panel"" style=""padding: 10px; margin-top: 10px; background-color: transparent;"">
                            <h6>Filter</h6>

                            <div class=""row"">
                                <div class=""col-9"">
                                    <div class=""row"">
                                        <label class=""col-2 col-form-label"">Periode</label>
                                        <div class=""col-4"">
                                            ");
#nullable restore
#line 292 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                                        Write(Html.Kendo().DatePicker()
                                            .Name("PeriodeFra")
                                            .HtmlAttributes(new { style = "width: 120px", @class = "sokeFelt" })
                                            );

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                        </div>\r\n                                        <div class=\"col-4\">\r\n                                            ");
#nullable restore
#line 298 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                                        Write(Html.Kendo().DatePicker()
                                            .Name("PeriodeTil")
                                            .HtmlAttributes(new { style = "width: 120px", @class = "sokeFelt" })
                                            );

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                        </div>
                                    </div>

                                    <div class=""row"">
                                        <label class=""col-2 col-form-label"">Nr</label>
                                        <div class=""col-10"">
                                            <input id=""BNr"" class=""form-control k-textbox sokeFelt"" style=""width: 100%;"">
                                        </div>
                                    </div>



                                </div>

                                <div class=""col-3"">
                                    <button type=""button"" class=""commandFunk"" onclick=""finnBestilling()"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a36666", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        Start søk\r\n                                    </button>\r\n\r\n                                    <button type=\"button\" class=\"commandFunk\" onclick=\"clearBestilling()\">\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a38016", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                        Fjern søk
                                    </button>
                                </div>
                           </div>
                        </div>
                    </div>
                </div>

                <div class=""row"" style=""margin-top: 20px;"" >
                    <div class=""col-12"">
                    <div class=""row"">
                        <div class=""d-flex"">
                            <h4 id=""ListeTittel"" class=""me-auto align-self-end unselectable"">");
#nullable restore
#line 336 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                                                                                        Write(Localizer["Liste over bestillinger"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</h4>

                            <div class=""align-items-end"">
                                <div class=""dropdown"">
                                    <button class=""btn dropdown-toggle"" type=""button"" id=""dropdownMenuButton1"" data-bs-toggle=""dropdown"" aria-expanded=""false"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a40307", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
#nullable restore
#line 342 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                                   Write(Localizer["Vis i listen"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                    </button>
                                    <ul class=""dropdown-menu"" aria-labelledby=""dropdownMenuButton1"">
                                        <li><button class=""dropdown-item"" type=""button"" onclick=""filterAktuelle()"">");
#nullable restore
#line 345 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                                                                                                              Write(Localizer["Aktuelle"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("</button></li>\r\n                                        <li><button class=\"dropdown-item\" type=\"button\" onclick=\"filterIkkeArkiverte()\">");
#nullable restore
#line 346 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                                                                                                                   Write(Localizer["Ikke arkiverte"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("</button></li>\r\n                                        <li><button class=\"dropdown-item\" type=\"button\" onclick=\"filterKanArkiveres()\">");
#nullable restore
#line 347 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                                                                                                                  Write(Localizer["Kan arkiveres"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("</button></li>\r\n                                        <li><button class=\"dropdown-item\" type=\"button\" onclick=\"filterIAar()\">");
#nullable restore
#line 348 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                                                                                                          Write(Localizer["I år"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("</button></li>\r\n                                        <li><button class=\"dropdown-item\" type=\"button\" onclick=\"filterAlle()\">");
#nullable restore
#line 349 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                                                                                                          Write(Localizer["Alle"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</button></li>
                                    </ul>
                                </div>
                            </div>

                        </div>
                    </div>
                    
                    <div class=""row"">
                        <div class=""col-12"">
                        ");
#nullable restore
#line 359 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                    Write(Html.Kendo().Grid<KipWeb5.Models.BestillingListeItem>()
                            .Name("bestillingListe")
                            .Columns(columns =>
                            {
                                columns.Bound(q => q.BestillingGuid).Visible(false);
                                columns.Bound(q => q.BestillingNr).Width(70).Title(Localizer["#"].Value);
                                columns.Bound(q => q.FulltNavn).Title(Localizer["Avdøde"].Value);
                                columns.Bound(q => q.AvlDod).Width(100).Format("{0: dd.MM.yyyy}").Title("Dødsdato");
                                //columns.Bound(q => q.MappeNavn).Width(100).Title("Mappe");
                                columns.Bound(q => q.Kirkegard).Width(160).Title("Gravplass");
                                columns.Bound(q => q.FargeNavn).Visible(false);
                            })
                            .HtmlAttributes(new {style = "height: calc(100vh - 370px);"})
                            .Scrollable()
                            .Selectable(s => s
                                .Mode(GridSelectionMode.Single)
                                .Type(GridSelectionType.Row))
                            .Events(events => events
                                .Change("onBestillingChange").DataBound("onDataBound"))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Read(read => read.Action("getBestillingListe", "Bestilling").Data("filterBestilling"))
                                )
                            );

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                 \r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"col-8\">\r\n\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "47c8d80133c2fe0a58b481788a640d002b56d75a46516", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_14.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_18);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_19.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_20);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script id=""Rapport"">
    var firstRender = true;
    var dataTekst = """";

    function visRapport() {
        var lvDocument = $(""#lvRapporter"").data(""kendoListView"");
        var selF = lvDocument.select();
        var selIF = lvDocument.dataItem(selF);
        var RapId = """";
        var base64string = """";
        firstRender = true;

        if (typeof selIF != 'undefined') {
            RapId = selIF.RapId;
            x = document.getElementById(""RapportVerdier_RapId"");
            xRT = document.getElementById(""RapportVerdier_RapType"");
            x.value = RapId;
            xRT.value = selIF.RapType;
            }

        var $this = $('#rapportForm').serialize();

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 427 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("getRapport", "Rapport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: $this
        }).done(function (result) {
            if (result.ErrorCode > 0) {
                alert(result.ErrorTekst);
            }
            else {
                var popup = $('#dialogVisPDF').data(""kendoWindow"");
                popup.center().open();

                var pdfViewer = $(""#pdfViewer"").data(""kendoPDFViewer"");                    

                var pdfHandlerUrl = ""/Rapport/VisRapport?rapId="" + RapId;

                pdfViewer.fromFile(pdfHandlerUrl);
                pdfViewer.loadPage(1);
                }
            });
        }

    function onRender(e){
        if(firstRender){
            e.sender.toolbar.zoom.combobox.value(""fitToWidth"");
            e.sender.toolbar.zoom.combobox.trigger(""change"");
            firstRender = false;
        }
    }   

</script>

<script id=""successTemplate"" type=""text/x-kendo-template"">
    <div class=""upload-success"">
        <img src=""");
#nullable restore
#line 459 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Content("~/images/emoticon-happy.svg"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\" style=\"float:left; height:48px; width:48px; margin-right: 16px;\"/>\r\n        <p>#= message #</p>\r\n    </div>\r\n</script>\r\n\r\n\r\n<script id=\"errorTemplate\" type=\"text/x-kendo-template\">\r\n    <div class=\"wrong-pass\">\r\n        <img src=\"");
#nullable restore
#line 467 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Content("~/images/emoticon-sad.svg"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\" style=\"float:left; height:48px; width:48px; margin-right: 16px;\"/>\r\n        <p>#= message #</p>\r\n    </div>\r\n</script>\r\n\r\n\r\n");
#nullable restore
#line 473 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Notification()
    .Name("notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Stacking(NotificationStackingSettings.Down)
    .AutoHideAfter(5000)
    .Templates(t =>
    {
        t.Add().Type("success").ClientTemplateID("successTemplate");
        t.Add().Type("error").ClientTemplateID("errorTemplate");
    })
);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<div id=\"dialogLastOppFilerWindows\">\r\n    ");
#nullable restore
#line 486 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogLastOppFiler")
        .Title("Last opp filer")
        .HtmlAttributes("style= border:1px;")
        .Visible(false)
        .Height(500)
        .Width(1000)
        .Modal(true)
        .Draggable()
        .Actions(actions => actions
            .Close()
        )
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"idDialogGravarkiv\">\r\n    ");
#nullable restore
#line 502 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogGravarkiv")
        .Title("Gravarkiv")
        .HtmlAttributes(new { style= "border:1px; margin: 0px; padding: 0px;"})
        .Visible(false)
        .Width("80vw")
        .Modal(true)
        .Draggable()
        .Actions(actions => actions
            .Close()
        )
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n\r\n<div id=\"dialogGravseddelWindows\">\r\n    ");
#nullable restore
#line 518 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogGravseddel")
        .Title("Gravseddel")
        .Visible(false)
        .Width(800)
        .Modal(true)
        .Draggable()
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogMailWindow\">\r\n    ");
#nullable restore
#line 529 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogMail")
        .Title("Arkiver E-post")
        .HtmlAttributes("style= border:1px;")
        .Visible(false)
        .Width("90vw")
        .Modal(true)
        .Draggable()
        .Actions(actions => actions
            .Close()
        )
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogSendMailWindow\">\r\n    ");
#nullable restore
#line 544 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogSendMail")
        .Title("E-post")
        .HtmlAttributes("style= border:1px; padding: 0px;")
        .Visible(false)
        .Height(800)
        .Width(1400)
        .Modal(true)
        .Draggable()
        .Actions(actions => actions
            .Close()
        )
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogVisPDFWindow\">\r\n    ");
#nullable restore
#line 560 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogVisPDF")
        .Title(Localizer["Dokument"].Value)
        .HtmlAttributes(new {style = "border:1px; padding: 0px;"})
        .Visible(false)
        .Content(
            @Html.Kendo().PDFViewer()
                .Name("pdfViewer")
                .Events(ev=>ev.Render("onRender"))
                .Height(720)
                .ToHtmlString()
        )
        .Height(800)
        .Modal(true)
        .Draggable()
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogWriterWindow\">\r\n    ");
#nullable restore
#line 579 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogWriter")
        .Title(Localizer["Text Writer"].Value)
        .HtmlAttributes(new {style = "border:1px; padding: 0px;"})
        .Visible(false)
        .Width(1600)
        .Modal(true)
        .Draggable(true)
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogMeldingWindow\">\r\n    ");
#nullable restore
#line 591 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogMelding")
        .Title(Localizer["Melding"].Value)
        .HtmlAttributes(new {style = "border:1px; padding: 0px;"})
        .Visible(false)
        .Width(800)
        .Modal(true)
        .Draggable(true)
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogWriterWindow\">\r\n    ");
#nullable restore
#line 603 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogSeremonitidspunkt")
        .Title(Localizer["Seremonitidspunkter"].Value)
        .Visible(false)
        .Width(1000)
        .Modal(true)
        .Draggable(true)
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogFinnPersonWindow\">\r\n    ");
#nullable restore
#line 614 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogFinnPerson")
        .Title("Personsøk")
        .Visible(false)
        .Width(1200)
        .Modal(true)
        .Draggable()
        .Events(events => events
            .Close("closeFinnPerson"))
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogRapporterWindow\">\r\n    ");
#nullable restore
#line 627 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogRapporter")
        .Title("Utskrift")
        .Visible(false)
        .Width(1200)
        .Modal(true)
        .Draggable()
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogSkrivbrevWindow\">\r\n    ");
#nullable restore
#line 638 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogSkrivbrev")
        .Title("Brevmaler")
        .Visible(false)
        .Width(1200)
        .Modal(false)
        .Draggable()
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogNySakspartWindows\">\r\n    ");
#nullable restore
#line 649 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogNySakspart")
        .Title("Personsøk")
        .Visible(false)
        .Height(700)
        .Width(1200)
        .Modal(true)
        .Draggable()
        .Events(events => events
            .Close("addSakspart"))
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"DialogKontaktWindow\">\r\n    ");
#nullable restore
#line 663 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("DialogKontakt")
        .Title(Localizer["Kontaktinformasjon"].Value)
        .Visible(false)
        .Height(743)
        .Width(800)
        .Resizable()
        .Modal(false)
        .Draggable()
        //.Events(e => e .Activate("Avtale_Open"))
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"RessurserDialogWindow\">\r\n    ");
#nullable restore
#line 677 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("DialogRessurser")
        .Title(Localizer["Ressurser"].Value)
        .Visible(false)
        .Height(570)
        .Width(1200)
        .Modal(true)
        .Draggable()
        //.Events(e => e .Activate("Avtale_Open"))
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogSendSMSWindow\">\r\n    ");
#nullable restore
#line 690 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogSendSMS")
        .Title(Localizer["Utsending"].Value)
        .HtmlAttributes("style= border:1px;")
        .Visible(false)
        .Height(795)
        .Width(1400)
        .Modal(true)
        .Draggable()
        .Actions(actions => actions
            .Close()
        )
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"ReserveringGraverDialog\">\r\n\r\n    ");
#nullable restore
#line 707 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Dialog()
        .Name("dialogFinnGraver")
        .Title("Reserver graver")
        .Content(
            Html.Kendo().Grid<KipWeb5.Models.GravItem>()
            .Name("grdGraver")
            .Columns(columns =>
                {
                columns.Select().Width(65);
                columns.Bound(e => e.Plassering).Width(100);
                columns.Bound(e => e.Navn);
                })
            .Height(450)
            .Scrollable()
            .Events(e => e.DataBound("onReserveringDataBound"))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read
                .Action("GetReserverGravListe", "Gravarkiv").Data("filterReservering")
                )
            )
            //.Events(ev => ev.DataBound("treeViewDataBound").Check("treeViewCheck"))
            .ToHtmlString()
            )
        .Width(500)
        .Height(600)
        .Modal(false)
        .Visible(false)
        .Actions(actions =>
            {
            actions.Add().Text("Avbryt");
            actions.Add().Text("Velg").Action("onActionOK").Primary(true);
            })
        .Events(ev => ev.Close("onClose").Open("onOpen"))
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n</div>\r\n\r\n<div id=\"idKremEtikett\">\r\n\r\n       ");
#nullable restore
#line 747 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
   Write(Html.Kendo().Dialog()
        .Name("dialogFinnEtikettskriver")
        .Title("Etikettskrivere")
        .Content(
            Html.Kendo().Grid<KipWeb5.Models.KremasjonEtikettskrivereItem>()
            .Name("grdSkrivere")
            .Columns(columns =>
                {
                columns.Bound(e => e.KremStasjon_GUID).Visible(false);
                columns.Bound(e => e.Navn);
                columns.Bound(e => e.Tittel);
                })
            .Height(450)
            .Scrollable()
            .Selectable(s => s.Type(GridSelectionType.Row))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read
                .Action("GetKremasjonEtikettskrivereListe", "Bestilling")
                )
            )
            .ToHtmlString()
            )
        .Width(500)
        .Height(400)
        .Modal(false)
        .Visible(false)
        .Actions(actions =>
            {
            actions.Add().Text("Avbryt");
            actions.Add().Text("Velg").Action("BestillEtikett").Primary(true);
            })
        .Events(ev => ev.Close("onClose").Open("onOpen"))
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n</div>\r\n\r\n<div id=\"TjenesterDialog\">\r\n\r\n    ");
#nullable restore
#line 786 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Dialog()
        .Name("dialogTjenesteregister")
        .Title("Tjenester")
        .Content(
            Html.Kendo().Grid<KipWeb5.Models.TjenesteItem>()
            .Name("grdTjenester")
            .Columns(columns =>
            {
                columns.Select().Width(65);
                columns.Bound(e => e.TjenesteNr).Width(100);
                columns.Bound(e => e.Tittel).Width(150);
                columns.Bound(e => e.Tekst);
                columns.Bound(e => e.PrisPrUMVA).Width(100).Format("{0:n2}").Title("Pris u/mva").HtmlAttributes(new { style = "text-align: right;" }); ;
            })
            .Height(450)
            .Scrollable()
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read
                .Action("GetTjenesteListe", "Grunnregister").Data("AlleAktive")
                )
            )
            //.Events(ev => ev.DataBound("treeViewDataBound").Check("treeViewCheck"))
            .ToHtmlString()
            )
        .Width(1000)
        .Height(600)
        .Modal(false)
        .Visible(false)
        .Actions(actions =>
        {
            actions.Add().Text("Avbryt");
            actions.Add().Text("Velg").Action("onTjenesteActionOK").Primary(true);
        })
        .Events(ev => ev.Close("onClose").Open("onOpen"))
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n</div>\r\n\r\n<div id=\"FakturalinjeDialog\">\r\n    ");
#nullable restore
#line 826 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogFakturalinje")
        .Title("Fakturalinje")
        .Visible(false)
        .Height(500)
        .Width(1200)
        .Modal(true)
        .Draggable()
        //.Events(events => events .Close("closeFinnPerson"))
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"EkspederDialog\">\r\n    ");
#nullable restore
#line 839 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogEkspeder")
        .Title("Ekspeder dokument")
        .Visible(false)
        .Width(800)
        .Modal(true)
        .Draggable()
        //.Events(events => events .Close("closeFinnPerson"))
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n\r\n<div id=\"dialogLoggWindow\">\r\n    ");
#nullable restore
#line 851 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("dialogLogg")
        .Title("Historikk")
        .Width(1000)
        .Height(640)
        .Modal(false)
        .Visible(false)
        .Draggable()
    );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n</div>\r\n\r\n<div id=\"AktiveSokn\">\r\n    ");
#nullable restore
#line 864 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Dialog()
        .Name("dialogGemeinde")
        .Title(Localizer["Sokn"].Value)
        .Content(
            Html.Kendo().TreeView()
                .Name("treeviewSokn")
                .DataTextField("Name")
                .LoadOnDemand(false)
                .HtmlAttributes(new { style = "margin: 0px;" })
                .ExpandAll(true)
                .Checkboxes(checkboxes => checkboxes
                        .Name("checkedvalue")
                        .CheckChildren(true))
                .AutoScroll(false)
                .DataSource(dataSource => dataSource
                    .Read(read => read
                        .Action("SoknTreeView", "Sokn")
                    )
                )
                .Events(ev => ev.DataBound("treeViewDataBound").Check("treeViewCheck"))
                .ToHtmlString()
            )
        .Width(400)
        .Height(600)
        .Modal(false)
        .Visible(false)
        .Actions(actions =>
        {
            actions.Add().Text(Localizer["Avbryt"].Value);
            actions.Add().Text(Localizer["Aktiver"].Value).Action("onSoknActionOK").Primary(true);
        })
        .Events(ev => ev.Close("onClose").Open("onOpen"))
    );

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
</div>

<script id=""liste-template"" type=""text/x-kendo-template"">
    <span class=""k-state-default"" style=""font-weight: #:data.BoldTekst#; color:#:data.BoldTekstColor#;"">#: data.Navn#</span>
</script>

<script id=""grav-template"" type=""text/x-kendo-template"">
    <span class=""k-state-default""> #: data.GravNr# #if(data.Icon != """") { # <img src=""https://www.kirkene.net/img/#:data.Icon#.svg"" width=24 /> # } #</span>
</script>

    ");
#nullable restore
#line 907 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
Write(Html.Kendo().Window()
        .Name("DialogHjelp")
        .Title(Localizer["Hjelp"].Value)
        .Visible(false)
        .Height(800)
        .Width(1200)
        .Modal(true)
        .Draggable()
        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n<script id=\"hjelp\">\r\n\r\n    function showHelp() {\r\n       $.ajax({\r\n            url: \'");
#nullable restore
#line 921 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("DialogHjelp", "Hjelp"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: 'GET'
            }).done(function (result) {
                $('#DialogHjelp').html(result);
                var popup = $('#DialogHjelp').data(""kendoWindow"");
                popup.center().open();
            });
        }

    function hjelpFilter() {
        return {Modul: 12, Skjerm: ""Bestilling""}
        }

</script>


<script id=""Sakspart"" >
          
    function addSakspart() {
        var listBoxF = $(""#kontaktGrid"").data(""kendoGrid"");
        var selectedF = listBoxF.select();
        var selItemF = listBoxF.dataItem(selectedF);
        
        xMG = document.getElementById(""EngrafoDokument_mappeGuid"");

        if (selectedF.length > 0) {
            kontaktGuid = selItemF.KontaktGuid;

            $.ajax({
                url: '");
#nullable restore
#line 950 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("AddFolderPart", "Engrafo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: {mappeGuid: xMG.value, kontaktGuid: selItemF.KontaktGuid, rolle: rolle},
                type: ""POST""
                }).done(function (result) {
                    var grd = $(""#lvParter"").data(""kendoGrid"");
                    grd.dataSource.read();
                });
            };
        }


    function nySakspart(e) {
        rolle = e;

        $.ajax({
            url: ""/Funksjoner/DialogFinnPerson"",
            data: {SearchFrom: 0},
            method: 'GET',
            success: function (result) {
                $('#dialogNySakspart').html(result);
                var popup = $('#dialogNySakspart').data(""kendoWindow"");
                popup.center().open();
            }
        });
    }

</script>

<script>

    


    $(window).on(""resize"", function(){
        $(""#bestillingListe"").data(""kendoGrid"").refresh();
        $(""#dokumentListe"").data(""kendoGrid"").refresh();
        $(""#grdFolkeregister"").data(""kendoGrid"").refresh();
    ");
            WriteLiteral(@"    $(""#grdAvlGraver"").data(""kendoGrid"").refresh();
        $(""#grdGraver"").data(""kendoGrid"").refresh();
        });


     function lagreBestillingSeremonitider() {

        var $this = $('#frmEndreBestilling');

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 998 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("LagreBestillingSeremonitidspunkt", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: $this.serialize(),
            dataType: 'json'
            })
        .done(function (result) {
            if (result.Result == true) {
                var notification = $(""#notification"").data(""kendoNotification"");
                notification.show({title: ""Bestilling"", message: ""Bestillingstider er endret""}, ""success"");

                document.getElementById(""Bestilling_SermDato"").value = document.getElementById(""BestillingEndre_SermDato"").value
                document.getElementById(""Bestilling_SermTid"").value = document.getElementById(""BestillingEndre_SermTid"").value
                document.getElementById(""Bestilling_SermSluttTid"").value = document.getElementById(""BestillingEndre_SermSluttTid"").value

                document.getElementById(""Bestilling_AvlKremert"").value = document.getElementById(""BestillingEndre_AvlKremert"").value
                document.getElementById(""Bestilling_kremDato"").value = document.getElementById(""BestillingEndre_AvlKremert"").value
  ");
            WriteLiteral(@"              document.getElementById(""Bestilling_kremStartTid"").value = document.getElementById(""BestillingEndre_kremStartTid"").value
                document.getElementById(""Bestilling_kremSluttTid"").value = document.getElementById(""BestillingEndre_kremSluttTid"").value

                document.getElementById(""Bestilling.AvlGravlagt"").value = document.getElementById(""BestillingEndre_AvlGravlagt"").value
                document.getElementById(""Bestilling_gravDato"").value = document.getElementById(""BestillingEndre_AvlGravlagt"").value
                document.getElementById(""Bestilling_gravStartTid"").value = document.getElementById(""BestillingEndre_gravStartTid"").value
                document.getElementById(""Bestilling_gravSluttTid"").value = document.getElementById(""BestillingEndre_gravSluttTid"").value


                SendBekreftelseEpost();
                var popup = $('#dialogSeremonitidspunkt').data(""kendoWindow"");
                popup.close();

                }
            })
        .");
            WriteLiteral("fail(function (result) {\r\n            alert(result.ErrorText);\r\n        });\r\n     };\r\n\r\n\r\n    function endreSeremonitidspunkt() {\r\n        $.ajax({\r\n            url: \'");
#nullable restore
#line 1036 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("GetBestillingSeremonitidspunkt", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { bestillingGuid: bestillingGuid },
            type: ""GET""
            })
        .done(function (result) {
            $(""#dialogSeremonitidspunkt"").html(result);
            var popup = $('#dialogSeremonitidspunkt').data(""kendoWindow"");
            popup.center().open();
            })
        }

    function SendBekreftelseEpost() {

        x2 = document.getElementById(""Bestilling_BestillingGuid"");
        bestillingGuid = x2.value;

        if (bestillingGuid != """") {

            $.ajax({
                type: ""POST"",
                url: '");
#nullable restore
#line 1056 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("bekreftBestillingByrå", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { bestillingGuid: bestillingGuid },
                dataType: 'json'
            }).done(function (result) {
                if (result.Result == true) {
                    var notification = $(""#notification"").data(""kendoNotification"");
                    notification.show({title: ""Bekreftelse"", message: ""Bekreftelse til byrå er nå sendt""}, ""success"");
                    BekreftelseByraSendt(true);
                }
                else {
                    var notification = $(""#notification"").data(""kendoNotification"");
                    notification.show({title: ""Bekreftelse"", message: result.ErrorText}, ""error"");                    
                }
            });
        }
        else {
            alert(""Du må velge en bestilling"")
            }
        }


    function BekreftelseByraSendt(status) {
        $(""#Bestilling_sermStedGuid"").data(""kendoDropDownList"").readonly(status);
        $(""#Bestilling_SermDato"").data(""kendoDatePicker"").readonly(");
            WriteLiteral(@"status);
        $(""#Bestilling_SermTid"").data(""kendoComboBox"").readonly(status);
        $(""#Bestilling_SermSluttTid"").data(""kendoComboBox"").readonly(status);

        $(""#Bestilling_kremStedGuid"").data(""kendoDropDownList"").readonly(status);
        $(""#Bestilling_AvlKremert"").data(""kendoDatePicker"").readonly(status);
        $(""#Bestilling_kremStartTid"").data(""kendoTimePicker"").readonly(status);
        $(""#Bestilling_kremSluttTid"").data(""kendoTimePicker"").readonly(status);

        $(""#Bestilling_gravStedGuid"").data(""kendoDropDownList"").readonly(status);
        $(""#Bestilling_AvlGravlagt"").data(""kendoDatePicker"").readonly(status);
        $(""#Bestilling_gravStartTid"").data(""kendoComboBox"").readonly(status);
        $(""#Bestilling_gravSluttTid"").data(""kendoComboBox"").readonly(status);

        var btnEndre = document.getElementById(""idEndreTidspunkt"");
        if (status == true) {
            btnEndre.style.display= ""block"";
        }
        else {
            btnEndre.style.display= """);
            WriteLiteral("none\";\r\n        }\r\n    }\r\n\r\n    function sendEpost() {\r\n        var $this = $(\'#sendEpostForm\');\r\n\r\n         $.ajax({\r\n            type: \"POST\",\r\n            url: \'");
#nullable restore
#line 1107 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("SendBekreftelse", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: $this.serialize(),
            dataType: 'json'
        }).done(function (result) {
            alert(""Fullført"");
        });
    }

</script>

<script id=""dialogbokser"">
    var kalender = ""Seremoni"";

    function showDialogLogg() {

        if (bestillingGuid.length > 0) {
            $.ajax({
                url: ""/Bestilling/DialogKisteHistorikk"",
                method: 'GET',
                success: function (result) {
                    $('#dialogLogg').html(result);

                    var popup = $('#dialogLogg').data(""kendoWindow"");
                    popup.center().open(); 
                    }
                });
            }
        }

    function showDialogLastOppFiler() {
        $.ajax({
            url: ""/Mail/DialogLastOppFiler"",
            method: 'GET',
            success: function (result) {
                $('#dialogLastOppFiler').html(result);
                
                var popup = $('#dialogLastOppFiler').data(""k");
            WriteLiteral(@"endoWindow"");
                popup.center().open();
            }
        });
    }

    function showDialogMail() {
        xBMG = document.getElementById(""Bestilling_MappeGuid"")
        xBBG = document.getElementById(""Bestilling_BestillingGuid"")
        xAT = document.getElementById(""Bestilling_ArkivType"")

        if (xBMG.value == """") {
            $.ajax({
                url: ""/Bestilling/exeBestillingSaksmappe"",
                method: 'GET',
                data: {bestillingGuid: xBBG.value},
                success: function (resultInfo) {
                    if (resultInfo.Result == true ) {
                        mappeGuid = resultInfo.NewGuid;
                        mappeNavn = resultInfo.InfoText;
                        xBMG.value = mappeGuid;
                        var xDoc = document.getElementById(""tabDokumenterId"");
                        xDoc.innerHTML = ""Dokumenter ["" + resultInfo.InfoText + ""]"";

                        xBMG.value = resultInfo.NewGuid;

    ");
            WriteLiteral(@"                    $.ajax({
                            url: ""/Mail/DialogEpost"",
                            method: 'GET',
                            success: function (result) {
                                $('#dialogMail').html(result);
                                xMG = document.getElementById(""Bestilling_MappeGuid"").value;
                                xEMG = document.getElementById(""Mail_mappeGuid"");
                                xD = document.getElementById(""Mail_DefaultvalueSet"");
                                xEMG.value = xMG;
                                xD.value= ""BGdokInn"";
                                var popup = $('#dialogMail').data(""kendoWindow"");
                                popup.center().open();
                            }
                        });
                        
                    }

                }
            });
        }
        else {
            
            $.ajax({
                url: ""/Mail/DialogEpost"",
           ");
            WriteLiteral(@"     method: 'GET',
                success: function (result) {
                    $('#dialogMail').html(result);
                    xMG = document.getElementById(""Bestilling_MappeGuid"").value;
                    xEMG = document.getElementById(""Mail_mappeGuid"");
                    xD = document.getElementById(""Mail_DefaultvalueSet"");
                    xEMG.value = xMG;
                    xD.value= ""BGdokInn"";
                    var popup = $('#dialogMail').data(""kendoWindow"");
                    popup.center().open();
                }
            });

        }

    }

    function showDialogWriter() {
        $.ajax({
            url: ""/Engrafo/DialogEditor"",
            method: 'GET',
            success: function (result) {
                $('#dialogWriter').html(result);
                var popup = $('#dialogWriter').data(""kendoWindow"");
               popup.center().open();
          }
        });
    }

    function showDialogRapporter() {
        $.ajax({
     ");
            WriteLiteral(@"       url: ""/Rapport/DialogRapportListe"",
            method: 'GET',
            success: function (result) {
                $('#dialogRapporter').html(result);
                var popup = $('#dialogRapporter').data(""kendoWindow"");
                popup.center().open();
            }
        });
    }

    function showDialogEtikettskriver() {
        $('#dialogFinnEtikettskriver').data(""kendoDialog"").open();
        }



    function showDialogSkrivbrev() {
        xBMG = document.getElementById(""Bestilling_MappeGuid"")
        xBBG = document.getElementById(""Bestilling_BestillingGuid"")
        xAT = document.getElementById(""Bestilling_ArkivType"")

        if (xBMG.value == """") {
            $.ajax({
                url: ""/Bestilling/exeBestillingSaksmappe"",
                method: 'GET',
                data: {bestillingGuid: xBBG.value},
                success: function (resultInfo) {
                    if (resultInfo.Result == true ) {
                        mappeGuid = res");
            WriteLiteral(@"ultInfo.NewGuid;
                        mappeNavn = resultInfo.InfoText;
                        xBMG.value = mappeGuid;
                        var xDoc = document.getElementById(""tabDokumenterId"");
                        xDoc.innerHTML = ""Dokumenter ["" + resultInfo.InfoText + ""]"";

                        xBMG.value = resultInfo.NewGuid;
                        $.ajax({
                            url: ""/Rapport/DialogSkrivbrevListe"",
                            method: 'GET',
                            success: function (result) {
                                $('#dialogSkrivbrev').html(result);
                                xEMG = document.getElementById(""EngrafoDokument_mappeGuid"");
                                xED = document.getElementById(""EngrafoDokument_DefaultvalueSet"");
                                xEMV = document.getElementById(""EngrafoDokument_MasterVerdier"");
                                xEMN = document.getElementById(""EngrafoDokument_MasterNavn"");

             ");
            WriteLiteral(@"                   xI1 = document.getElementById(""Info"");
                                xI2 = document.getElementById(""Info2"");

                                if (xAT.value == 2) {
                                    xI1.innerHTML = ""DNK360"";
                                    xI2.innerHTML = xBMG.value;
                                    xED.value = ""Gravferd dokument ut"";
                                }
                                else {
                                    xI1.innerHTML = ""Engrafo"";
                                    xI2.innerHTML = mappeNavn + "" - "" + resultInfo.Report;
                                    xED.value = ""BGdokUt"";
                                }

                                xEMG.value = xBMG.value;
                                xEMV.value = xBBG.value;
                                xEMN.value =""Bestilling_GUID""

                                var popup = $('#dialogSkrivbrev').data(""kendoWindow"");
                               popup.");
            WriteLiteral(@"center().open();
                            }
                        });
                    }

                }
            });
        }
        else {
            $.ajax({
                url: ""/Engrafo/GetMappeInfo"",
                method: 'GET',
                data: {mappeGuid: mappeGuid},
                success: function (resultInfo) {
                    $.ajax({
                        url: ""/Rapport/DialogSkrivbrevListe"",
                        method: 'GET',
                        success: function (result) {
                            $('#dialogSkrivbrev').html(result);
                            xEMG = document.getElementById(""EngrafoDokument_mappeGuid"");
                            xED = document.getElementById(""EngrafoDokument_DefaultvalueSet"");
                            xEMV = document.getElementById(""EngrafoDokument_MasterVerdier"");
                            xEMN = document.getElementById(""EngrafoDokument_MasterNavn"");

                            xI1 = do");
            WriteLiteral(@"cument.getElementById(""Info"");
                            xI2 = document.getElementById(""Info2"");

                            if (xAT.value == 2) {
                                xI1.innerHTML = ""DNK360"";
                                xI2.innerHTML = xBMG.value;
                                xED.value = ""Gravferd dokument ut"";
                                }
                            else {
                                xI1.innerHTML = ""Engrafo"";
                                xI2.innerHTML = resultInfo.SaksAar + ""/"" + resultInfo.SaksSekvensNummer + "" - "" + resultInfo.Tittel;
                                xED.value = ""BGdokUt"";
                                }

                            xEMG.value = xBMG.value;
                            xEMV.value = xBBG.value;
                            xEMN.value =""Bestilling_GUID""

                            var popup = $('#dialogSkrivbrev').data(""kendoWindow"");
                            popup.center().open();
                  ");
            WriteLiteral(@"      }
                    });                
                
                }
            });
        }
    }

    function showDialogRedigerbrev(readonly) {
        var lvDocument = $(""#documents"").data(""kendoListView"");
        var selF = lvDocument.select();
        var selIF = lvDocument.dataItem(selF);
        var format = """";
        var tittel = """";

        if (typeof selIF != 'undefined') {
            dokumentObjektGuid = selIF.DokumentObjekt_GUID;
            format = selIF.Format;
            tittel = selIF.fileTittel;
            }

        if (dokumentObjektGuid != """") {

            if (format == "".pdf"" || readonly) {
                $.ajax({
                    url: ""/Engrafo/DialogVisPDF"",
                    method: 'GET',
                    success: function (result) {
                        $('#dialogVisPDF').html(result);

                        if (format == "".pdf"" || format == "".docx"") {
                            var pdfViewer = $(""#pdfViewer"").d");
            WriteLiteral(@"ata(""kendoPDFViewer"");
                            if (!pdfViewer) {
                                pdfViewer = $(""#pdfViewer"").kendoPDFViewer({
                                    pdfjsProcessing: {
                                        file: """"
                                    },
                                    width: ""100%"",
                                    height: ""100%""
                                }).data(""kendoPDFViewer"");
                            }
                            var pdfHandlerUrl = ""/Engrafo/getDocumentViewPDF?dokumentObjectGuid="" + dokumentObjektGuid;

                            // Make the PDFViewer load the designated file.
                            pdfViewer.fromFile(pdfHandlerUrl);

                            var popup = $('#dialogVisPDF').data(""kendoWindow"");
                            popup.center().open();
                            }
                        else if (format == "".msg"" || format == "".jpg"" || format == "".png"") {

        ");
            WriteLiteral("                    $.ajax({\r\n                                url: \'");
#nullable restore
#line 1384 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                                 Write(Url.Action("getDocumentView", "Engrafo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                                data: { dokumentObjectGuid: dokumentObjektGuid },
                                type: ""GET""
                                })
                            .done(function (result) {
                                $(""#dialogMelding"").html(result);
                                var popup = $('#dialogMelding').data(""kendoWindow"");
                                popup.center().open();
                                });
                            
                        }
                    }
                });
                }
            else {
                $.ajax({
                    url: ""/Engrafo/GetDokumentfil"",
                    data: { dokumentObjectGuid: dokumentObjektGuid, skrivebeskyttet: readonly },
                    method: 'GET'
                    })
                .done(function (result) {
                    if (result.Result == true) {
                        if (typeof TXTextControl !== 'undefined') TXTextControl.remove");
            WriteLiteral("FromDom();\r\n\r\n                        tmpDoc = result.TempDocGuid;\r\n\r\n                        $.ajax({\r\n                            type: \"GET\",\r\n                            url: \'");
#nullable restore
#line 1412 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                             Write(Url.Action("DialogEditor", "Engrafo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                            })
                        .done(function (resultDlg) {
                             $('#dialogWriter').html(resultDlg);

                             $.ajax({
                                url: ""/Rapport/LoadDocument"",
                                method: 'GET'
                                })
                             .done(function (result) {
                                if (format == "".docx"") {
                                    TXTextControl.loadDocument(TXTextControl.StreamType.WordprocessingML, result);
                                    }
                                else {
                                    TXTextControl.loadDocument(TXTextControl.StreamType.MSWord, result);
                                    }

                                var popup = $('#dialogWriter').data(""kendoWindow"");
                                popup.center().open(); 
                                });
                               
             ");
            WriteLiteral(@"               });
                        }
                    });                
                }
            }
        }

    function showDialogEkspeder() {
        $.ajax({
            url: ""/Engrafo/DialogEkspeder"",
            method: 'GET',
            success: function (result) {
                $('#dialogEkspeder').html(result);
                xDN = document.getElementById(""idDokumentNumber"");
                xDN.value = registreringGuid;
                var popup = $('#dialogEkspeder').data(""kendoWindow"");
                popup.center().open();
            }
        });
    }

    function showDialogFinnPerson(e) {
        Kontakt = e;

        $.ajax({
            url: ""/Funksjoner/DialogFinnPerson"",
            method: 'GET',
            success: function (result) {
                $('#dialogFinnPerson').html(result);
                document.getElementById(""SokeInfo_SokIFolkeregister"").checked = true;

                if (e == ""Avlidne"") {
                    ");
            WriteLiteral(@"document.getElementById(""SokeInfo_Soketype"").value = ""9"";
                    document.getElementById(""HentKunSisteAdresse"").checked = true;
                    document.getElementById(""SokeInfo_SokIKontakter"").checked = false;
                }
                var popup = $('#dialogFinnPerson').data(""kendoWindow"");
                popup.center().open();
            }
        });
    }

    function showDialogFinnGraver() {
        var grdGraver = $(""#grdGraver"").data(""kendoGrid"");
        grdGraver.dataSource.read();
        $('#dialogFinnGraver').data(""kendoDialog"").open();
    }

    function showDialogFakturalinje() {
        var grdTjenester = $(""#grdTjenester"").data(""kendoGrid"");
        grdTjenester.dataSource.read();
        $('#dialogTjenesteregister').data(""kendoDialog"").open();
    }

    function showEndreFakturalinje(e) {
        var grdFaktLinje = $(""#bestillingFakturalinjer"").data(""kendoGrid"");
        var selectedF = grdFaktLinje.select();
        var selItemF = grdFak");
            WriteLiteral(@"tLinje.dataItem(selectedF);
        var bestillingFaktInnholdGuid = """";

        if (selectedF.length > 0) {
            bestillingFaktInnholdGuid = selItemF.BestillingFaktInnholdGuid;

            $.ajax({
                url: ""/Bestilling/DialogFakturalinje"",
                method: 'GET',
                success: function (result) {
                    $(""#dialogFakturalinje"").html(result);
                    $.ajax({
                        url: '");
#nullable restore
#line 1502 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                         Write(Url.Action("GetBestillingFakturainnhold", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                        data: { bestillingFaktInnholdGuid: bestillingFaktInnholdGuid},
                        type: ""GET""
                        }).done(function (result) {
                            $(""#dialogFakturalinje"").html(result);
                            var popup = $('#dialogFakturalinje').data(""kendoWindow"");
                            popup.center().open();
                        });
                }
            });
        }
    }
    
    function showGemeindeDialog() {
        $('#dialogGemeinde').data(""kendoDialog"").open();
    }


    function showDialogRessurser() {
        xKSG = document.getElementById(""Bestilling_KalenderSeremoniGuid"").value;
        if (xKSG != """") {
            funksjon = ""Liturg"";
            kalender = ""Seremoni"";
            $.ajax({
                url: ""/Gudstjeneste/DialogRessurser"",
                method: 'GET',
                success: function (result) {
                    $('#DialogRessurser').html(result);
           ");
            WriteLiteral(@"         var popup = $('#DialogRessurser').data(""kendoWindow"");
                    popup.center().open();
                    }
                });
            }
        else {
            alert(""Du må først velge seremonisted, tidspunkt og lagre"");
            }
        }

    function showDialogGravleggingRessurser() {
        funksjon = ""Liturg"";
        kalender = ""Gravlegging"";
        $.ajax({
            url: ""/Gudstjeneste/DialogRessurser"",
            method: 'GET',
            success: function (result) {
                $('#DialogRessurser').html(result);
                var popup = $('#DialogRessurser').data(""kendoWindow"");
                popup.center().open();
            }
        });
    }

    function showDialogSendSMS(seremoni) {
        var bestillingGuid = document.getElementById(""Bestilling_BestillingGuid"").value;

        $.ajax({
            url: '");
#nullable restore
#line 1558 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("exeBestillingSMS", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { bestillingGuid: bestillingGuid, seremoni: seremoni },
            type: ""POST""
        }).done(function (result) {

            $.ajax({
                url: ""/Home/DialogSendSMS"",
                method: 'GET',
                success: function (result) {
                    $('#dialogSendSMS').html(result);

                    x = document.getElementById(""grpKonf"");
                    x.style.display = ""none"";

                    $(""#SMSmelding_Foreldre"").kendoCheckBox({label: ""Ansatte""});
                    $(""#SMSmelding_Foreldre"").prop(""checked"", true);

                    var popup = $('#dialogSendSMS').data(""kendoWindow"");
                    popup.center().open();
                }
            });
        });
    }

</script>

<script id=""submit"">

    function eskpederDokument() {
        var lvRekke = $(""#Ekspederingsmate"").data(""kendoDropDownList"");
        var selectedR = lvRekke.select();
        var dipsChanel = 0;

        if (selecte");
            WriteLiteral("dR != -1) {\r\n            var selItemR = lvRekke.dataItem(selectedR);\r\n            dipsChanel = selItemR.RecNo;\r\n        }\r\n\r\n        $.ajax({\r\n                type: \"POST\",\r\n                url: \'");
#nullable restore
#line 1598 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("EkspederDokument", "Engrafo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: {dokumentNummer: registreringGuid, DispatchChannel: dipsChanel }
            }).done(function (result) {
                if (result.Result == true) {
                    var notification = $(""#notification"").data(""kendoNotification"");
                    notification.show({title: ""DOKUMENT"", message: ""Dokumentet er ekspedert""}, ""success"");                    
                }
                else {
                    var notification = $(""#notification"").data(""kendoNotification"");
                    notification.show({title: ""DOKUMENT"", message: result.ErrorText}, ""error"");                    
                }
            });
    }

    function LagreDocument(sjekkInn) {
        TXTextControl.saveDocument(TXTextControl.StreamType.WordprocessingML, function (e) {
            xD = document.getElementById(""dokumentGuid"");
            var dokumentObjektGuid = xD.value;
            xRN = document.getElementById(""recNo"");
            var recNo = xRN.value;
          ");
            WriteLiteral("  xT = document.getElementById(\"tittel\");\r\n            var tittel = xT.value;\r\n\r\n            var base64string = e.data;\r\n\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: \'");
#nullable restore
#line 1625 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("UpdateDocument", "Engrafo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: {dokumentObjectGuid: dokumentObjektGuid, base64Dokument: base64string, recNo: recNo, tittel: tittel, sjekkInn: sjekkInn }
            }).done(function (result) {
                if (result.Result == true) {
                    if (sjekkInn == true) {
                        var notification = $(""#notification"").data(""kendoNotification"");
                        notification.show({title: ""DOKUMENT"", message: ""Dokumentet er sjekket inn""}, ""success"");
                        }
                    else  {
                        var notification = $(""#notification"").data(""kendoNotification"");
                        notification.show({title: ""DOKUMENT"", message: ""Dokumentet er endret""}, ""success"");
                        }
                    }
                });
            });
        }

    $(document).on('submit', '#finnperson', function (e) {
        if (canSearching == true) {
            canSearching = false;

            e.preventDefault();
            var ");
            WriteLiteral("$this = $(this);\r\n\r\n            $.ajax({\r\n                method: \'GET\',\r\n                url: \'");
#nullable restore
#line 1651 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("HentPersonFraMedlemsregister", "Funksjoner"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: $this.serialize(),
                dataType: 'json'
            }).done(function (result) {
                canSearching = true;
                if (result > 0) {
                    resultatId = result;
                    var listBoxF = $(""#kontaktGrid"").data(""kendoGrid"");
                    listBoxF.dataSource.read();
                }
            }).always(function () {
                canSearching = true;
                });
            }
        });

    function lagreKontakt(e) {
        var $this = $('#kontaktForm');

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 1672 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("LagreKontakt", "Kontakt"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: $this.serialize(),
            dataType: 'json'
        }).done(function (result) {
            if (result.Result == true) {
                var notification = $(""#notification"").data(""kendoNotification"");
                notification.show({title: ""Kontakt"", message: ""Kontaktinformasjon er oppdatert""}, ""success"");

                kF = document.getElementById(""Kontakt_Fornavn"").value;
                kM = document.getElementById(""Kontakt_Mellomnavn"").value;
                kE = document.getElementById(""Kontakt_Etternavn"").value;
                kTLF = document.getElementById(""Kontakt_Telefon"").value;
                kMOB = document.getElementById(""Kontakt_Mobil"").value;

                kNavn = """";
                if (kM == """") {
                    kNavn = kF + "" "" + kE;
                }
                else {
                    kNavn = kF + "" "" + kM + "" "" + kE;
                }

                if (Kontakt == ""DSG"") {
                    xB = document.getElemen");
            WriteLiteral(@"tById(""Bestilling_agFulltNavn"");
                    xTLF = document.getElementById(""Bestilling_agTelefon"");
                    xMOB = document.getElementById(""Bestilling_agMobil"");
                    xB.value = kNavn;
                    xTLF.value = kTLF;
                    xMOB.value = kMOB;
                }

                var popup = $('#DialogKontakt').data(""kendoWindow"");
                popup.close();

            }
        }).fail(function (result) {
            alert('an Error has occurred, please try again');
        });
     }

    $(function () {
        $(""body"").on('mousedown keydown', function () {
            if (dataTekst == """") {
                dataTekst = $('#Bestilling').serialize();
            }
        });
    });

    $(function () {
        $(""body"").on('click keyup', function () {
            xBL = document.getElementById(""btnLagre"");

            dataNew = $('#Bestilling').serialize();

            if (dataTekst == """" || dataNew != dataTekst) {");
            WriteLiteral(@"
                xBL.disabled = false;
            }
            else {
                xBL.disabled = true;
            }
        });
    });

    function lagreBestilling() {
        var grdBestilling = $(""#bestillingListe"").data(""kendoGrid"");
        xKG = document.getElementById(""Bestilling_Kirkegard"");
        var lvKirkegard = $(""#Bestilling_KirkegardGuid"").data(""kendoDropDownList"");
        var selected = lvKirkegard.select();
        kirkegardGuid = """";

        if (selected != -1) {
            var selItemF = lvKirkegard.dataItem(selected);
            if (selItemF.KirkegardNavn != ""Velg gravplass fra listen"") {
                xKG.value = selItemF.KirkegardNavn;
            }
            else {
                xKG.value = """";
            }
        }

        var $this = $('#Bestilling');

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 1756 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("LagreBestilling", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: $this.serialize(),
            dataType: 'json'
        }).done(function (result) {
            if (result.Result == true) {
                var notification = $(""#notification"").data(""kendoNotification"");
                notification.show({title: ""Bestilling"", message: ""Bestillingen er lagret""}, ""success"");

                if (result.NewRecord == true) {
                    x = document.getElementById(""Bestilling_BestillingGuid"");
                    x.value = result.NewGuid;
                    bestillingGuid = result.NewGuid;
                }

                if (result.NewRecord == true) {
                    btnSD = document.getElementById(""arkiverEpost"");
                    btnSD.disabled = false;

                    btnSB = document.getElementById(""btnSendBekr"");
                    btnSB.disabled = false;

                    btnBS = document.getElementById(""btnBestSeremoni"");
                    btnBS.disabled = false;

                    btnA = docum");
            WriteLiteral(@"ent.getElementById(""btnArkiver"");
                    btnA.disabled = false;

                    btnUS = document.getElementById(""btnUtsendingS"");
                    btnUS.disabled = false;

                    btnUG = document.getElementById(""btnUtsendingG"");
                    btnUG.disabled = false;

                    btnSkB = document.getElementById(""btnSkrivBrev"");
                    btnSkB.disabled = false;

                    var grdBestillinger = $(""#bestillingListe"").data(""kendoGrid"");
                    grdBestillinger.dataSource.read();
                    }
                else {
                    
                    var selectedF = grdBestilling.select();
                    var selItemF = grdBestilling.dataItem(selectedF);
                    var Fornavn = document.getElementById(""Bestilling_AvlFornavn"").value;
                    var Etternavn = document.getElementById(""Bestilling_AvlEtternavn"").value;
                    selItemF.set(""FulltNavn"", Fornavn + "" "" +");
            WriteLiteral(@" Etternavn);
                    grdBestilling.select(selectedF);
                    }
                if (result.Refresh == true) {
                    onBestillingChange(null, bestillingGuid);
                    }

                $(""#Bestilling_FakturaKontaktGuid"").data(""kendoDropDownList"").dataSource.read();
                $(""#Bestilling_FakturaKundeGuid"").data(""kendoDropDownList"").dataSource.read();
            }
        }).fail(function (result) {
            alert(result.ErrorText);
        });
     };


   function leggTilTjeneste() {
        x2 = document.getElementById(""Bestilling_BestillingGuid"");
        bestillingGuid = x2.value;
        tjenesteNr = document.getElementById(""varenummer"").value;
        enhet = document.getElementById(""vareenhet"").value;
        tekst = document.getElementById(""varetekst"").value;
        var prisElement = $(""#pris"").data(""kendoNumericTextBox"")
        pris = prisElement.value();

        $.ajax({
            type: ""POST"",
            ");
            WriteLiteral("url: \'");
#nullable restore
#line 1828 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("leggTilFakturalinje", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { bestillingGuid: bestillingGuid, tjeneste: tjenesteNr, enhet: enhet, tekst: tekst, pris: pris },
            dataType: 'json'
        }).done(function (result) {
            var grdFaktLinje = $(""#bestillingFakturalinjer"").data(""kendoGrid"");
            grdFaktLinje.dataSource.read();
        });

    }

    $(document).on('submit', '#formFakturaLinje', function (e) {
        e.preventDefault();

        var $this = $(this);
        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 1844 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("LagreBestillingFakturainnhold", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: $this.serialize(),
            dataType: 'json'
        }).done(function (result) {
            if (result == true) {
                var grdFaktLinje = $(""#bestillingFakturalinjer"").data(""kendoGrid"");
                grdFaktLinje.dataSource.read();
                var popup = $('#dialogFakturalinje').data(""kendoWindow"");
                popup.close();

                var notification = $(""#notification"").data(""kendoNotification"");
                notification.show({title: ""Bestilling"", message: ""Fakturalinjen er lagret""}, ""success"");

            }
        }).fail(function (result) {
            alert('an Error has occurred, please try again');
        });
     });

    $(document).on('submit', '#formGudstjenesteRessurser', function (e) {
        e.preventDefault();
        if (kalender == ""Seremoni"") {
            x = document.getElementById(""Bestilling_KalenderSeremoniGuid"");
        }
        else {
            x = document.getElementById(""Bestilling_Kalender");
            WriteLiteral(@"GravleggingGuid"");
        }

        gudstjenesteKalenderGuid = x.value;

        var grid = $(""#ressurserMine"").data(""kendoListBox"");
        var ressursGuid = """";
        var ds = grid.dataSource;
        var len = ds._data.length;
        if (len > 0) {
            var i;
            for (i = 0; i < len; i++) {
                ressursGuid = ressursGuid + ds._data[i].RessursGuid + ':' + ds._data[i].Stilling + ';';
                }
            }

        $.ajax({
            url: ""/Gudstjeneste/OppdatereRessurser"",
            data: { gudstjenesteKalenderGuid: gudstjenesteKalenderGuid, ressursGuid: ressursGuid},
            type: ""GET""
        }).done(function (result) {
            if (result == true) {
                var notification = $(""#notification"").data(""kendoNotification"");
                notification.show({title: ""Bestilling"", message: ""Ressursene er lagret""}, ""success"");

                if (kalender == ""Seremoni"") {
                    var gridGL = $(""#SeremoniRessur");
            WriteLiteral(@"ser"").data(""kendoGrid"");
                }
                else {
                    var gridGL = $(""#GravleggingRessurser"").data(""kendoGrid"");
                }

                gridGL.dataSource.read();
            }
        }).always(function (result) {
            var popup = $('#DialogRessurser').data(""kendoWindow"");
            popup.center().close();
        });
    });

</script>

<script id=""filter"">
    var registreringGuid = """";
    var canSearching = true;
    var resultatId = 0;
    var ressursType = -1;
    var funksjon = """";
    var skjerm = ""Bestilling"";
    var kategori = """";
    var vis = ""Alle"";
    var stringfilter = """";


    function filterSokefelt(e) {
        x = document.getElementById(""soekeFilter"");
        grid = $(""#bestillingListe"").data(""kendoGrid"");

        if (e.checked) {
            x.style.display = ""block"";
            xG = document.getElementById(""bestillingListe"");
            xG.style = ""height: calc(100vh - 543px);""
            }
");
            WriteLiteral(@"        else {
            x.style.display = ""none"";
            xG = document.getElementById(""bestillingListe"");
            xG.style = ""height: calc(100vh - 370px);""
            clearBestilling();
            }
        grid.refresh();
    }

    function filterAktuelle() {
        stringfilter = """";
        x = document.getElementById(""ListeTittel"").innerHTML;
        i = x.indexOf(""-"");
        if (i == -1) {
            x = x + "" - Aktuelle"";
        }
        else {
        x = x.substring(0, i) + "" - Aktuelle"";
        }
        document.getElementById(""ListeTittel"").innerHTML = x;
        vis = ""Aktuelle"";
        var grid = $(""#bestillingListe"").data(""kendoGrid"");
        grid.dataSource.read();
    }

    function filterIkkeArkiverte() {
        stringfilter = ""Arkivert=0"";
        vis =""IkkeArkiverte"";
        x = document.getElementById(""ListeTittel"").innerHTML;
        i = x.indexOf(""-"");
        if (i == -1) {
            x = x + "" - ikke arkiverte"";
        }
   ");
            WriteLiteral(@"     else {
        x = x.substring(0, i) + "" - ikke arkiverte"";
        }
        document.getElementById(""ListeTittel"").innerHTML = x;
        var grid = $(""#bestillingListe"").data(""kendoGrid"");
        grid.dataSource.read();
    }

    function filterKanArkiveres(){
        stringfilter = ""GravlagtGuid IS NULL AND GravGUID IS NOT NULL AND AvlGravlagt<GetDate()"";
        vis = ""KanArkiveres"";
        x = document.getElementById(""ListeTittel"").innerHTML;
        i = x.indexOf(""-"");
        if (i == -1) {
            x = x + "" - kan arkiveres"";
        }
        else {
            x = x.substring(0, i) + "" - kan arkiveres"";
        }
        document.getElementById(""ListeTittel"").innerHTML = x;
        var grid = $(""#bestillingListe"").data(""kendoGrid"");
        grid.dataSource.read();
    }

    function filterIAar() {
        stringfilter = ""Year(AvlGravlagt)=Year(GetDate())""
        vis = ""IAar"";
        x = document.getElementById(""ListeTittel"").innerHTML;
        i = x.indexOf");
            WriteLiteral(@"(""-"");
        if (i == -1) {
            x = x + "" - i år"";
        }
        else {
        x = x.substring(0, i) + "" - i år"";
        }
        document.getElementById(""ListeTittel"").innerHTML = x;
        var grid = $(""#bestillingListe"").data(""kendoGrid"");
        grid.dataSource.read();
    }

    function filterAlle() {
        stringfilter = ""Year(AvlGravlagt)>=1999"";
        vis = ""Alle"";
        x = document.getElementById(""ListeTittel"").innerHTML;
        i = x.indexOf(""-"");
        if (i == -1) {
            x = x + "" - Alle"";
        }
        else {
        x = x.substring(0, i) + "" - Alle"";
        }
        document.getElementById(""ListeTittel"").innerHTML = x;
        var grid = $(""#bestillingListe"").data(""kendoGrid"");
        grid.dataSource.read();
    }

    function skjermFilter() {
        return { skjerm: skjerm, kategor: kategori }
    }

    function filterModul(e) {
        return {
            progModul: 12
        }
    }

    function filterAvlK");
            WriteLiteral(@"ontakt() {
        var avlKontaktGuid = document.getElementById(""Bestilling_AvlKontaktGuid"").value;

        return { kontaktGuid: avlKontaktGuid }
    }


    function filterGravRekke() {
        var rekkeGuid = document.getElementById(""Bestilling_rekkeGuid"").value;

        return { strFilter: ""Rekke_Guid='"" + rekkeGuid + ""'"", sortering: """" }
    }


    function filterMappe() {
        x2 = document.getElementById(""Bestilling_MappeGuid"")
        mappeGuid = x2.value;

        return { mappeGuid: mappeGuid }
    }



    function filterSok(e) {
        return {
            resultatId: resultatId, visKunSiste: false
        }
    }

    function filterPoliti() {
        return { forbindelse: ""Politi"" }
    }


    function filterBestilling() {

        return { filterBestilling: stringfilter }
    }

    function visBestillinger() {
        fv = document.getElementById(""BNavn"").value;
        ds = $(""#bestillingListe"").data(""kendoGrid"").dataSource;
        if (fv.len");
            WriteLiteral(@"gth > 3) {
            finnBestilling();
            }
        else {
            ds.filter({ logic: ""or"", filters: [{ field: ""FulltNavn"", operator: ""contains"", value: fv }] });
            }
        }

    function clearKunde() {
        document.getElementById(""BNavn"").value = """";
        ds = $(""#bestillingListe"").data(""kendoGrid"").dataSource;
        ds.filter({});
        }

    function finnBestilling() {
        stringfilter = """";
       

        var datoFra = document.getElementById(""PeriodeFra"").value;
        var datoTil = document.getElementById(""PeriodeTil"").value;
        var Navn = document.getElementById(""BNavn"").value;
        var Nr = document.getElementById(""BNr"").value;

        if (vis == ""Aktuelle"") {
            stringfilter =""AvlGravlagt>=GetDate()""
        }
        else if (vis == ""IkkeArkiverte"") {
            stringfilter = ""Arkivert=0""
        }
        else if (vis == ""IAar"") {
            stringfilter = ""Year(AvlGravlagt)=Year(GetDate())""
        }");
            WriteLiteral(@"
        else if (vis == ""Alle"") {
            stringfilter = ""(Year(AvlGravlagt)>=1999 OR AvlGravlagt IS NULL) "";
        }

        if (datoFra != """" && datoTil != """") {
            datoFra = datoFra.substring(6,10) + ""-"" + datoFra.substring(3,5) + ""-"" + datoFra.substring(0,2) + ""T00:00:00"";
            datoTil = datoTil.substring(6,10) + ""-"" + datoTil.substring(3,5) + ""-"" + datoTil.substring(0,2) + ""T00:00:00"";
            stringfilter = "" AvlGravlagt>='"" + datoFra + ""' AND AvlGravlagt<='"" + datoTil + ""'"";
        }
        else if (datoFra != """") {
            datoFra = datoFra.substring(6,10) + ""-"" + datoFra.substring(3,5) + ""-"" + datoFra.substring(0,2) + ""T00:00:00"";
            stringfilter = "" AvlGravlagt='"" + datoFra + ""'"";
        }
        else if (datoTil != """") {
            datoTil = datoTil.substring(6,10) + ""-"" + datoTil.substring(3,5) + ""-"" + datoTil.substring(0,2) + ""T00:00:00"";
            stringfilter = "" AvlGravlagt<='"" + datoTil + ""'"";
        }

        if (Nr != """") ");
            WriteLiteral(@" {
            if (stringfilter != """") { stringfilter += "" AND "";}
            stringfilter += "" BestillingNr = "" + Nr + "" "";
        }

        if (Navn != """") {
            if (stringfilter != """") { stringfilter += "" AND "";}
            if (Navn.indexOf("","") >= 0) {
                var navnArr = Navn.split(',')
                if (navnArr[0] != """") {
                    stringfilter += "" (AvlFornavn like '"" + navnArr[0] + ""%')"";
                    }
                if (navnArr[1] != """") {
                    if (stringfilter != """") { stringfilter += "" AND ""; }
                    stringfilter += "" (AvlEtternavn like '"" + navnArr[1] + ""%')"";
                    } 
                }
            else {
                stringfilter += "" (FulltNavn like '%"" + Navn + ""%')"";
                }
            }        

        var grid = $(""#bestillingListe"").data(""kendoGrid"");
        ds = $(""#bestillingListe"").data(""kendoGrid"").dataSource;
        ds.filter({});
        grid.clearSelection(");
            WriteLiteral(@");
        grid.dataSource.read();
    }

    function clearBestilling() {
        stringfilter = """";
        
        document.getElementById(""PeriodeFra"").value = """";
        document.getElementById(""PeriodeTil"").value = """";
        document.getElementById(""BNavn"").value = """";
        document.getElementById(""BNr"").value = """";

        if (vis == ""Aktuelle"") {
            stringfilter =""AvlGravlagt>=GetDate()""
        }
        else if (vis == ""IkkeArkiverte"") {
            stringfilter = ""Arkivert=0""
        }
        else if (vis == ""IAar"") {
            stringfilter = ""Year(AvlGravlagt)=Year(GetDate())""
        }
        else if (vis == ""Alle"") {
            stringfilter = ""Year(AvlGravlagt)>=1999"";
        }

        var grid = $(""#bestillingListe"").data(""kendoGrid"");
        grid.dataSource.read();
    }

    function filterKirke(e) {
        var soknId = """";

        x2 = document.getElementById(""Bestilling_SermSokn"");
        soknId = x2.value;

        return { sok");
            WriteLiteral(@"nNr: soknId, typeRom: ""Gravferd"" }
    }

    function filterRegistrering() {
        return { registreringGuid: registreringGuid }
    }

    function AlleAktive(e) {
        return { filterTekst: ""Aktiv<>0 AND (KontoNr IS NULL OR KontoNr IN (SELECT KontoNr FROM vKIPBank WHERE FakturaNrSerie = (SELECT AktivFakturaNrSerie FROM BRUKER WHERE Brukerid=SUSER_SNAME())))"" }
    }

    function filterCaseId() {
        x2 = document.getElementById(""Bestilling_MappeGuid"")
        caseId = x2.value;

        return { mappeGuid: caseId, filterTekst: """" }
    }





    function filterReservering() {
        var lvGravNr = $(""#Bestilling_GravGuid"").data(""kendoDropDownList"");
        rekkeGuid = document.getElementById(""Bestilling_rekkeGuid"").value;

        var selectedG = lvGravNr.select();
        gravNr = 0;

        if (selectedG != -1) {
            var selItemG = lvGravNr.dataItem(selectedG);
            gravNr = selItemG.GravNr;
        }

        return { rekkeGuid: rekkeGuid, g");
            WriteLiteral(@"ravNr: gravNr }
    }

    function filterUrneType() {
        var lvRekke = $(""#Bestilling_rekkeGuidNy"").data(""kendoDropDownList"");
        var selectedR = lvRekke.select();
        urneType = 8;

        if (selectedR != -1) {
            var selItemR = lvRekke.dataItem(selectedR);
            erUrneRekke = selItemR.UrneRekke;
            if (erUrneRekke == 1) {
                urneType = 4;
            }
        }

        return { urneType: urneType }
    }



    function filterKalenderRessurs() {
        if (kalender == ""Seremoni"") {
            x = document.getElementById(""Bestilling_KalenderSeremoniGuid"")
        }
        else {
            x = document.getElementById(""Bestilling_KalenderGravleggingGuid"")
        }
        return { kalenderGuid: x.value }
    }



    function filterDokumentNumber() {
        return {registreringGuid: registreringGuid}
    }
</script>

<script id=""funksjoner"">
    var Kontakt = """";
    var bestillingGuid = """";
    var refresh ");
            WriteLiteral(@"= false;

    function testPNr() {
        var x = document.getElementById(""Bestilling_AvlPersNr"");
        var xFN = document.getElementById(""Bestilling_AvlFornavn"");
        var xFD = document.getElementById(""Bestilling_AvlFodd"");
        if (testPersNr(x.value) == -1) {
            x.style.color = ""red"";
        }
        else {
            x.style.color = ""black"";
            xFD.value = personNr2Date(x.value);

            if (x.value.length == 11 && xFN.value == """") {
                $.ajax({
                    url: '");
#nullable restore
#line 2273 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                     Write(Url.Action("BestillingEksisterer", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: { PersonNr: x.value },
                    type: ""GET""
                }).done(function (result) {
                    if (result.Result == true) {
                        alert(""Det eksisterer en bestilling med dette personnnummeret\nBestilling nr: "" + result.NewId);
                    }
                    else {

                        $.ajax({
                            url: '");
#nullable restore
#line 2283 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                             Write(Url.Action("FinnKontaktInfo", "Kontakt"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                            data: { personNr: x.value },
                            type: ""GET""
                        }).done(function (result) {
                            if (result.KontaktGuid != """") {
                                xKG = document.getElementById(""Bestilling_AvlKontaktGuid"");
                                xKAF = document.getElementById(""Bestilling_AvlFornavn"");
                                xKAM = document.getElementById(""Bestilling_AvlMellomnavn"");
                                xKAE = document.getElementById(""Bestilling_AvlEtternavn"");
                                xKA = document.getElementById(""Bestilling_AvlAdresse"");
                                xKP = document.getElementById(""Bestilling_AvlPostNr"");
                                
                                xKG.value = result.KontaktGuid;
                                xKAF.value = result.Fornavn;
                                xKAM.value = result.Mellomnavn;
                                xKAE");
            WriteLiteral(@".value = result.Etternavn;
                                xKA.value = result.Adresse;
                                xKP.value = result.PostNr;
                                findPoststed()

                                $(""#grdAvlGraver"").data(""kendoGrid"").dataSource.read();
                            }
                        });

                    }
                });
            }

        }
    }

    $(document).bind('keydown', function(e) {
        if(e.ctrlKey && (e.which == 83)) {
            e.preventDefault();
            lagreBestilling();
            }
    });

    function brukGraven() {
        var listBoxF = $(""#grdGraver"").data(""kendoGrid"");
        var selectedF = listBoxF.select();
        var selItemF = listBoxF.dataItem(selectedF);

        if (selectedF.length > 0) {
            gravGuid = selItemF.Grav_GUID;
            $(""#Bestilling_GravGuid"").data(""kendoDropDownList"").value(gravGuid);
            }
        }

    function brukAvlGraven() {
");
            WriteLiteral(@"        var listBoxF = $(""#grdAvlGraver"").data(""kendoGrid"");
        var selectedF = listBoxF.select();
        var selItemF = listBoxF.dataItem(selectedF);

        if (selectedF.length > 0) {
            gravGuid = selItemF.GravGuid;
            $(""#Bestilling_GravGuid"").data(""kendoDropDownList"").value(gravGuid);
            }
        }
        
    function toggleRibbonElement(group)  {
        var ribbonGroup = $(""#"" + group);
        ribbonGroup.css(""display"", ""none"");
        }

    function showDocument() {
        var lvDocument = $(""#documents"").data(""kendoListView"");
        var selF = lvDocument.select();
        var selIF = lvDocument.dataItem(selF);
        var dokumentObjektGuid = """";

        if (typeof selIF != 'undefined') {
            dokumentObjektGuid = selIF.DokumentObjekt_GUID;
        }

        if (dokumentObjektGuid != """") {
            $.ajax({
                url: ""/Engrafo/DialogVisPDF"",
                method: 'GET',
                success: function ");
            WriteLiteral(@"(result) {
                    $('#dialogVisPDF').html(result);
                    var popup = $('#dialogVisPDF').data(""kendoWindow"");
                    popup.center().open();

                    var pdfViewer = $(""#pdfViewer"").data(""kendoPDFViewer"");
                    if (!pdfViewer) {
                        pdfViewer = $(""#pdfViewer"").kendoPDFViewer({
                            pdfjsProcessing: {
                                file: """"
                            },
                            width: ""100%"",
                            height: ""100%""
                        }).data(""kendoPDFViewer"");
                    }
                    var pdfHandlerUrl = ""/Engrafo/getDocumentViewPDF?dokumentObjectGuid="" + dokumentObjektGuid;

                    // Make the PDFViewer load the designated file.
                    pdfViewer.fromFile(pdfHandlerUrl);

                }
            });
        }
    }

    
    function showDialogGravseddel() {
        var grdGravlagte ");
            WriteLiteral(@"= $(""#bestillingListe"").data(""kendoGrid"");
        var selectedF = grdGravlagte.select();
        var selItemF = grdGravlagte.dataItem(selectedF);
        var BestillingGuid = """";

        if (selectedF.length > 0) {
            BestillingGuid = selItemF.BestillingGuid;

            $.ajax({
                url: '");
#nullable restore
#line 2398 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("DialogGravseddel", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { BestillingGuid: BestillingGuid },
                type: ""GET""
                })
            .done(function (result) {
                $(""#dialogGravseddel"").html(result);
                var popup = $('#dialogGravseddel').data(""kendoWindow"");
                popup.center().open();
                });
            }
        }


    function produserDokument(e) {
        var RapId = e;
        var base64string = """";
        var parameter = """";
        var xBG = document.getElementById(""Bestilling_BestillingGuid"")

        parameter = ""Bestilling_GUID:"" + xBG.value;

        if (typeof TXTextControl !== 'undefined')
            TXTextControl.removeFromDom();

        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 2424 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("DialogEditor", "Engrafo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
        }).done(function (result) {
            $('#dialogWriter').html(result);
            var popup = $('#dialogWriter').data(""kendoWindow"");
            popup.center().open();

            $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 2432 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("getWordDoc", "Rapport"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: {rapId: RapId, parameter: parameter}
            }).done(function (result) {
                if (result.ErrorCode > 0) {
                    alert(result.ErrorTekst);
                }
                else {
                    $.ajax({
                    url: ""/Rapport/LoadDocument"",
                    method: 'GET',
                    success: function (result) {
                        TXTextControl.loadDocument(TXTextControl.StreamType.WordprocessingML, result);
                        }
                    });
                }
            });

        });
        
    }

      function setRessursType(f, tittel, type) {
            funksjon = f;
            ressursType = type,

            x = document.getElementById(""RessursType"")

");
#nullable restore
#line 2459 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             if (Startup.StandardSprak != "de-DE")
            {
                

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        tittel = f;\r\n                ");
#nullable restore
#line 2463 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                       
            }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
            x.innerHTML = tittel;
            var liste = $(""#ressurserAlle"").data(""kendoListBox"");

            if (typeof liste != 'undefined') {
                liste.dataSource.read();
            }
        }

    function filterRessurs(e) {
        return { ressursType: ressursType, soknId: """", funksjon: funksjon}
        }

    function kopierKontakt() {
        xA = document.getElementById(""Bestilling_AnsGFerdKontaktGuid"");
        xAP = document.getElementById(""Bestilling_agPersonNr"");
        xAN = document.getElementById(""Bestilling_agFulltNavn"");
        xAT = document.getElementById(""Bestilling_agTelefon"");
        xAM = document.getElementById(""Bestilling_agMobil"");

        xF = document.getElementById(""Bestilling_FesterKontaktGuid"");
        xFP = document.getElementById(""Bestilling_fPersonNr"");
        xFN = document.getElementById(""Bestilling_fFulltNavn"");
        xFT = document.getElementById(""Bestilling_fTelefon"");
        xFM = document.getElementById(""Bestilling_f");
            WriteLiteral(@"Mobil"");

        xF.value = xA.value;
        xFP.value = xAP.value;
        xFN.value = xAN.value;
        xFT.value = xAT.value;
        xFM.value = xAM.value;
        }

    function endreKontakt(e) {
        Kontakt = e;
        if (e == 'DSG') {
            x = document.getElementById(""Bestilling_AnsGFerdKontaktGuid"")
        }
        else if (e == 'Avlidne') {
            x = document.getElementById(""Bestilling_AvlKontaktGuid"")
        }
        else if (e == 'Fester') {
            x = document.getElementById(""Bestilling_FesterKontaktGuid"")
        }

        $.ajax({
            url: '");
#nullable restore
#line 2511 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("DialogKontakt", "Kontakt"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\',\r\n            type: \'GET\'\r\n            }).done(function (result) {\r\n                $(\'#DialogKontakt\').html(result);\r\n                $.ajax({\r\n                    url: \'");
#nullable restore
#line 2516 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                     Write(Url.Action("GetKontakt", "Kontakt"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: { kontaktGuid: x.value},
                    type: ""GET""
                    }).done(function (result) {
                        $(""#DialogKontakt"").html(result);

                        var popup = $('#DialogKontakt').data(""kendoWindow"");
                        popup.center().open();
                    });
            });
    }

    function closeFinnPerson() {
        var listBoxF = $(""#kontaktGrid"").data(""kendoGrid"");
        var selectedF = listBoxF.select();
        var selItemF = listBoxF.dataItem(selectedF);
        var ressursGuid = """";

        if (selectedF.length > 0) {
            kontaktGuid = selItemF.KontaktGuid;

            $.ajax({
                url: '");
#nullable restore
#line 2538 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("KopiKontaktFraResultat", "Funksjoner"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { kontaktGuid: selItemF.KontaktGuid},
                type: ""POST""
                }).done(function (result) {
                    kontaktGuid = result.NewGuid;

                    if (Kontakt == ""Avlidne"") {
                        var avlKontaktGuid = document.getElementById(""Bestilling_AvlKontaktGuid"");
                        var avlFodt = document.getElementById(""Bestilling_AvlFodd"");
                        var avlFNavn = document.getElementById(""Bestilling_AvlFornavn"");
                        var avlMNavn = document.getElementById(""Bestilling_AvlMellomnavn"");
                        var avlENavn = document.getElementById(""Bestilling_AvlEtternavn"");
                        var avlAdresse = document.getElementById(""Bestilling_AvlAdresse"");
                        var avlPostNr = document.getElementById(""Bestilling_AvlPostNr"");
                        var avlPersonnr = document.getElementById(""Bestilling_AvlPersNr"");
                        var avlSted = document.");
            WriteLiteral(@"getElementById(""Bestilling_Sted"");
                        var avlKNr = document.getElementById(""Bestilling_KommuneNr"");

                        avlKontaktGuid.value = kontaktGuid;

                        if (selItemF.Født != null) {
                            avlFodt.value = selItemF.Født.toLocaleDateString('de-DE', { year: ""numeric"", month: ""2-digit"", day: ""2-digit"" });
                        }
                        avlFNavn.value = selItemF.Fornavn;
                        avlMNavn.value = selItemF.Mellomnavn;
                        avlENavn.value = selItemF.Etternavn;
                        avlAdresse.value = selItemF.Adresse;
                        avlPostNr.value = selItemF.PostNr;
                        avlPersonnr.value = selItemF.PersonNr;
                        avlSted.value = selItemF.Sted;
                        avlKNr.value = selItemF.KommuneNr;
                    }
                    else if (Kontakt == ""DSG"") {
                        var AnsGFKontaktGuid = docum");
            WriteLiteral(@"ent.getElementById(""Bestilling_AnsGFerdKontaktGuid"");
                        var avlNavn = document.getElementById(""Bestilling_agFulltNavn"");
                        var avlFNr = document.getElementById(""Bestilling_agPersonNr"");

                        kNavn = selItemF.Fornavn + "" "" + selItemF.Etternavn;

                        AnsGFKontaktGuid.value = kontaktGuid;
                        avlNavn.value = kNavn;
                        avlFNr.value = selItemF.PersonNr;
                    }
                    else if (Kontakt == ""Avhenting"") {
                        var HentetKontaktGuid = document.getElementById(""Bestilling_HentetKontaktGuid"");
                        var avlNavn = document.getElementById(""Bestilling_avhFulltnavn"");
                        var avlFNr = document.getElementById(""Bestilling_PersonNr"");

                        kNavn = selItemF.Fornavn + "" "" + selItemF.Etternavn;

                        HentetKontaktGuid.value = kontaktGuid;
                        avlNavn");
            WriteLiteral(@".value = kNavn;
                        avlFNr.value = selItemF.PersonNr;
                    }
                    else if (Kontakt == ""Fester"") {
                        var FesterKontaktGuid = document.getElementById(""Bestilling_FesterKontaktGuid"");
                        var avlNavn = document.getElementById(""Bestilling_fFulltNavn"");
                        var avlFNr = document.getElementById(""Bestilling_fPersonNr"");

                        kNavn = selItemF.Fornavn + "" "" + selItemF.Etternavn;

                        FesterKontaktGuid.value = kontaktGuid;
                        avlNavn.value = kNavn;
                        avlFNr.value = selItemF.PersonNr;
                    }
                    else if (Kontakt == ""Fakturamottaker"") {
                        $.ajax({
                        url: '");
#nullable restore
#line 2605 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                         Write(Url.Action("SetBestillingFakturakontakt", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                        data: { bestillingGuid: bestillingGuid, kontaktGuid: kontaktGuid },
                        type: ""POST""
                        }).done(function (result) {
                            dropdownlist = $(""#Bestilling_FakturaKontaktGuid"").data(""kendoDropDownList"");
                            dropdownlist.dataSource.read()
                            var popup = $('#dialogFinnMedlemmer').data(""kendoWindow"");
                            popup.close();
                            dropdownlist.value(kontaktGuid)
                            dropdownlist.trigger(""change"");
                        });
                    }

                });


        };
    }

    function closeFinnMedlemmer() {
        var listBoxM = $(""#Medlemmer"").data(""kendoGrid"");
        var listBoxF = $(""#activities"").data(""kendoTreeView"");
        var selectedF = listBoxF.select();
        var selItemF = listBoxF.dataItem(selectedF);
        var aktivitetGuid = """";

        if (typeof sel");
            WriteLiteral("ItemF != \'undefined\') {\r\n            aktivitetGuid = selItemF.id;\r\n            $.ajax({\r\n                url: \'");
#nullable restore
#line 2634 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("GetNyeMedlemmer", "Aktiviteter"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { aktivitetGuid: aktivitetGuid},
                type: ""POST""
                }).done(function (result) {
                    listBoxM.dataSource.read();

                    var popup = $('#dialogFinnMedlemmer').data(""kendoWindow"");
                    popup.close();
                });
        }
    }

    function AddToTemp(e) {
        var listBoxF = $(""#kontaktGrid"").data(""kendoGrid"");
        var listBoxS = $(""#kontaktValgteGrid"").data(""kendoGrid"");

        var selectedF = listBoxF.select();
        var selItemF = listBoxF.dataItem(selectedF);
        var ressursGuid = """";

        if (typeof selItemF != 'undefined') {
            kontaktGuid = selItemF.KontaktGuid;

            $.ajax({
                url: '");
#nullable restore
#line 2658 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("setMineTempKontakt", "Funksjoner"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { kontaktGuid: kontaktGuid },
                type: ""PUSH""
            }).done(function (result) {
                listBoxS.dataSource.read();
            });
        };
    }

    function findNextKremNr() {
        $.ajax({
            url: '");
#nullable restore
#line 2669 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("getNextValue", "Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { tabell: ""Bestilling"", felt: ""KremasjonNr""},
            type: ""GET""
            }).done(function (result) {
                x = $('#Bestilling_KremasjonNr').data(""kendoNumericTextBox"");
                x.value(result);
            });
    }

    function findNextUrneplass() {
        $.ajax({
            url: '");
#nullable restore
#line 2680 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("FinnNesteUrnePlassering", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""GET""
            })
        .done(function (result) {
            document.getElementById(""Bestilling_UrnePlass"").value = result.Navn;
            document.getElementById(""Bestilling_UrnePlasserGuid"").value = result.UrnePlassGuid;
            lagreBestilling();

            bestillingGuid = document.getElementById(""Bestilling_BestillingGuid"").value;

            $.ajax({
                url: '");
#nullable restore
#line 2691 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("BookUrnePlassering", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                type: ""GET"",
                data: {BestillingGuid: bestillingGuid, UrneplassGuid: result.UrnePlassGuid}
                });
            });
        }

    function findPoststed() {
        var x = document.getElementById(""Bestilling_AvlPostNr"").value;
        xSted = document.getElementById(""Bestilling_Sted"");
        xKommuneNr = document.getElementById(""Bestilling_KommuneNr"");
        xIB = document.getElementById(""infoBestilling"");
        xIF = document.getElementById(""idInfoFaktura"");
        xIB.innerHTML = """";

        if (x.length == 4) {
            $.ajax({
                url: '");
#nullable restore
#line 2708 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("GetPostSted", "Funksjoner"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { postNr: x },
                type: ""GET""
            }).done(function (result) {
                xSted.value = result.Sted;
                xKommuneNr.value = result.KommuneNr;
                if (result.Utenbys) {
                    $(""#Bestilling_Utenbys"").prop(""checked"", true);
                }
                if (result.InfoBestilling != """") {
                    xIB.innerHTML = result.InfoBestilling;
                    xIF.style.display = ""block"";
                }
            });
        }
        else {
            xSted.value = """";
            xKommuneNr.value = """";
        };
    }

    function fjernGravplassvalg() {
        xKL = document.getElementById(""gravIkkeValgt"");
        xKN = document.getElementById(""gravValgt"");
        xKL.style.display = """";
        xKN.style.display = ""none"";
    }

    function findNesteLopenr() {
        var lvKirkegard = $(""#Bestilling_KirkegardGuid"").data(""kendoDropDownList"");
        var selectedK = lvKir");
            WriteLiteral(@"kegard.select();
        kirkegardGuid = """";

        var gd = $('#Bestilling_AvlGravlagt').data(""kendoDatePicker"");
        gravlagtAar = 0;

        if (gd._value != null) {
            gravlagtAar = gd.value().getFullYear()
        }

        if (selectedK != -1) {
            var selItemK = lvKirkegard.dataItem(selectedK);
            kirkegardGuid = selItemK.Kirkegard_GUID;
        }

        if (gravlagtAar == 0) {
            alert(""Du må angi gravlegginsdato"");
            return;
        }

        if (kirkegardGuid == """") {
            alert(""Du må angi kirkegård"");
            return;
        }

        $.ajax({
            url: '");
#nullable restore
#line 2764 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("GetNesteLopeNr", "Gravarkiv"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { kirkegardGuid: kirkegardGuid, gravlagtAar: gravlagtAar},
            type: ""GET""
            }).done(function (result) {
                x = $('#Bestilling_LopeNr').data(""kendoNumericTextBox"");
                x.value(result);
            });
    }



    function slettFakturaLinje() {
        $(""#confirm"").kendoConfirm({
            title: ""Slett"",
            content: ""Ønsker du å slette valgte fakturalinje?"",
            messages: {
                okText: ""Ja"",
                cancel: ""Nei""
            }
        }).data(""kendoConfirm"").result.done(function () {
            $('body').append($('<div id=""confirm"">'));
            var grdFaktLinje = $(""#bestillingFakturalinjer"").data(""kendoGrid"");
            var selectedF = grdFaktLinje.select();
            var selItemF = grdFaktLinje.dataItem(selectedF);
            var bestillingFaktInnholdGuid = """";

            if (selectedF.length > 0) {
                bestillingFaktInnholdGuid = selItemF.BestillingFak");
            WriteLiteral("tInnholdGuid;\r\n\r\n                $.ajax({\r\n                    type: \"GET\",\r\n                    url: \'");
#nullable restore
#line 2795 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                     Write(Url.Action("removeBestillingFakturainnhold", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: { bestillingFaktInnholdGuid: bestillingFaktInnholdGuid },
                    dataType: 'json'
                }).done(function (result) {
                    grdFaktLinje.dataSource.read();
                });
            }
        });
    }

    function finnFamilieFolkeregister() {
        var x = document.getElementById(""Bestilling_AvlPersNr"").value;

        $.ajax({
            method: 'GET',
            url: '");
#nullable restore
#line 2810 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("HentFamilieFraFolkeregister", "Funksjoner"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { Fodselsnummer: x},
            dataType: 'json'
            }).done(function (result) {
                if (result.Result == true) {
                    resultatId = result.NewId;
                    var grdFR = $(""#grdFolkeregister"").data(""kendoGrid"");
                    grdFR.dataSource.read();
                }
                else {
                    alert(result.ErrorText);
                }
            }).always(function () {

            });
        }

    function addPerson(Kontakt) {
        var listBoxF = $(""#grdFolkeregister"").data(""kendoGrid"");
        var selectedF = listBoxF.select();
        var selItemF = listBoxF.dataItem(selectedF);
        var ressursGuid = """";

        if (selectedF.length > 0) {
            kontaktGuid = selItemF.KontaktGuid;

            $.ajax({
                url: '");
#nullable restore
#line 2837 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("KopiKontaktFraResultat", "Funksjoner"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { kontaktGuid: selItemF.KontaktGuid},
                type: ""POST""
                }).done(function (result) {
                    kontaktGuid = result.NewGuid;

                    if (Kontakt == ""DSG"") {
                        var AnsGFKontaktGuid = document.getElementById(""Bestilling_AnsGFerdKontaktGuid"");
                        var avlNavn = document.getElementById(""Bestilling_agFulltNavn"");
                        var avlFNr = document.getElementById(""Bestilling_agPersonNr"");

                        kNavn = selItemF.Fulltnavn;

                        AnsGFKontaktGuid.value = kontaktGuid;
                        avlNavn.value = kNavn;
                        avlFNr.value = selItemF.PersonNr;
                    }
                    else if (Kontakt == ""Fester"") {
                        var FesterKontaktGuid = document.getElementById(""Bestilling_FesterKontaktGuid"");
                        var avlNavn = document.getElementById(""Bestilling_fFulltNavn"");
   ");
            WriteLiteral(@"                     var avlFNr = document.getElementById(""Bestilling_fPersonNr"");

                        kNavn = selItemF.Fulltnavn;

                        FesterKontaktGuid.value = kontaktGuid;
                        avlNavn.value = kNavn;
                        avlFNr.value = selItemF.PersonNr;
                    }
                });
        };
    }

    function produserFaktura(e) {
        lagreBestilling();

        $(""#confirm"").kendoConfirm({
            title: ""FAKTURER"",
            content: ""Ønsker du å fakturere denne bestillingen?"",
            messages: {
                okText: ""Ja"",
                cancel: ""Nei""
            }
        }).data(""kendoConfirm"").result.done(function () {
            $('body').append($('<div id=""confirm"">'));
            x2 = document.getElementById(""Bestilling_BestillingGuid"");
            bestillingGuid = x2.value;
            x = document.getElementById(""FakturerBestilling"");
            x.disabled = true;

            $.ajax");
            WriteLiteral("({\r\n                type: \"POST\",\r\n                url: \'");
#nullable restore
#line 2888 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("exeFakturerBestilling", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { bestillingGuid: bestillingGuid, modul: ""Bestilling""},
                dataType: 'json'
            }).done(function (result) {
                if (result.Result == true) {
                    var grdFaktLinje = $(""#bestillingFakturalinjer"").data(""kendoGrid"");
                    grdFaktLinje.dataSource.read();
                    kendo.alert(""Faktura nr "" + result.NewGuid + "" er produsert og ligger klar til utskriving."");
                    }
                });
            });
        }

    function inklFesteavgift(e) {
        $(""#confirm"").kendoConfirm({
            title: ""FAKTURER"",
            content: ""Ønsker du å legge til festefaktura til denne bestillingen?"",
            messages: {
                okText: ""Ja"",
                cancel: ""Nei""
            }
        }).data(""kendoConfirm"").result.done(function () {
            $('body').append($('<div id=""confirm"">'));
            x2 = document.getElementById(""Bestilling_BestillingGuid"");
           ");
            WriteLiteral(@" xGG = document.getElementById(""Bestilling_GravGuid"");
            
            bestillingGuid = x2.value;
            x = document.getElementById(""inklFeste"");
            x.disabled = true;

            $.ajax({
                type: ""POST"",
                url: '");
#nullable restore
#line 2920 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("exeInkluderGraver", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { bestillingGuid: bestillingGuid, gravGuid: xGG.value},
                dataType: 'json'
            }).done(function (result) {
                if (result.Result == true) {
                    var grdFaktLinje = $(""#bestillingFakturalinjer"").data(""kendoGrid"");
                    grdFaktLinje.dataSource.read();
                    }
                });
            });
        }

    function BestillingArkiver() {
        $(""#confirm"").kendoConfirm({
            title: ""OVERFØRE"",
            content: ""Ønsker du å overføre bestillingen til gravarkivet?"",
            messages: {
                okText: ""Ja"",
                cancel: ""Nei""
            }
        }).data(""kendoConfirm"").result.done(function () {
            $('body').append($('<div id=""confirm"">'));
            x2 = document.getElementById(""Bestilling_BestillingGuid"");
            bestillingGuid = x2.value;

            $.ajax({
                type: ""POST"",
                url: '");
#nullable restore
#line 2947 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("BestillingArkiver", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { bestillingGuid: bestillingGuid},
                dataType: 'json'
            }).done(function (result) {
                if (result.Result == true) {
                    kendo.alert(""Bestillingen er overført til Gravarkivet."");
                    var xA = document.getElementById(""btnArkiver"");
                    var xG = document.getElementById(""btnGravarkiv"");
                    xA.style.display = ""none"";
                    xG.style.display = """";
                }
                else {
                    kendo.alert(result.ErrorText);
                }
            });
        });
    }


    function filterGravRekke() {
        var xR = document.getElementById(""Bestilling_rekkeGuid"").value;
        filterRekkeTekst = ""Rekke_GUID = '"" + xR + ""'"";
        return { filterTekst: filterRekkeTekst }
        }

    function VisGravarkiv() {
        currGravGuid = document.getElementById(""Bestilling_GravlagtGuid"").value;

        $.ajax({
            url");
            WriteLiteral(": \'");
#nullable restore
#line 2976 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("DialogGravarkiv", "Gravarkiv"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: 'GET'
            }).done(function (result) {
                $('#dialogGravarkiv').html(result);
                var popup = $('#dialogGravarkiv').data(""kendoWindow"");
                popup.center().open();
            });
    }

</script>

<script id=""events"">
    var refresh = true;

    function onDocumentChange(e) {
        var selected = this.select();
        var data = this.dataItem(selected);

        if (data.Format == "".docx"") {
            btnRD = document.getElementById(""idRediger"");
            btnRD.disabled = false;
        }
        else {
            btnRD = document.getElementById(""idRediger"");
            btnRD.disabled = true;
        }

        btnVD = document.getElementById(""idVis"");
        btnVD.disabled = false;
    }

    function onJournalChange(e) {
        var selected = this.select();
        var data = this.dataItem(selected);
        registreringGuid = data.Registrering_GUID;
        var lvDocument = $(""#documents"").data");
            WriteLiteral(@"(""kendoListView"");

        if (data.JournalPostType == ""UD"" && data.JournalStatus != ""A"") {
            btnVD = document.getElementById(""idEksp"");
            btnVD.disabled = false;
        }
        else {
            btnVD = document.getElementById(""idEksp"");
            btnVD.disabled = true;
        }

        var d = data.dokuments;

        if (d.length > 0) {
            var dokInfo = """";
            for(let i = 0; i < d.length; i++) {
                dokInfo += d[i].Format + "";"" + d[i].RecNo + "";"" + d[i].Tittel + ""|"";
            }
            $.ajax({
                url: '");
#nullable restore
#line 3030 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("setDocuments", "Engrafo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { dokumenter: dokInfo },
                type: ""GET""
            })
            .done(function (result) {
                lvDocument.dataSource.read();
            });
        }
        else {
            $.ajax({
                url: '");
#nullable restore
#line 3040 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("clearDocuments", "Engrafo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                type: ""GET""
            })
            .done(function (result) {
                lvDocument.dataSource.read();
            });
        }

        
    }

    function onSMSListChange(arg) {
        var index = this.select().index(),
        dataItem = this.dataSource.view()[index];

        var editor = document.getElementById(""SMSeditor"");
        editor.value = dataItem.Melding;
        }


    function onBestillingChange(e, b) {
        if (b == undefined) {
            var grdGuid = $(""#bestillingListe"").data(""kendoGrid"");
            var selected = grdGuid.select();
            var data = grdGuid.dataItem(selected);

            mappeGuid = data.MappeGuid;  
            mappeNavn = data.MappeNavn;
            if (mappeGuid != """" && mappeNavn == """") {
                mappeNavn = mappeGuid;
            }
            var navnBestilling = data.BestillingNr + "" - "" + data.FulltNavn;

            bestillingGuid = data.BestillingGuid;
        }
        else ");
            WriteLiteral("{\r\n            bestillingGuid = e;\r\n            mappeNavn = \"\";\r\n        }\r\n\r\n        $.ajax({\r\n            url: \'");
#nullable restore
#line 3081 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("GetBestilling", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { bestillingGuid: bestillingGuid },
            type: ""GET""
        }).done(function (result) {
            $(""#bestillingForm"").html(result);

            ressursSermStedGuid = document.getElementById(""Bestilling_sermStedGuid"").value;
            ressursGravstedGuid = document.getElementById(""Bestilling_gravStedGuid"").value;

            var ddlTider = $(""#Bestilling_SermTid"").data(""kendoComboBox"");
            ddlTider.dataSource.read();

            var ddlTiderTil = $(""#Bestilling_SermSluttTid"").data(""kendoComboBox"");
            ddlTiderTil.dataSource.read();

            var ddlSTider = $(""#Bestilling_gravStartTid"").data(""kendoComboBox"");
            ddlSTider.dataSource.read();

            var ddlSTiderTil = $(""#Bestilling_gravSluttTid"").data(""kendoComboBox"");
            ddlSTiderTil.dataSource.read();


            clickHookupKremasjon();
            clickHookupAskespredning();
            clickHookupReservering();
            clickHookupRettiGrav();
  ");
            WriteLiteral(@"          clickHookupGravferdshandling();
            clickHookupAnnneKommune();

            resultatId = -1;
            $(""#grdFolkeregister"").data('kendoGrid').dataSource.read();

            registreringGuid = """";
            $(""#documents"").data('kendoListView').dataSource.read();

            var bekreftSend = document.getElementById(""Bestilling_BekreftelseByraSendt"");

            BekreftelseByraSendt(bekreftSend.checked);

            var xDoc = document.getElementById(""tabDokumenterId"");
            var xAT = document.getElementById(""Bestilling_ArkivType"");

            if (mappeNavn != """") {
                xDoc.innerHTML = ""Dokumenter ["" + mappeNavn + ""]"";
            }
            else {
                xDoc.innerHTML = ""Dokumenter"";
            }

            var xTG = document.getElementById(""idGenerell"");
            xTG.innerHTML = ""Begravede ["" + navnBestilling + ""]"";

            gKirkegard = document.getElementById(""Bestilling_KirkegardGuid"");
            if (gKi");
            WriteLiteral(@"rkegard.value != """") {
                var lvFelt = $(""#Bestilling_feltGuidNy"").data(""kendoDropDownList"");
                lvFelt.dataSource.read();
            }

            gFelt = document.getElementById(""Bestilling_feltGuid"");
            if (gFelt.value != """") {
                var lvRekke = $(""#Bestilling_rekkeGuidNy"").data(""kendoDropDownList"");
                lvRekke.dataSource.read();
            }

            gGuid = document.getElementById(""Bestilling_GravGuid"");
            if (gGuid.value != """") {
                xKL = document.getElementById(""gravIkkeValgt"");
                xKN = document.getElementById(""gravValgt"");
                xKL.style.display = ""none"";
                xKN.style.display = """";

                $.ajax({
                    url: '");
#nullable restore
#line 3153 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                     Write(Url.Action("GetGravInfo", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    data: { GravGuid: gGuid.value },
                    type: ""GET""
                }).done(function (result) {
                    $(""#gravInfo"").html(result);
                });
            }
            else {
                xKL = document.getElementById(""gravIkkeValgt"");
                xKN = document.getElementById(""gravValgt"");
                xKL.style.display = """";
                xKN.style.display = ""none"";
            }

            bKremeres = document.getElementById(""Bestilling_Kremeres"");
            tKremeres = document.getElementById(""tabKremasjonX"");
            if (bKremeres.checked == true) {
                tKremeres.style.display = """";
            }
            else {
                tKremeres.style.display = ""none"";
            }

            bReserver = document.getElementById(""Bestilling_ResGrav"");
            tReserver = document.getElementById(""finnGraver"");
            if (bReserver.checked == true) {
                tReserver.style.dis");
            WriteLiteral(@"play = """";
            }
            else {
                tReserver.style.display = ""none"";
            }

            bPos = document.getElementById(""Bestilling_Pos"");
            tUrnepos = document.getElementById(""urnePosX"");
            if (bPos.value == ""1"") {
                tUrnepos.style.display = """";
            }
            else {
                tUrnepos.style.display = ""none"";
            }

            bGH = document.getElementById(""Bestilling_GravHandling"");
            tOrdning = document.getElementById(""gravferdshandling"");
            if (bGH.checked == true) {
                tOrdning.style.display = """";
            }
            else {
                tOrdning.style.display = ""none"";
            }

            bGFH = document.getElementById(""Bestilling_GravHandlType"");
            tOrdning = document.getElementById(""ordning"");
            if (bGFH.value == ""1"") {
                tOrdning.style.display = """";
            }
            else {
                tO");
            WriteLiteral(@"rdning.style.display = ""none"";
            }
        
            document.getElementById(""FakturerBestilling"").disabled = true;
            document.getElementById(""inklFeste"").disabled = false;

            btnSD = document.getElementById(""arkiverEpost"");
            btnSD.disabled = false;

            bBB = document.getElementById(""Bestilling_ByraaId"");
            btnSB = document.getElementById(""btnSendBekr"");
            if (bBB.value == """") {
                btnSB.disabled = true;
            }
            else {
                btnSB.disabled = false;
            }

            btnBS = document.getElementById(""btnBestSeremoni"");
            btnBS.disabled = false;

            btnA = document.getElementById(""btnArkiver"");
            btnA.disabled = false;

            btnUS = document.getElementById(""btnUtsendingS"");
            btnUS.disabled = false;

            btnUG = document.getElementById(""btnUtsendingG"");
            btnUG.disabled = false;

            btnSkB ");
            WriteLiteral(@"= document.getElementById(""btnSkrivBrev"");
            btnSkB.disabled = false;

            bPNr = document.getElementById(""Bestilling_AvlPersNr"").value;
            xFF = document.getElementById(""FinnFamilie"");
            xSA = document.getElementById(""SetAnsvarlig"");
            xSF = document.getElementById(""SetFester"");
            if (bPNr.length == 11) {
                xFF.disabled = false;
                }
            else {
                xFF.disabled = true;
                }
            xSA.disabled = true;
            xSF.disabled = true;

            findPoststed();

            var xA = document.getElementById(""btnArkiver"");
            var xG = document.getElementById(""btnGravarkiv"");

            var xGL = document.getElementById(""Bestilling_GravlagtGuid"");
            if (xGL.value != """") {
                xA.style.display = ""none"";
                xG.style.display = """";
                }
            else {
                xA.style.display = """";
               ");
            WriteLiteral(@" xG.style.display = ""none"";
            }

            var ddlFM = $(""#Bestilling_FakturaKontaktGuid"").data(""kendoDropDownList"");
            ddlFM.dataSource.read();

            dataTekst = """";

            });
        }


    function onFolkeregChange(e) {
        xSA = document.getElementById(""SetAnsvarlig"");
        xSF = document.getElementById(""SetFester"");
        xSA.disabled = false;
        xSF.disabled = false;
    }


</script>

<script id=""checkbokser"">

    $(document).ready(function () {
        var meny = document.getElementById(""hmGP"");
        meny.classList.add(""menyAktiv"");

        clickHookupKremasjon();
        clickHookupAskespredning();
        clickHookupReservering();
        clickHookupRettiGrav();
        clickHookupGravferdshandling();
        clickHookupAnnneKommune();
    });

    function clickHookupKremasjon() {
        $(""#Bestilling_Kremeres"").click(function () {
            tKremeres = document.getElementById(""tabKremasjonX"");
      ");
            WriteLiteral(@"      var ddl = $(""#Bestilling_Pos"").data(""kendoDropDownList"");

            if (this.checked) {
                tKremeres.style.display = """";
                ddl.select(2);
                ddl.trigger(""change"");
            }
            else {
                tKremeres.style.display = ""none"";
                ddl.select(1);
                ddl.trigger(""change"");
            }
        });
    }

    function clickHookupAnnneKommune() {
        $(""#Bestilling_GravleggesAnnenKommune"").click(function () {
            tKremeres = document.getElementById(""annneKommune"");

            if (this.checked) {
                tKremeres.style.display = """";
            }
            else {
                tKremeres.style.display = ""none"";
            }
        });
    }

    function clickHookupRettiGrav() {
       $(""#Bestilling_RettIGrav"").click(function () {
            tKremeres = document.getElementById(""Bestilling_GravHandling"");            
            tGravhandl = document.getElementB");
            WriteLiteral(@"yId(""gravferdshandling"");
            tOrdning = document.getElementById(""ordning"");
            tSokn = document.getElementById(""Bestilling_SermSokn"");

            if (this.checked) {
                tKremeres.checked = false;
                tKremeres.disabled = true;
                tOrdning.style.display = ""none"";
                tGravhandl.style.display = ""none"";
                var listBoxF = $('#Bestilling_GravHandlType').data(""kendoDropDownList"");
                listBoxF.selectedIndex = -1;
            }
            else {
                tKremeres.disabled = false;
            }
        });
    }

    function clickHookupAskespredning() {
        $(""#Bestilling_SpreiOske"").click(function () {
            tKirkegard = document.getElementById(""tabKirkegardX"");

            if (this.checked) {
                tKirkegard.style.display = ""none"";
            }
            else {
                tKirkegard.style.display = """";
            }
        });
    }

    function cli");
            WriteLiteral(@"ckHookupReservering() {
        $(""#Bestilling_ResGrav"").click(function () {
            tKirkegard = document.getElementById(""finnGraver"");

            if (this.checked) {
                tKirkegard.style.display = """";
            }
            else {
                tKirkegard.style.display = ""none"";
            }
        });
    }

    function clickHookupGravferdshandling() {
        $(""#Bestilling_GravHandling"").click(function () {
            tKirkegard = document.getElementById(""gravferdshandling"");
            tGravhandl = document.getElementById(""Bestilling_GravHandlType"");
            tOrdning = document.getElementById(""ordning"");

            if (this.checked) {
                tKirkegard.style.display = """";
                if (tGravhandl.value == ""1"") {
                    tOrdning.style.display = """";
                }
                else {
                    tOrdning.style.display = ""none"";
                }
            }
            else {
                tKirkega");
            WriteLiteral("rd.style.display = \"none\";\r\n                tOrdning.style.display = \"none\";\r\n            }\r\n        });\r\n    }\r\n</script>\r\n\r\n\r\n<script type=\"text/x-kendo-tmpl\" id=\"document\">\r\n    <div class=\"sms\">\r\n        <img src=\"");
#nullable restore
#line 3407 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Content("~/images/social-telegram-filled.svg"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"""/>
        <p>#:Name#</p>
    </div>
</script>

<script type=""text/javascript"">

    //$(document).ready(function () {
    //    isAdmin = false;
    //    var notifications = $(""li .k-k-KB"")[0].parentNode;
    //    if (!isAdmin) {
    //        $(notifications).remove();
    //        }
    //    });

    function nyBestilling() {
        $.ajax({
            url: '");
#nullable restore
#line 3424 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("NyBestilling", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""GET""
        }).always(function (result) {
            $(""#bestillingForm"").html(result);
            clickHookupKremasjon();
            clickHookupAskespredning();
            clickHookupReservering();
            clickHookupRettiGrav();
            clickHookupGravferdshandling();
            clickHookupAnnneKommune();

             var grid = $('#bestillingListe').data('kendoGrid');
             grid.tbody.children('tr').removeClass('k-selected');


            btnSD = document.getElementById(""arkiverEpost"");
            btnSD.disabled = true;

            btnSB = document.getElementById(""btnSendBekr"");
            btnSB.disabled = true;

            btnBS = document.getElementById(""btnBestSeremoni"");
            btnBS.disabled = true;

            btnA = document.getElementById(""btnArkiver"");
            btnA.disabled = true;

            btnUS = document.getElementById(""btnUtsendingS"");
            btnUS.disabled = true;

            btnUG = document.ge");
            WriteLiteral(@"tElementById(""btnUtsendingG"");
            btnUG.disabled = true;

            btnSkB = document.getElementById(""btnSkrivBrev"");
            btnSkB.disabled = false;
        });
    }

    function onDataBound(e) {
        var grid = $(""#bestillingListe"").data(""kendoGrid"");

        $(""#bestillingListe tbody tr"").each(function () {
            var currentRowData = grid.dataItem(this);
            $(this).css(""background-color"", currentRowData.FargeNavn)
            if (currentRowData.BestillingGuid == bestillingGuid) {
                grid.select(this);
            }
        });
    }




    function onFamilieDataBound(e) {
        var grid = $(""#grdFolkeregister"").data(""kendoGrid"");

        $(""#grdFolkeregister tbody tr"").each(function () {
            var currentRowData = grid.dataItem(this); 1
            if (currentRowData.BackgroundColor != """") {
                //Read field contains data if this email is readed
                $(this).css(""background-color"", currentRowDat");
            WriteLiteral(@"a.BackgroundColor)
            }
        });
    }

    function onReserveringDataBound(e) {
        var grid = $(""#grdGraver"").data(""kendoGrid"");

        $(""#grdGraver tbody tr"").each(function () {
            var currentRowData = grid.dataItem(this);
            if (currentRowData.Navn != ""Ledig"") {
                $(this).addClass(""disabled"")
            }
            if (currentRowData.Farge == ""Bold"") {
                $(this).css('font-weight', 'bold');
            }
            else if (currentRowData.Farge != """") {
                $(this).css(""background-color"", currentRowData.Farge)
                $(this).css('color', 'black');
            }
        });
    }

</script>

<script id=""trevisning"">

    function onClose() {
        $(""#showDialogBtn"").fadeIn();
    }

    function onOpen() {
        $(""#showDialogBtn"").fadeOut();
    }

    function onSoknActionOK(e) {
        var treeView = $(""#treeviewSokn"").data(""kendoTreeView"");
        var checkedNodes = getCh");
            WriteLiteral(@"eckedItems(treeView);
       var listBox = $(""#Gudstjenesteliste"").data(""kendoGrid"");
        var nodes = """";
        for (var i = 0; i < checkedNodes.length; i++) {
                nodes += checkedNodes[i].id + "":"";
            }
        $.ajax({
            url: '");
#nullable restore
#line 3528 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("setBrukerAktivSokn", "Frivillig"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { soknId: nodes },
            type: ""GET""
        }).done(function (result) {
            listBox.refresh();
            listBox.dataSource.read();
            });

    }

    function onActionOK(e) {
        var grid = $(""#grdGraver"").data(""kendoGrid"");
        var selected = [];

        //get all selected rows (those which have the checkbox checked)
        grid.select().each(function () {
            selected.push(grid.dataItem(this));
        });

        var nodes = """";
        for (var i = 0; i < selected.length; i++) {
            nodes += selected[i].Plassering + "";"";
        }

        x = document.getElementById(""Bestilling_ResGravTekst"");
        x.value = nodes;
    }

    function BestillEtikett(e) {
        var grdSkriver = $(""#grdSkrivere"").data(""kendoGrid"");
        var selected = grdSkriver.select();
        var data = grdSkriver.dataItem(selected);
        KremStasjonGuid = data.KremStasjon_GUID;

        x2 = document.getElementById(""");
            WriteLiteral("Bestilling_BestillingGuid\");\r\n        bestillingGuid = x2.value;\r\n\r\n        $(\'#dialogFinnEtikettskriver\').data(\"kendoDialog\").close();\r\n\r\n        if (bestillingGuid != \"\") {\r\n\r\n            $.ajax({\r\n                type: \"POST\",\r\n                url: \'");
#nullable restore
#line 3571 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
                 Write(Url.Action("BestillUtskrift", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                data: { bestillingGuid: bestillingGuid, kremStasjonGuid: KremStasjonGuid },
                dataType: 'json'
            }).done(function (result) {
                alert(""Bestilling utskrift er nå sendt"");
            });
        }
        else {
            alert(""Du må velge en bestilling"")
            }
        }


    function onTjenesteActionOK(e) {
        x2 = document.getElementById(""Bestilling_BestillingGuid"");
        bestillingGuid = x2.value;

        var grid = $(""#grdTjenester"").data(""kendoGrid"");
        var selected = [];

        //get all selected rows (those which have the checkbox checked)
        grid.select().each(function () {
            selected.push(grid.dataItem(this));
        });

        var nodes = """";
        for (var i = 0; i < selected.length; i++) {
            nodes += selected[i].TjenesteNr + "";"";
        }

        $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 3603 "C:\Visual Stuido 17\KipWeb5\Views\Bestilling\Index.cshtml"
             Write(Url.Action("LagreBestillingFakturainnholdListe", "Bestilling"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            data: { bestillingGuid: bestillingGuid, tjenester: nodes },
            dataType: 'json'
        }).done(function (result) {
            var grdFaktLinje = $(""#bestillingFakturalinjer"").data(""kendoGrid"");
            grdFaktLinje.dataSource.read();
        });

    }


    function treeViewCheck(e) {
        setTimeout(function () {
            updateSelectedCount(e.sender);
        })
    }

    function treeViewDataBound(e) {
        e.sender.expand(e.node);
    }

    function getCheckedItems(treeview) {
        var nodes = treeview.dataSource.view();
        return getCheckedNodes(nodes);
    }

    function getCheckedNodes(nodes) {
        var node, childCheckedNodes;
        var checkedNodes = [];

        for (var i = 0; i < nodes.length; i++) {
            node = nodes[i];
            if (node.checked) {
                checkedNodes.push(node);
            }

            if (node.hasChildren) {
                childCheckedNodes = getCheckedNodes(node");
            WriteLiteral(@".children.view());

                if (childCheckedNodes.length > 0) {
                    checkedNodes = checkedNodes.concat(childCheckedNodes);
                }
            }
        }

        return checkedNodes;
    }

    function getUnCheckedNodes(nodes) {
        var node, childCheckedNodes;
        var checkedNodes = [];

        for (var i = 0; i < nodes.length; i++) {
            node = nodes[i];
            if (!node.checked) {
                checkedNodes.push(node);
            }

            if (node.hasChildren) {
                childCheckedNodes = getCheckedNodes(node.children.view());
                if (childCheckedNodes.length > 0) {
                    checkedNodes = checkedNodes.concat(childCheckedNodes);
                }
            }
        }

        return checkedNodes;
    }

</script>

<script>

    $(document).bind('keydown', function(e) {
        if(e.ctrlKey && (e.which == 70)) {
            e.preventDefault();
            finnBestilli");
            WriteLiteral("ng();\r\n            }\r\n        else if(e.ctrlKey && (e.which == 68)) {\r\n            e.preventDefault();\r\n            clearBestilling();\r\n            }\r\n        });\r\n\r\n\r\n</script>\r\n\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<KipWeb5.Models.Bestilling.BestillingModel> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
